/cluster/raid/home/zhivar.sourati/logical-fallacy-identification/AMR_parsers_and_graphs/ExplaGraphs
Tue Sep 20 21:09:08 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  A100-PCIE-40GB      Off  | 00000000:28:00.0 Off |                    0 |
| N/A   26C    P0    35W / 250W |      0MiB / 40536MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
16
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cbde5edb71e74818a6862c22ee685a36-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/cbde5edb71e74818a6862c22ee685a36-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.6325 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.554 iterations 12
Cbc0038I Solution found of -32.1395
Cbc0038I Cleaned solution of -32.1395
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -32.1395 to -32.6892 (0.01 seconds)
Cbc0038I Round again with cutoff of -33.0835
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.554 iterations 0
Cbc0038I Pass   3: suminf.    0.24745 (2) obj. -33.0835 iterations 6
Cbc0038I Pass   4: suminf.    0.21689 (2) obj. -33.0835 iterations 2
Cbc0038I Pass   5: suminf.    0.29559 (2) obj. -33.0835 iterations 4
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -33.2627 iterations 13
Cbc0038I Pass   7: suminf.    0.34060 (1) obj. -33.0835 iterations 4
Cbc0038I Pass   8: suminf.    0.44389 (2) obj. -33.0835 iterations 8
Cbc0038I Pass   9: suminf.    0.42857 (2) obj. -33.1165 iterations 6
Cbc0038I Pass  10: suminf.    0.84424 (3) obj. -33.0835 iterations 11
Cbc0038I Pass  11: suminf.    0.42857 (2) obj. -33.1825 iterations 12
Cbc0038I Pass  12: suminf.    0.53860 (2) obj. -33.0835 iterations 8
Cbc0038I Pass  13: suminf.    0.62944 (4) obj. -33.0835 iterations 12
Cbc0038I Pass  14: suminf.    0.42857 (3) obj. -33.2341 iterations 9
Cbc0038I Pass  15: suminf.    0.59944 (3) obj. -33.0835 iterations 9
Cbc0038I Pass  16: suminf.    0.55702 (2) obj. -33.0835 iterations 22
Cbc0038I Pass  17: suminf.    0.54050 (2) obj. -33.0835 iterations 1
Cbc0038I Pass  18: suminf.    1.28438 (4) obj. -33.0835 iterations 3
Cbc0038I Pass  19: suminf.    0.87982 (2) obj. -33.0835 iterations 2
Cbc0038I Pass  20: suminf.    0.60244 (2) obj. -33.0835 iterations 1
Cbc0038I Pass  21: suminf.    0.95225 (3) obj. -33.0835 iterations 16
Cbc0038I Pass  22: suminf.    0.42857 (2) obj. -33.4972 iterations 13
Cbc0038I Pass  23: suminf.    0.68309 (2) obj. -33.0835 iterations 7
Cbc0038I Pass  24: suminf.    0.64314 (2) obj. -33.0835 iterations 2
Cbc0038I Pass  25: suminf.    0.87867 (2) obj. -33.0835 iterations 3
Cbc0038I Pass  26: suminf.    0.60133 (2) obj. -33.0835 iterations 1
Cbc0038I Pass  27: suminf.    0.44414 (3) obj. -33.0835 iterations 21
Cbc0038I Pass  28: suminf.    0.28571 (2) obj. -33.2091 iterations 7
Cbc0038I Pass  29: suminf.    0.47296 (2) obj. -33.0835 iterations 10
Cbc0038I Pass  30: suminf.    0.14286 (1) obj. -33.3671 iterations 9
Cbc0038I Pass  31: suminf.    0.46460 (1) obj. -33.0835 iterations 8
Cbc0038I Rounding solution of -32.9493 is better than previous of -32.6892

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -33.7933
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -36.554 iterations 0
Cbc0038I Pass  32: suminf.    0.30106 (2) obj. -33.7933 iterations 6
Cbc0038I Pass  33: suminf.    0.28571 (2) obj. -33.8434 iterations 4
Cbc0038I Pass  34: suminf.    0.42408 (2) obj. -33.7933 iterations 14
Cbc0038I Pass  35: suminf.    0.28571 (2) obj. -33.9147 iterations 6
Cbc0038I Pass  36: suminf.    0.42337 (2) obj. -33.7933 iterations 6
Cbc0038I Pass  37: suminf.    0.50636 (2) obj. -33.7933 iterations 26
Cbc0038I Pass  38: suminf.    0.28571 (2) obj. -33.9882 iterations 7
Cbc0038I Pass  39: suminf.    0.60387 (2) obj. -33.7933 iterations 6
Cbc0038I Pass  40: suminf.    0.28571 (2) obj. -34.044 iterations 13
Cbc0038I Pass  41: suminf.    0.58199 (2) obj. -33.7933 iterations 4
Cbc0038I Pass  42: suminf.    0.88697 (3) obj. -33.7933 iterations 11
Cbc0038I Pass  43: suminf.    0.88697 (3) obj. -33.7933 iterations 0
Cbc0038I Pass  44: suminf.    0.65605 (3) obj. -33.7933 iterations 13
Cbc0038I Pass  45: suminf.    0.59462 (2) obj. -33.7933 iterations 3
Cbc0038I Pass  46: suminf.    0.28571 (2) obj. -34.0361 iterations 10
Cbc0038I Pass  47: suminf.    0.57275 (2) obj. -33.7933 iterations 5
Cbc0038I Pass  48: suminf.    0.79561 (4) obj. -33.7933 iterations 12
Cbc0038I Pass  49: suminf.    0.78820 (4) obj. -33.7933 iterations 3
Cbc0038I Pass  50: suminf.    0.55537 (3) obj. -33.7933 iterations 1
Cbc0038I Pass  51: suminf.    0.53897 (3) obj. -33.7933 iterations 4
Cbc0038I Pass  52: suminf.    1.02649 (3) obj. -33.7933 iterations 3
Cbc0038I Pass  53: suminf.    0.42857 (3) obj. -34.2592 iterations 13
Cbc0038I Pass  54: suminf.    0.61437 (3) obj. -33.7933 iterations 8
Cbc0038I Pass  55: suminf.    0.57876 (3) obj. -33.7933 iterations 6
Cbc0038I Pass  56: suminf.    0.78390 (3) obj. -33.7933 iterations 7
Cbc0038I Pass  57: suminf.    0.78390 (3) obj. -33.7933 iterations 0
Cbc0038I Pass  58: suminf.    0.78530 (3) obj. -33.7933 iterations 10
Cbc0038I Pass  59: suminf.    0.77331 (3) obj. -33.7933 iterations 6
Cbc0038I Pass  60: suminf.    0.68634 (3) obj. -33.7933 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 29 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -32.9493 - took 0.04 seconds
Cbc0012I Integer solution of -32.949261 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0031I 17 added rows had average density of 62.941176
Cbc0013I At root node, 17 cuts changed objective from -36.632508 to -34.670004 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 693 row cuts average 80.6 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 63 row cuts average 43.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.949261 best solution, best possible -34.670004 (0.22 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 18 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 14 rows 18 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 15 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 31 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 23 columns
Cbc0010I After 1000 nodes, 14 on tree, -32.949261 best solution, best possible -34.670004 (3.84 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 16 columns
Cbc0012I Integer solution of -32.981298 found by rounding after 14742 iterations and 1380 nodes (5.90 seconds)
Cbc0016I Integer solution of -32.988042 found by strong branching after 14969 iterations and 1401 nodes (5.92 seconds)
Cbc0012I Integer solution of -33.015986 found by rounding after 16320 iterations and 1597 nodes (6.16 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 33 columns
Cbc0010I After 2000 nodes, 9 on tree, -33.015986 best solution, best possible -34.670004 (6.98 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 18 columns
Cbc0010I After 3000 nodes, 5 on tree, -33.015986 best solution, best possible -34.670004 (8.29 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 19 columns
Cbc0010I After 4000 nodes, 14 on tree, -33.015986 best solution, best possible -34.670004 (9.25 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 26 rows 32 columns
Cbc0010I After 5000 nodes, 5 on tree, -33.015986 best solution, best possible -34.227918 (10.09 seconds)
Cbc0010I After 6000 nodes, 4 on tree, -33.015986 best solution, best possible -33.389419 (11.07 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 14 rows 18 columns
Cbc0001I Search completed - best objective -33.01598576828836, took 1351028 iterations and 206947 nodes (11.08 seconds)
Cbc0032I Strong branching done 25972 times (178576 iterations), fathomed 712 nodes and fixed 2118 variables
Cbc0041I Maximum depth 27, 11536 variables fixed on reduced cost (complete fathoming 1671 times, 200933 nodes taking 1294240 iterations)
Cuts at root node changed objective from -36.6325 to -34.67
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 1652 times and created 2731 cuts of which 0 were active after adding rounds of cuts (0.127 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 100 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.01598577
Enumerated nodes:               206947
Total iterations:               1351028
Time (CPU seconds):             10.69
Time (Wallclock seconds):       11.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.69   (Wallclock seconds):       11.10

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/0f95aa1b6d6b4adb9271fac34d2a08d5-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/0f95aa1b6d6b4adb9271fac34d2a08d5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 47.5145 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -47.4391 iterations 19
Cbc0038I Solution found of -42.3891
Cbc0038I Cleaned solution of -42.3891
Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -42.3891 to -43.567 (0.00 seconds)
Cbc0038I Round again with cutoff of -43.9618
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -47.4391 iterations 0
Cbc0038I Pass   3: suminf.    0.35265 (2) obj. -43.9618 iterations 12
Cbc0038I Pass   4: suminf.    0.25000 (2) obj. -44.0796 iterations 6
Cbc0038I Pass   5: suminf.    0.44746 (2) obj. -43.9618 iterations 5
Cbc0038I Pass   6: suminf.    0.25000 (2) obj. -44.1088 iterations 10
Cbc0038I Pass   7: suminf.    0.41772 (2) obj. -43.9618 iterations 4
Cbc0038I Pass   8: suminf.    0.34515 (2) obj. -43.9618 iterations 28
Cbc0038I Pass   9: suminf.    0.30989 (2) obj. -43.9618 iterations 4
Cbc0038I Pass  10: suminf.    0.38113 (2) obj. -43.9618 iterations 4
Cbc0038I Pass  11: suminf.    0.50000 (1) obj. -44.1121 iterations 14
Cbc0038I Pass  12: suminf.    0.32345 (1) obj. -43.9618 iterations 8
Cbc0038I Pass  13: suminf.    0.25992 (2) obj. -43.9618 iterations 16
Cbc0038I Pass  14: suminf.    0.25516 (2) obj. -43.9618 iterations 4
Cbc0038I Pass  15: suminf.    0.07114 (1) obj. -43.9618 iterations 10
Cbc0038I Pass  16: suminf.    0.12500 (1) obj. -44.588 iterations 12
Cbc0038I Pass  17: suminf.    0.18035 (1) obj. -43.9618 iterations 8
Cbc0038I Pass  18: suminf.    0.65856 (3) obj. -43.9618 iterations 22
Cbc0038I Pass  19: suminf.    0.29397 (3) obj. -43.9618 iterations 5
Cbc0038I Pass  20: suminf.    0.46779 (2) obj. -43.9618 iterations 6
Cbc0038I Pass  21: suminf.    0.35351 (2) obj. -43.9618 iterations 3
Cbc0038I Pass  22: suminf.    0.16892 (1) obj. -43.9618 iterations 1
Cbc0038I Pass  23: suminf.    0.12500 (1) obj. -44.5102 iterations 9
Cbc0038I Pass  24: suminf.    0.26664 (1) obj. -43.9618 iterations 8
Cbc0038I Pass  25: suminf.    0.30041 (2) obj. -43.9618 iterations 38
Cbc0038I Pass  26: suminf.    0.12500 (1) obj. -44.0966 iterations 7
Cbc0038I Pass  27: suminf.    0.27880 (1) obj. -43.9618 iterations 8
Cbc0038I Pass  28: suminf.    0.29052 (2) obj. -43.9618 iterations 6
Cbc0038I Pass  29: suminf.    0.39484 (2) obj. -43.9618 iterations 16
Cbc0038I Pass  30: suminf.    0.12500 (1) obj. -44.1612 iterations 9
Cbc0038I Pass  31: suminf.    0.34622 (1) obj. -43.9618 iterations 8
Cbc0038I Rounding solution of -43.9052 is better than previous of -43.567

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 35 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -43.9052 to -43.993 (0.03 seconds)
Cbc0038I Round again with cutoff of -44.6973
Cbc0038I Pass  31: suminf.    0.87500 (7) obj. -47.4391 iterations 0
Cbc0038I Pass  32: suminf.    0.44654 (3) obj. -44.6973 iterations 15
Cbc0038I Pass  33: suminf.    0.37500 (3) obj. -44.766 iterations 9
Cbc0038I Pass  34: suminf.    0.53545 (3) obj. -44.6973 iterations 8
Cbc0038I Pass  35: suminf.    0.37500 (3) obj. -44.8197 iterations 10
Cbc0038I Pass  36: suminf.    0.51459 (3) obj. -44.6973 iterations 4
Cbc0038I Pass  37: suminf.    0.97843 (5) obj. -44.6973 iterations 21
Cbc0038I Pass  38: suminf.    0.97185 (5) obj. -44.6973 iterations 10
Cbc0038I Pass  39: suminf.    0.24009 (2) obj. -44.6973 iterations 6
Cbc0038I Pass  40: suminf.    0.24009 (2) obj. -44.6973 iterations 0
Cbc0038I Pass  41: suminf.    0.28462 (2) obj. -44.6973 iterations 2
Cbc0038I Pass  42: suminf.    0.50660 (3) obj. -44.6973 iterations 16
Cbc0038I Pass  43: suminf.    0.25000 (2) obj. -44.8975 iterations 11
Cbc0038I Pass  44: suminf.    0.47828 (2) obj. -44.6973 iterations 6
Cbc0038I Pass  45: suminf.    0.78502 (4) obj. -44.6973 iterations 10
Cbc0038I Pass  46: suminf.    0.37500 (3) obj. -45.1078 iterations 8
Cbc0038I Pass  47: suminf.    0.60196 (4) obj. -44.6973 iterations 15
Cbc0038I Pass  48: suminf.    0.37500 (3) obj. -44.7271 iterations 13
Cbc0038I Pass  49: suminf.    0.41221 (3) obj. -44.6973 iterations 7
Cbc0038I Pass  50: suminf.    0.52177 (4) obj. -44.6973 iterations 13
Cbc0038I Pass  51: suminf.    0.37500 (3) obj. -44.7882 iterations 7
Cbc0038I Pass  52: suminf.    0.48870 (3) obj. -44.6973 iterations 5
Cbc0038I Pass  53: suminf.    0.27865 (3) obj. -44.6973 iterations 9
Cbc0038I Pass  54: suminf.    1.67314 (6) obj. -44.6973 iterations 9
Cbc0038I Pass  55: suminf.    0.33260 (2) obj. -44.6973 iterations 8
Cbc0038I Pass  56: suminf.    0.30895 (2) obj. -44.6973 iterations 1
Cbc0038I Pass  57: suminf.    0.25392 (2) obj. -44.6973 iterations 5
Cbc0038I Pass  58: suminf.    0.29763 (2) obj. -44.6973 iterations 2
Cbc0038I Pass  59: suminf.    0.73396 (3) obj. -44.6973 iterations 13
Cbc0038I Pass  60: suminf.    0.25000 (2) obj. -45.0786 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 35 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -43.993 - took 0.05 seconds
Cbc0012I Integer solution of -43.993007 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0012I Integer solution of -43.995282 found by DiveCoefficient after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 6 rows 9 columns
Cbc0031I 19 added rows had average density of 95.578947
Cbc0013I At root node, 19 cuts changed objective from -47.514539 to -46.136242 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1316 row cuts average 106.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 36 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 72 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 105 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.995282 best solution, best possible -46.136242 (0.37 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 32 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 36 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 29 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 22 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 22 columns
Cbc0010I After 1000 nodes, 244 on tree, -43.995282 best solution, best possible -46.136242 (5.84 seconds)
Cbc0016I Integer solution of -44.007814 found by strong branching after 28287 iterations and 1795 nodes (10.99 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 31 columns
Cbc0016I Integer solution of -44.039837 found by strong branching after 28404 iterations and 1801 nodes (11.07 seconds)
Cbc0016I Integer solution of -44.06978 found by strong branching after 28467 iterations and 1805 nodes (11.11 seconds)
Cbc0016I Integer solution of -44.08481 found by strong branching after 28467 iterations and 1806 nodes (11.12 seconds)
Cbc0010I After 2000 nodes, 255 on tree, -44.08481 best solution, best possible -46.136242 (11.60 seconds)
Cbc0010I After 3000 nodes, 349 on tree, -44.08481 best solution, best possible -46.136242 (13.77 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0010I After 4000 nodes, 390 on tree, -44.08481 best solution, best possible -46.136242 (14.92 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 32 rows 39 columns
Cbc0010I After 5000 nodes, 455 on tree, -44.08481 best solution, best possible -46.136242 (15.91 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 33 columns
Cbc0010I After 6000 nodes, 374 on tree, -44.08481 best solution, best possible -46.136242 (18.03 seconds)
Cbc0010I After 7000 nodes, 292 on tree, -44.08481 best solution, best possible -46.136242 (18.60 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 33 rows 41 columns
Cbc0010I After 8000 nodes, 210 on tree, -44.08481 best solution, best possible -46.136242 (19.27 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0010I After 9000 nodes, 156 on tree, -44.08481 best solution, best possible -46.136242 (19.97 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 27 columns
Cbc0010I After 10000 nodes, 113 on tree, -44.08481 best solution, best possible -46.136242 (20.61 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 33 rows 43 columns
Cbc0010I After 11000 nodes, 44 on tree, -44.08481 best solution, best possible -46.136242 (21.32 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 35 columns
Cbc0010I After 12000 nodes, 540 on tree, -44.08481 best solution, best possible -45.108082 (23.25 seconds)
Cbc0010I After 13000 nodes, 1029 on tree, -44.08481 best solution, best possible -44.943895 (24.57 seconds)
Cbc0010I After 14000 nodes, 945 on tree, -44.08481 best solution, best possible -44.943895 (25.04 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 30 columns
Cbc0010I After 15000 nodes, 1427 on tree, -44.08481 best solution, best possible -44.851359 (26.22 seconds)
Cbc0010I After 16000 nodes, 1877 on tree, -44.08481 best solution, best possible -44.787279 (27.31 seconds)
Cbc0010I After 17000 nodes, 2309 on tree, -44.08481 best solution, best possible -44.741055 (28.23 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 38 columns
Cbc0010I After 18000 nodes, 2202 on tree, -44.08481 best solution, best possible -44.741055 (28.60 seconds)
Cbc0010I After 19000 nodes, 2623 on tree, -44.08481 best solution, best possible -44.696773 (29.59 seconds)
Cbc0010I After 20000 nodes, 2984 on tree, -44.08481 best solution, best possible -44.657815 (30.52 seconds)
Cbc0010I After 21000 nodes, 3364 on tree, -44.08481 best solution, best possible -44.61794 (31.40 seconds)
Cbc0010I After 22000 nodes, 3225 on tree, -44.08481 best solution, best possible -44.61794 (31.77 seconds)
Cbc0010I After 23000 nodes, 3551 on tree, -44.08481 best solution, best possible -44.579406 (32.64 seconds)
Cbc0010I After 24000 nodes, 3829 on tree, -44.08481 best solution, best possible -44.543957 (33.42 seconds)
Cbc0010I After 25000 nodes, 4060 on tree, -44.08481 best solution, best possible -44.510748 (34.13 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 20 columns
Cbc0010I After 26000 nodes, 3821 on tree, -44.08481 best solution, best possible -44.510748 (34.49 seconds)
Cbc0010I After 27000 nodes, 4028 on tree, -44.08481 best solution, best possible -44.479213 (35.24 seconds)
Cbc0010I After 28000 nodes, 4206 on tree, -44.08481 best solution, best possible -44.451756 (35.97 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 32 columns
Cbc0010I After 29000 nodes, 4322 on tree, -44.08481 best solution, best possible -44.423654 (36.66 seconds)
Cbc0010I After 30000 nodes, 4060 on tree, -44.08481 best solution, best possible -44.423654 (37.03 seconds)
Cbc0010I After 31000 nodes, 4148 on tree, -44.08481 best solution, best possible -44.395268 (37.69 seconds)
Cbc0010I After 32000 nodes, 4186 on tree, -44.08481 best solution, best possible -44.369354 (38.31 seconds)
Cbc0010I After 33000 nodes, 4158 on tree, -44.08481 best solution, best possible -44.344798 (38.91 seconds)
Cbc0010I After 34000 nodes, 3844 on tree, -44.08481 best solution, best possible -44.344666 (39.23 seconds)
Cbc0016I Integer solution of -44.085032 found by strong branching after 488982 iterations and 34203 nodes (39.36 seconds)
Cbc0010I After 35000 nodes, 3734 on tree, -44.085032 best solution, best possible -44.3394 (39.72 seconds)
Cbc0010I After 36000 nodes, 3675 on tree, -44.085032 best solution, best possible -44.312025 (40.36 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 30 rows 36 columns
Cbc0010I After 37000 nodes, 3517 on tree, -44.085032 best solution, best possible -44.286482 (40.94 seconds)
Cbc0010I After 38000 nodes, 3144 on tree, -44.085032 best solution, best possible -44.286482 (41.24 seconds)
Cbc0010I After 39000 nodes, 2959 on tree, -44.085032 best solution, best possible -44.261333 (41.83 seconds)
Cbc0010I After 40000 nodes, 2747 on tree, -44.085032 best solution, best possible -44.237664 (42.38 seconds)
Cbc0010I After 41000 nodes, 2481 on tree, -44.085032 best solution, best possible -44.214038 (42.87 seconds)
Cbc0010I After 42000 nodes, 2088 on tree, -44.085032 best solution, best possible -44.214038 (43.12 seconds)
Cbc0010I After 43000 nodes, 1780 on tree, -44.085032 best solution, best possible -44.188813 (43.57 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 12 rows 15 columns
Cbc0010I After 44000 nodes, 1433 on tree, -44.085032 best solution, best possible -44.165849 (43.98 seconds)
Cbc0010I After 45000 nodes, 1047 on tree, -44.085032 best solution, best possible -44.142544 (44.30 seconds)
Cbc0010I After 46000 nodes, 591 on tree, -44.085032 best solution, best possible -44.142544 (44.51 seconds)
Cbc0010I After 47000 nodes, 165 on tree, -44.085032 best solution, best possible -44.101222 (44.76 seconds)
Cbc0001I Search completed - best objective -44.08503234013943, took 2772619 iterations and 353002 nodes (44.81 seconds)
Cbc0032I Strong branching done 210486 times (1719018 iterations), fathomed 10285 nodes and fixed 36108 variables
Cbc0041I Maximum depth 43, 117788 variables fixed on reduced cost (complete fathoming 1094 times, 305658 nodes taking 2167825 iterations)
Cuts at root node changed objective from -47.5145 to -46.1362
Probing was tried 100 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 15778 times and created 21944 cuts of which 0 were active after adding rounds of cuts (1.139 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
TwoMirCuts was tried 100 times and created 72 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 15781 times and created 8500 cuts of which 0 were active after adding rounds of cuts (1.132 seconds)

Result - Optimal solution found

Objective value:                44.08503234
Enumerated nodes:               353002
Total iterations:               2772619
Time (CPU seconds):             44.62
Time (Wallclock seconds):       44.82

Option for printingOptions changed from normal to all
Total time (CPU seconds):       44.62   (Wallclock seconds):       44.82

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5430b95d4918492797e82bbc966cb5ee-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/5430b95d4918492797e82bbc966cb5ee-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 17.4701 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -17.2646 iterations 9
Cbc0038I Solution found of -14.5511
Cbc0038I Cleaned solution of -14.5511
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -14.5511 to -15.5788 (0.00 seconds)
Cbc0038I Round again with cutoff of -15.7679
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -17.2646 iterations 0
Cbc0038I Pass   3: suminf.    0.64632 (2) obj. -15.7679 iterations 10
Cbc0038I Pass   4: suminf.    0.59673 (2) obj. -15.7679 iterations 1
Cbc0038I Pass   5: suminf.    0.28566 (2) obj. -15.7679 iterations 10
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -16.1436 iterations 9
Cbc0038I Pass   7: suminf.    0.40997 (1) obj. -15.7679 iterations 2
Cbc0038I Pass   8: suminf.    1.69138 (5) obj. -15.7679 iterations 9
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -15.8596 iterations 2
Cbc0038I Pass  10: suminf.    0.29515 (1) obj. -15.7679 iterations 1
Cbc0038I Pass  11: suminf.    1.74880 (5) obj. -15.7679 iterations 2
Cbc0038I Pass  12: suminf.    0.28122 (2) obj. -15.7679 iterations 9
Cbc0038I Pass  13: suminf.    0.28122 (2) obj. -15.7679 iterations 0
Cbc0038I Pass  14: suminf.    0.40848 (1) obj. -15.7679 iterations 7
Cbc0038I Pass  15: suminf.    0.40848 (1) obj. -15.7679 iterations 2
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -16.1313 iterations 4
Cbc0038I Pass  17: suminf.    0.40735 (1) obj. -15.7679 iterations 2
Cbc0038I Pass  18: suminf.    0.58625 (2) obj. -15.7679 iterations 3
Cbc0038I Pass  19: suminf.    0.58447 (2) obj. -15.7679 iterations 2
Cbc0038I Pass  20: suminf.    0.62133 (2) obj. -15.7679 iterations 2
Cbc0038I Pass  21: suminf.    1.25238 (3) obj. -15.7679 iterations 14
Cbc0038I Pass  22: suminf.    0.40000 (2) obj. -15.8251 iterations 9
Cbc0038I Pass  23: suminf.    0.45840 (2) obj. -15.7679 iterations 2
Cbc0038I Pass  24: suminf.    0.65964 (3) obj. -15.7679 iterations 11
Cbc0038I Pass  25: suminf.    2.41626 (7) obj. -15.7679 iterations 7
Cbc0038I Pass  26: suminf.    0.27157 (1) obj. -15.7679 iterations 5
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -15.8308 iterations 6
Cbc0038I Pass  28: suminf.    0.26527 (1) obj. -15.7679 iterations 3
Cbc0038I Pass  29: suminf.    0.85909 (3) obj. -15.7679 iterations 12
Cbc0038I Pass  30: suminf.    0.24635 (2) obj. -15.7679 iterations 4
Cbc0038I Pass  31: suminf.    0.40000 (1) obj. -15.9222 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 21 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15.5788 - took 0.01 seconds
Cbc0012I Integer solution of -15.578753 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 11 added rows had average density of 31.181818
Cbc0013I At root node, 11 cuts changed objective from -17.470101 to -16.070978 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 540 row cuts average 37.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 56 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.578753 best solution, best possible -16.070978 (0.09 seconds)
Cbc0001I Search completed - best objective -15.57875292561942, took 2777 iterations and 32 nodes (0.14 seconds)
Cbc0032I Strong branching done 404 times (2159 iterations), fathomed 6 nodes and fixed 10 variables
Cbc0035I Maximum depth 8, 85 variables fixed on reduced cost
Cuts at root node changed objective from -17.4701 to -16.071
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 202 times and created 925 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 202 times and created 101 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.57875293
Enumerated nodes:               32
Total iterations:               2777
Time (CPU seconds):             0.14
Time (Wallclock seconds):       0.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/587ed067e6e64b578689c4f5c8182562-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/587ed067e6e64b578689c4f5c8182562-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 241 COLUMNS
At line 1435 RHS
At line 1672 BOUNDS
At line 1899 ENDATA
Problem MODEL has 236 rows, 226 columns and 597 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 63.5382 - 0.00 seconds
Cgl0004I processed model has 81 rows, 144 columns (144 integer (72 of which binary)) and 360 elements
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.888889
Cbc0038I Pass   1: suminf.    0.88889 (8) obj. -63.4334 iterations 25
Cbc0038I Solution found of -57.389
Cbc0038I Cleaned solution of -57.389
Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 81 rows 144 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -57.389 to -58.332 (0.00 seconds)
Cbc0038I Round again with cutoff of -58.8526
Cbc0038I Pass   2: suminf.    0.88889 (8) obj. -63.4334 iterations 0
Cbc0038I Pass   3: suminf.    0.50103 (2) obj. -58.8526 iterations 20
Cbc0038I Pass   4: suminf.    0.22222 (2) obj. -59.1288 iterations 12
Cbc0038I Pass   5: suminf.    0.50937 (2) obj. -58.8526 iterations 3
Cbc0038I Pass   6: suminf.    0.48736 (2) obj. -58.8526 iterations 15
Cbc0038I Pass   7: suminf.    0.22222 (2) obj. -59.0533 iterations 14
Cbc0038I Pass   8: suminf.    0.43088 (2) obj. -58.8526 iterations 6
Cbc0038I Pass   9: suminf.    0.45601 (3) obj. -58.8526 iterations 26
Cbc0038I Pass  10: suminf.    0.43586 (3) obj. -58.8526 iterations 5
Cbc0038I Pass  11: suminf.    0.11259 (1) obj. -58.8526 iterations 15
Cbc0038I Pass  12: suminf.    0.38611 (7) obj. -58.8526 iterations 10
Cbc0038I Pass  13: suminf.    0.11259 (1) obj. -58.8526 iterations 2
Cbc0038I Pass  14: suminf.    0.14417 (2) obj. -58.8526 iterations 13
Cbc0038I Pass  15: suminf.    0.14471 (2) obj. -58.8526 iterations 1
Cbc0038I Pass  16: suminf.    0.21914 (2) obj. -58.8526 iterations 5
Cbc0038I Pass  17: suminf.    0.44829 (3) obj. -58.8526 iterations 5
Cbc0038I Pass  18: suminf.    0.40879 (3) obj. -58.8526 iterations 3
Cbc0038I Pass  19: suminf.    0.14471 (2) obj. -58.8526 iterations 6
Cbc0038I Pass  20: suminf.    0.25356 (2) obj. -58.8526 iterations 9
Cbc0038I Pass  21: suminf.    0.22222 (2) obj. -58.8689 iterations 12
Cbc0038I Pass  22: suminf.    0.24556 (2) obj. -58.8526 iterations 7
Cbc0038I Pass  23: suminf.    0.39621 (4) obj. -58.8526 iterations 11
Cbc0038I Pass  24: suminf.    0.33519 (4) obj. -58.8526 iterations 9
Cbc0038I Pass  25: suminf.    0.38043 (2) obj. -58.8526 iterations 3
Cbc0038I Pass  26: suminf.    0.22222 (2) obj. -58.9414 iterations 10
Cbc0038I Pass  27: suminf.    0.34927 (2) obj. -58.8526 iterations 8
Cbc0038I Pass  28: suminf.    0.23672 (2) obj. -58.8526 iterations 9
Cbc0038I Pass  29: suminf.    0.22222 (2) obj. -58.8647 iterations 12
Cbc0038I Pass  30: suminf.    0.23949 (2) obj. -58.8526 iterations 9
Cbc0038I Pass  31: suminf.    0.40978 (3) obj. -58.8526 iterations 14
Cbc0038I Rounding solution of -58.8482 is better than previous of -58.332

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 144 columns, reduced to 34 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -59.7897
Cbc0038I Pass  31: suminf.    0.88889 (8) obj. -63.4334 iterations 0
Cbc0038I Pass  32: suminf.    0.54435 (3) obj. -59.7897 iterations 26
Cbc0038I Pass  33: suminf.    0.33333 (3) obj. -60.0295 iterations 8
Cbc0038I Pass  34: suminf.    0.65953 (3) obj. -59.7897 iterations 5
Cbc0038I Pass  35: suminf.    0.58161 (3) obj. -59.7897 iterations 6
Cbc0038I Pass  36: suminf.    0.33867 (2) obj. -59.7897 iterations 19
Cbc0038I Pass  37: suminf.    1.65930 (6) obj. -59.7897 iterations 12
Cbc0038I Pass  38: suminf.    0.58783 (2) obj. -59.7897 iterations 16
Cbc0038I Pass  39: suminf.    0.56634 (3) obj. -59.7897 iterations 18
Cbc0038I Pass  40: suminf.    0.55556 (2) obj. -59.8488 iterations 19
Cbc0038I Pass  41: suminf.    0.43916 (2) obj. -59.7897 iterations 10
Cbc0038I Pass  42: suminf.    0.63993 (2) obj. -59.7897 iterations 2
Cbc0038I Pass  43: suminf.    0.13594 (2) obj. -59.7897 iterations 2
Cbc0038I Pass  44: suminf.    0.21113 (2) obj. -59.7897 iterations 9
Cbc0038I Pass  45: suminf.    0.46427 (3) obj. -59.7897 iterations 6
Cbc0038I Pass  46: suminf.    0.39791 (7) obj. -59.7897 iterations 9
Cbc0038I Pass  47: suminf.    0.25029 (2) obj. -59.7897 iterations 5
Cbc0038I Pass  48: suminf.    0.25514 (3) obj. -59.7897 iterations 8
Cbc0038I Pass  49: suminf.    0.32431 (3) obj. -59.7897 iterations 21
Cbc0038I Pass  50: suminf.    0.27462 (3) obj. -59.7897 iterations 6
Cbc0038I Pass  51: suminf.    0.15625 (1) obj. -59.7897 iterations 5
Cbc0038I Pass  52: suminf.    0.11111 (1) obj. -59.8025 iterations 11
Cbc0038I Pass  53: suminf.    0.12439 (1) obj. -59.7897 iterations 9
Cbc0038I Pass  54: suminf.    0.50285 (3) obj. -59.7897 iterations 15
Cbc0038I Pass  55: suminf.    0.44266 (3) obj. -59.7897 iterations 3
Cbc0038I Pass  56: suminf.    0.17691 (1) obj. -59.7897 iterations 4
Cbc0038I Pass  57: suminf.    0.11111 (1) obj. -59.8183 iterations 14
Cbc0038I Pass  58: suminf.    0.14084 (1) obj. -59.7897 iterations 11
Cbc0038I Pass  59: suminf.    1.18499 (5) obj. -59.7897 iterations 5
Cbc0038I Pass  60: suminf.    0.78342 (5) obj. -59.7897 iterations 3
Cbc0038I Rounding solution of -59.1594 is better than previous of -58.8482

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 144 columns, reduced to 35 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -60.9143
Cbc0038I Pass  60: suminf.    0.88889 (8) obj. -63.4334 iterations 0
Cbc0038I Pass  61: suminf.    0.61302 (5) obj. -60.9143 iterations 26
Cbc0038I Pass  62: suminf.    0.46021 (5) obj. -60.9143 iterations 10
Cbc0038I Pass  63: suminf.    0.57165 (4) obj. -60.9143 iterations 24
Cbc0038I Pass  64: suminf.    0.54531 (4) obj. -60.9143 iterations 8
Cbc0038I Pass  65: suminf.    0.92591 (4) obj. -60.9143 iterations 9
Cbc0038I Pass  66: suminf.    0.33333 (3) obj. -60.9912 iterations 13
Cbc0038I Pass  67: suminf.    0.44332 (3) obj. -60.9143 iterations 9
Cbc0038I Pass  68: suminf.    0.91449 (4) obj. -60.9143 iterations 24
Cbc0038I Pass  69: suminf.    3.46047 (11) obj. -60.9143 iterations 13
Cbc0038I Pass  70: suminf.    1.06710 (5) obj. -60.9143 iterations 21
Cbc0038I Pass  71: suminf.    2.28666 (11) obj. -60.9143 iterations 9
Cbc0038I Pass  72: suminf.    0.53452 (3) obj. -60.9143 iterations 21
Cbc0038I Pass  73: suminf.    0.33333 (3) obj. -60.9912 iterations 15
Cbc0038I Pass  74: suminf.    0.44332 (3) obj. -60.9143 iterations 10
Cbc0038I Pass  75: suminf.    0.40098 (4) obj. -60.9143 iterations 40
Cbc0038I Pass  76: suminf.    0.34108 (4) obj. -60.9143 iterations 11
Cbc0038I Pass  77: suminf.    0.42884 (3) obj. -60.9143 iterations 10
Cbc0038I Pass  78: suminf.    0.33333 (3) obj. -60.9269 iterations 15
Cbc0038I Pass  79: suminf.    0.35136 (3) obj. -60.9143 iterations 13
Cbc0038I Pass  80: suminf.    0.86508 (5) obj. -60.9143 iterations 30
Cbc0038I Pass  81: suminf.    0.53684 (5) obj. -60.9143 iterations 8
Cbc0038I Pass  82: suminf.    0.93865 (4) obj. -60.9143 iterations 12
Cbc0038I Pass  83: suminf.    0.33333 (3) obj. -60.9912 iterations 27
Cbc0038I Pass  84: suminf.    0.44332 (3) obj. -60.9143 iterations 12
Cbc0038I Pass  85: suminf.    0.40678 (4) obj. -60.9143 iterations 10
Cbc0038I Pass  86: suminf.    0.39398 (4) obj. -60.9143 iterations 4
Cbc0038I Pass  87: suminf.    0.39880 (4) obj. -60.9143 iterations 12
Cbc0038I Pass  88: suminf.    0.39880 (4) obj. -60.9143 iterations 2
Cbc0038I Pass  89: suminf.    0.47154 (3) obj. -60.9143 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 81 rows 144 columns, reduced to 40 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -59.1594 - took 0.09 seconds
Cbc0012I Integer solution of -59.159442 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 19 rows 25 columns
Cbc0031I 26 added rows had average density of 95.423077
Cbc0013I At root node, 26 cuts changed objective from -63.538212 to -61.112888 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (3 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 138.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 50 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 92 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -59.159442 best solution, best possible -61.112888 (0.61 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 21 rows 27 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 24 rows 30 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 26 rows 32 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 26 rows 34 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 25 rows 32 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 29 rows 37 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 17 rows 24 columns
Cbc0010I After 1000 nodes, 451 on tree, -59.159442 best solution, best possible -61.112888 (10.94 seconds)
Cbc0016I Integer solution of -59.162893 found by strong branching after 34167 iterations and 1555 nodes (17.35 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 16 rows 20 columns
Cbc0010I After 2000 nodes, 621 on tree, -59.162893 best solution, best possible -61.112888 (17.92 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 29 rows 35 columns
Cbc0010I After 3000 nodes, 1002 on tree, -59.162893 best solution, best possible -61.112888 (19.88 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 23 rows 26 columns
Cbc0010I After 4000 nodes, 1398 on tree, -59.162893 best solution, best possible -61.112888 (20.94 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 26 rows 32 columns
Cbc0010I After 5000 nodes, 1762 on tree, -59.162893 best solution, best possible -61.112888 (21.85 seconds)
Cbc0010I After 6000 nodes, 1795 on tree, -59.162893 best solution, best possible -61.112888 (22.74 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 32 rows 39 columns
Cbc0038I Full problem 81 rows 144 columns, reduced to 36 rows 46 columns
Cbc0010I After 7000 nodes, 1781 on tree, -59.162893 best solution, best possible -61.112888 (23.57 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 34 rows 43 columns
Cbc0010I After 8000 nodes, 1796 on tree, -59.162893 best solution, best possible -61.112888 (24.38 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 33 rows 41 columns
Cbc0010I After 9000 nodes, 1777 on tree, -59.162893 best solution, best possible -61.112888 (25.18 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 30 rows 38 columns
Cbc0010I After 10000 nodes, 1789 on tree, -59.162893 best solution, best possible -61.112888 (25.84 seconds)
Cbc0010I After 11000 nodes, 1789 on tree, -59.162893 best solution, best possible -61.112888 (26.43 seconds)
Cbc0010I After 12000 nodes, 2282 on tree, -59.162893 best solution, best possible -60.397301 (28.56 seconds)
Cbc0010I After 13000 nodes, 2779 on tree, -59.162893 best solution, best possible -60.308455 (29.86 seconds)
Cbc0010I After 14000 nodes, 2708 on tree, -59.162893 best solution, best possible -60.308455 (30.27 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 31 rows 39 columns
Cbc0010I After 15000 nodes, 3208 on tree, -59.162893 best solution, best possible -60.253342 (31.36 seconds)
Cbc0010I After 16000 nodes, 3708 on tree, -59.162893 best solution, best possible -60.215833 (32.29 seconds)
Cbc0010I After 17000 nodes, 4208 on tree, -59.162893 best solution, best possible -60.185705 (33.13 seconds)
Cbc0010I After 18000 nodes, 4199 on tree, -59.162893 best solution, best possible -60.185705 (33.54 seconds)
Cbc0010I After 19000 nodes, 4698 on tree, -59.162893 best solution, best possible -60.160438 (34.31 seconds)
Cbc0010I After 20000 nodes, 5198 on tree, -59.162893 best solution, best possible -60.13906 (35.10 seconds)
Cbc0010I After 21000 nodes, 5697 on tree, -59.162893 best solution, best possible -60.119212 (35.87 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 24 rows 30 columns
Cbc0010I After 22000 nodes, 5691 on tree, -59.162893 best solution, best possible -60.119212 (36.23 seconds)
Cbc0010I After 23000 nodes, 6189 on tree, -59.162893 best solution, best possible -60.101462 (36.96 seconds)
Cbc0010I After 24000 nodes, 6689 on tree, -59.162893 best solution, best possible -60.085772 (37.65 seconds)
Cbc0010I After 25000 nodes, 7189 on tree, -59.162893 best solution, best possible -60.07276 (38.31 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 31 rows 37 columns
Cbc0010I After 26000 nodes, 7182 on tree, -59.162893 best solution, best possible -60.07276 (38.70 seconds)
Cbc0010I After 27000 nodes, 7681 on tree, -59.162893 best solution, best possible -60.058936 (39.38 seconds)
Cbc0010I After 28000 nodes, 8181 on tree, -59.162893 best solution, best possible -60.047335 (40.02 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 38 rows 51 columns
Cbc0010I After 29000 nodes, 8680 on tree, -59.162893 best solution, best possible -60.036066 (40.60 seconds)
Cbc0010I After 30000 nodes, 8672 on tree, -59.162893 best solution, best possible -60.036066 (40.94 seconds)
Cbc0010I After 31000 nodes, 9172 on tree, -59.162893 best solution, best possible -60.025735 (41.54 seconds)
Cbc0010I After 32000 nodes, 9670 on tree, -59.162893 best solution, best possible -60.016376 (42.09 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 35 rows 44 columns
Cbc0010I After 33000 nodes, 10170 on tree, -59.162893 best solution, best possible -60.008002 (42.62 seconds)
Cbc0010I After 34000 nodes, 10163 on tree, -59.162893 best solution, best possible -60.007956 (42.93 seconds)
Cbc0010I After 35000 nodes, 10661 on tree, -59.162893 best solution, best possible -60.007956 (43.39 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 30 rows 35 columns
Cbc0010I After 36000 nodes, 11150 on tree, -59.162893 best solution, best possible -60.007956 (43.80 seconds)
Cbc0010I After 37000 nodes, 11076 on tree, -59.162893 best solution, best possible -60.007956 (44.01 seconds)
Cbc0010I After 38000 nodes, 11060 on tree, -59.162893 best solution, best possible -60.007956 (44.41 seconds)
Cbc0010I After 39000 nodes, 11532 on tree, -59.162893 best solution, best possible -60.007956 (44.87 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 29 rows 35 columns
Cbc0010I After 40000 nodes, 11972 on tree, -59.162893 best solution, best possible -60.007956 (45.29 seconds)
Cbc0010I After 41000 nodes, 11876 on tree, -59.162893 best solution, best possible -60.007956 (45.52 seconds)
Cbc0010I After 42000 nodes, 11853 on tree, -59.162893 best solution, best possible -60.007935 (45.90 seconds)
Cbc0010I After 43000 nodes, 12270 on tree, -59.162893 best solution, best possible -60.007935 (46.39 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 27 rows 32 columns
Cbc0010I After 44000 nodes, 12680 on tree, -59.162893 best solution, best possible -60.007935 (46.84 seconds)
Cbc0010I After 45000 nodes, 12574 on tree, -59.162893 best solution, best possible -60.007935 (47.07 seconds)
Cbc0010I After 46000 nodes, 12542 on tree, -59.162893 best solution, best possible -60.007935 (47.46 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 31 rows 38 columns
Cbc0010I After 47000 nodes, 12937 on tree, -59.162893 best solution, best possible -60.007935 (47.99 seconds)
Cbc0010I After 48000 nodes, 13335 on tree, -59.162893 best solution, best possible -60.007935 (48.42 seconds)
Cbc0010I After 49000 nodes, 13220 on tree, -59.162893 best solution, best possible -60.007935 (48.68 seconds)
Cbc0010I After 50000 nodes, 13196 on tree, -59.162893 best solution, best possible -60.00793 (49.07 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 26 rows 33 columns
Cbc0010I After 51000 nodes, 13585 on tree, -59.162893 best solution, best possible -60.00793 (49.58 seconds)
Cbc0010I After 52000 nodes, 13967 on tree, -59.162893 best solution, best possible -60.00793 (50.01 seconds)
Cbc0010I After 53000 nodes, 13850 on tree, -59.162893 best solution, best possible -60.00793 (50.28 seconds)
Cbc0010I After 54000 nodes, 13837 on tree, -59.162893 best solution, best possible -60.00793 (50.63 seconds)
Cbc0010I After 55000 nodes, 14241 on tree, -59.162893 best solution, best possible -60.00793 (51.14 seconds)
Cbc0010I After 56000 nodes, 14634 on tree, -59.162893 best solution, best possible -60.00793 (51.54 seconds)
Cbc0010I After 57000 nodes, 14513 on tree, -59.162893 best solution, best possible -60.00793 (51.77 seconds)
Cbc0010I After 58000 nodes, 14484 on tree, -59.162893 best solution, best possible -60.007886 (52.18 seconds)
Cbc0010I After 59000 nodes, 14848 on tree, -59.162893 best solution, best possible -60.007886 (52.71 seconds)
Cbc0010I After 60000 nodes, 15214 on tree, -59.162893 best solution, best possible -60.007886 (53.13 seconds)
Cbc0010I After 61000 nodes, 15089 on tree, -59.162893 best solution, best possible -60.007886 (53.40 seconds)
Cbc0010I After 62000 nodes, 15051 on tree, -59.162893 best solution, best possible -60.007886 (53.83 seconds)
Cbc0010I After 63000 nodes, 15409 on tree, -59.162893 best solution, best possible -60.007886 (54.37 seconds)
Cbc0010I After 64000 nodes, 15761 on tree, -59.162893 best solution, best possible -60.007886 (54.78 seconds)
Cbc0010I After 65000 nodes, 15648 on tree, -59.162893 best solution, best possible -60.007886 (55.03 seconds)
Cbc0010I After 66000 nodes, 15625 on tree, -59.162893 best solution, best possible -60.007824 (55.47 seconds)
Cbc0010I After 67000 nodes, 15963 on tree, -59.162893 best solution, best possible -60.007824 (56.02 seconds)
Cbc0010I After 68000 nodes, 16320 on tree, -59.162893 best solution, best possible -60.007824 (56.48 seconds)
Cbc0010I After 69000 nodes, 16167 on tree, -59.162893 best solution, best possible -60.007824 (56.76 seconds)
Cbc0010I After 70000 nodes, 16122 on tree, -59.162893 best solution, best possible -60.007824 (57.22 seconds)
Cbc0010I After 71000 nodes, 16450 on tree, -59.162893 best solution, best possible -60.007824 (57.81 seconds)
Cbc0010I After 72000 nodes, 16799 on tree, -59.162893 best solution, best possible -60.007824 (58.31 seconds)
Cbc0010I After 73000 nodes, 16549 on tree, -59.162893 best solution, best possible -60.007824 (58.59 seconds)
Cbc0010I After 74000 nodes, 16511 on tree, -59.162893 best solution, best possible -60.007817 (59.10 seconds)
Cbc0010I After 75000 nodes, 16852 on tree, -59.162893 best solution, best possible -60.007817 (59.72 seconds)
Cbc0010I After 76000 nodes, 17190 on tree, -59.162893 best solution, best possible -60.007817 (60.24 seconds)
Cbc0010I After 77000 nodes, 17114 on tree, -59.162893 best solution, best possible -60.007817 (60.57 seconds)
Cbc0010I After 78000 nodes, 17068 on tree, -59.162893 best solution, best possible -60.007817 (61.06 seconds)
Cbc0010I After 79000 nodes, 17393 on tree, -59.162893 best solution, best possible -60.007817 (61.68 seconds)
Cbc0010I After 80000 nodes, 17725 on tree, -59.162893 best solution, best possible -60.007817 (62.26 seconds)
Cbc0010I After 81000 nodes, 17476 on tree, -59.162893 best solution, best possible -60.007817 (62.57 seconds)
Cbc0010I After 82000 nodes, 17410 on tree, -59.162893 best solution, best possible -60.007798 (63.10 seconds)
Cbc0010I After 83000 nodes, 17766 on tree, -59.162893 best solution, best possible -60.007798 (63.79 seconds)
Cbc0010I After 84000 nodes, 18084 on tree, -59.162893 best solution, best possible -60.007798 (64.32 seconds)
Cbc0010I After 85000 nodes, 17932 on tree, -59.162893 best solution, best possible -60.007798 (64.69 seconds)
Cbc0010I After 86000 nodes, 17814 on tree, -59.162893 best solution, best possible -60.007798 (65.29 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 23 rows 27 columns
Cbc0010I After 87000 nodes, 18119 on tree, -59.162893 best solution, best possible -60.007798 (66.09 seconds)
Cbc0010I After 88000 nodes, 18436 on tree, -59.162893 best solution, best possible -60.007798 (66.76 seconds)
Cbc0010I After 89000 nodes, 18207 on tree, -59.162893 best solution, best possible -60.007798 (67.11 seconds)
Cbc0010I After 90000 nodes, 18005 on tree, -59.162893 best solution, best possible -60.007736 (67.59 seconds)
Cbc0010I After 91000 nodes, 18282 on tree, -59.162893 best solution, best possible -60.007736 (68.39 seconds)
Cbc0010I After 92000 nodes, 18596 on tree, -59.162893 best solution, best possible -60.007736 (69.10 seconds)
Cbc0010I After 93000 nodes, 18388 on tree, -59.162893 best solution, best possible -60.007736 (69.48 seconds)
Cbc0010I After 94000 nodes, 18330 on tree, -59.162893 best solution, best possible -60.007736 (69.99 seconds)
Cbc0010I After 95000 nodes, 18645 on tree, -59.162893 best solution, best possible -60.007736 (70.73 seconds)
Cbc0010I After 96000 nodes, 18968 on tree, -59.162893 best solution, best possible -60.007736 (71.40 seconds)
Cbc0010I After 97000 nodes, 18758 on tree, -59.162893 best solution, best possible -60.007736 (71.82 seconds)
Cbc0010I After 98000 nodes, 18665 on tree, -59.162893 best solution, best possible -60.007728 (72.47 seconds)
Cbc0010I After 99000 nodes, 18979 on tree, -59.162893 best solution, best possible -60.007728 (73.33 seconds)
Cbc0010I After 100000 nodes, 19308 on tree, -59.162893 best solution, best possible -60.007728 (74.03 seconds)
Cbc0010I After 101000 nodes, 19091 on tree, -59.162893 best solution, best possible -60.007728 (74.47 seconds)
Cbc0010I After 102000 nodes, 19588 on tree, -59.162893 best solution, best possible -59.988783 (75.46 seconds)
Cbc0010I After 103000 nodes, 19974 on tree, -59.162893 best solution, best possible -59.988783 (75.95 seconds)
Cbc0010I After 104000 nodes, 20308 on tree, -59.162893 best solution, best possible -59.988783 (76.41 seconds)
Cbc0010I After 105000 nodes, 20147 on tree, -59.162893 best solution, best possible -59.988783 (76.72 seconds)
Cbc0010I After 106000 nodes, 20643 on tree, -59.162893 best solution, best possible -59.972081 (77.52 seconds)
Cbc0010I After 107000 nodes, 21018 on tree, -59.162893 best solution, best possible -59.972081 (78.03 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 27 rows 35 columns
Cbc0010I After 108000 nodes, 21313 on tree, -59.162893 best solution, best possible -59.972081 (78.44 seconds)
Cbc0010I After 109000 nodes, 21137 on tree, -59.162893 best solution, best possible -59.972081 (78.70 seconds)
Cbc0010I After 110000 nodes, 21633 on tree, -59.162893 best solution, best possible -59.956942 (79.43 seconds)
Cbc0010I After 111000 nodes, 22012 on tree, -59.162893 best solution, best possible -59.956942 (79.85 seconds)
Cbc0010I After 112000 nodes, 22294 on tree, -59.162893 best solution, best possible -59.956942 (80.24 seconds)
Cbc0010I After 113000 nodes, 22121 on tree, -59.162893 best solution, best possible -59.956942 (80.50 seconds)
Cbc0010I After 114000 nodes, 22619 on tree, -59.162893 best solution, best possible -59.942781 (81.26 seconds)
Cbc0010I After 115000 nodes, 22984 on tree, -59.162893 best solution, best possible -59.942781 (81.67 seconds)
Cbc0010I After 116000 nodes, 23269 on tree, -59.162893 best solution, best possible -59.942781 (82.09 seconds)
Cbc0010I After 117000 nodes, 23106 on tree, -59.162893 best solution, best possible -59.942781 (82.34 seconds)
Cbc0010I After 118000 nodes, 23601 on tree, -59.162893 best solution, best possible -59.931163 (83.12 seconds)
Cbc0010I After 119000 nodes, 23963 on tree, -59.162893 best solution, best possible -59.931163 (83.56 seconds)
Cbc0010I After 120000 nodes, 24269 on tree, -59.162893 best solution, best possible -59.931163 (83.99 seconds)
Cbc0010I After 121000 nodes, 24144 on tree, -59.162893 best solution, best possible -59.931163 (84.27 seconds)
Cbc0010I After 122000 nodes, 24639 on tree, -59.162893 best solution, best possible -59.919102 (85.03 seconds)
Cbc0010I After 123000 nodes, 25026 on tree, -59.162893 best solution, best possible -59.919102 (85.47 seconds)
Cbc0010I After 124000 nodes, 25320 on tree, -59.162893 best solution, best possible -59.919102 (85.90 seconds)
Cbc0010I After 125000 nodes, 25146 on tree, -59.162893 best solution, best possible -59.919102 (86.17 seconds)
Cbc0010I After 126000 nodes, 25641 on tree, -59.162893 best solution, best possible -59.908544 (86.89 seconds)
Cbc0010I After 127000 nodes, 25967 on tree, -59.162893 best solution, best possible -59.908544 (87.31 seconds)
Cbc0010I After 128000 nodes, 26266 on tree, -59.162893 best solution, best possible -59.908544 (87.69 seconds)
Cbc0010I After 129000 nodes, 26167 on tree, -59.162893 best solution, best possible -59.908544 (87.96 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 32 rows 39 columns
Cbc0010I After 130000 nodes, 26664 on tree, -59.162893 best solution, best possible -59.89872 (88.62 seconds)
Cbc0010I After 131000 nodes, 27010 on tree, -59.162893 best solution, best possible -59.89872 (89.00 seconds)
Cbc0010I After 132000 nodes, 27301 on tree, -59.162893 best solution, best possible -59.89872 (89.36 seconds)
Cbc0010I After 133000 nodes, 27117 on tree, -59.162893 best solution, best possible -59.89872 (89.58 seconds)
Cbc0010I After 134000 nodes, 27612 on tree, -59.162893 best solution, best possible -59.890112 (90.19 seconds)
Cbc0010I After 135000 nodes, 27966 on tree, -59.162893 best solution, best possible -59.890112 (90.61 seconds)
Cbc0010I After 136000 nodes, 28216 on tree, -59.162893 best solution, best possible -59.890112 (91.00 seconds)
Cbc0010I After 137000 nodes, 28075 on tree, -59.162893 best solution, best possible -59.890112 (91.28 seconds)
Cbc0010I After 138000 nodes, 28568 on tree, -59.162893 best solution, best possible -59.881622 (92.00 seconds)
Cbc0010I After 139000 nodes, 28903 on tree, -59.162893 best solution, best possible -59.881622 (92.44 seconds)
Cbc0010I After 140000 nodes, 29174 on tree, -59.162893 best solution, best possible -59.881622 (92.84 seconds)
Cbc0010I After 141000 nodes, 28972 on tree, -59.162893 best solution, best possible -59.881622 (93.13 seconds)
Cbc0010I After 142000 nodes, 29459 on tree, -59.162893 best solution, best possible -59.873908 (93.85 seconds)
Cbc0010I After 143000 nodes, 29773 on tree, -59.162893 best solution, best possible -59.873908 (94.25 seconds)
Cbc0010I After 144000 nodes, 30015 on tree, -59.162893 best solution, best possible -59.873908 (94.60 seconds)
Cbc0010I After 145000 nodes, 29807 on tree, -59.162893 best solution, best possible -59.873908 (94.86 seconds)
Cbc0010I After 146000 nodes, 30293 on tree, -59.162893 best solution, best possible -59.866723 (95.61 seconds)
Cbc0010I After 147000 nodes, 30580 on tree, -59.162893 best solution, best possible -59.866723 (96.00 seconds)
Cbc0010I After 148000 nodes, 30854 on tree, -59.162893 best solution, best possible -59.866723 (96.39 seconds)
Cbc0010I After 149000 nodes, 30709 on tree, -59.162893 best solution, best possible -59.866723 (96.66 seconds)
Cbc0010I After 150000 nodes, 31192 on tree, -59.162893 best solution, best possible -59.859657 (97.39 seconds)
Cbc0010I After 151000 nodes, 31513 on tree, -59.162893 best solution, best possible -59.859657 (97.78 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 32 rows 38 columns
Cbc0010I After 152000 nodes, 31791 on tree, -59.162893 best solution, best possible -59.859657 (98.14 seconds)
Cbc0010I After 153000 nodes, 31647 on tree, -59.162893 best solution, best possible -59.859657 (98.39 seconds)
Cbc0010I After 154000 nodes, 32132 on tree, -59.162893 best solution, best possible -59.852349 (99.05 seconds)
Cbc0010I After 155000 nodes, 32450 on tree, -59.162893 best solution, best possible -59.852349 (99.39 seconds)
Cbc0010I After 156000 nodes, 32701 on tree, -59.162893 best solution, best possible -59.852349 (99.74 seconds)
Cbc0010I After 157000 nodes, 32495 on tree, -59.162893 best solution, best possible -59.852349 (99.97 seconds)
Cbc0010I After 158000 nodes, 32978 on tree, -59.162893 best solution, best possible -59.845187 (100.65 seconds)
Cbc0010I After 159000 nodes, 33240 on tree, -59.162893 best solution, best possible -59.845187 (101.04 seconds)
Cbc0010I After 160000 nodes, 33507 on tree, -59.162893 best solution, best possible -59.845187 (101.47 seconds)
Cbc0010I After 161000 nodes, 33384 on tree, -59.162893 best solution, best possible -59.845187 (101.77 seconds)
Cbc0010I After 162000 nodes, 33875 on tree, -59.162893 best solution, best possible -59.838275 (102.54 seconds)
Cbc0010I After 163000 nodes, 34177 on tree, -59.162893 best solution, best possible -59.838275 (102.97 seconds)
Cbc0010I After 164000 nodes, 34434 on tree, -59.162893 best solution, best possible -59.838275 (103.33 seconds)
Cbc0010I After 165000 nodes, 34216 on tree, -59.162893 best solution, best possible -59.838275 (103.58 seconds)
Cbc0010I After 166000 nodes, 34706 on tree, -59.162893 best solution, best possible -59.832113 (104.25 seconds)
Cbc0010I After 167000 nodes, 34986 on tree, -59.162893 best solution, best possible -59.832113 (104.68 seconds)
Cbc0010I After 168000 nodes, 35202 on tree, -59.162893 best solution, best possible -59.832113 (105.08 seconds)
Cbc0010I After 169000 nodes, 35035 on tree, -59.162893 best solution, best possible -59.832113 (105.42 seconds)
Cbc0010I After 170000 nodes, 35514 on tree, -59.162893 best solution, best possible -59.826191 (106.22 seconds)
Cbc0010I After 171000 nodes, 35824 on tree, -59.162893 best solution, best possible -59.826191 (106.65 seconds)
Cbc0010I After 172000 nodes, 36060 on tree, -59.162893 best solution, best possible -59.826191 (107.12 seconds)
Cbc0010I After 173000 nodes, 35794 on tree, -59.162893 best solution, best possible -59.826191 (107.39 seconds)
Cbc0010I After 174000 nodes, 36268 on tree, -59.162893 best solution, best possible -59.820393 (108.13 seconds)
Cbc0010I After 175000 nodes, 36528 on tree, -59.162893 best solution, best possible -59.820393 (108.50 seconds)
Cbc0010I After 176000 nodes, 36751 on tree, -59.162893 best solution, best possible -59.820393 (108.92 seconds)
Cbc0010I After 177000 nodes, 36619 on tree, -59.162893 best solution, best possible -59.820393 (109.24 seconds)
Cbc0010I After 178000 nodes, 37101 on tree, -59.162893 best solution, best possible -59.814833 (110.08 seconds)
Cbc0010I After 179000 nodes, 37362 on tree, -59.162893 best solution, best possible -59.814833 (110.52 seconds)
Cbc0010I After 180000 nodes, 37600 on tree, -59.162893 best solution, best possible -59.814833 (110.98 seconds)
Cbc0010I After 181000 nodes, 37335 on tree, -59.162893 best solution, best possible -59.814833 (111.24 seconds)
Cbc0010I After 182000 nodes, 37804 on tree, -59.162893 best solution, best possible -59.809383 (111.97 seconds)
Cbc0010I After 183000 nodes, 38100 on tree, -59.162893 best solution, best possible -59.809383 (112.33 seconds)
Cbc0010I After 184000 nodes, 38343 on tree, -59.162893 best solution, best possible -59.809383 (112.71 seconds)
Cbc0010I After 185000 nodes, 38172 on tree, -59.162893 best solution, best possible -59.809383 (113.02 seconds)
Cbc0010I After 186000 nodes, 38639 on tree, -59.162893 best solution, best possible -59.803781 (113.77 seconds)
Cbc0010I After 187000 nodes, 38893 on tree, -59.162893 best solution, best possible -59.803781 (114.14 seconds)
Cbc0010I After 188000 nodes, 39132 on tree, -59.162893 best solution, best possible -59.803781 (114.51 seconds)
Cbc0010I After 189000 nodes, 38926 on tree, -59.162893 best solution, best possible -59.803781 (114.79 seconds)
Cbc0010I After 190000 nodes, 39400 on tree, -59.162893 best solution, best possible -59.798762 (115.58 seconds)
Cbc0010I After 191000 nodes, 39679 on tree, -59.162893 best solution, best possible -59.798762 (115.98 seconds)
Cbc0010I After 192000 nodes, 39912 on tree, -59.162893 best solution, best possible -59.798762 (116.40 seconds)
Cbc0010I After 193000 nodes, 39725 on tree, -59.162893 best solution, best possible -59.798762 (116.69 seconds)
Cbc0010I After 194000 nodes, 40195 on tree, -59.162893 best solution, best possible -59.793467 (117.48 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 26 rows 33 columns
Cbc0010I After 195000 nodes, 40459 on tree, -59.162893 best solution, best possible -59.793467 (117.82 seconds)
Cbc0010I After 196000 nodes, 40704 on tree, -59.162893 best solution, best possible -59.793467 (118.19 seconds)
Cbc0010I After 197000 nodes, 40470 on tree, -59.162893 best solution, best possible -59.793467 (118.46 seconds)
Cbc0010I After 198000 nodes, 40937 on tree, -59.162893 best solution, best possible -59.788655 (119.17 seconds)
Cbc0010I After 199000 nodes, 41198 on tree, -59.162893 best solution, best possible -59.788655 (119.54 seconds)
Cbc0010I After 200000 nodes, 41415 on tree, -59.162893 best solution, best possible -59.788655 (119.93 seconds)
Cbc0010I After 201000 nodes, 41172 on tree, -59.162893 best solution, best possible -59.788655 (120.22 seconds)
Cbc0010I After 202000 nodes, 41624 on tree, -59.162893 best solution, best possible -59.783706 (120.96 seconds)
Cbc0010I After 203000 nodes, 41889 on tree, -59.162893 best solution, best possible -59.783706 (121.36 seconds)
Cbc0010I After 204000 nodes, 42135 on tree, -59.162893 best solution, best possible -59.783706 (121.80 seconds)
Cbc0010I After 205000 nodes, 41915 on tree, -59.162893 best solution, best possible -59.783706 (122.11 seconds)
Cbc0010I After 206000 nodes, 42387 on tree, -59.162893 best solution, best possible -59.778921 (122.87 seconds)
Cbc0010I After 207000 nodes, 42607 on tree, -59.162893 best solution, best possible -59.778921 (123.24 seconds)
Cbc0010I After 208000 nodes, 42819 on tree, -59.162893 best solution, best possible -59.778921 (123.67 seconds)
Cbc0010I After 209000 nodes, 42557 on tree, -59.162893 best solution, best possible -59.778921 (124.01 seconds)
Cbc0010I After 210000 nodes, 43006 on tree, -59.162893 best solution, best possible -59.773739 (124.85 seconds)
Cbc0010I After 211000 nodes, 43257 on tree, -59.162893 best solution, best possible -59.773739 (125.26 seconds)
Cbc0010I After 212000 nodes, 43470 on tree, -59.162893 best solution, best possible -59.773739 (125.68 seconds)
Cbc0010I After 213000 nodes, 43242 on tree, -59.162893 best solution, best possible -59.773739 (126.00 seconds)
Cbc0010I After 214000 nodes, 43703 on tree, -59.162893 best solution, best possible -59.769168 (126.84 seconds)
Cbc0010I After 215000 nodes, 43955 on tree, -59.162893 best solution, best possible -59.769168 (127.22 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 32 rows 40 columns
Cbc0010I After 216000 nodes, 44154 on tree, -59.162893 best solution, best possible -59.769168 (127.66 seconds)
Cbc0010I After 217000 nodes, 43917 on tree, -59.162893 best solution, best possible -59.769168 (127.97 seconds)
Cbc0010I After 218000 nodes, 44380 on tree, -59.162893 best solution, best possible -59.764406 (128.78 seconds)
Cbc0010I After 219000 nodes, 44611 on tree, -59.162893 best solution, best possible -59.764406 (129.13 seconds)
Cbc0010I After 220000 nodes, 44824 on tree, -59.162893 best solution, best possible -59.764406 (129.54 seconds)
Cbc0010I After 221000 nodes, 44568 on tree, -59.162893 best solution, best possible -59.764406 (129.84 seconds)
Cbc0010I After 222000 nodes, 45019 on tree, -59.162893 best solution, best possible -59.75973 (130.61 seconds)
Cbc0010I After 223000 nodes, 45271 on tree, -59.162893 best solution, best possible -59.759729 (130.99 seconds)
Cbc0010I After 224000 nodes, 45479 on tree, -59.162893 best solution, best possible -59.759729 (131.43 seconds)
Cbc0010I After 225000 nodes, 45242 on tree, -59.162893 best solution, best possible -59.759729 (131.75 seconds)
Cbc0010I After 226000 nodes, 45690 on tree, -59.162893 best solution, best possible -59.75563 (132.66 seconds)
Cbc0010I After 227000 nodes, 45917 on tree, -59.162893 best solution, best possible -59.75563 (133.04 seconds)
Cbc0010I After 228000 nodes, 46123 on tree, -59.162893 best solution, best possible -59.75563 (133.52 seconds)
Cbc0010I After 229000 nodes, 45858 on tree, -59.162893 best solution, best possible -59.75563 (133.85 seconds)
Cbc0010I After 230000 nodes, 46293 on tree, -59.162893 best solution, best possible -59.751379 (134.77 seconds)
Cbc0010I After 231000 nodes, 46538 on tree, -59.162893 best solution, best possible -59.751379 (135.21 seconds)
Cbc0010I After 232000 nodes, 46731 on tree, -59.162893 best solution, best possible -59.751379 (135.74 seconds)
Cbc0010I After 233000 nodes, 46468 on tree, -59.162893 best solution, best possible -59.751379 (136.09 seconds)
Cbc0010I After 234000 nodes, 46895 on tree, -59.162893 best solution, best possible -59.747568 (137.11 seconds)
Cbc0010I After 235000 nodes, 47107 on tree, -59.162893 best solution, best possible -59.747568 (137.53 seconds)
Cbc0010I After 236000 nodes, 47313 on tree, -59.162893 best solution, best possible -59.747568 (138.10 seconds)
Cbc0010I After 237000 nodes, 47125 on tree, -59.162893 best solution, best possible -59.747568 (138.48 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 29 rows 36 columns
Cbc0010I After 238000 nodes, 47552 on tree, -59.162893 best solution, best possible -59.743666 (139.42 seconds)
Cbc0010I After 239000 nodes, 47789 on tree, -59.162893 best solution, best possible -59.743666 (139.84 seconds)
Cbc0010I After 240000 nodes, 47982 on tree, -59.162893 best solution, best possible -59.743666 (140.26 seconds)
Cbc0010I After 241000 nodes, 47636 on tree, -59.162893 best solution, best possible -59.743666 (140.54 seconds)
Cbc0010I After 242000 nodes, 48069 on tree, -59.162893 best solution, best possible -59.73979 (141.40 seconds)
Cbc0010I After 243000 nodes, 48309 on tree, -59.162893 best solution, best possible -59.73979 (141.90 seconds)
Cbc0010I After 244000 nodes, 48498 on tree, -59.162893 best solution, best possible -59.73979 (142.42 seconds)
Cbc0010I After 245000 nodes, 48196 on tree, -59.162893 best solution, best possible -59.73979 (142.79 seconds)
Cbc0010I After 246000 nodes, 48605 on tree, -59.162893 best solution, best possible -59.736012 (143.83 seconds)
Cbc0010I After 247000 nodes, 48865 on tree, -59.162893 best solution, best possible -59.736012 (144.29 seconds)
Cbc0010I After 248000 nodes, 49050 on tree, -59.162893 best solution, best possible -59.736012 (144.78 seconds)
Cbc0010I After 249000 nodes, 48848 on tree, -59.162893 best solution, best possible -59.736012 (145.18 seconds)
Cbc0010I After 250000 nodes, 49277 on tree, -59.162893 best solution, best possible -59.732616 (146.17 seconds)
Cbc0010I After 251000 nodes, 49518 on tree, -59.162893 best solution, best possible -59.732616 (146.63 seconds)
Cbc0010I After 252000 nodes, 49704 on tree, -59.162893 best solution, best possible -59.732616 (147.10 seconds)
Cbc0010I After 253000 nodes, 49386 on tree, -59.162893 best solution, best possible -59.732616 (147.43 seconds)
Cbc0010I After 254000 nodes, 49827 on tree, -59.162893 best solution, best possible -59.729144 (148.43 seconds)
Cbc0010I After 255000 nodes, 50035 on tree, -59.162893 best solution, best possible -59.729144 (148.94 seconds)
Cbc0010I After 256000 nodes, 50216 on tree, -59.162893 best solution, best possible -59.729144 (149.55 seconds)
Cbc0010I After 257000 nodes, 49899 on tree, -59.162893 best solution, best possible -59.729144 (149.91 seconds)
Cbc0010I After 258000 nodes, 50318 on tree, -59.162893 best solution, best possible -59.725648 (150.91 seconds)
Cbc0010I After 259000 nodes, 50549 on tree, -59.162893 best solution, best possible -59.725648 (151.38 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 30 rows 40 columns
Cbc0010I After 260000 nodes, 50713 on tree, -59.162893 best solution, best possible -59.725648 (151.89 seconds)
Cbc0010I After 261000 nodes, 50459 on tree, -59.162893 best solution, best possible -59.725648 (152.24 seconds)
Cbc0010I After 262000 nodes, 50873 on tree, -59.162893 best solution, best possible -59.72215 (153.16 seconds)
Cbc0010I After 263000 nodes, 51071 on tree, -59.162893 best solution, best possible -59.72215 (153.60 seconds)
Cbc0010I After 264000 nodes, 51216 on tree, -59.162893 best solution, best possible -59.72215 (154.10 seconds)
Cbc0010I After 265000 nodes, 50953 on tree, -59.162893 best solution, best possible -59.72215 (154.45 seconds)
Cbc0010I After 266000 nodes, 51371 on tree, -59.162893 best solution, best possible -59.718379 (155.40 seconds)
Cbc0010I After 267000 nodes, 51596 on tree, -59.162893 best solution, best possible -59.718379 (155.91 seconds)
Cbc0010I After 268000 nodes, 51746 on tree, -59.162893 best solution, best possible -59.718379 (156.46 seconds)
Cbc0010I After 269000 nodes, 51449 on tree, -59.162893 best solution, best possible -59.718379 (156.85 seconds)
Cbc0010I After 270000 nodes, 51847 on tree, -59.162893 best solution, best possible -59.714551 (157.96 seconds)
Cbc0010I After 271000 nodes, 52059 on tree, -59.162893 best solution, best possible -59.714551 (158.54 seconds)
Cbc0010I After 272000 nodes, 52228 on tree, -59.162893 best solution, best possible -59.714551 (159.12 seconds)
Cbc0010I After 273000 nodes, 51866 on tree, -59.162893 best solution, best possible -59.714551 (159.45 seconds)
Cbc0010I After 274000 nodes, 52266 on tree, -59.162893 best solution, best possible -59.711021 (160.52 seconds)
Cbc0010I After 275000 nodes, 52477 on tree, -59.162893 best solution, best possible -59.711021 (161.09 seconds)
Cbc0010I After 276000 nodes, 52640 on tree, -59.162893 best solution, best possible -59.711021 (161.65 seconds)
Cbc0010I After 277000 nodes, 52303 on tree, -59.162893 best solution, best possible -59.711021 (162.01 seconds)
Cbc0010I After 278000 nodes, 52707 on tree, -59.162893 best solution, best possible -59.707493 (163.06 seconds)
Cbc0010I After 279000 nodes, 52928 on tree, -59.162893 best solution, best possible -59.707493 (163.65 seconds)
Cbc0010I After 280000 nodes, 53061 on tree, -59.162893 best solution, best possible -59.707493 (164.31 seconds)
Cbc0010I After 281000 nodes, 52753 on tree, -59.162893 best solution, best possible -59.707493 (164.66 seconds)
Cbc0010I After 282000 nodes, 53147 on tree, -59.162893 best solution, best possible -59.704022 (165.79 seconds)
Cbc0010I After 283000 nodes, 53349 on tree, -59.162893 best solution, best possible -59.704022 (166.37 seconds)
Cbc0010I After 284000 nodes, 53514 on tree, -59.162893 best solution, best possible -59.704022 (166.98 seconds)
Cbc0010I After 285000 nodes, 53244 on tree, -59.162893 best solution, best possible -59.704022 (167.41 seconds)
Cbc0010I After 286000 nodes, 53629 on tree, -59.162893 best solution, best possible -59.700488 (168.59 seconds)
Cbc0010I After 287000 nodes, 53804 on tree, -59.162893 best solution, best possible -59.700488 (169.13 seconds)
Cbc0010I After 288000 nodes, 53944 on tree, -59.162893 best solution, best possible -59.700488 (169.79 seconds)
Cbc0010I After 289000 nodes, 53604 on tree, -59.162893 best solution, best possible -59.700488 (170.21 seconds)
Cbc0010I After 290000 nodes, 53974 on tree, -59.162893 best solution, best possible -59.696584 (171.42 seconds)
Cbc0010I After 291000 nodes, 54172 on tree, -59.162893 best solution, best possible -59.696584 (172.01 seconds)
Cbc0010I After 292000 nodes, 54319 on tree, -59.162893 best solution, best possible -59.696584 (172.66 seconds)
Cbc0010I After 293000 nodes, 54005 on tree, -59.162893 best solution, best possible -59.696584 (173.07 seconds)
Cbc0010I After 294000 nodes, 54404 on tree, -59.162893 best solution, best possible -59.693146 (174.23 seconds)
Cbc0010I After 295000 nodes, 54600 on tree, -59.162893 best solution, best possible -59.693146 (174.79 seconds)
Cbc0010I After 296000 nodes, 54729 on tree, -59.162893 best solution, best possible -59.693146 (175.52 seconds)
Cbc0010I After 297000 nodes, 54391 on tree, -59.162893 best solution, best possible -59.693146 (175.89 seconds)
Cbc0010I After 298000 nodes, 54755 on tree, -59.162893 best solution, best possible -59.689948 (177.14 seconds)
Cbc0010I After 299000 nodes, 54951 on tree, -59.162893 best solution, best possible -59.689948 (177.77 seconds)
Cbc0010I After 300000 nodes, 55082 on tree, -59.162893 best solution, best possible -59.689948 (178.45 seconds)
Cbc0010I After 301000 nodes, 54753 on tree, -59.162893 best solution, best possible -59.689948 (178.82 seconds)
Cbc0010I After 302000 nodes, 55158 on tree, -59.162893 best solution, best possible -59.686449 (180.05 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 29 rows 36 columns
Cbc0010I After 303000 nodes, 55362 on tree, -59.162893 best solution, best possible -59.686449 (180.60 seconds)
Cbc0010I After 304000 nodes, 55505 on tree, -59.162893 best solution, best possible -59.686449 (181.21 seconds)
Cbc0010I After 305000 nodes, 55140 on tree, -59.162893 best solution, best possible -59.686449 (181.54 seconds)
Cbc0010I After 306000 nodes, 55515 on tree, -59.162893 best solution, best possible -59.682967 (182.60 seconds)
Cbc0010I After 307000 nodes, 55678 on tree, -59.162893 best solution, best possible -59.682967 (183.20 seconds)
Cbc0010I After 308000 nodes, 55776 on tree, -59.162893 best solution, best possible -59.682967 (183.82 seconds)
Cbc0010I After 309000 nodes, 55435 on tree, -59.162893 best solution, best possible -59.682967 (184.18 seconds)
Cbc0010I After 310000 nodes, 55810 on tree, -59.162893 best solution, best possible -59.679576 (185.31 seconds)
Cbc0010I After 311000 nodes, 55976 on tree, -59.162893 best solution, best possible -59.679576 (185.96 seconds)
Cbc0010I After 312000 nodes, 56116 on tree, -59.162893 best solution, best possible -59.679576 (186.62 seconds)
Cbc0010I After 313000 nodes, 55739 on tree, -59.162893 best solution, best possible -59.679576 (187.01 seconds)
Cbc0010I After 314000 nodes, 56103 on tree, -59.162893 best solution, best possible -59.676005 (188.31 seconds)
Cbc0010I After 315000 nodes, 56260 on tree, -59.162893 best solution, best possible -59.676005 (188.96 seconds)
Cbc0010I After 316000 nodes, 56399 on tree, -59.162893 best solution, best possible -59.676005 (189.74 seconds)
Cbc0010I After 317000 nodes, 56033 on tree, -59.162893 best solution, best possible -59.676005 (190.15 seconds)
Cbc0010I After 318000 nodes, 56393 on tree, -59.162893 best solution, best possible -59.672675 (191.38 seconds)
Cbc0010I After 319000 nodes, 56547 on tree, -59.162893 best solution, best possible -59.672675 (192.06 seconds)
Cbc0010I After 320000 nodes, 56648 on tree, -59.162893 best solution, best possible -59.672675 (192.86 seconds)
Cbc0010I After 321000 nodes, 56271 on tree, -59.162893 best solution, best possible -59.672675 (193.28 seconds)
Cbc0010I After 322000 nodes, 56608 on tree, -59.162893 best solution, best possible -59.669004 (194.60 seconds)
Cbc0010I After 323000 nodes, 56772 on tree, -59.162893 best solution, best possible -59.669004 (195.29 seconds)
Cbc0010I After 324000 nodes, 56867 on tree, -59.162893 best solution, best possible -59.669004 (196.08 seconds)
Cbc0010I After 325000 nodes, 56516 on tree, -59.162893 best solution, best possible -59.669004 (196.50 seconds)
Cbc0010I After 326000 nodes, 56845 on tree, -59.162893 best solution, best possible -59.665589 (197.88 seconds)
Cbc0010I After 327000 nodes, 56999 on tree, -59.162893 best solution, best possible -59.665589 (198.61 seconds)
Cbc0010I After 328000 nodes, 57107 on tree, -59.162893 best solution, best possible -59.665589 (199.33 seconds)
Cbc0010I After 329000 nodes, 56681 on tree, -59.162893 best solution, best possible -59.665589 (199.69 seconds)
Cbc0010I After 330000 nodes, 57023 on tree, -59.162893 best solution, best possible -59.662241 (200.95 seconds)
Cbc0010I After 331000 nodes, 57157 on tree, -59.162893 best solution, best possible -59.662241 (201.74 seconds)
Cbc0010I After 332000 nodes, 57240 on tree, -59.162893 best solution, best possible -59.662241 (202.60 seconds)
Cbc0010I After 333000 nodes, 56879 on tree, -59.162893 best solution, best possible -59.662241 (203.03 seconds)
Cbc0010I After 334000 nodes, 57200 on tree, -59.162893 best solution, best possible -59.658769 (204.34 seconds)
Cbc0010I After 335000 nodes, 57331 on tree, -59.162893 best solution, best possible -59.658769 (205.10 seconds)
Cbc0010I After 336000 nodes, 57416 on tree, -59.162893 best solution, best possible -59.658769 (205.95 seconds)
Cbc0010I After 337000 nodes, 57034 on tree, -59.162893 best solution, best possible -59.658769 (206.37 seconds)
Cbc0010I After 338000 nodes, 57340 on tree, -59.162893 best solution, best possible -59.655607 (207.77 seconds)
Cbc0010I After 339000 nodes, 57423 on tree, -59.162893 best solution, best possible -59.655607 (208.64 seconds)
Cbc0010I After 340000 nodes, 57479 on tree, -59.162893 best solution, best possible -59.655607 (209.46 seconds)
Cbc0010I After 341000 nodes, 57150 on tree, -59.162893 best solution, best possible -59.655607 (209.90 seconds)
Cbc0010I After 342000 nodes, 57472 on tree, -59.162893 best solution, best possible -59.652377 (211.30 seconds)
Cbc0010I After 343000 nodes, 57549 on tree, -59.162893 best solution, best possible -59.652377 (212.07 seconds)
Cbc0010I After 344000 nodes, 57594 on tree, -59.162893 best solution, best possible -59.652377 (212.95 seconds)
Cbc0010I After 345000 nodes, 57245 on tree, -59.162893 best solution, best possible -59.652377 (213.42 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 23 rows 29 columns
Cbc0010I After 346000 nodes, 57569 on tree, -59.162893 best solution, best possible -59.649122 (214.74 seconds)
Cbc0010I After 347000 nodes, 57649 on tree, -59.162893 best solution, best possible -59.649122 (215.51 seconds)
Cbc0010I After 348000 nodes, 57693 on tree, -59.162893 best solution, best possible -59.649122 (216.27 seconds)
Cbc0010I After 349000 nodes, 57312 on tree, -59.162893 best solution, best possible -59.649122 (216.69 seconds)
Cbc0010I After 350000 nodes, 57612 on tree, -59.162893 best solution, best possible -59.645837 (217.87 seconds)
Cbc0010I After 351000 nodes, 57720 on tree, -59.162893 best solution, best possible -59.645837 (218.64 seconds)
Cbc0010I After 352000 nodes, 57766 on tree, -59.162893 best solution, best possible -59.645837 (219.37 seconds)
Cbc0010I After 353000 nodes, 57384 on tree, -59.162893 best solution, best possible -59.645837 (219.78 seconds)
Cbc0010I After 354000 nodes, 57692 on tree, -59.162893 best solution, best possible -59.642132 (220.95 seconds)
Cbc0010I After 355000 nodes, 57739 on tree, -59.162893 best solution, best possible -59.642132 (221.73 seconds)
Cbc0010I After 356000 nodes, 57758 on tree, -59.162893 best solution, best possible -59.642132 (222.58 seconds)
Cbc0010I After 357000 nodes, 57401 on tree, -59.162893 best solution, best possible -59.642132 (223.03 seconds)
Cbc0010I After 358000 nodes, 57709 on tree, -59.162893 best solution, best possible -59.638797 (224.33 seconds)
Cbc0010I After 359000 nodes, 57763 on tree, -59.162893 best solution, best possible -59.638797 (225.16 seconds)
Cbc0010I After 360000 nodes, 57783 on tree, -59.162893 best solution, best possible -59.638797 (226.07 seconds)
Cbc0010I After 361000 nodes, 57401 on tree, -59.162893 best solution, best possible -59.638797 (226.48 seconds)
Cbc0010I After 362000 nodes, 57693 on tree, -59.162893 best solution, best possible -59.635293 (227.90 seconds)
Cbc0010I After 363000 nodes, 57768 on tree, -59.162893 best solution, best possible -59.635293 (228.83 seconds)
Cbc0010I After 364000 nodes, 57791 on tree, -59.162893 best solution, best possible -59.635293 (229.64 seconds)
Cbc0010I After 365000 nodes, 57400 on tree, -59.162893 best solution, best possible -59.635293 (230.02 seconds)
Cbc0010I After 366000 nodes, 57683 on tree, -59.162893 best solution, best possible -59.631942 (231.19 seconds)
Cbc0010I After 367000 nodes, 57742 on tree, -59.162893 best solution, best possible -59.631942 (231.96 seconds)
Cbc0010I After 368000 nodes, 57775 on tree, -59.162893 best solution, best possible -59.631942 (232.74 seconds)
Cbc0010I After 369000 nodes, 57466 on tree, -59.162893 best solution, best possible -59.631942 (233.14 seconds)
Cbc0010I After 370000 nodes, 57757 on tree, -59.162893 best solution, best possible -59.628504 (234.32 seconds)
Cbc0010I After 371000 nodes, 57785 on tree, -59.162893 best solution, best possible -59.628504 (235.11 seconds)
Cbc0010I After 372000 nodes, 57800 on tree, -59.162893 best solution, best possible -59.628504 (235.93 seconds)
Cbc0010I After 373000 nodes, 57369 on tree, -59.162893 best solution, best possible -59.628504 (236.30 seconds)
Cbc0010I After 374000 nodes, 57657 on tree, -59.162893 best solution, best possible -59.625318 (237.61 seconds)
Cbc0010I After 375000 nodes, 57677 on tree, -59.162893 best solution, best possible -59.625318 (238.43 seconds)
Cbc0010I After 376000 nodes, 57702 on tree, -59.162893 best solution, best possible -59.625318 (239.32 seconds)
Cbc0010I After 377000 nodes, 57363 on tree, -59.162893 best solution, best possible -59.625318 (239.78 seconds)
Cbc0010I After 378000 nodes, 57639 on tree, -59.162893 best solution, best possible -59.621686 (241.18 seconds)
Cbc0010I After 379000 nodes, 57652 on tree, -59.162893 best solution, best possible -59.621686 (242.16 seconds)
Cbc0010I After 380000 nodes, 57634 on tree, -59.162893 best solution, best possible -59.621686 (243.16 seconds)
Cbc0010I After 381000 nodes, 57205 on tree, -59.162893 best solution, best possible -59.621686 (243.62 seconds)
Cbc0010I After 382000 nodes, 57462 on tree, -59.162893 best solution, best possible -59.61842 (245.06 seconds)
Cbc0010I After 383000 nodes, 57470 on tree, -59.162893 best solution, best possible -59.61842 (246.01 seconds)
Cbc0010I After 384000 nodes, 57422 on tree, -59.162893 best solution, best possible -59.61842 (246.93 seconds)
Cbc0010I After 385000 nodes, 57122 on tree, -59.162893 best solution, best possible -59.61842 (247.44 seconds)
Cbc0010I After 386000 nodes, 57382 on tree, -59.162893 best solution, best possible -59.615065 (248.83 seconds)
Cbc0010I After 387000 nodes, 57367 on tree, -59.162893 best solution, best possible -59.615065 (249.78 seconds)
Cbc0010I After 388000 nodes, 57324 on tree, -59.162893 best solution, best possible -59.615065 (250.76 seconds)
Cbc0010I After 389000 nodes, 56904 on tree, -59.162893 best solution, best possible -59.615065 (251.21 seconds)
Cbc0010I After 390000 nodes, 57141 on tree, -59.162893 best solution, best possible -59.612032 (252.56 seconds)
Cbc0010I After 391000 nodes, 57110 on tree, -59.162893 best solution, best possible -59.612032 (253.44 seconds)
Cbc0010I After 392000 nodes, 57094 on tree, -59.162893 best solution, best possible -59.612032 (254.32 seconds)
Cbc0010I After 393000 nodes, 56733 on tree, -59.162893 best solution, best possible -59.612032 (254.77 seconds)
Cbc0010I After 394000 nodes, 56986 on tree, -59.162893 best solution, best possible -59.608615 (256.08 seconds)
Cbc0010I After 395000 nodes, 56992 on tree, -59.162893 best solution, best possible -59.608615 (257.02 seconds)
Cbc0010I After 396000 nodes, 56934 on tree, -59.162893 best solution, best possible -59.608615 (257.99 seconds)
Cbc0010I After 397000 nodes, 56507 on tree, -59.162893 best solution, best possible -59.608615 (258.50 seconds)
Cbc0010I After 398000 nodes, 56754 on tree, -59.162893 best solution, best possible -59.60545 (259.89 seconds)
Cbc0010I After 399000 nodes, 56734 on tree, -59.162893 best solution, best possible -59.60545 (260.84 seconds)
Cbc0010I After 400000 nodes, 56729 on tree, -59.162893 best solution, best possible -59.60545 (261.69 seconds)
Cbc0010I After 401000 nodes, 56413 on tree, -59.162893 best solution, best possible -59.60545 (262.19 seconds)
Cbc0010I After 402000 nodes, 56637 on tree, -59.162893 best solution, best possible -59.602285 (263.44 seconds)
Cbc0010I After 403000 nodes, 56636 on tree, -59.162893 best solution, best possible -59.602285 (264.34 seconds)
Cbc0010I After 404000 nodes, 56631 on tree, -59.162893 best solution, best possible -59.602285 (265.23 seconds)
Cbc0010I After 405000 nodes, 56239 on tree, -59.162893 best solution, best possible -59.602285 (265.70 seconds)
Cbc0010I After 406000 nodes, 56473 on tree, -59.162893 best solution, best possible -59.59925 (267.09 seconds)
Cbc0010I After 407000 nodes, 56476 on tree, -59.162893 best solution, best possible -59.59925 (268.06 seconds)
Cbc0010I After 408000 nodes, 56420 on tree, -59.162893 best solution, best possible -59.59925 (269.00 seconds)
Cbc0010I After 409000 nodes, 56062 on tree, -59.162893 best solution, best possible -59.59925 (269.42 seconds)
Cbc0010I After 410000 nodes, 56262 on tree, -59.162893 best solution, best possible -59.595813 (270.79 seconds)
Cbc0010I After 411000 nodes, 56241 on tree, -59.162893 best solution, best possible -59.595813 (271.71 seconds)
Cbc0010I After 412000 nodes, 56201 on tree, -59.162893 best solution, best possible -59.595813 (272.58 seconds)
Cbc0010I After 413000 nodes, 55799 on tree, -59.162893 best solution, best possible -59.595813 (273.00 seconds)
Cbc0010I After 414000 nodes, 56043 on tree, -59.162893 best solution, best possible -59.5924 (274.40 seconds)
Cbc0010I After 415000 nodes, 56002 on tree, -59.162893 best solution, best possible -59.5924 (275.33 seconds)
Cbc0010I After 416000 nodes, 55967 on tree, -59.162893 best solution, best possible -59.5924 (276.22 seconds)
Cbc0010I After 417000 nodes, 55671 on tree, -59.162893 best solution, best possible -59.5924 (276.73 seconds)
Cbc0010I After 418000 nodes, 55889 on tree, -59.162893 best solution, best possible -59.589298 (278.08 seconds)
Cbc0010I After 419000 nodes, 55864 on tree, -59.162893 best solution, best possible -59.589298 (279.00 seconds)
Cbc0010I After 420000 nodes, 55808 on tree, -59.162893 best solution, best possible -59.589298 (279.91 seconds)
Cbc0010I After 421000 nodes, 55380 on tree, -59.162893 best solution, best possible -59.589298 (280.32 seconds)
Cbc0010I After 422000 nodes, 55607 on tree, -59.162893 best solution, best possible -59.585847 (281.71 seconds)
Cbc0010I After 423000 nodes, 55585 on tree, -59.162893 best solution, best possible -59.585847 (282.66 seconds)
Cbc0010I After 424000 nodes, 55528 on tree, -59.162893 best solution, best possible -59.585847 (283.58 seconds)
Cbc0010I After 425000 nodes, 55159 on tree, -59.162893 best solution, best possible -59.585847 (284.05 seconds)
Cbc0010I After 426000 nodes, 55407 on tree, -59.162893 best solution, best possible -59.582507 (285.44 seconds)
Cbc0010I After 427000 nodes, 55353 on tree, -59.162893 best solution, best possible -59.582507 (286.31 seconds)
Cbc0010I After 428000 nodes, 55293 on tree, -59.162893 best solution, best possible -59.582507 (287.19 seconds)
Cbc0010I After 429000 nodes, 54904 on tree, -59.162893 best solution, best possible -59.582507 (287.63 seconds)
Cbc0010I After 430000 nodes, 55127 on tree, -59.162893 best solution, best possible -59.57919 (288.90 seconds)
Cbc0010I After 431000 nodes, 55081 on tree, -59.162893 best solution, best possible -59.57919 (289.71 seconds)
Cbc0010I After 432000 nodes, 55025 on tree, -59.162893 best solution, best possible -59.57919 (290.52 seconds)
Cbc0010I After 433000 nodes, 54695 on tree, -59.162893 best solution, best possible -59.57919 (290.98 seconds)
Cbc0010I After 434000 nodes, 54896 on tree, -59.162893 best solution, best possible -59.575944 (292.20 seconds)
Cbc0010I After 435000 nodes, 54830 on tree, -59.162893 best solution, best possible -59.575944 (293.06 seconds)
Cbc0010I After 436000 nodes, 54784 on tree, -59.162893 best solution, best possible -59.575944 (293.94 seconds)
Cbc0010I After 437000 nodes, 54450 on tree, -59.162893 best solution, best possible -59.575944 (294.38 seconds)
Cbc0010I After 438000 nodes, 54644 on tree, -59.162893 best solution, best possible -59.572671 (295.65 seconds)
Cbc0010I After 439000 nodes, 54610 on tree, -59.162893 best solution, best possible -59.572671 (296.49 seconds)
Cbc0010I After 440000 nodes, 54551 on tree, -59.162893 best solution, best possible -59.572671 (297.39 seconds)
Cbc0010I After 441000 nodes, 54065 on tree, -59.162893 best solution, best possible -59.572671 (297.85 seconds)
Cbc0010I After 442000 nodes, 54257 on tree, -59.162893 best solution, best possible -59.569565 (299.23 seconds)
Cbc0010I After 443000 nodes, 54220 on tree, -59.162893 best solution, best possible -59.569565 (300.17 seconds)
Cbc0010I After 444000 nodes, 54127 on tree, -59.162893 best solution, best possible -59.569565 (301.12 seconds)
Cbc0010I After 445000 nodes, 53801 on tree, -59.162893 best solution, best possible -59.569565 (301.65 seconds)
Cbc0010I After 446000 nodes, 54012 on tree, -59.162893 best solution, best possible -59.566359 (303.05 seconds)
Cbc0010I After 447000 nodes, 53938 on tree, -59.162893 best solution, best possible -59.566359 (303.97 seconds)
Cbc0010I After 448000 nodes, 53863 on tree, -59.162893 best solution, best possible -59.566359 (304.90 seconds)
Cbc0010I After 449000 nodes, 53490 on tree, -59.162893 best solution, best possible -59.566359 (305.45 seconds)
Cbc0010I After 450000 nodes, 53691 on tree, -59.162893 best solution, best possible -59.563174 (306.80 seconds)
Cbc0010I After 451000 nodes, 53625 on tree, -59.162893 best solution, best possible -59.563174 (307.73 seconds)
Cbc0010I After 452000 nodes, 53533 on tree, -59.162893 best solution, best possible -59.563174 (308.67 seconds)
Cbc0010I After 453000 nodes, 53221 on tree, -59.162893 best solution, best possible -59.563174 (309.19 seconds)
Cbc0010I After 454000 nodes, 53422 on tree, -59.162893 best solution, best possible -59.560116 (310.54 seconds)
Cbc0010I After 455000 nodes, 53352 on tree, -59.162893 best solution, best possible -59.560116 (311.47 seconds)
Cbc0010I After 456000 nodes, 53261 on tree, -59.162893 best solution, best possible -59.560116 (312.36 seconds)
Cbc0010I After 457000 nodes, 52914 on tree, -59.162893 best solution, best possible -59.560116 (312.88 seconds)
Cbc0010I After 458000 nodes, 53095 on tree, -59.162893 best solution, best possible -59.556775 (314.24 seconds)
Cbc0010I After 459000 nodes, 52992 on tree, -59.162893 best solution, best possible -59.556775 (315.18 seconds)
Cbc0010I After 460000 nodes, 52907 on tree, -59.162893 best solution, best possible -59.556775 (316.11 seconds)
Cbc0010I After 461000 nodes, 52509 on tree, -59.162893 best solution, best possible -59.556775 (316.65 seconds)
Cbc0010I After 462000 nodes, 52688 on tree, -59.162893 best solution, best possible -59.553318 (318.03 seconds)
Cbc0010I After 463000 nodes, 52607 on tree, -59.162893 best solution, best possible -59.553318 (319.00 seconds)
Cbc0010I After 464000 nodes, 52517 on tree, -59.162893 best solution, best possible -59.553318 (319.96 seconds)
Cbc0010I After 465000 nodes, 52102 on tree, -59.162893 best solution, best possible -59.553318 (320.48 seconds)
Cbc0010I After 466000 nodes, 52262 on tree, -59.162893 best solution, best possible -59.550093 (321.85 seconds)
Cbc0010I After 467000 nodes, 52163 on tree, -59.162893 best solution, best possible -59.550093 (322.74 seconds)
Cbc0010I After 468000 nodes, 52072 on tree, -59.162893 best solution, best possible -59.550093 (323.67 seconds)
Cbc0010I After 469000 nodes, 51683 on tree, -59.162893 best solution, best possible -59.550093 (324.11 seconds)
Cbc0010I After 470000 nodes, 51883 on tree, -59.162893 best solution, best possible -59.546799 (325.48 seconds)
Cbc0010I After 471000 nodes, 51767 on tree, -59.162893 best solution, best possible -59.546799 (326.41 seconds)
Cbc0010I After 472000 nodes, 51675 on tree, -59.162893 best solution, best possible -59.546799 (327.39 seconds)
Cbc0010I After 473000 nodes, 51297 on tree, -59.162893 best solution, best possible -59.546799 (327.85 seconds)
Cbc0010I After 474000 nodes, 51455 on tree, -59.162893 best solution, best possible -59.543747 (329.20 seconds)
Cbc0010I After 475000 nodes, 51400 on tree, -59.162893 best solution, best possible -59.543747 (330.15 seconds)
Cbc0010I After 476000 nodes, 51291 on tree, -59.162893 best solution, best possible -59.543747 (331.04 seconds)
Cbc0010I After 477000 nodes, 50920 on tree, -59.162893 best solution, best possible -59.543747 (331.53 seconds)
Cbc0010I After 478000 nodes, 51076 on tree, -59.162893 best solution, best possible -59.540716 (332.87 seconds)
Cbc0010I After 479000 nodes, 50978 on tree, -59.162893 best solution, best possible -59.540716 (333.79 seconds)
Cbc0010I After 480000 nodes, 50876 on tree, -59.162893 best solution, best possible -59.540716 (334.71 seconds)
Cbc0010I After 481000 nodes, 50501 on tree, -59.162893 best solution, best possible -59.540716 (335.17 seconds)
Cbc0010I After 482000 nodes, 50690 on tree, -59.162893 best solution, best possible -59.537106 (336.49 seconds)
Cbc0010I After 483000 nodes, 50602 on tree, -59.162893 best solution, best possible -59.537106 (337.38 seconds)
Cbc0010I After 484000 nodes, 50484 on tree, -59.162893 best solution, best possible -59.537106 (338.25 seconds)
Cbc0010I After 485000 nodes, 50009 on tree, -59.162893 best solution, best possible -59.537106 (338.68 seconds)
Cbc0010I After 486000 nodes, 50167 on tree, -59.162893 best solution, best possible -59.533942 (340.01 seconds)
Cbc0010I After 487000 nodes, 50063 on tree, -59.162893 best solution, best possible -59.533942 (340.87 seconds)
Cbc0010I After 488000 nodes, 49936 on tree, -59.162893 best solution, best possible -59.533942 (341.76 seconds)
Cbc0010I After 489000 nodes, 49573 on tree, -59.162893 best solution, best possible -59.533942 (342.25 seconds)
Cbc0010I After 490000 nodes, 49712 on tree, -59.162893 best solution, best possible -59.530527 (343.56 seconds)
Cbc0010I After 491000 nodes, 49623 on tree, -59.162893 best solution, best possible -59.530527 (344.49 seconds)
Cbc0010I After 492000 nodes, 49493 on tree, -59.162893 best solution, best possible -59.530527 (345.38 seconds)
Cbc0010I After 493000 nodes, 49207 on tree, -59.162893 best solution, best possible -59.530527 (345.91 seconds)
Cbc0010I After 494000 nodes, 49351 on tree, -59.162893 best solution, best possible -59.527375 (347.23 seconds)
Cbc0010I After 495000 nodes, 49272 on tree, -59.162893 best solution, best possible -59.527375 (348.14 seconds)
Cbc0010I After 496000 nodes, 49160 on tree, -59.162893 best solution, best possible -59.527375 (349.04 seconds)
Cbc0010I After 497000 nodes, 48745 on tree, -59.162893 best solution, best possible -59.527375 (349.52 seconds)
Cbc0010I After 498000 nodes, 48886 on tree, -59.162893 best solution, best possible -59.524355 (350.83 seconds)
Cbc0010I After 499000 nodes, 48738 on tree, -59.162893 best solution, best possible -59.524355 (351.67 seconds)
Cbc0010I After 500000 nodes, 48607 on tree, -59.162893 best solution, best possible -59.524333 (352.59 seconds)
Cbc0010I After 501000 nodes, 48161 on tree, -59.162893 best solution, best possible -59.524333 (353.07 seconds)
Cbc0010I After 502000 nodes, 48299 on tree, -59.162893 best solution, best possible -59.52096 (354.37 seconds)
Cbc0010I After 503000 nodes, 48171 on tree, -59.162893 best solution, best possible -59.52096 (355.29 seconds)
Cbc0010I After 504000 nodes, 48059 on tree, -59.162893 best solution, best possible -59.52096 (356.24 seconds)
Cbc0010I After 505000 nodes, 47692 on tree, -59.162893 best solution, best possible -59.52096 (356.76 seconds)
Cbc0010I After 506000 nodes, 47828 on tree, -59.162893 best solution, best possible -59.517134 (358.06 seconds)
Cbc0010I After 507000 nodes, 47692 on tree, -59.162893 best solution, best possible -59.517134 (358.89 seconds)
Cbc0010I After 508000 nodes, 47578 on tree, -59.162893 best solution, best possible -59.517134 (359.78 seconds)
Cbc0010I After 509000 nodes, 47226 on tree, -59.162893 best solution, best possible -59.517134 (360.28 seconds)
Cbc0010I After 510000 nodes, 47345 on tree, -59.162893 best solution, best possible -59.513584 (361.59 seconds)
Cbc0010I After 511000 nodes, 47189 on tree, -59.162893 best solution, best possible -59.513584 (362.44 seconds)
Cbc0010I After 512000 nodes, 47066 on tree, -59.162893 best solution, best possible -59.51358 (363.34 seconds)
Cbc0010I After 513000 nodes, 46720 on tree, -59.162893 best solution, best possible -59.51358 (363.84 seconds)
Cbc0010I After 514000 nodes, 46842 on tree, -59.162893 best solution, best possible -59.510138 (365.17 seconds)
Cbc0010I After 515000 nodes, 46702 on tree, -59.162893 best solution, best possible -59.510126 (366.00 seconds)
Cbc0010I After 516000 nodes, 46573 on tree, -59.162893 best solution, best possible -59.510126 (366.90 seconds)
Cbc0010I After 517000 nodes, 46090 on tree, -59.162893 best solution, best possible -59.510126 (367.36 seconds)
Cbc0010I After 518000 nodes, 46201 on tree, -59.162893 best solution, best possible -59.506341 (368.65 seconds)
Cbc0010I After 519000 nodes, 46039 on tree, -59.162893 best solution, best possible -59.506341 (369.50 seconds)
Cbc0010I After 520000 nodes, 45894 on tree, -59.162893 best solution, best possible -59.506341 (370.38 seconds)
Cbc0010I After 521000 nodes, 45522 on tree, -59.162893 best solution, best possible -59.506341 (370.86 seconds)
Cbc0010I After 522000 nodes, 45638 on tree, -59.162893 best solution, best possible -59.502551 (372.15 seconds)
Cbc0010I After 523000 nodes, 45515 on tree, -59.162893 best solution, best possible -59.502551 (372.99 seconds)
Cbc0010I After 524000 nodes, 45397 on tree, -59.162893 best solution, best possible -59.502551 (373.86 seconds)
Cbc0010I After 525000 nodes, 45017 on tree, -59.162893 best solution, best possible -59.502551 (374.26 seconds)
Cbc0010I After 526000 nodes, 45133 on tree, -59.162893 best solution, best possible -59.49904 (375.55 seconds)
Cbc0010I After 527000 nodes, 45009 on tree, -59.162893 best solution, best possible -59.49904 (376.42 seconds)
Cbc0010I After 528000 nodes, 44855 on tree, -59.162893 best solution, best possible -59.49904 (377.31 seconds)
Cbc0010I After 529000 nodes, 44441 on tree, -59.162893 best solution, best possible -59.49904 (377.76 seconds)
Cbc0010I After 530000 nodes, 44535 on tree, -59.162893 best solution, best possible -59.495242 (379.09 seconds)
Cbc0010I After 531000 nodes, 44374 on tree, -59.162893 best solution, best possible -59.495242 (379.98 seconds)
Cbc0010I After 532000 nodes, 44257 on tree, -59.162893 best solution, best possible -59.495242 (380.89 seconds)
Cbc0010I After 533000 nodes, 43890 on tree, -59.162893 best solution, best possible -59.495242 (381.33 seconds)
Cbc0010I After 534000 nodes, 43985 on tree, -59.162893 best solution, best possible -59.49126 (382.63 seconds)
Cbc0010I After 535000 nodes, 43811 on tree, -59.162893 best solution, best possible -59.491254 (383.48 seconds)
Cbc0010I After 536000 nodes, 43662 on tree, -59.162893 best solution, best possible -59.491254 (384.37 seconds)
Cbc0010I After 537000 nodes, 43269 on tree, -59.162893 best solution, best possible -59.491254 (384.79 seconds)
Cbc0010I After 538000 nodes, 43352 on tree, -59.162893 best solution, best possible -59.487364 (386.11 seconds)
Cbc0010I After 539000 nodes, 43203 on tree, -59.162893 best solution, best possible -59.487364 (387.00 seconds)
Cbc0010I After 540000 nodes, 43056 on tree, -59.162893 best solution, best possible -59.487364 (387.89 seconds)
Cbc0010I After 541000 nodes, 42728 on tree, -59.162893 best solution, best possible -59.487364 (388.33 seconds)
Cbc0010I After 542000 nodes, 42787 on tree, -59.162893 best solution, best possible -59.483166 (389.62 seconds)
Cbc0010I After 543000 nodes, 42637 on tree, -59.162893 best solution, best possible -59.483166 (390.48 seconds)
Cbc0010I After 544000 nodes, 42499 on tree, -59.162893 best solution, best possible -59.483166 (391.41 seconds)
Cbc0010I After 545000 nodes, 41975 on tree, -59.162893 best solution, best possible -59.483166 (391.82 seconds)
Cbc0010I After 546000 nodes, 42077 on tree, -59.162893 best solution, best possible -59.479055 (393.12 seconds)
Cbc0010I After 547000 nodes, 41927 on tree, -59.162893 best solution, best possible -59.479041 (394.02 seconds)
Cbc0010I After 548000 nodes, 41789 on tree, -59.162893 best solution, best possible -59.479041 (394.95 seconds)
Cbc0010I After 549000 nodes, 41502 on tree, -59.162893 best solution, best possible -59.479041 (395.47 seconds)
Cbc0010I After 550000 nodes, 41561 on tree, -59.162893 best solution, best possible -59.474842 (396.76 seconds)
Cbc0010I After 551000 nodes, 41397 on tree, -59.162893 best solution, best possible -59.474842 (397.65 seconds)
Cbc0010I After 552000 nodes, 41244 on tree, -59.162893 best solution, best possible -59.474842 (398.59 seconds)
Cbc0010I After 553000 nodes, 40755 on tree, -59.162893 best solution, best possible -59.474842 (399.08 seconds)
Cbc0010I After 554000 nodes, 40807 on tree, -59.162893 best solution, best possible -59.470711 (400.40 seconds)
Cbc0010I After 555000 nodes, 40664 on tree, -59.162893 best solution, best possible -59.470711 (401.29 seconds)
Cbc0010I After 556000 nodes, 40511 on tree, -59.162893 best solution, best possible -59.470711 (402.17 seconds)
Cbc0010I After 557000 nodes, 40133 on tree, -59.162893 best solution, best possible -59.470711 (402.69 seconds)
Cbc0010I After 558000 nodes, 40169 on tree, -59.162893 best solution, best possible -59.466488 (403.97 seconds)
Cbc0010I After 559000 nodes, 39982 on tree, -59.162893 best solution, best possible -59.466488 (404.86 seconds)
Cbc0010I After 560000 nodes, 39809 on tree, -59.162893 best solution, best possible -59.466488 (405.79 seconds)
Cbc0010I After 561000 nodes, 39439 on tree, -59.162893 best solution, best possible -59.466488 (406.33 seconds)
Cbc0010I After 562000 nodes, 39470 on tree, -59.162893 best solution, best possible -59.462516 (407.62 seconds)
Cbc0010I After 563000 nodes, 39303 on tree, -59.162893 best solution, best possible -59.462516 (408.52 seconds)
Cbc0010I After 564000 nodes, 39117 on tree, -59.162893 best solution, best possible -59.462516 (409.42 seconds)
Cbc0010I After 565000 nodes, 38654 on tree, -59.162893 best solution, best possible -59.462516 (409.90 seconds)
Cbc0010I After 566000 nodes, 38668 on tree, -59.162893 best solution, best possible -59.458267 (411.14 seconds)
Cbc0010I After 567000 nodes, 38496 on tree, -59.162893 best solution, best possible -59.458267 (412.03 seconds)
Cbc0010I After 568000 nodes, 38273 on tree, -59.162893 best solution, best possible -59.458267 (412.94 seconds)
Cbc0010I After 569000 nodes, 37879 on tree, -59.162893 best solution, best possible -59.458267 (413.48 seconds)
Cbc0010I After 570000 nodes, 37897 on tree, -59.162893 best solution, best possible -59.453969 (414.75 seconds)
Cbc0010I After 571000 nodes, 37716 on tree, -59.162893 best solution, best possible -59.453969 (415.66 seconds)
Cbc0010I After 572000 nodes, 37540 on tree, -59.162893 best solution, best possible -59.453969 (416.55 seconds)
Cbc0010I After 573000 nodes, 37136 on tree, -59.162893 best solution, best possible -59.453969 (416.96 seconds)
Cbc0010I After 574000 nodes, 37186 on tree, -59.162893 best solution, best possible -59.449871 (418.29 seconds)
Cbc0010I After 575000 nodes, 36981 on tree, -59.162893 best solution, best possible -59.449871 (419.13 seconds)
Cbc0010I After 576000 nodes, 36801 on tree, -59.162893 best solution, best possible -59.449871 (420.05 seconds)
Cbc0010I After 577000 nodes, 36370 on tree, -59.162893 best solution, best possible -59.449871 (420.48 seconds)
Cbc0010I After 578000 nodes, 36369 on tree, -59.162893 best solution, best possible -59.445713 (421.74 seconds)
Cbc0010I After 579000 nodes, 36159 on tree, -59.162893 best solution, best possible -59.445713 (422.59 seconds)
Cbc0010I After 580000 nodes, 35964 on tree, -59.162893 best solution, best possible -59.445713 (423.49 seconds)
Cbc0010I After 581000 nodes, 35555 on tree, -59.162893 best solution, best possible -59.445713 (423.97 seconds)
Cbc0010I After 582000 nodes, 35549 on tree, -59.162893 best solution, best possible -59.441464 (425.23 seconds)
Cbc0010I After 583000 nodes, 35346 on tree, -59.162893 best solution, best possible -59.441464 (426.11 seconds)
Cbc0010I After 584000 nodes, 35141 on tree, -59.162893 best solution, best possible -59.441464 (427.02 seconds)
Cbc0010I After 585000 nodes, 34741 on tree, -59.162893 best solution, best possible -59.441464 (427.50 seconds)
Cbc0010I After 586000 nodes, 34718 on tree, -59.162893 best solution, best possible -59.43728 (428.76 seconds)
Cbc0010I After 587000 nodes, 34517 on tree, -59.162893 best solution, best possible -59.43728 (429.63 seconds)
Cbc0010I After 588000 nodes, 34325 on tree, -59.162893 best solution, best possible -59.43728 (430.49 seconds)
Cbc0010I After 589000 nodes, 33924 on tree, -59.162893 best solution, best possible -59.43728 (430.95 seconds)
Cbc0010I After 590000 nodes, 33895 on tree, -59.162893 best solution, best possible -59.432942 (432.19 seconds)
Cbc0010I After 591000 nodes, 33685 on tree, -59.162893 best solution, best possible -59.432942 (433.03 seconds)
Cbc0010I After 592000 nodes, 33479 on tree, -59.162893 best solution, best possible -59.432942 (433.91 seconds)
Cbc0010I After 593000 nodes, 33124 on tree, -59.162893 best solution, best possible -59.432942 (434.41 seconds)
Cbc0010I After 594000 nodes, 33107 on tree, -59.162893 best solution, best possible -59.428646 (435.66 seconds)
Cbc0010I After 595000 nodes, 32887 on tree, -59.162893 best solution, best possible -59.428646 (436.53 seconds)
Cbc0010I After 596000 nodes, 32694 on tree, -59.162893 best solution, best possible -59.428646 (437.42 seconds)
Cbc0010I After 597000 nodes, 32220 on tree, -59.162893 best solution, best possible -59.428646 (437.86 seconds)
Cbc0010I After 598000 nodes, 32183 on tree, -59.162893 best solution, best possible -59.424254 (439.06 seconds)
Cbc0010I After 599000 nodes, 31949 on tree, -59.162893 best solution, best possible -59.424254 (439.91 seconds)
Cbc0010I After 600000 nodes, 31740 on tree, -59.162893 best solution, best possible -59.424254 (440.78 seconds)
Cbc0010I After 601000 nodes, 31365 on tree, -59.162893 best solution, best possible -59.424254 (441.26 seconds)
Cbc0010I After 602000 nodes, 31333 on tree, -59.162893 best solution, best possible -59.419743 (442.52 seconds)
Cbc0010I After 603000 nodes, 31092 on tree, -59.162893 best solution, best possible -59.419743 (443.33 seconds)
Cbc0010I After 604000 nodes, 30850 on tree, -59.162893 best solution, best possible -59.419743 (444.19 seconds)
Cbc0038I Full problem 81 rows 144 columns, reduced to 22 rows 27 columns
Cbc0010I After 605000 nodes, 30437 on tree, -59.162893 best solution, best possible -59.419743 (444.68 seconds)
Cbc0010I After 606000 nodes, 30382 on tree, -59.162893 best solution, best possible -59.415349 (445.85 seconds)
Cbc0010I After 607000 nodes, 30142 on tree, -59.162893 best solution, best possible -59.415343 (446.66 seconds)
Cbc0010I After 608000 nodes, 29911 on tree, -59.162893 best solution, best possible -59.415343 (447.51 seconds)
Cbc0010I After 609000 nodes, 29446 on tree, -59.162893 best solution, best possible -59.415343 (447.99 seconds)
Cbc0010I After 610000 nodes, 29395 on tree, -59.162893 best solution, best possible -59.411499 (449.17 seconds)
Cbc0010I After 611000 nodes, 29156 on tree, -59.162893 best solution, best possible -59.411499 (450.01 seconds)
Cbc0010I After 612000 nodes, 28915 on tree, -59.162893 best solution, best possible -59.411499 (450.84 seconds)
Cbc0010I After 613000 nodes, 28490 on tree, -59.162893 best solution, best possible -59.411499 (451.27 seconds)
Cbc0010I After 614000 nodes, 28435 on tree, -59.162893 best solution, best possible -59.407219 (452.46 seconds)
Cbc0010I After 615000 nodes, 28177 on tree, -59.162893 best solution, best possible -59.407219 (453.29 seconds)
Cbc0010I After 616000 nodes, 27916 on tree, -59.162893 best solution, best possible -59.407219 (454.12 seconds)
Cbc0010I After 617000 nodes, 27540 on tree, -59.162893 best solution, best possible -59.407219 (454.57 seconds)
Cbc0010I After 618000 nodes, 27458 on tree, -59.162893 best solution, best possible -59.402929 (455.71 seconds)
Cbc0010I After 619000 nodes, 27189 on tree, -59.162893 best solution, best possible -59.402929 (456.53 seconds)
Cbc0010I After 620000 nodes, 26941 on tree, -59.162893 best solution, best possible -59.402929 (457.38 seconds)
Cbc0010I After 621000 nodes, 26482 on tree, -59.162893 best solution, best possible -59.402929 (457.79 seconds)
Cbc0010I After 622000 nodes, 26381 on tree, -59.162893 best solution, best possible -59.398511 (458.93 seconds)
Cbc0010I After 623000 nodes, 26106 on tree, -59.162893 best solution, best possible -59.398511 (459.73 seconds)
Cbc0010I After 624000 nodes, 25835 on tree, -59.162893 best solution, best possible -59.398511 (460.56 seconds)
Cbc0010I After 625000 nodes, 25441 on tree, -59.162893 best solution, best possible -59.398511 (461.00 seconds)
Cbc0010I After 626000 nodes, 25324 on tree, -59.162893 best solution, best possible -59.39427 (462.15 seconds)
Cbc0010I After 627000 nodes, 25054 on tree, -59.162893 best solution, best possible -59.39427 (462.94 seconds)
Cbc0010I After 628000 nodes, 24792 on tree, -59.162893 best solution, best possible -59.39427 (463.75 seconds)
Cbc0010I After 629000 nodes, 24374 on tree, -59.162893 best solution, best possible -59.39427 (464.20 seconds)
Cbc0010I After 630000 nodes, 24287 on tree, -59.162893 best solution, best possible -59.389568 (465.37 seconds)
Cbc0010I After 631000 nodes, 24017 on tree, -59.162893 best solution, best possible -59.389568 (466.15 seconds)
Cbc0010I After 632000 nodes, 23732 on tree, -59.162893 best solution, best possible -59.389568 (466.97 seconds)
Cbc0010I After 633000 nodes, 23285 on tree, -59.162893 best solution, best possible -59.389568 (467.42 seconds)
Cbc0010I After 634000 nodes, 23171 on tree, -59.162893 best solution, best possible -59.385533 (468.53 seconds)
Cbc0010I After 635000 nodes, 22848 on tree, -59.162893 best solution, best possible -59.385533 (469.31 seconds)
Cbc0010I After 636000 nodes, 22578 on tree, -59.162893 best solution, best possible -59.385522 (470.14 seconds)
Cbc0010I After 637000 nodes, 22137 on tree, -59.162893 best solution, best possible -59.385522 (470.61 seconds)
Cbc0010I After 638000 nodes, 22014 on tree, -59.162893 best solution, best possible -59.379896 (471.74 seconds)
Cbc0010I After 639000 nodes, 21721 on tree, -59.162893 best solution, best possible -59.379896 (472.52 seconds)
Cbc0010I After 640000 nodes, 21433 on tree, -59.162893 best solution, best possible -59.379896 (473.36 seconds)
Cbc0010I After 641000 nodes, 20980 on tree, -59.162893 best solution, best possible -59.379896 (473.78 seconds)
Cbc0010I After 642000 nodes, 20850 on tree, -59.162893 best solution, best possible -59.373709 (474.91 seconds)
Cbc0010I After 643000 nodes, 20566 on tree, -59.162893 best solution, best possible -59.373709 (475.70 seconds)
Cbc0010I After 644000 nodes, 20276 on tree, -59.162893 best solution, best possible -59.373709 (476.48 seconds)
Cbc0010I After 645000 nodes, 19861 on tree, -59.162893 best solution, best possible -59.373709 (476.88 seconds)
Cbc0010I After 646000 nodes, 19729 on tree, -59.162893 best solution, best possible -59.367414 (477.99 seconds)
Cbc0010I After 647000 nodes, 19430 on tree, -59.162893 best solution, best possible -59.367414 (478.73 seconds)
Cbc0010I After 648000 nodes, 19133 on tree, -59.162893 best solution, best possible -59.367414 (479.51 seconds)
Cbc0010I After 649000 nodes, 18691 on tree, -59.162893 best solution, best possible -59.367414 (479.91 seconds)
Cbc0010I After 650000 nodes, 18527 on tree, -59.162893 best solution, best possible -59.360928 (480.98 seconds)
Cbc0010I After 651000 nodes, 18202 on tree, -59.162893 best solution, best possible -59.360921 (481.70 seconds)
Cbc0010I After 652000 nodes, 17878 on tree, -59.162893 best solution, best possible -59.360921 (482.43 seconds)
Cbc0010I After 653000 nodes, 17421 on tree, -59.162893 best solution, best possible -59.360921 (482.84 seconds)
Cbc0010I After 654000 nodes, 17239 on tree, -59.162893 best solution, best possible -59.354903 (483.91 seconds)
Cbc0010I After 655000 nodes, 16906 on tree, -59.162893 best solution, best possible -59.354903 (484.66 seconds)
Cbc0010I After 656000 nodes, 16573 on tree, -59.162893 best solution, best possible -59.354903 (485.41 seconds)
Cbc0010I After 657000 nodes, 16133 on tree, -59.162893 best solution, best possible -59.354903 (485.84 seconds)
Cbc0010I After 658000 nodes, 15947 on tree, -59.162893 best solution, best possible -59.348832 (486.89 seconds)
Cbc0010I After 659000 nodes, 15631 on tree, -59.162893 best solution, best possible -59.348832 (487.62 seconds)
Cbc0010I After 660000 nodes, 15288 on tree, -59.162893 best solution, best possible -59.348832 (488.33 seconds)
Cbc0010I After 661000 nodes, 14834 on tree, -59.162893 best solution, best possible -59.348832 (488.74 seconds)
Cbc0010I After 662000 nodes, 14620 on tree, -59.162893 best solution, best possible -59.342576 (489.73 seconds)
Cbc0010I After 663000 nodes, 14262 on tree, -59.162893 best solution, best possible -59.342576 (490.44 seconds)
Cbc0010I After 664000 nodes, 13918 on tree, -59.162893 best solution, best possible -59.342576 (491.14 seconds)
Cbc0010I After 665000 nodes, 13475 on tree, -59.162893 best solution, best possible -59.342576 (491.51 seconds)
Cbc0010I After 666000 nodes, 13246 on tree, -59.162893 best solution, best possible -59.335929 (492.52 seconds)
Cbc0010I After 667000 nodes, 12881 on tree, -59.162893 best solution, best possible -59.335929 (493.20 seconds)
Cbc0010I After 668000 nodes, 12533 on tree, -59.162893 best solution, best possible -59.33589 (493.94 seconds)
Cbc0010I After 669000 nodes, 12078 on tree, -59.162893 best solution, best possible -59.33589 (494.31 seconds)
Cbc0010I After 670000 nodes, 11823 on tree, -59.162893 best solution, best possible -59.328075 (495.25 seconds)
Cbc0010I After 671000 nodes, 11478 on tree, -59.162893 best solution, best possible -59.328075 (495.91 seconds)
Cbc0010I After 672000 nodes, 11105 on tree, -59.162893 best solution, best possible -59.328075 (496.63 seconds)
Cbc0010I After 673000 nodes, 10674 on tree, -59.162893 best solution, best possible -59.328075 (497.01 seconds)
Cbc0010I After 674000 nodes, 10412 on tree, -59.162893 best solution, best possible -59.319286 (497.93 seconds)
Cbc0010I After 675000 nodes, 10062 on tree, -59.162893 best solution, best possible -59.319286 (498.60 seconds)
Cbc0010I After 676000 nodes, 9697 on tree, -59.162893 best solution, best possible -59.319286 (499.29 seconds)
Cbc0010I After 677000 nodes, 9432 on tree, -59.162893 best solution, best possible -59.309814 (500.21 seconds)
Cbc0010I After 678000 nodes, 9032 on tree, -59.162893 best solution, best possible -59.309814 (500.81 seconds)
Cbc0010I After 679000 nodes, 8725 on tree, -59.162893 best solution, best possible -59.300317 (501.67 seconds)
Cbc0010I After 680000 nodes, 8370 on tree, -59.162893 best solution, best possible -59.29182 (502.48 seconds)
Cbc0010I After 681000 nodes, 8012 on tree, -59.162893 best solution, best possible -59.284289 (503.26 seconds)
Cbc0010I After 682000 nodes, 7594 on tree, -59.162893 best solution, best possible -59.284289 (503.78 seconds)
Cbc0010I After 683000 nodes, 7216 on tree, -59.162893 best solution, best possible -59.276579 (504.48 seconds)
Cbc0010I After 684000 nodes, 6817 on tree, -59.162893 best solution, best possible -59.269059 (505.15 seconds)
Cbc0010I After 685000 nodes, 6396 on tree, -59.162893 best solution, best possible -59.260711 (505.80 seconds)
Cbc0010I After 686000 nodes, 5958 on tree, -59.162893 best solution, best possible -59.260711 (506.28 seconds)
Cbc0010I After 687000 nodes, 5534 on tree, -59.162893 best solution, best possible -59.252517 (506.88 seconds)
Cbc0010I After 688000 nodes, 5105 on tree, -59.162893 best solution, best possible -59.244435 (507.46 seconds)
Cbc0010I After 689000 nodes, 4659 on tree, -59.162893 best solution, best possible -59.237413 (508.00 seconds)
Cbc0010I After 690000 nodes, 4198 on tree, -59.162893 best solution, best possible -59.237413 (508.41 seconds)
Cbc0010I After 691000 nodes, 3738 on tree, -59.162893 best solution, best possible -59.228227 (508.90 seconds)
Cbc0010I After 692000 nodes, 3273 on tree, -59.162893 best solution, best possible -59.219141 (509.36 seconds)
Cbc0010I After 693000 nodes, 2811 on tree, -59.162893 best solution, best possible -59.211194 (509.80 seconds)
Cbc0010I After 694000 nodes, 2335 on tree, -59.162893 best solution, best possible -59.211194 (510.12 seconds)
Cbc0010I After 695000 nodes, 1882 on tree, -59.162893 best solution, best possible -59.199981 (510.52 seconds)
Cbc0010I After 696000 nodes, 1413 on tree, -59.162893 best solution, best possible -59.188874 (510.87 seconds)
Cbc0010I After 697000 nodes, 936 on tree, -59.162893 best solution, best possible -59.180196 (511.18 seconds)
Cbc0010I After 698000 nodes, 458 on tree, -59.162893 best solution, best possible -59.180196 (511.44 seconds)
Cbc0001I Search completed - best objective -59.16289328783717, took 11208277 iterations and 913208 nodes (511.72 seconds)
Cbc0032I Strong branching done 2382116 times (18748734 iterations), fathomed 163381 nodes and fixed 462627 variables
Cbc0041I Maximum depth 54, 2490509 variables fixed on reduced cost (complete fathoming 327 times, 214244 nodes taking 2192213 iterations)
Cuts at root node changed objective from -63.5382 to -61.1129
Probing was tried 100 times and created 0 cuts of which 3 were active after adding rounds of cuts (0.024 seconds)
Gomory was tried 184477 times and created 149711 cuts of which 0 were active after adding rounds of cuts (13.067 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
TwoMirCuts was tried 100 times and created 92 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                59.16289329
Enumerated nodes:               913208
Total iterations:               11208277
Time (CPU seconds):             474.85
Time (Wallclock seconds):       511.73

Option for printingOptions changed from normal to all
Total time (CPU seconds):       474.85   (Wallclock seconds):       511.73

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b0229b2ef14946eca4ee166c1a74032e-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/b0229b2ef14946eca4ee166c1a74032e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.9671 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.9299 iterations 6
Cbc0038I Solution found of -14.0819
Cbc0038I Cleaned solution of -14.0819
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -14.0819 to -14.2677 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.5376
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.9299 iterations 0
Cbc0038I Pass   3: suminf.    0.47320 (1) obj. -14.5376 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.8839 iterations 6
Cbc0038I Pass   5: suminf.    0.32796 (1) obj. -14.5376 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -14.9718 iterations 6
Cbc0038I Pass   7: suminf.    0.30676 (1) obj. -14.5376 iterations 3
Cbc0038I Pass   8: suminf.    0.69524 (2) obj. -14.5376 iterations 4
Cbc0038I Pass   9: suminf.    0.40000 (2) obj. -14.8152 iterations 7
Cbc0038I Pass  10: suminf.    0.63635 (2) obj. -14.5376 iterations 5
Cbc0038I Pass  11: suminf.    0.60035 (2) obj. -14.5376 iterations 2
Cbc0038I Pass  12: suminf.    0.09751 (1) obj. -14.5376 iterations 2
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -15.1096 iterations 7
Cbc0038I Pass  14: suminf.    0.15025 (1) obj. -14.5376 iterations 5
Cbc0038I Pass  15: suminf.    0.47717 (2) obj. -14.5376 iterations 4
Cbc0038I Pass  16: suminf.    0.44742 (2) obj. -14.5376 iterations 2
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. -14.5763 iterations 9
Cbc0038I Solution found of -14.5763
Cbc0038I Cleaned solution of -14.5763
Cbc0038I Rounding solution of -14.5766 is better than previous of -14.5763

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.0547
Cbc0038I Pass  18: suminf.    0.80000 (4) obj. -16.9299 iterations 0
Cbc0038I Pass  19: suminf.    0.42282 (2) obj. -15.0547 iterations 9
Cbc0038I Pass  20: suminf.    0.37879 (2) obj. -15.0547 iterations 3
Cbc0038I Pass  21: suminf.    0.20740 (2) obj. -15.0547 iterations 6
Cbc0038I Pass  22: suminf.    1.72511 (6) obj. -15.0547 iterations 11
Cbc0038I Pass  23: suminf.    0.40618 (1) obj. -15.0547 iterations 2
Cbc0038I Pass  24: suminf.    0.60000 (2) obj. -15.3766 iterations 17
Cbc0038I Pass  25: suminf.    0.31760 (2) obj. -15.0547 iterations 10
Cbc0038I Pass  26: suminf.    0.27357 (2) obj. -15.0547 iterations 3
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -15.1093 iterations 9
Cbc0038I Pass  28: suminf.    0.26206 (1) obj. -15.0547 iterations 4
Cbc0038I Pass  29: suminf.    0.40618 (1) obj. -15.0547 iterations 13
Cbc0038I Pass  30: suminf.    1.72511 (6) obj. -15.0547 iterations 5
Cbc0038I Pass  31: suminf.    0.40618 (1) obj. -15.0547 iterations 3
Cbc0038I Pass  32: suminf.    0.48718 (2) obj. -15.0547 iterations 7
Cbc0038I Pass  33: suminf.    0.44084 (2) obj. -15.0547 iterations 2
Cbc0038I Pass  34: suminf.    0.59807 (2) obj. -15.0547 iterations 3
Cbc0038I Pass  35: suminf.    0.40618 (1) obj. -15.0547 iterations 1
Cbc0038I Pass  36: suminf.    1.72511 (6) obj. -15.0547 iterations 5
Cbc0038I Pass  37: suminf.    0.40618 (1) obj. -15.0547 iterations 3
Cbc0038I Pass  38: suminf.    0.40525 (2) obj. -15.0547 iterations 3
Cbc0038I Pass  39: suminf.    0.96703 (3) obj. -15.0547 iterations 9
Cbc0038I Pass  40: suminf.    0.80000 (3) obj. -16.1543 iterations 11
Cbc0038I Pass  41: suminf.    0.68323 (2) obj. -15.0547 iterations 8
Cbc0038I Pass  42: suminf.    0.61365 (2) obj. -15.0547 iterations 2
Cbc0038I Pass  43: suminf.    0.20000 (1) obj. -15.1096 iterations 10
Cbc0038I Pass  44: suminf.    0.26234 (1) obj. -15.0547 iterations 5
Cbc0038I Pass  45: suminf.    0.27863 (1) obj. -15.0547 iterations 4
Cbc0038I Pass  46: suminf.    0.40618 (1) obj. -15.0547 iterations 7
Cbc0038I Pass  47: suminf.    1.72511 (6) obj. -15.0547 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -14.5763 to -14.5867 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.6284
Cbc0038I Pass  47: suminf.    0.80000 (4) obj. -16.9299 iterations 0
Cbc0038I Pass  48: suminf.    0.45510 (3) obj. -15.6284 iterations 8
Cbc0038I Pass  49: suminf.    0.40000 (3) obj. -15.6284 iterations 4
Cbc0038I Pass  50: suminf.    0.61768 (2) obj. -15.6284 iterations 8
Cbc0038I Pass  51: suminf.    0.40000 (2) obj. -15.8078 iterations 6
Cbc0038I Pass  52: suminf.    0.62282 (2) obj. -15.6284 iterations 5
Cbc0038I Pass  53: suminf.    1.02600 (3) obj. -15.6284 iterations 9
Cbc0038I Pass  54: suminf.    0.40000 (2) obj. -15.7691 iterations 6
Cbc0038I Pass  55: suminf.    0.57470 (2) obj. -15.6284 iterations 3
Cbc0038I Pass  56: suminf.    0.80711 (3) obj. -15.6284 iterations 7
Cbc0038I Pass  57: suminf.    0.79103 (3) obj. -15.6284 iterations 5
Cbc0038I Pass  58: suminf.    0.95370 (3) obj. -15.6284 iterations 6
Cbc0038I Pass  59: suminf.    0.62379 (2) obj. -15.6284 iterations 2
Cbc0038I Pass  60: suminf.    0.40000 (2) obj. -15.8078 iterations 9
Cbc0038I Pass  61: suminf.    0.62282 (2) obj. -15.6284 iterations 5
Cbc0038I Pass  62: suminf.    1.46584 (5) obj. -15.6284 iterations 14
Cbc0038I Pass  63: suminf.    0.67134 (3) obj. -15.6284 iterations 4
Cbc0038I Pass  64: suminf.    1.06127 (3) obj. -15.6284 iterations 9
Cbc0038I Pass  65: suminf.    1.06660 (3) obj. -15.6284 iterations 4
Cbc0038I Pass  66: suminf.    0.60385 (2) obj. -15.6284 iterations 4
Cbc0038I Pass  67: suminf.    1.06114 (3) obj. -15.6284 iterations 4
Cbc0038I Pass  68: suminf.    0.60231 (6) obj. -15.6284 iterations 9
Cbc0038I Pass  69: suminf.    0.40000 (2) obj. -15.7691 iterations 5
Cbc0038I Pass  70: suminf.    0.57470 (2) obj. -15.6284 iterations 4
Cbc0038I Pass  71: suminf.    0.75642 (3) obj. -15.6284 iterations 3
Cbc0038I Pass  72: suminf.    0.67573 (3) obj. -15.6284 iterations 3
Cbc0038I Pass  73: suminf.    0.78305 (3) obj. -15.6284 iterations 5
Cbc0038I Pass  74: suminf.    0.95370 (3) obj. -15.6284 iterations 6
Cbc0038I Pass  75: suminf.    0.62379 (2) obj. -15.6284 iterations 2
Cbc0038I Pass  76: suminf.    0.40000 (2) obj. -15.8078 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -14.5867 - took 0.03 seconds
Cbc0012I Integer solution of -14.586744 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 9 rows 11 columns
Cbc0031I 7 added rows had average density of 32.285714
Cbc0013I At root node, 7 cuts changed objective from -16.967065 to -15.485954 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 312 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.586744 best solution, best possible -15.485954 (0.10 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 15 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 17 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 19 columns
Cbc0001I Search completed - best objective -14.58674408681689, took 9283 iterations and 434 nodes (0.34 seconds)
Cbc0032I Strong branching done 2806 times (11479 iterations), fathomed 123 nodes and fixed 65 variables
Cbc0035I Maximum depth 14, 675 variables fixed on reduced cost
Cuts at root node changed objective from -16.9671 to -15.486
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 611 times and created 1511 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 611 times and created 125 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.58674409
Enumerated nodes:               434
Total iterations:               9283
Time (CPU seconds):             0.34
Time (Wallclock seconds):       0.34

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.34

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/bcfc15bb6bb841afb820359b5d96907c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/bcfc15bb6bb841afb820359b5d96907c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 45.6516 - 0.00 seconds
Cgl0004I processed model has 64 rows, 111 columns (111 integer (55 of which binary)) and 278 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.125
Cbc0038I Pass   1: suminf.    0.62500 (5) obj. -45.4083 iterations 12
Cbc0038I Solution found of -41.9219
Cbc0038I Cleaned solution of -41.9219
Cbc0038I Before mini branch and bound, 89 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 111 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -41.9219 to -43.212 (0.00 seconds)
Cbc0038I Round again with cutoff of -43.4559
Cbc0038I Pass   2: suminf.    0.62500 (5) obj. -45.4083 iterations 0
Cbc0038I Pass   3: suminf.    0.38385 (2) obj. -43.4559 iterations 13
Cbc0038I Pass   4: suminf.    0.25000 (2) obj. -43.6085 iterations 10
Cbc0038I Pass   5: suminf.    0.59737 (2) obj. -43.4559 iterations 8
Cbc0038I Pass   6: suminf.    0.25000 (2) obj. -43.7818 iterations 12
Cbc0038I Pass   7: suminf.    0.60265 (2) obj. -43.4559 iterations 6
Cbc0038I Pass   8: suminf.    0.33970 (2) obj. -43.4559 iterations 9
Cbc0038I Pass   9: suminf.    0.12500 (1) obj. -43.6089 iterations 11
Cbc0038I Pass  10: suminf.    0.28862 (1) obj. -43.4559 iterations 4
Cbc0038I Pass  11: suminf.    0.64448 (3) obj. -43.4559 iterations 17
Cbc0038I Pass  12: suminf.    0.60718 (3) obj. -43.4559 iterations 3
Cbc0038I Pass  13: suminf.    0.34628 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  14: suminf.    0.34628 (2) obj. -43.4559 iterations 0
Cbc0038I Pass  15: suminf.    0.41743 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  16: suminf.    0.89804 (6) obj. -43.4559 iterations 11
Cbc0038I Pass  17: suminf.    2.17738 (6) obj. -43.4559 iterations 5
Cbc0038I Pass  18: suminf.    0.41294 (2) obj. -43.4559 iterations 1
Cbc0038I Pass  19: suminf.    0.41294 (2) obj. -43.4559 iterations 0
Cbc0038I Pass  20: suminf.    0.47684 (2) obj. -43.4559 iterations 2
Cbc0038I Pass  21: suminf.    0.61884 (3) obj. -43.4559 iterations 8
Cbc0038I Pass  22: suminf.    0.60718 (3) obj. -43.4559 iterations 6
Cbc0038I Pass  23: suminf.    0.34628 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  24: suminf.    0.34628 (2) obj. -43.4559 iterations 0
Cbc0038I Pass  25: suminf.    0.41743 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  26: suminf.    0.72429 (2) obj. -43.4559 iterations 11
Cbc0038I Pass  27: suminf.    0.62690 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  28: suminf.    0.29346 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  29: suminf.    0.18086 (2) obj. -43.4559 iterations 6
Cbc0038I Pass  30: suminf.    0.27001 (2) obj. -43.4559 iterations 3
Cbc0038I Pass  31: suminf.    0.74847 (4) obj. -43.4559 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 111 columns, reduced to 28 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -43.212 to -43.3304 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.8951
Cbc0038I Pass  31: suminf.    0.62500 (5) obj. -45.4083 iterations 0
Cbc0038I Pass  32: suminf.    0.58658 (3) obj. -43.8951 iterations 16
Cbc0038I Pass  33: suminf.    0.46258 (3) obj. -43.8951 iterations 5
Cbc0038I Pass  34: suminf.    0.44501 (2) obj. -43.8951 iterations 9
Cbc0038I Pass  35: suminf.    0.50541 (2) obj. -43.8951 iterations 9
Cbc0038I Pass  36: suminf.    0.50513 (2) obj. -43.8951 iterations 6
Cbc0038I Pass  37: suminf.    0.50513 (2) obj. -43.8951 iterations 2
Cbc0038I Pass  38: suminf.    0.62544 (3) obj. -43.8951 iterations 22
Cbc0038I Pass  39: suminf.    0.25000 (2) obj. -44.1693 iterations 6
Cbc0038I Pass  40: suminf.    0.54685 (2) obj. -43.8951 iterations 4
Cbc0038I Pass  41: suminf.    0.31226 (3) obj. -43.8951 iterations 10
Cbc0038I Pass  42: suminf.    0.87846 (7) obj. -43.8951 iterations 5
Cbc0038I Pass  43: suminf.    0.25949 (2) obj. -43.8951 iterations 1
Cbc0038I Pass  44: suminf.    0.20765 (2) obj. -43.8951 iterations 8
Cbc0038I Pass  45: suminf.    0.12500 (1) obj. -43.9506 iterations 3
Cbc0038I Pass  46: suminf.    0.18440 (1) obj. -43.8951 iterations 3
Cbc0038I Pass  47: suminf.    2.52171 (7) obj. -43.8951 iterations 21
Cbc0038I Pass  48: suminf.    0.26018 (3) obj. -43.8951 iterations 5
Cbc0038I Pass  49: suminf.    0.53908 (2) obj. -43.8951 iterations 10
Cbc0038I Pass  50: suminf.    0.12500 (2) obj. -43.8951 iterations 4
Cbc0038I Pass  51: suminf.    0.12743 (1) obj. -43.8951 iterations 2
Cbc0038I Pass  52: suminf.    0.50916 (2) obj. -43.8951 iterations 11
Cbc0038I Pass  53: suminf.    0.25000 (2) obj. -44.0922 iterations 17
Cbc0038I Pass  54: suminf.    0.56869 (2) obj. -43.8951 iterations 10
Cbc0038I Pass  55: suminf.    0.52886 (2) obj. -43.8951 iterations 1
Cbc0038I Pass  56: suminf.    0.44501 (2) obj. -43.8951 iterations 5
Cbc0038I Pass  57: suminf.    0.50541 (2) obj. -43.8951 iterations 4
Cbc0038I Pass  58: suminf.    0.73025 (3) obj. -43.8951 iterations 4
Cbc0038I Pass  59: suminf.    0.71864 (3) obj. -43.8951 iterations 1
Cbc0038I Pass  60: suminf.    0.44501 (2) obj. -43.8951 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 111 columns, reduced to 33 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -43.3304 - took 0.05 seconds
Cbc0012I Integer solution of -43.330419 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0012I Integer solution of -43.415038 found by DiveCoefficient after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 64 rows 111 columns, reduced to 6 rows 9 columns
Cbc0031I 16 added rows had average density of 80.25
Cbc0013I At root node, 16 cuts changed objective from -45.651564 to -44.591094 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1164 row cuts average 106.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 29 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 65 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -43.415038 best solution, best possible -44.591094 (0.33 seconds)
Cbc0038I Full problem 64 rows 111 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 64 rows 111 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 64 rows 111 columns, reduced to 8 rows 9 columns
Cbc0038I Full problem 64 rows 111 columns, reduced to 21 rows 27 columns
Cbc0038I Full problem 64 rows 111 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 64 rows 111 columns, reduced to 15 rows 20 columns
Cbc0001I Search completed - best objective -43.41503841429937, took 68489 iterations and 6634 nodes (1.61 seconds)
Cbc0032I Strong branching done 6492 times (50408 iterations), fathomed 182 nodes and fixed 651 variables
Cbc0041I Maximum depth 25, 3383 variables fixed on reduced cost (complete fathoming 70 times, 5756 nodes taking 50787 iterations)
Cuts at root node changed objective from -45.6516 to -44.5911
Probing was tried 100 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Gomory was tried 402 times and created 1523 cuts of which 0 were active after adding rounds of cuts (0.075 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
TwoMirCuts was tried 100 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 100 times and created 65 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)

Result - Optimal solution found

Objective value:                43.41503841
Enumerated nodes:               6634
Total iterations:               68489
Time (CPU seconds):             1.54
Time (Wallclock seconds):       1.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/bd02083204b64911bf73479ed1e1019d-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/bd02083204b64911bf73479ed1e1019d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.2237 - 0.00 seconds
Cgl0004I processed model has 25 rows, 39 columns (39 integer (19 of which binary)) and 98 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (3) obj. -16.0986 iterations 11
Cbc0038I Solution found of -14.1613
Cbc0038I Cleaned solution of -14.1613
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -14.1613 to -14.7014 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.8536
Cbc0038I Pass   2: suminf.    0.80000 (3) obj. -16.0986 iterations 0
Cbc0038I Pass   3: suminf.    0.53501 (2) obj. -14.8536 iterations 11
Cbc0038I Pass   4: suminf.    0.42793 (2) obj. -14.8536 iterations 2
Cbc0038I Pass   5: suminf.    0.20000 (1) obj. -15.1669 iterations 9
Cbc0038I Pass   6: suminf.    0.48034 (1) obj. -14.8536 iterations 2
Cbc0038I Pass   7: suminf.    0.13512 (1) obj. -14.8536 iterations 3
Cbc0038I Pass   8: suminf.    0.13512 (1) obj. -14.8536 iterations 1
Cbc0038I Pass   9: suminf.    0.68194 (7) obj. -14.8536 iterations 8
Cbc0038I Pass  10: suminf.    0.32791 (2) obj. -14.8536 iterations 3
Cbc0038I Pass  11: suminf.    0.80000 (2) obj. -15.4497 iterations 6
Cbc0038I Pass  12: suminf.    0.42914 (1) obj. -14.8536 iterations 3
Cbc0038I Pass  13: suminf.    0.40000 (1) obj. -14.8756 iterations 9
Cbc0038I Pass  14: suminf.    0.42307 (1) obj. -14.8536 iterations 2
Cbc0038I Pass  15: suminf.    0.97299 (4) obj. -14.8536 iterations 4
Cbc0038I Pass  16: suminf.    0.97299 (4) obj. -14.8536 iterations 1
Cbc0038I Pass  17: suminf.    0.80000 (2) obj. -15.4497 iterations 10
Cbc0038I Pass  18: suminf.    0.42914 (1) obj. -14.8536 iterations 3
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -14.8756 iterations 8
Cbc0038I Pass  20: suminf.    0.42307 (1) obj. -14.8536 iterations 2
Cbc0038I Pass  21: suminf.    1.03671 (3) obj. -14.8536 iterations 5
Cbc0038I Pass  22: suminf.    1.33768 (6) obj. -14.8536 iterations 3
Cbc0038I Pass  23: suminf.    0.73912 (2) obj. -14.8536 iterations 3
Cbc0038I Pass  24: suminf.    0.65299 (2) obj. -14.8536 iterations 1
Cbc0038I Solution found of -15.0249
Cbc0038I Cleaned solution of -15.0249
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.2647
Cbc0038I Pass  25: suminf.    0.80000 (3) obj. -16.0986 iterations 0
Cbc0038I Pass  26: suminf.    0.83130 (2) obj. -15.2647 iterations 11
Cbc0038I Pass  27: suminf.    0.60000 (2) obj. -15.4785 iterations 8
Cbc0038I Pass  28: suminf.    0.82560 (2) obj. -15.2647 iterations 5
Cbc0038I Pass  29: suminf.    0.46547 (2) obj. -15.2647 iterations 5
Cbc0038I Pass  30: suminf.    1.73577 (6) obj. -15.2647 iterations 3
Cbc0038I Pass  31: suminf.    0.52781 (2) obj. -15.2647 iterations 5
Cbc0038I Pass  32: suminf.    0.52781 (2) obj. -15.2647 iterations 0
Cbc0038I Pass  33: suminf.    0.60000 (2) obj. -15.7923 iterations 7
Cbc0038I Pass  34: suminf.    0.52429 (2) obj. -15.2647 iterations 4
Cbc0038I Pass  35: suminf.    0.83677 (7) obj. -15.2647 iterations 2
Cbc0038I Pass  36: suminf.    0.53874 (2) obj. -15.2647 iterations 3
Cbc0038I Pass  37: suminf.    0.53874 (2) obj. -15.2647 iterations 0
Cbc0038I Pass  38: suminf.    0.60000 (2) obj. -15.7923 iterations 6
Cbc0038I Pass  39: suminf.    0.52429 (2) obj. -15.2647 iterations 4
Cbc0038I Pass  40: suminf.    0.83677 (7) obj. -15.2647 iterations 2
Cbc0038I Pass  41: suminf.    0.53874 (2) obj. -15.2647 iterations 3
Cbc0038I Pass  42: suminf.    0.53874 (2) obj. -15.2647 iterations 0
Cbc0038I Pass  43: suminf.    0.60000 (2) obj. -15.7923 iterations 6
Cbc0038I Pass  44: suminf.    0.52429 (2) obj. -15.2647 iterations 4
Cbc0038I Pass  45: suminf.    0.83677 (7) obj. -15.2647 iterations 2
Cbc0038I Pass  46: suminf.    0.53874 (2) obj. -15.2647 iterations 3
Cbc0038I Pass  47: suminf.    0.53874 (2) obj. -15.2647 iterations 0
Cbc0038I Pass  48: suminf.    0.60000 (2) obj. -15.7923 iterations 6
Cbc0038I Pass  49: suminf.    0.52429 (2) obj. -15.2647 iterations 4
Cbc0038I Pass  50: suminf.    0.83677 (7) obj. -15.2647 iterations 2
Cbc0038I Pass  51: suminf.    0.53874 (2) obj. -15.2647 iterations 3
Cbc0038I Pass  52: suminf.    0.53874 (2) obj. -15.2647 iterations 0
Cbc0038I Pass  53: suminf.    0.60000 (2) obj. -15.7923 iterations 6
Cbc0038I Pass  54: suminf.    0.52429 (2) obj. -15.2647 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.0249 - took 0.01 seconds
Cbc0012I Integer solution of -15.024886 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 39 columns, reduced to 6 rows 7 columns
Cbc0031I 6 added rows had average density of 23.333333
Cbc0013I At root node, 6 cuts changed objective from -16.223716 to -15.198686 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 6.5 elements, 3 column cuts (3 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 511 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 10 row cuts average 27.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 41 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.024886 best solution, best possible -15.198686 (0.07 seconds)
Cbc0001I Search completed - best objective -15.02488631755113, took 1406 iterations and 10 nodes (0.08 seconds)
Cbc0032I Strong branching done 96 times (417 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Cuts at root node changed objective from -16.2237 to -15.1987
Probing was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 128 times and created 602 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
TwoMirCuts was tried 128 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.02488632
Enumerated nodes:               10
Total iterations:               1406
Time (CPU seconds):             0.08
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1777f76b763349ddb1245aaa2b06344c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1777f76b763349ddb1245aaa2b06344c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 15.7603 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.6535 iterations 5
Cbc0038I Solution found of -13.7163
Cbc0038I Cleaned solution of -13.7163
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -13.7163 to -14.2502 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.4013
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.6535 iterations 0
Cbc0038I Pass   3: suminf.    0.27236 (1) obj. -14.4013 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.4684 iterations 4
Cbc0038I Pass   5: suminf.    0.27092 (1) obj. -14.4013 iterations 2
Cbc0038I Pass   6: suminf.    0.29202 (2) obj. -14.4013 iterations 2
Cbc0038I Pass   7: suminf.    1.83507 (5) obj. -14.4013 iterations 11
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -14.5692 iterations 4
Cbc0038I Pass   9: suminf.    0.37744 (1) obj. -14.4013 iterations 2
Cbc0038I Pass  10: suminf.    0.48802 (2) obj. -14.4013 iterations 2
Cbc0038I Pass  11: suminf.    0.47719 (1) obj. -14.4013 iterations 12
Cbc0038I Pass  12: suminf.    0.40000 (1) obj. -14.4478 iterations 3
Cbc0038I Pass  13: suminf.    0.47462 (1) obj. -14.4013 iterations 1
Cbc0038I Pass  14: suminf.    0.88352 (2) obj. -14.4013 iterations 7
Cbc0038I Pass  15: suminf.    0.88352 (2) obj. -14.4013 iterations 0
Cbc0038I Pass  16: suminf.    0.60000 (2) obj. -14.8561 iterations 8
Cbc0038I Pass  17: suminf.    0.32472 (1) obj. -14.4013 iterations 2
Cbc0038I Pass  18: suminf.    0.20000 (1) obj. -14.5193 iterations 4
Cbc0038I Pass  19: suminf.    0.32223 (1) obj. -14.4013 iterations 3
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -14.5193 iterations 4
Cbc0038I Pass  21: suminf.    0.40241 (5) obj. -14.4013 iterations 4
Cbc0038I Pass  22: suminf.    0.31771 (1) obj. -14.4013 iterations 9
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -14.4101 iterations 6
Cbc0038I Pass  24: suminf.    0.20932 (1) obj. -14.4013 iterations 3
Cbc0038I Pass  25: suminf.    0.66203 (2) obj. -14.4013 iterations 7
Cbc0038I Pass  26: suminf.    0.66203 (2) obj. -14.4013 iterations 1
Cbc0038I Pass  27: suminf.    0.60000 (2) obj. -14.7094 iterations 6
Cbc0038I Pass  28: suminf.    1.98670 (5) obj. -14.4013 iterations 9
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -14.5692 iterations 4
Cbc0038I Pass  30: suminf.    0.37744 (1) obj. -14.4013 iterations 3
Cbc0038I Pass  31: suminf.    0.75690 (2) obj. -14.4013 iterations 9
Cbc0038I Rounding solution of -14.3511 is better than previous of -14.2502

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 20 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.6731
Cbc0038I Pass  31: suminf.    0.80000 (4) obj. -15.6535 iterations 0
Cbc0038I Pass  32: suminf.    0.56287 (2) obj. -14.6731 iterations 6
Cbc0038I Pass  33: suminf.    0.37261 (2) obj. -14.6731 iterations 3
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -14.6869 iterations 9
Cbc0038I Pass  35: suminf.    0.22212 (1) obj. -14.6731 iterations 1
Cbc0038I Pass  36: suminf.    0.42442 (2) obj. -14.6731 iterations 8
Cbc0038I Pass  37: suminf.    0.20000 (1) obj. -14.7345 iterations 2
Cbc0038I Pass  38: suminf.    0.26488 (1) obj. -14.6731 iterations 1
Cbc0038I Pass  39: suminf.    0.40203 (1) obj. -14.6731 iterations 2
Cbc0038I Pass  40: suminf.    0.24036 (1) obj. -14.6731 iterations 5
Cbc0038I Pass  41: suminf.    1.75883 (6) obj. -14.6731 iterations 2
Cbc0038I Pass  42: suminf.    0.24036 (1) obj. -14.6731 iterations 2
Cbc0038I Pass  43: suminf.    0.24673 (1) obj. -14.6731 iterations 3
Cbc0038I Pass  44: suminf.    0.20000 (1) obj. -14.6869 iterations 4
Cbc0038I Pass  45: suminf.    0.22212 (1) obj. -14.6731 iterations 2
Cbc0038I Pass  46: suminf.    0.24673 (1) obj. -14.6731 iterations 2
Cbc0038I Pass  47: suminf.    0.40000 (2) obj. -14.9638 iterations 9
Cbc0038I Pass  48: suminf.    0.22212 (1) obj. -14.6731 iterations 3
Cbc0038I Pass  49: suminf.    0.24673 (1) obj. -14.6731 iterations 2
Cbc0038I Pass  50: suminf.    0.24673 (1) obj. -14.6731 iterations 1
Cbc0038I Pass  51: suminf.    1.07698 (4) obj. -14.6731 iterations 12
Cbc0038I Pass  52: suminf.    0.70222 (4) obj. -14.6731 iterations 3
Cbc0038I Pass  53: suminf.    0.43771 (1) obj. -14.6731 iterations 4
Cbc0038I Pass  54: suminf.    0.20000 (1) obj. -14.7345 iterations 2
Cbc0038I Pass  55: suminf.    0.26488 (1) obj. -14.6731 iterations 1
Cbc0038I Pass  56: suminf.    0.57682 (3) obj. -14.6731 iterations 5
Cbc0038I Pass  57: suminf.    0.85337 (3) obj. -14.6731 iterations 3
Cbc0038I Pass  58: suminf.    0.57682 (3) obj. -14.6731 iterations 4
Cbc0038I Pass  59: suminf.    0.23106 (2) obj. -14.6731 iterations 4
Cbc0038I Pass  60: suminf.    0.97866 (5) obj. -14.6731 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.3511 - took 0.01 seconds
Cbc0012I Integer solution of -14.35105 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 3 columns
Cbc0031I 8 added rows had average density of 18.875
Cbc0013I At root node, 8 cuts changed objective from -15.760328 to -14.543575 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 679 row cuts average 33.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 29 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.35105 best solution, best possible -14.543575 (0.08 seconds)
Cbc0001I Search completed - best objective -14.35105030983707, took 1552 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 116 times (519 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 23 variables fixed on reduced cost
Cuts at root node changed objective from -15.7603 to -14.5436
Probing was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 124 times and created 708 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
TwoMirCuts was tried 124 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.35105031
Enumerated nodes:               12
Total iterations:               1552
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/72cafcd74f31420ea16e88a6dbb7f80f-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/72cafcd74f31420ea16e88a6dbb7f80f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.32713 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -9.24814 iterations 5
Cbc0038I Solution found of -7.89395
Cbc0038I Cleaned solution of -7.89395
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -7.89395 to -8.20991 (0.00 seconds)
Cbc0038I Round again with cutoff of -8.32164
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -9.24814 iterations 0
Cbc0038I Pass   3: suminf.    0.44878 (1) obj. -8.32164 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.43772 iterations 2
Cbc0038I Pass   5: suminf.    0.37502 (1) obj. -8.32164 iterations 2
Cbc0038I Pass   6: suminf.    0.59418 (2) obj. -8.32164 iterations 4
Cbc0038I Pass   7: suminf.    0.45870 (2) obj. -8.32164 iterations 2
Cbc0038I Pass   8: suminf.    0.59303 (2) obj. -8.32164 iterations 2
Cbc0038I Pass   9: suminf.    0.45870 (2) obj. -8.32164 iterations 2
Cbc0038I Pass  10: suminf.    0.93520 (2) obj. -8.32164 iterations 2
Cbc0038I Pass  11: suminf.    0.75519 (2) obj. -8.32164 iterations 9
Cbc0038I Pass  12: suminf.    0.49730 (1) obj. -8.32164 iterations 1
Cbc0038I Pass  13: suminf.    0.25000 (1) obj. -8.54167 iterations 5
Cbc0038I Pass  14: suminf.    0.47726 (1) obj. -8.32164 iterations 3
Cbc0038I Pass  15: suminf.    0.47726 (1) obj. -8.32164 iterations 0
Cbc0038I Pass  16: suminf.    0.64869 (3) obj. -8.32164 iterations 4
Cbc0038I Pass  17: suminf.    0.64869 (3) obj. -8.32164 iterations 1
Cbc0038I Pass  18: suminf.    0.19472 (1) obj. -8.32164 iterations 3
Cbc0038I Pass  19: suminf.    0.58170 (2) obj. -8.32164 iterations 3
Cbc0038I Pass  20: suminf.    0.25000 (1) obj. -8.43772 iterations 6
Cbc0038I Pass  21: suminf.    0.37502 (1) obj. -8.32164 iterations 4
Cbc0038I Pass  22: suminf.    0.97086 (3) obj. -8.32164 iterations 6
Cbc0038I Pass  23: suminf.    0.46920 (2) obj. -8.32164 iterations 3
Cbc0038I Pass  24: suminf.    0.25000 (1) obj. -8.42857 iterations 8
Cbc0038I Pass  25: suminf.    0.36516 (1) obj. -8.32164 iterations 4
Cbc0038I Pass  26: suminf.    0.50000 (2) obj. -8.68054 iterations 7
Cbc0038I Pass  27: suminf.    0.53744 (2) obj. -8.32164 iterations 4
Cbc0038I Pass  28: suminf.    0.37237 (2) obj. -8.32164 iterations 2
Cbc0038I Pass  29: suminf.    0.53485 (2) obj. -8.32164 iterations 1
Cbc0038I Pass  30: suminf.    0.25000 (1) obj. -8.41458 iterations 5
Cbc0038I Pass  31: suminf.    0.34599 (1) obj. -8.32164 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.20991 - took 0.00 seconds
Cbc0012I Integer solution of -8.2099085 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 9 added rows had average density of 12
Cbc0013I At root node, 39 cuts changed objective from -9.3271342 to -8.1538376 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 5.6 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 286 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 45 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 21 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8.20990846306092, took 369 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Cuts at root node changed objective from -9.32713 to -8.15384
Probing was tried 29 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 29 times and created 286 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 29 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Clique was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 29 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 29 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 29 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                8.20990846
Enumerated nodes:               0
Total iterations:               369
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e718832ed8494ffa855977ff49f17511-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/e718832ed8494ffa855977ff49f17511-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.1 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.0334 iterations 8
Cbc0038I Solution found of -13.7312
Cbc0038I Cleaned solution of -13.7312
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -13.7312 to -14.0643 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.2679
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.0334 iterations 0
Cbc0038I Pass   3: suminf.    0.37884 (1) obj. -14.2679 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.4129 iterations 6
Cbc0038I Pass   5: suminf.    0.35915 (1) obj. -14.2679 iterations 2
Cbc0038I Pass   6: suminf.    0.42678 (1) obj. -14.2679 iterations 3
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -14.3925 iterations 7
Cbc0038I Pass   8: suminf.    0.32961 (1) obj. -14.2679 iterations 3
Cbc0038I Pass   9: suminf.    0.31004 (2) obj. -14.2679 iterations 4
Cbc0038I Pass  10: suminf.    0.22489 (2) obj. -14.2679 iterations 2
Cbc0038I Pass  11: suminf.    0.40000 (1) obj. -14.3276 iterations 9
Cbc0038I Pass  12: suminf.    0.46207 (1) obj. -14.2679 iterations 2
Cbc0038I Pass  13: suminf.    0.49743 (2) obj. -14.2679 iterations 6
Cbc0038I Pass  14: suminf.    1.52926 (6) obj. -14.2679 iterations 3
Cbc0038I Pass  15: suminf.    0.34261 (1) obj. -14.2679 iterations 3
Cbc0038I Pass  16: suminf.    0.34261 (1) obj. -14.2679 iterations 0
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -14.5637 iterations 6
Cbc0038I Pass  18: suminf.    0.49228 (1) obj. -14.2679 iterations 3
Cbc0038I Pass  19: suminf.    0.35241 (4) obj. -14.2679 iterations 11
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -14.2869 iterations 3
Cbc0038I Solution found of -14.2869
Cbc0038I Cleaned solution of -14.2869
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.6496
Cbc0038I Pass  21: suminf.    0.80000 (4) obj. -16.0334 iterations 0
Cbc0038I Pass  22: suminf.    0.50597 (2) obj. -14.6496 iterations 8
Cbc0038I Pass  23: suminf.    0.44694 (2) obj. -14.6496 iterations 2
Cbc0038I Pass  24: suminf.    0.30186 (2) obj. -14.6496 iterations 7
Cbc0038I Pass  25: suminf.    1.20545 (6) obj. -14.6496 iterations 9
Cbc0038I Pass  26: suminf.    0.44615 (1) obj. -14.6496 iterations 3
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -14.755 iterations 7
Cbc0038I Pass  28: suminf.    0.31570 (1) obj. -14.6496 iterations 2
Cbc0038I Pass  29: suminf.    1.45353 (5) obj. -14.6496 iterations 1
Cbc0038I Pass  30: suminf.    0.43035 (2) obj. -14.6496 iterations 8
Cbc0038I Pass  31: suminf.    0.43035 (2) obj. -14.6496 iterations 1
Cbc0038I Pass  32: suminf.    0.51048 (2) obj. -14.6496 iterations 2
Cbc0038I Pass  33: suminf.    0.43035 (2) obj. -14.6496 iterations 2
Cbc0038I Pass  34: suminf.    0.55245 (2) obj. -14.6496 iterations 4
Cbc0038I Pass  35: suminf.    0.55245 (2) obj. -14.6496 iterations 3
Cbc0038I Pass  36: suminf.    1.06227 (3) obj. -14.6496 iterations 10
Cbc0038I Pass  37: suminf.    0.83029 (2) obj. -14.6496 iterations 3
Cbc0038I Pass  38: suminf.    0.21055 (2) obj. -14.6496 iterations 5
Cbc0038I Pass  39: suminf.    0.20000 (1) obj. -14.755 iterations 8
Cbc0038I Pass  40: suminf.    0.31570 (1) obj. -14.6496 iterations 4
Cbc0038I Pass  41: suminf.    0.45728 (2) obj. -14.6496 iterations 15
Cbc0038I Pass  42: suminf.    0.35007 (2) obj. -14.6496 iterations 3
Cbc0038I Pass  43: suminf.    0.43035 (2) obj. -14.6496 iterations 5
Cbc0038I Pass  44: suminf.    0.67459 (3) obj. -14.6496 iterations 14
Cbc0038I Pass  45: suminf.    0.59020 (3) obj. -14.6496 iterations 4
Cbc0038I Pass  46: suminf.    0.80000 (2) obj. -14.8564 iterations 13
Cbc0038I Pass  47: suminf.    0.61027 (2) obj. -14.6496 iterations 4
Cbc0038I Pass  48: suminf.    0.24191 (2) obj. -14.6496 iterations 10
Cbc0038I Pass  49: suminf.    1.45732 (6) obj. -14.6496 iterations 3
Cbc0038I Pass  50: suminf.    0.44241 (1) obj. -14.6496 iterations 4
Cbc0038I Rounding solution of -14.2924 is better than previous of -14.2869

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15.0847
Cbc0038I Pass  50: suminf.    0.80000 (4) obj. -16.0334 iterations 0
Cbc0038I Pass  51: suminf.    0.49789 (3) obj. -15.0847 iterations 10
Cbc0038I Pass  52: suminf.    1.12472 (6) obj. -15.0847 iterations 6
Cbc0038I Pass  53: suminf.    0.57282 (2) obj. -15.0847 iterations 8
Cbc0038I Pass  54: suminf.    0.40000 (2) obj. -15.0904 iterations 10
Cbc0038I Pass  55: suminf.    0.40623 (2) obj. -15.0847 iterations 4
Cbc0038I Pass  56: suminf.    0.65043 (3) obj. -15.0847 iterations 10
Cbc0038I Pass  57: suminf.    2.35381 (7) obj. -15.0847 iterations 6
Cbc0038I Pass  58: suminf.    1.22265 (3) obj. -15.0847 iterations 5
Cbc0038I Pass  59: suminf.    1.68578 (4) obj. -15.0847 iterations 2
Cbc0038I Pass  60: suminf.    1.72913 (7) obj. -15.0847 iterations 8
Cbc0038I Pass  61: suminf.    0.69742 (2) obj. -15.0847 iterations 3
Cbc0038I Pass  62: suminf.    0.69742 (2) obj. -15.0847 iterations 2
Cbc0038I Pass  63: suminf.    2.35381 (7) obj. -15.0847 iterations 4
Cbc0038I Pass  64: suminf.    0.79079 (3) obj. -15.0847 iterations 4
Cbc0038I Pass  65: suminf.    2.35381 (7) obj. -15.0847 iterations 3
Cbc0038I Pass  66: suminf.    1.22265 (3) obj. -15.0847 iterations 5
Cbc0038I Pass  67: suminf.    1.68578 (4) obj. -15.0847 iterations 2
Cbc0038I Pass  68: suminf.    1.72913 (7) obj. -15.0847 iterations 8
Cbc0038I Pass  69: suminf.    0.69742 (2) obj. -15.0847 iterations 3
Cbc0038I Pass  70: suminf.    0.68463 (2) obj. -15.0847 iterations 6
Cbc0038I Pass  71: suminf.    2.35381 (7) obj. -15.0847 iterations 3
Cbc0038I Pass  72: suminf.    1.22265 (3) obj. -15.0847 iterations 5
Cbc0038I Pass  73: suminf.    1.68578 (4) obj. -15.0847 iterations 2
Cbc0038I Pass  74: suminf.    1.72913 (7) obj. -15.0847 iterations 8
Cbc0038I Pass  75: suminf.    0.69742 (2) obj. -15.0847 iterations 3
Cbc0038I Pass  76: suminf.    1.28112 (3) obj. -15.0847 iterations 7
Cbc0038I Pass  77: suminf.    0.67948 (2) obj. -15.0847 iterations 3
Cbc0038I Pass  78: suminf.    0.68977 (3) obj. -15.0847 iterations 6
Cbc0038I Pass  79: suminf.    2.35381 (7) obj. -15.0847 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.2924 - took 0.03 seconds
Cbc0012I Integer solution of -14.29239 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 4 rows 6 columns
Cbc0031I 6 added rows had average density of 31.333333
Cbc0013I At root node, 6 cuts changed objective from -16.100026 to -14.970628 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 536 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 43 row cuts average 26.1 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.29239 best solution, best possible -14.970628 (0.10 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 16 columns
Cbc0001I Search completed - best objective -14.29239014536165, took 2782 iterations and 76 nodes (0.15 seconds)
Cbc0032I Strong branching done 728 times (3251 iterations), fathomed 27 nodes and fixed 7 variables
Cbc0035I Maximum depth 11, 164 variables fixed on reduced cost
Cuts at root node changed objective from -16.1 to -14.9706
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 207 times and created 791 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 100 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.29239015
Enumerated nodes:               76
Total iterations:               2782
Time (CPU seconds):             0.15
Time (Wallclock seconds):       0.15

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/8d606afe636944fda9e59c06b484fa28-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/8d606afe636944fda9e59c06b484fa28-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.989 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.9391 iterations 4
Cbc0038I Solution found of -14.2121
Cbc0038I Cleaned solution of -14.2121
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -14.2121 to -14.462 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.7147
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.9391 iterations 0
Cbc0038I Pass   3: suminf.    0.46291 (1) obj. -14.7147 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.9967 iterations 6
Cbc0038I Pass   5: suminf.    0.35600 (1) obj. -14.7147 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -15.1221 iterations 5
Cbc0038I Pass   7: suminf.    0.33731 (1) obj. -14.7147 iterations 2
Cbc0038I Pass   8: suminf.    0.35600 (1) obj. -14.7147 iterations 2
Cbc0038I Pass   9: suminf.    0.27938 (1) obj. -14.7147 iterations 11
Cbc0038I Pass  10: suminf.    0.27938 (1) obj. -14.7147 iterations 0
Cbc0038I Pass  11: suminf.    0.40000 (1) obj. -14.9348 iterations 8
Cbc0038I Pass  12: suminf.    0.34857 (1) obj. -14.7147 iterations 3
Cbc0038I Pass  13: suminf.    0.54309 (2) obj. -14.7147 iterations 3
Cbc0038I Pass  14: suminf.    0.54309 (2) obj. -14.7147 iterations 1
Cbc0038I Pass  15: suminf.    0.80000 (2) obj. -15.4336 iterations 12
Cbc0038I Pass  16: suminf.    0.27938 (1) obj. -14.7147 iterations 3
Cbc0038I Pass  17: suminf.    0.40000 (1) obj. -14.9348 iterations 10
Cbc0038I Pass  18: suminf.    0.34857 (1) obj. -14.7147 iterations 3
Cbc0038I Pass  19: suminf.    0.42868 (1) obj. -14.7147 iterations 12
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -14.9149 iterations 4
Cbc0038I Pass  21: suminf.    0.42868 (1) obj. -14.7147 iterations 4
Cbc0038I Pass  22: suminf.    0.42868 (1) obj. -14.7147 iterations 3
Cbc0038I Pass  23: suminf.    0.44740 (1) obj. -14.7147 iterations 6
Cbc0038I Pass  24: suminf.    0.44740 (1) obj. -14.7147 iterations 0
Cbc0038I Pass  25: suminf.    0.40000 (1) obj. -14.8615 iterations 9
Cbc0038I Pass  26: suminf.    0.43327 (1) obj. -14.7147 iterations 3
Cbc0038I Pass  27: suminf.    0.53870 (2) obj. -14.7147 iterations 4
Cbc0038I Pass  28: suminf.    0.20000 (1) obj. -15.0344 iterations 4
Cbc0038I Pass  29: suminf.    0.32351 (1) obj. -14.7147 iterations 4
Cbc0038I Pass  30: suminf.    0.20000 (1) obj. -15.1343 iterations 4
Cbc0038I Pass  31: suminf.    0.77305 (3) obj. -14.7147 iterations 11
Cbc0038I Rounding solution of -14.4935 is better than previous of -14.462

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -14.4935 to -14.5634 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.1695
Cbc0038I Pass  31: suminf.    0.80000 (4) obj. -16.9391 iterations 0
Cbc0038I Pass  32: suminf.    0.43048 (2) obj. -15.1695 iterations 9
Cbc0038I Pass  33: suminf.    0.38363 (2) obj. -15.1695 iterations 1
Cbc0038I Pass  34: suminf.    0.20002 (2) obj. -15.1695 iterations 5
Cbc0038I Pass  35: suminf.    0.21358 (2) obj. -15.1695 iterations 8
Cbc0038I Pass  36: suminf.    0.20435 (2) obj. -15.1695 iterations 2
Cbc0038I Pass  37: suminf.    0.57751 (2) obj. -15.1695 iterations 8
Cbc0038I Pass  38: suminf.    0.20000 (1) obj. -15.1901 iterations 4
Cbc0038I Pass  39: suminf.    0.22337 (1) obj. -15.1695 iterations 2
Cbc0038I Pass  40: suminf.    0.21707 (1) obj. -15.1695 iterations 2
Cbc0038I Pass  41: suminf.    0.93478 (3) obj. -15.1695 iterations 7
Cbc0038I Pass  42: suminf.    0.54840 (3) obj. -15.1695 iterations 2
Cbc0038I Pass  43: suminf.    0.22675 (1) obj. -15.1695 iterations 4
Cbc0038I Pass  44: suminf.    0.20000 (1) obj. -15.192 iterations 3
Cbc0038I Pass  45: suminf.    0.22547 (1) obj. -15.1695 iterations 1
Cbc0038I Pass  46: suminf.    0.39362 (2) obj. -15.1695 iterations 17
Cbc0038I Pass  47: suminf.    0.34192 (2) obj. -15.1695 iterations 2
Cbc0038I Pass  48: suminf.    0.20435 (2) obj. -15.1695 iterations 6
Cbc0038I Pass  49: suminf.    0.57751 (2) obj. -15.1695 iterations 9
Cbc0038I Pass  50: suminf.    0.20000 (1) obj. -15.1901 iterations 4
Cbc0038I Pass  51: suminf.    0.22337 (1) obj. -15.1695 iterations 2
Cbc0038I Pass  52: suminf.    0.64437 (2) obj. -15.1695 iterations 7
Cbc0038I Pass  53: suminf.    0.59408 (2) obj. -15.1695 iterations 5
Cbc0038I Pass  54: suminf.    0.59408 (2) obj. -15.1695 iterations 2
Cbc0038I Pass  55: suminf.    0.95243 (3) obj. -15.1695 iterations 3
Cbc0038I Pass  56: suminf.    0.54840 (3) obj. -15.1695 iterations 3
Cbc0038I Pass  57: suminf.    0.22675 (1) obj. -15.1695 iterations 4
Cbc0038I Pass  58: suminf.    0.20000 (1) obj. -15.192 iterations 3
Cbc0038I Pass  59: suminf.    0.22547 (1) obj. -15.1695 iterations 1
Cbc0038I Pass  60: suminf.    0.23292 (1) obj. -15.1695 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.5634 - took 0.02 seconds
Cbc0012I Integer solution of -14.5634 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 3 columns
Cbc0031I 11 added rows had average density of 34.181818
Cbc0013I At root node, 11 cuts changed objective from -16.989046 to -15.459654 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 411 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 50 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.5634 best solution, best possible -15.459654 (0.10 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 17 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 18 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 15 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -14.56339990720159, took 9578 iterations and 550 nodes (0.39 seconds)
Cbc0032I Strong branching done 3278 times (13253 iterations), fathomed 136 nodes and fixed 80 variables
Cbc0041I Maximum depth 16, 737 variables fixed on reduced cost (complete fathoming 2 times, 2 nodes taking 1 iterations)
Cuts at root node changed objective from -16.989 to -15.4597
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 605 times and created 1468 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 605 times and created 144 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.56339991
Enumerated nodes:               550
Total iterations:               9578
Time (CPU seconds):             0.37
Time (Wallclock seconds):       0.39

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.37   (Wallclock seconds):       0.39

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2860b71d54bd45bab3814779e97f6a91-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/2860b71d54bd45bab3814779e97f6a91-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.79565 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -8.79565 iterations 0
Cbc0038I Solution found of -8.05156
Cbc0038I Cleaned solution of -8.05156
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8.12598
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -8.79565 iterations 0
Cbc0038I Pass   3: suminf.    0.12675 (1) obj. -8.12598 iterations 3
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.46027 iterations 2
Cbc0038I Pass   5: suminf.    0.28162 (1) obj. -8.12598 iterations 1
Cbc0038I Pass   6: suminf.    0.85256 (2) obj. -8.12598 iterations 3
Cbc0038I Pass   7: suminf.    0.52785 (2) obj. -8.12598 iterations 2
Cbc0038I Pass   8: suminf.    0.88600 (2) obj. -8.12598 iterations 3
Cbc0038I Pass   9: suminf.    0.52785 (2) obj. -8.12598 iterations 2
Cbc0038I Pass  10: suminf.    0.56413 (2) obj. -8.12598 iterations 1
Cbc0038I Pass  11: suminf.    1.57330 (5) obj. -8.12598 iterations 2
Cbc0038I Pass  12: suminf.    0.20885 (1) obj. -8.12598 iterations 2
Cbc0038I Pass  13: suminf.    0.20885 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -8.46027 iterations 3
Cbc0038I Pass  15: suminf.    0.28162 (1) obj. -8.12598 iterations 1
Cbc0038I Pass  16: suminf.    0.71824 (2) obj. -8.12598 iterations 1
Cbc0038I Pass  17: suminf.    0.12675 (1) obj. -8.12598 iterations 4
Cbc0038I Pass  18: suminf.    0.12675 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  19: suminf.    0.12675 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  20: suminf.    0.12675 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  21: suminf.    0.12675 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  22: suminf.    0.40328 (1) obj. -8.12598 iterations 4
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -8.1953 iterations 2
Cbc0038I Pass  24: suminf.    0.96390 (3) obj. -8.12598 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (2) obj. -8.63566 iterations 4
Cbc0038I Pass  26: suminf.    0.96390 (3) obj. -8.12598 iterations 2
Cbc0038I Pass  27: suminf.    0.12675 (1) obj. -8.12598 iterations 3
Cbc0038I Pass  28: suminf.    0.12675 (1) obj. -8.12598 iterations 0
Cbc0038I Pass  29: suminf.    0.67521 (2) obj. -8.12598 iterations 5
Cbc0038I Pass  30: suminf.    0.32216 (2) obj. -8.12598 iterations 1
Cbc0038I Pass  31: suminf.    0.25000 (1) obj. -8.46027 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -8.05156 - took 0.00 seconds
Cbc0012I Integer solution of -8.0515572 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -8.7956507 to -8.3985717 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 11 column cuts (11 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8.051557198167002, took 10 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Cuts at root node changed objective from -8.79565 to -8.39857
Probing was tried 2 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                8.05155720
Enumerated nodes:               0
Total iterations:               10
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/8a3de1f6923846b68520aba6136bb825-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/8a3de1f6923846b68520aba6136bb825-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 17.1685 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -17.1142 iterations 7
Cbc0038I Solution found of -14.4722
Cbc0038I Cleaned solution of -14.4722
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -14.4722 to -14.744 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.9865
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -17.1142 iterations 0
Cbc0038I Pass   3: suminf.    0.46079 (1) obj. -14.9865 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -15.2296 iterations 3
Cbc0038I Pass   5: suminf.    0.44772 (1) obj. -14.9865 iterations 1
Cbc0038I Pass   6: suminf.    0.46568 (2) obj. -14.9865 iterations 6
Cbc0038I Pass   7: suminf.    0.64484 (2) obj. -14.9865 iterations 6
Cbc0038I Pass   8: suminf.    0.64484 (2) obj. -14.9865 iterations 0
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -15.0112 iterations 4
Cbc0038I Pass  10: suminf.    0.22515 (1) obj. -14.9865 iterations 2
Cbc0038I Pass  11: suminf.    0.23040 (1) obj. -14.9865 iterations 3
Cbc0038I Pass  12: suminf.    1.92946 (4) obj. -14.9865 iterations 10
Cbc0038I Pass  13: suminf.    1.92946 (4) obj. -14.9865 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -15.3841 iterations 2
Cbc0038I Solution found of -15.3841
Cbc0038I Cleaned solution of -15.3841
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -15.741
Cbc0038I Pass  15: suminf.    0.80000 (4) obj. -17.1142 iterations 0
Cbc0038I Pass  16: suminf.    0.62742 (2) obj. -15.741 iterations 4
Cbc0038I Pass  17: suminf.    0.40000 (2) obj. -16.069 iterations 5
Cbc0038I Pass  18: suminf.    0.26773 (1) obj. -15.741 iterations 3
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -15.7762 iterations 3
Cbc0038I Pass  20: suminf.    0.23588 (1) obj. -15.741 iterations 2
Cbc0038I Pass  21: suminf.    0.26699 (2) obj. -15.741 iterations 4
Cbc0038I Pass  22: suminf.    1.45405 (5) obj. -15.741 iterations 2
Cbc0038I Pass  23: suminf.    0.59980 (2) obj. -15.741 iterations 7
Cbc0038I Pass  24: suminf.    0.59980 (2) obj. -15.741 iterations 0
Cbc0038I Pass  25: suminf.    0.60000 (2) obj. -16.2982 iterations 7
Cbc0038I Pass  26: suminf.    0.41585 (1) obj. -15.741 iterations 3
Cbc0038I Pass  27: suminf.    0.40000 (1) obj. -15.7566 iterations 5
Cbc0038I Pass  28: suminf.    0.55519 (2) obj. -15.741 iterations 7
Cbc0038I Pass  29: suminf.    0.45875 (2) obj. -15.741 iterations 1
Cbc0038I Pass  30: suminf.    0.20000 (1) obj. -15.8483 iterations 8
Cbc0038I Pass  31: suminf.    0.31321 (1) obj. -15.741 iterations 1
Cbc0038I Pass  32: suminf.    0.36296 (1) obj. -15.741 iterations 3
Cbc0038I Pass  33: suminf.    0.59980 (2) obj. -15.741 iterations 3
Cbc0038I Pass  34: suminf.    0.59980 (2) obj. -15.741 iterations 1
Cbc0038I Pass  35: suminf.    0.60000 (2) obj. -16.2982 iterations 5
Cbc0038I Pass  36: suminf.    0.41585 (1) obj. -15.741 iterations 3
Cbc0038I Pass  37: suminf.    0.40000 (1) obj. -15.7566 iterations 5
Cbc0038I Pass  38: suminf.    0.70427 (5) obj. -15.741 iterations 6
Cbc0038I Pass  39: suminf.    0.40000 (1) obj. -15.7566 iterations 5
Cbc0038I Pass  40: suminf.    0.64406 (2) obj. -15.741 iterations 14
Cbc0038I Pass  41: suminf.    0.56204 (2) obj. -15.741 iterations 4
Cbc0038I Pass  42: suminf.    0.20000 (1) obj. -15.8483 iterations 7
Cbc0038I Pass  43: suminf.    0.31321 (1) obj. -15.741 iterations 1
Cbc0038I Pass  44: suminf.    0.65971 (2) obj. -15.741 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15.3841 - took 0.01 seconds
Cbc0012I Integer solution of -15.384096 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 7 columns
Cbc0031I 8 added rows had average density of 38.5
Cbc0013I At root node, 8 cuts changed objective from -17.168532 to -16.026162 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 501 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.384096 best solution, best possible -16.026162 (0.09 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 4 rows 5 columns
Cbc0001I Search completed - best objective -15.38409639708728, took 3953 iterations and 74 nodes (0.18 seconds)
Cbc0032I Strong branching done 834 times (4201 iterations), fathomed 17 nodes and fixed 21 variables
Cbc0035I Maximum depth 10, 205 variables fixed on reduced cost
Cuts at root node changed objective from -17.1685 to -16.0262
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 322 times and created 1101 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 322 times and created 105 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.38409640
Enumerated nodes:               74
Total iterations:               3953
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/538ef9efbaaf47648ce7e60ee1ffd83c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/538ef9efbaaf47648ce7e60ee1ffd83c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.2594 - 0.00 seconds
Cgl0004I processed model has 49 rows, 83 columns (83 integer (41 of which binary)) and 208 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (5) obj. -36.2495 iterations 22
Cbc0038I Solution found of -32.7163
Cbc0038I Cleaned solution of -32.7163
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 83 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -32.7163 to -32.7856 (0.00 seconds)
Cbc0038I Round again with cutoff of -33.1329
Cbc0038I Pass   2: suminf.    0.85714 (5) obj. -36.2495 iterations 0
Cbc0038I Pass   3: suminf.    0.44129 (1) obj. -33.1329 iterations 5
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -33.5216 iterations 12
Cbc0038I Pass   5: suminf.    0.45720 (1) obj. -33.1329 iterations 1
Cbc0038I Pass   6: suminf.    0.63378 (2) obj. -33.1329 iterations 31
Cbc0038I Pass   7: suminf.    0.14286 (1) obj. -33.5695 iterations 5
Cbc0038I Pass   8: suminf.    0.40109 (1) obj. -33.1329 iterations 1
Cbc0038I Pass   9: suminf.    0.20954 (2) obj. -33.1329 iterations 10
Cbc0038I Pass  10: suminf.    0.18013 (2) obj. -33.1329 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -33.3167 iterations 9
Cbc0038I Solution found of -33.3167
Cbc0038I Cleaned solution of -33.3167
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 83 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.9052
Cbc0038I Pass  12: suminf.    0.85714 (5) obj. -36.2495 iterations 0
Cbc0038I Pass  13: suminf.    0.58550 (2) obj. -33.9052 iterations 14
Cbc0038I Pass  14: suminf.    0.54418 (2) obj. -33.9052 iterations 1
Cbc0038I Pass  15: suminf.    0.86391 (2) obj. -33.9052 iterations 12
Cbc0038I Pass  16: suminf.    0.15172 (2) obj. -33.9052 iterations 12
Cbc0038I Pass  17: suminf.    0.32689 (2) obj. -33.9052 iterations 11
Cbc0038I Pass  18: suminf.    0.57387 (2) obj. -33.9052 iterations 22
Cbc0038I Pass  19: suminf.    0.14286 (1) obj. -33.9571 iterations 6
Cbc0038I Pass  20: suminf.    0.19628 (1) obj. -33.9052 iterations 1
Cbc0038I Pass  21: suminf.    0.45441 (2) obj. -33.9052 iterations 11
Cbc0038I Pass  22: suminf.    0.14286 (1) obj. -33.9084 iterations 9
Cbc0038I Pass  23: suminf.    0.14616 (1) obj. -33.9052 iterations 3
Cbc0038I Pass  24: suminf.    1.73056 (6) obj. -33.9052 iterations 23
Cbc0038I Pass  25: suminf.    0.20055 (2) obj. -33.9052 iterations 3
Cbc0038I Pass  26: suminf.    0.57387 (2) obj. -33.9052 iterations 11
Cbc0038I Pass  27: suminf.    0.14286 (1) obj. -33.9571 iterations 9
Cbc0038I Pass  28: suminf.    0.19628 (1) obj. -33.9052 iterations 3
Cbc0038I Pass  29: suminf.    1.30170 (6) obj. -33.9052 iterations 20
Cbc0038I Pass  30: suminf.    0.26522 (2) obj. -33.9052 iterations 14
Cbc0038I Pass  31: suminf.    0.46521 (2) obj. -33.9052 iterations 8
Cbc0038I Pass  32: suminf.    0.14286 (1) obj. -33.9281 iterations 8
Cbc0038I Pass  33: suminf.    0.16973 (1) obj. -33.9052 iterations 4
Cbc0038I Pass  34: suminf.    0.72384 (2) obj. -33.9052 iterations 18
Cbc0038I Pass  35: suminf.    0.14747 (2) obj. -33.9052 iterations 14
Cbc0038I Pass  36: suminf.    0.49292 (2) obj. -33.9052 iterations 11
Cbc0038I Pass  37: suminf.    0.72858 (2) obj. -33.9052 iterations 7
Cbc0038I Pass  38: suminf.    0.50349 (5) obj. -33.9052 iterations 11
Cbc0038I Pass  39: suminf.    0.43528 (2) obj. -33.9052 iterations 3
Cbc0038I Pass  40: suminf.    0.62381 (7) obj. -33.9052 iterations 8
Cbc0038I Pass  41: suminf.    0.51390 (2) obj. -33.9052 iterations 6
Cbc0038I Rounding solution of -33.3999 is better than previous of -33.3167

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 83 columns, reduced to 28 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.6115
Cbc0038I Pass  41: suminf.    0.85714 (5) obj. -36.2495 iterations 0
Cbc0038I Pass  42: suminf.    0.85882 (3) obj. -34.6115 iterations 22
Cbc0038I Pass  43: suminf.    0.57143 (3) obj. -34.8189 iterations 18
Cbc0038I Pass  44: suminf.    0.81553 (3) obj. -34.6115 iterations 13
Cbc0038I Pass  45: suminf.    0.61312 (3) obj. -34.6115 iterations 21
Cbc0038I Pass  46: suminf.    0.53665 (3) obj. -34.6115 iterations 6
Cbc0038I Pass  47: suminf.    1.10127 (4) obj. -34.6115 iterations 13
Cbc0038I Pass  48: suminf.    0.71429 (3) obj. -34.8122 iterations 30
Cbc0038I Pass  49: suminf.    0.95044 (3) obj. -34.6115 iterations 10
Cbc0038I Pass  50: suminf.    1.48305 (5) obj. -34.6115 iterations 21
Cbc0038I Pass  51: suminf.    0.99776 (4) obj. -34.6115 iterations 13
Cbc0038I Pass  52: suminf.    0.95344 (3) obj. -34.6115 iterations 17
Cbc0038I Pass  53: suminf.    0.97330 (4) obj. -34.6115 iterations 15
Cbc0038I Pass  54: suminf.    0.97330 (4) obj. -34.6115 iterations 0
Cbc0038I Pass  55: suminf.    0.71429 (3) obj. -34.8611 iterations 21
Cbc0038I Pass  56: suminf.    0.42813 (3) obj. -34.6115 iterations 6
Cbc0038I Pass  57: suminf.    0.85100 (3) obj. -34.6115 iterations 13
Cbc0038I Pass  58: suminf.    0.32700 (3) obj. -34.6115 iterations 9
Cbc0038I Pass  59: suminf.    0.97330 (4) obj. -34.6115 iterations 13
Cbc0038I Pass  60: suminf.    0.97330 (4) obj. -34.6115 iterations 0
Cbc0038I Pass  61: suminf.    0.71429 (3) obj. -34.8611 iterations 21
Cbc0038I Pass  62: suminf.    0.42813 (3) obj. -34.6115 iterations 6
Cbc0038I Pass  63: suminf.    0.85100 (3) obj. -34.6115 iterations 13
Cbc0038I Pass  64: suminf.    0.32700 (3) obj. -34.6115 iterations 9
Cbc0038I Pass  65: suminf.    0.97330 (4) obj. -34.6115 iterations 13
Cbc0038I Pass  66: suminf.    0.97330 (4) obj. -34.6115 iterations 0
Cbc0038I Pass  67: suminf.    0.71429 (3) obj. -34.8611 iterations 21
Cbc0038I Pass  68: suminf.    0.42813 (3) obj. -34.6115 iterations 6
Cbc0038I Pass  69: suminf.    0.85100 (3) obj. -34.6115 iterations 13
Cbc0038I Pass  70: suminf.    0.32700 (3) obj. -34.6115 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 83 columns, reduced to 27 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.3999 - took 0.05 seconds
Cbc0012I Integer solution of -33.399863 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 83 columns, reduced to 11 rows 14 columns
Cbc0031I 14 added rows had average density of 66.571429
Cbc0013I At root node, 14 cuts changed objective from -36.259352 to -34.335793 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 495 row cuts average 77.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.399863 best solution, best possible -34.335793 (0.21 seconds)
Cbc0038I Full problem 49 rows 83 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 17 rows 22 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 7 rows 11 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 13 rows 17 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 23 rows 31 columns
Cbc0010I After 1000 nodes, 31 on tree, -33.399863 best solution, best possible -34.335793 (2.10 seconds)
Cbc0038I Full problem 49 rows 83 columns, reduced to 15 rows 21 columns
Cbc0038I Full problem 49 rows 83 columns, reduced to 13 rows 17 columns
Cbc0010I After 2000 nodes, 12 on tree, -33.399863 best solution, best possible -34.335793 (3.10 seconds)
Cbc0038I Full problem 49 rows 83 columns, reduced to 16 rows 20 columns
Cbc0010I After 3000 nodes, 6 on tree, -33.399863 best solution, best possible -33.902079 (3.66 seconds)
Cbc0001I Search completed - best objective -33.39986338838926, took 350825 iterations and 53605 nodes (3.69 seconds)
Cbc0032I Strong branching done 16088 times (96368 iterations), fathomed 620 nodes and fixed 1203 variables
Cbc0041I Maximum depth 28, 7103 variables fixed on reduced cost (complete fathoming 564 times, 50553 nodes taking 315692 iterations)
Cuts at root node changed objective from -36.2594 to -34.3358
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 718 times and created 985 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 718 times and created 128 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.39986339
Enumerated nodes:               53605
Total iterations:               350825
Time (CPU seconds):             3.63
Time (Wallclock seconds):       3.69

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.63   (Wallclock seconds):       3.70

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4e9d947d646c47cfac591efa7b929c1b-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/4e9d947d646c47cfac591efa7b929c1b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.7059 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.6091 iterations 8
Cbc0038I Solution found of -21.1295
Cbc0038I Cleaned solution of -21.1295
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -21.1295 to -22.1264 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.3843
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.6091 iterations 0
Cbc0038I Pass   3: suminf.    0.65365 (2) obj. -22.3843 iterations 12
Cbc0038I Pass   4: suminf.    0.33333 (2) obj. -22.6848 iterations 7
Cbc0038I Pass   5: suminf.    0.65997 (2) obj. -22.3843 iterations 3
Cbc0038I Pass   6: suminf.    0.48115 (2) obj. -22.3843 iterations 10
Cbc0038I Pass   7: suminf.    0.38731 (2) obj. -22.3843 iterations 1
Cbc0038I Pass   8: suminf.    0.16667 (1) obj. -22.5454 iterations 11
Cbc0038I Pass   9: suminf.    0.35227 (1) obj. -22.3843 iterations 3
Cbc0038I Pass  10: suminf.    0.91511 (3) obj. -22.3843 iterations 7
Cbc0038I Pass  11: suminf.    0.87530 (3) obj. -22.3843 iterations 2
Cbc0038I Pass  12: suminf.    0.66667 (2) obj. -22.3843 iterations 6
Cbc0038I Pass  13: suminf.    0.02238 (1) obj. -22.3843 iterations 3
Cbc0038I Solution found of -22.4052
Cbc0038I Cleaned solution of -22.4052
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.8654
Cbc0038I Pass  14: suminf.    0.83333 (5) obj. -24.6091 iterations 0
Cbc0038I Pass  15: suminf.    0.54444 (3) obj. -22.8654 iterations 14
Cbc0038I Pass  16: suminf.    0.42077 (3) obj. -22.8654 iterations 4
Cbc0038I Pass  17: suminf.    0.58617 (2) obj. -22.8654 iterations 7
Cbc0038I Pass  18: suminf.    0.36071 (2) obj. -22.8654 iterations 5
Cbc0038I Pass  19: suminf.    0.16667 (1) obj. -22.9686 iterations 10
Cbc0038I Pass  20: suminf.    0.27891 (1) obj. -22.8654 iterations 2
Cbc0038I Pass  21: suminf.    1.90271 (5) obj. -22.8654 iterations 3
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -23.1347 iterations 4
Cbc0038I Pass  23: suminf.    0.45954 (1) obj. -22.8654 iterations 2
Cbc0038I Pass  24: suminf.    0.39486 (2) obj. -22.8654 iterations 7
Cbc0038I Pass  25: suminf.    0.33333 (2) obj. -22.9107 iterations 8
Cbc0038I Pass  26: suminf.    0.38557 (2) obj. -22.8654 iterations 4
Cbc0038I Pass  27: suminf.    0.60938 (2) obj. -22.8654 iterations 11
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.1763 iterations 7
Cbc0038I Pass  29: suminf.    0.47513 (1) obj. -22.8654 iterations 2
Cbc0038I Pass  30: suminf.    0.18243 (2) obj. -22.8654 iterations 12
Cbc0038I Pass  31: suminf.    0.16667 (1) obj. -22.8764 iterations 4
Cbc0038I Pass  32: suminf.    0.34884 (1) obj. -22.8654 iterations 4
Cbc0038I Pass  33: suminf.    0.16667 (1) obj. -23.0101 iterations 6
Cbc0038I Pass  34: suminf.    0.33346 (1) obj. -22.8654 iterations 2
Cbc0038I Pass  35: suminf.    0.22740 (2) obj. -22.8654 iterations 10
Cbc0038I Pass  36: suminf.    0.16667 (1) obj. -22.9026 iterations 5
Cbc0038I Pass  37: suminf.    0.20955 (1) obj. -22.8654 iterations 2
Cbc0038I Pass  38: suminf.    1.05109 (4) obj. -22.8654 iterations 13
Cbc0038I Pass  39: suminf.    0.50000 (2) obj. -23.0078 iterations 11
Cbc0038I Pass  40: suminf.    0.66164 (2) obj. -22.8654 iterations 6
Cbc0038I Pass  41: suminf.    0.79252 (3) obj. -22.8654 iterations 11
Cbc0038I Pass  42: suminf.    0.33333 (2) obj. -23.2007 iterations 6
Cbc0038I Pass  43: suminf.    0.61358 (2) obj. -22.8654 iterations 4
Cbc0038I Rounding solution of -22.4912 is better than previous of -22.4052

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -22.4912 to -22.5236 (0.03 seconds)
Cbc0038I Round again with cutoff of -23.4175
Cbc0038I Pass  43: suminf.    0.83333 (5) obj. -24.6091 iterations 0
Cbc0038I Pass  44: suminf.    0.51791 (4) obj. -23.4175 iterations 14
Cbc0038I Pass  45: suminf.    0.50000 (4) obj. -23.4175 iterations 9
Cbc0038I Pass  46: suminf.    0.68084 (3) obj. -23.4175 iterations 6
Cbc0038I Pass  47: suminf.    0.53609 (3) obj. -23.4175 iterations 5
Cbc0038I Pass  48: suminf.    0.56326 (2) obj. -23.4175 iterations 9
Cbc0038I Pass  49: suminf.    0.33333 (2) obj. -23.5199 iterations 12
Cbc0038I Pass  50: suminf.    0.48812 (2) obj. -23.4175 iterations 6
Cbc0038I Pass  51: suminf.    1.02676 (3) obj. -23.4175 iterations 6
Cbc0038I Pass  52: suminf.    1.16893 (5) obj. -23.4175 iterations 11
Cbc0038I Pass  53: suminf.    0.50005 (2) obj. -23.4175 iterations 7
Cbc0038I Pass  54: suminf.    0.33333 (2) obj. -23.4783 iterations 6
Cbc0038I Pass  55: suminf.    0.40339 (2) obj. -23.4175 iterations 4
Cbc0038I Pass  56: suminf.    1.75493 (6) obj. -23.4175 iterations 13
Cbc0038I Pass  57: suminf.    0.33333 (2) obj. -23.6445 iterations 10
Cbc0038I Pass  58: suminf.    0.59480 (2) obj. -23.4175 iterations 4
Cbc0038I Pass  59: suminf.    0.37431 (3) obj. -23.4175 iterations 7
Cbc0038I Pass  60: suminf.    1.65460 (7) obj. -23.4175 iterations 6
Cbc0038I Pass  61: suminf.    0.34589 (2) obj. -23.4175 iterations 3
Cbc0038I Pass  62: suminf.    0.38746 (2) obj. -23.4175 iterations 5
Cbc0038I Pass  63: suminf.    0.56756 (2) obj. -23.4175 iterations 15
Cbc0038I Pass  64: suminf.    0.52284 (2) obj. -23.4175 iterations 3
Cbc0038I Pass  65: suminf.    0.49759 (2) obj. -23.4175 iterations 3
Cbc0038I Pass  66: suminf.    0.43038 (3) obj. -23.4175 iterations 10
Cbc0038I Pass  67: suminf.    0.33333 (2) obj. -23.4744 iterations 11
Cbc0038I Pass  68: suminf.    0.39889 (2) obj. -23.4175 iterations 4
Cbc0038I Pass  69: suminf.    1.18132 (5) obj. -23.4175 iterations 2
Cbc0038I Pass  70: suminf.    0.48679 (2) obj. -23.4175 iterations 4
Cbc0038I Pass  71: suminf.    0.53187 (3) obj. -23.4175 iterations 4
Cbc0038I Pass  72: suminf.    0.49759 (2) obj. -23.4175 iterations 4
Cbc0038I Rounding solution of -22.6665 is better than previous of -22.5236

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.8041
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  72: suminf.    0.83333 (5) obj. -24.6091 iterations 0
Cbc0038I Pass  73: suminf.    0.98977 (4) obj. -23.8041 iterations 14
Cbc0038I Pass  74: suminf.    0.66667 (4) obj. -24.0632 iterations 12
Cbc0038I Pass  75: suminf.    0.98731 (4) obj. -23.8041 iterations 9
Cbc0038I Pass  76: suminf.    0.82881 (4) obj. -23.8041 iterations 7
Cbc0038I Pass  77: suminf.    0.56545 (3) obj. -23.8041 iterations 11
Cbc0038I Pass  78: suminf.    0.50000 (3) obj. -23.883 iterations 6
Cbc0038I Pass  79: suminf.    0.78262 (3) obj. -23.8041 iterations 6
Cbc0038I Pass  80: suminf.    0.69671 (3) obj. -23.8041 iterations 3
Cbc0038I Pass  81: suminf.    0.62183 (3) obj. -23.8041 iterations 7
Cbc0038I Pass  82: suminf.    0.62183 (3) obj. -23.8041 iterations 1
Cbc0038I Pass  83: suminf.    0.48323 (3) obj. -23.8041 iterations 4
Cbc0038I Pass  84: suminf.    0.48323 (3) obj. -23.8041 iterations 2
Cbc0038I Pass  85: suminf.    1.01073 (4) obj. -23.8041 iterations 11
Cbc0038I Pass  86: suminf.    1.62426 (7) obj. -23.8041 iterations 5
Cbc0038I Pass  87: suminf.    0.60904 (3) obj. -23.8041 iterations 6
Cbc0038I Pass  88: suminf.    0.95054 (4) obj. -23.8041 iterations 9
Cbc0038I Pass  89: suminf.    0.92301 (4) obj. -23.8041 iterations 5
Cbc0038I Pass  90: suminf.    0.92301 (4) obj. -23.8041 iterations 2
Cbc0038I Pass  91: suminf.    0.91565 (4) obj. -23.8041 iterations 9
Cbc0038I Pass  92: suminf.    0.64921 (3) obj. -23.8041 iterations 9
Cbc0038I Pass  93: suminf.    0.48323 (3) obj. -23.8041 iterations 4
Cbc0038I Pass  94: suminf.    0.48323 (3) obj. -23.8041 iterations 0
Cbc0038I Pass  95: suminf.    0.62183 (3) obj. -23.8041 iterations 3
Cbc0038I Pass  96: suminf.    0.62183 (3) obj. -23.8041 iterations 1
Cbc0038I Pass  97: suminf.    0.48323 (3) obj. -23.8041 iterations 4
Cbc0038I Pass  98: suminf.    1.15380 (4) obj. -23.8041 iterations 14
Cbc0038I Pass  99: suminf.    0.77857 (3) obj. -23.8041 iterations 4
Cbc0038I Pass 100: suminf.    0.76675 (3) obj. -23.8041 iterations 5
Cbc0038I Pass 101: suminf.    0.50000 (3) obj. -24.0653 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -22.6665 - took 0.05 seconds
Cbc0012I Integer solution of -22.666526 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 9 columns
Cbc0031I 13 added rows had average density of 50.769231
Cbc0013I At root node, 13 cuts changed objective from -24.705938 to -23.775864 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1061 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 15 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 54 row cuts average 47.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 112 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.666526 best solution, best possible -23.775864 (0.20 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 17 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 25 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 7 columns
Cbc0001I Search completed - best objective -22.66652554273626, took 6871 iterations and 224 nodes (0.47 seconds)
Cbc0032I Strong branching done 2342 times (15349 iterations), fathomed 69 nodes and fixed 165 variables
Cbc0035I Maximum depth 14, 509 variables fixed on reduced cost
Cuts at root node changed objective from -24.7059 to -23.7759
Probing was tried 100 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 323 times and created 1607 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 100 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 324 times and created 301 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)

Result - Optimal solution found

Objective value:                22.66652554
Enumerated nodes:               224
Total iterations:               6871
Time (CPU seconds):             0.45
Time (Wallclock seconds):       0.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.47

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/51cdfaf4157e449d822895a78e80dd51-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/51cdfaf4157e449d822895a78e80dd51-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.2284 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -25.14 iterations 12
Cbc0038I Solution found of -21.6607
Cbc0038I Cleaned solution of -21.6607
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -21.6607 to -22.191 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.4947
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -25.14 iterations 0
Cbc0038I Pass   3: suminf.    0.20505 (2) obj. -22.4947 iterations 12
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -22.5119 iterations 3
Cbc0038I Pass   5: suminf.    0.45855 (1) obj. -22.4947 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -22.7979 iterations 5
Cbc0038I Pass   7: suminf.    0.40476 (1) obj. -22.4947 iterations 4
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -22.7041 iterations 13
Cbc0038I Pass   9: suminf.    0.44082 (1) obj. -22.4947 iterations 3
Cbc0038I Pass  10: suminf.    0.32045 (1) obj. -22.4947 iterations 8
Cbc0038I Pass  11: suminf.    0.32045 (1) obj. -22.4947 iterations 0
Cbc0038I Pass  12: suminf.    0.33333 (1) obj. -22.7697 iterations 7
Cbc0038I Pass  13: suminf.    0.37013 (1) obj. -22.4947 iterations 4
Cbc0038I Pass  14: suminf.    0.80521 (2) obj. -22.4947 iterations 26
Cbc0038I Pass  15: suminf.    0.57300 (2) obj. -22.4947 iterations 2
Cbc0038I Pass  16: suminf.    0.41649 (1) obj. -22.4947 iterations 1
Cbc0038I Pass  17: suminf.    0.16667 (1) obj. -22.8227 iterations 6
Cbc0038I Pass  18: suminf.    1.61625 (5) obj. -22.4947 iterations 13
Cbc0038I Pass  19: suminf.    0.33965 (2) obj. -22.4947 iterations 4
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -22.5951 iterations 9
Cbc0038I Solution found of -22.5951
Cbc0038I Cleaned solution of -22.5951
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.1217
Cbc0038I Pass  21: suminf.    0.83333 (5) obj. -25.14 iterations 0
Cbc0038I Pass  22: suminf.    0.46624 (2) obj. -23.1217 iterations 12
Cbc0038I Pass  23: suminf.    0.33333 (2) obj. -23.3279 iterations 5
Cbc0038I Pass  24: suminf.    0.79750 (2) obj. -23.1217 iterations 12
Cbc0038I Pass  25: suminf.    0.70655 (2) obj. -23.1217 iterations 2
Cbc0038I Pass  26: suminf.    0.62484 (5) obj. -23.1217 iterations 11
Cbc0038I Pass  27: suminf.    0.32883 (1) obj. -23.1217 iterations 4
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.2493 iterations 10
Cbc0038I Pass  29: suminf.    0.32883 (1) obj. -23.1217 iterations 4
Cbc0038I Pass  30: suminf.    0.56440 (2) obj. -23.1217 iterations 6
Cbc0038I Pass  31: suminf.    0.56440 (2) obj. -23.1217 iterations 0
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -23.2782 iterations 7
Cbc0038I Pass  33: suminf.    0.36548 (1) obj. -23.1217 iterations 5
Cbc0038I Pass  34: suminf.    0.51933 (2) obj. -23.1217 iterations 10
Cbc0038I Pass  35: suminf.    0.42856 (2) obj. -23.1217 iterations 3
Cbc0038I Pass  36: suminf.    1.06385 (4) obj. -23.1217 iterations 14
Cbc0038I Pass  37: suminf.    0.89286 (4) obj. -23.1217 iterations 4
Cbc0038I Pass  38: suminf.    0.16667 (1) obj. -23.1388 iterations 10
Cbc0038I Pass  39: suminf.    0.18835 (1) obj. -23.1217 iterations 5
Cbc0038I Pass  40: suminf.    0.54745 (3) obj. -23.1217 iterations 18
Cbc0038I Pass  41: suminf.    0.45628 (3) obj. -23.1217 iterations 4
Cbc0038I Pass  42: suminf.    0.43080 (1) obj. -23.1217 iterations 5
Cbc0038I Pass  43: suminf.    0.16667 (1) obj. -23.2412 iterations 8
Cbc0038I Pass  44: suminf.    0.29551 (1) obj. -23.1217 iterations 5
Cbc0038I Pass  45: suminf.    0.32205 (1) obj. -23.1217 iterations 8
Cbc0038I Pass  46: suminf.    0.21480 (2) obj. -23.1217 iterations 11
Cbc0038I Pass  47: suminf.    0.16938 (2) obj. -23.1217 iterations 3
Cbc0038I Pass  48: suminf.    0.19483 (2) obj. -23.1217 iterations 6
Cbc0038I Pass  49: suminf.    0.37182 (5) obj. -23.1217 iterations 9
Cbc0038I Pass  50: suminf.    0.32324 (1) obj. -23.1217 iterations 7
Cbc0038I Rounding solution of -22.7597 is better than previous of -22.5951

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -23.7537
Cbc0038I Pass  50: suminf.    0.83333 (5) obj. -25.14 iterations 0
Cbc0038I Pass  51: suminf.    0.75224 (3) obj. -23.7537 iterations 11
Cbc0038I Pass  52: suminf.    0.50000 (3) obj. -23.9908 iterations 11
Cbc0038I Pass  53: suminf.    0.82048 (3) obj. -23.7537 iterations 8
Cbc0038I Pass  54: suminf.    0.73117 (3) obj. -23.7537 iterations 5
Cbc0038I Pass  55: suminf.    0.48026 (3) obj. -23.7537 iterations 16
Cbc0038I Pass  56: suminf.    0.45121 (3) obj. -23.7537 iterations 3
Cbc0038I Pass  57: suminf.    0.56110 (3) obj. -23.7537 iterations 12
Cbc0038I Pass  58: suminf.    1.33592 (6) obj. -23.7537 iterations 7
Cbc0038I Pass  59: suminf.    0.36140 (2) obj. -23.7537 iterations 3
Cbc0038I Pass  60: suminf.    0.35524 (3) obj. -23.7537 iterations 7
Cbc0038I Pass  61: suminf.    0.50697 (3) obj. -23.7537 iterations 11
Cbc0038I Pass  62: suminf.    0.46496 (3) obj. -23.7537 iterations 4
Cbc0038I Pass  63: suminf.    0.56110 (3) obj. -23.7537 iterations 8
Cbc0038I Pass  64: suminf.    0.35227 (3) obj. -23.7537 iterations 8
Cbc0038I Pass  65: suminf.    0.35288 (2) obj. -23.7537 iterations 8
Cbc0038I Pass  66: suminf.    0.33703 (3) obj. -23.7537 iterations 12
Cbc0038I Pass  67: suminf.    1.05974 (3) obj. -23.7537 iterations 13
Cbc0038I Pass  68: suminf.    1.03843 (3) obj. -23.7537 iterations 5
Cbc0038I Pass  69: suminf.    1.11533 (7) obj. -23.7537 iterations 5
Cbc0038I Pass  70: suminf.    1.33592 (6) obj. -23.7537 iterations 8
Cbc0038I Pass  71: suminf.    0.36140 (2) obj. -23.7537 iterations 4
Cbc0038I Pass  72: suminf.    0.63855 (3) obj. -23.7537 iterations 6
Cbc0038I Pass  73: suminf.    1.32702 (6) obj. -23.7537 iterations 2
Cbc0038I Pass  74: suminf.    1.47193 (5) obj. -23.7537 iterations 10
Cbc0038I Pass  75: suminf.    0.66667 (3) obj. -24.0879 iterations 11
Cbc0038I Pass  76: suminf.    0.37371 (3) obj. -23.7537 iterations 6
Cbc0038I Pass  77: suminf.    0.42667 (3) obj. -23.7537 iterations 10
Cbc0038I Pass  78: suminf.    0.33333 (2) obj. -23.7596 iterations 7
Cbc0038I Pass  79: suminf.    0.34083 (2) obj. -23.7537 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -22.7597 - took 0.05 seconds
Cbc0012I Integer solution of -22.759726 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 10 columns
Cbc0031I 14 added rows had average density of 40.428571
Cbc0013I At root node, 14 cuts changed objective from -25.22838 to -24.258426 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37 row cuts average 6.9 elements, 0 column cuts (2 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 851 row cuts average 58.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 15 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 56 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 110 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.759726 best solution, best possible -24.258426 (0.20 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 26 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 6 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 15 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 19 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 21 columns
Cbc0001I Search completed - best objective -22.75972582027295, took 24163 iterations and 2772 nodes (0.99 seconds)
Cbc0032I Strong branching done 7024 times (45927 iterations), fathomed 227 nodes and fixed 393 variables
Cbc0041I Maximum depth 16, 1839 variables fixed on reduced cost (complete fathoming 56 times, 1990 nodes taking 7175 iterations)
Cuts at root node changed objective from -25.2284 to -24.2584
Probing was tried 100 times and created 37 cuts of which 2 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 662 times and created 2055 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 662 times and created 162 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 662 times and created 601 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)

Result - Optimal solution found

Objective value:                22.75972582
Enumerated nodes:               2772
Total iterations:               24163
Time (CPU seconds):             0.95
Time (Wallclock seconds):       0.99

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.99

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/96bdb61590844eb0a0d0344d31bf1648-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/96bdb61590844eb0a0d0344d31bf1648-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 49.6784 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -49.6633 iterations 36
Cbc0038I Solution found of -44.4619
Cbc0038I Cleaned solution of -44.4619
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -44.4619 to -44.5822 (0.00 seconds)
Cbc0038I Round again with cutoff of -45.0918
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -49.6633 iterations 0
Cbc0038I Pass   3: suminf.    0.30055 (1) obj. -45.0918 iterations 7
Cbc0038I Pass   4: suminf.    0.12500 (1) obj. -45.2455 iterations 14
Cbc0038I Pass   5: suminf.    0.28921 (1) obj. -45.0918 iterations 1
Cbc0038I Pass   6: suminf.    0.64823 (3) obj. -45.0918 iterations 37
Cbc0038I Pass   7: suminf.    0.59502 (3) obj. -45.0918 iterations 6
Cbc0038I Pass   8: suminf.    0.14990 (2) obj. -45.0918 iterations 11
Cbc0038I Pass   9: suminf.    0.14990 (2) obj. -45.0918 iterations 0
Cbc0038I Pass  10: suminf.    1.82247 (6) obj. -45.0918 iterations 14
Cbc0038I Pass  11: suminf.    0.13413 (1) obj. -45.0918 iterations 3
Cbc0038I Pass  12: suminf.    0.29521 (1) obj. -45.0918 iterations 16
Cbc0038I Pass  13: suminf.    0.29521 (1) obj. -45.0918 iterations 1
Cbc0038I Pass  14: suminf.    0.25000 (1) obj. -45.4474 iterations 20
Cbc0038I Pass  15: suminf.    0.37013 (1) obj. -45.0918 iterations 3
Cbc0038I Pass  16: suminf.    0.29027 (2) obj. -45.0918 iterations 19
Cbc0038I Pass  17: suminf.    0.28983 (2) obj. -45.0918 iterations 3
Cbc0038I Pass  18: suminf.    0.31146 (2) obj. -45.0918 iterations 5
Cbc0038I Pass  19: suminf.    0.64725 (3) obj. -45.0918 iterations 21
Cbc0038I Pass  20: suminf.    0.61139 (3) obj. -45.0918 iterations 5
Cbc0038I Pass  21: suminf.    0.19461 (2) obj. -45.0918 iterations 5
Cbc0038I Pass  22: suminf.    0.19461 (2) obj. -45.0918 iterations 0
Cbc0038I Pass  23: suminf.    0.21913 (2) obj. -45.0918 iterations 2
Cbc0038I Pass  24: suminf.    0.47148 (3) obj. -45.0918 iterations 6
Cbc0038I Pass  25: suminf.    0.45500 (3) obj. -45.0918 iterations 3
Cbc0038I Pass  26: suminf.    0.38397 (3) obj. -45.0918 iterations 15
Cbc0038I Pass  27: suminf.    0.38397 (3) obj. -45.0918 iterations 2
Cbc0038I Pass  28: suminf.    0.31870 (3) obj. -45.0918 iterations 7
Cbc0038I Pass  29: suminf.    0.31870 (3) obj. -45.0918 iterations 1
Cbc0038I Pass  30: suminf.    0.20340 (1) obj. -45.0918 iterations 4
Cbc0038I Pass  31: suminf.    0.12500 (1) obj. -45.1392 iterations 3
Cbc0038I Rounding solution of -45.1997 is better than previous of -44.5822

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -46.0954
Cbc0038I Pass  31: suminf.    0.87500 (7) obj. -49.6633 iterations 0
Cbc0038I Pass  32: suminf.    0.31035 (3) obj. -46.0954 iterations 27
Cbc0038I Pass  33: suminf.    0.26726 (3) obj. -46.0954 iterations 3
Cbc0038I Pass  34: suminf.    0.49843 (2) obj. -46.0954 iterations 11
Cbc0038I Pass  35: suminf.    0.25000 (2) obj. -46.2591 iterations 14
Cbc0038I Pass  36: suminf.    0.42159 (2) obj. -46.0954 iterations 4
Cbc0038I Pass  37: suminf.    1.80089 (8) obj. -46.0954 iterations 45
Cbc0038I Pass  38: suminf.    0.99108 (4) obj. -46.0954 iterations 13
Cbc0038I Pass  39: suminf.    0.89096 (4) obj. -46.0954 iterations 32
Cbc0038I Pass  40: suminf.    0.69039 (3) obj. -46.0954 iterations 13
Cbc0038I Pass  41: suminf.    0.37500 (3) obj. -46.3269 iterations 15
Cbc0038I Pass  42: suminf.    0.65262 (3) obj. -46.0954 iterations 7
Cbc0038I Pass  43: suminf.    1.75962 (6) obj. -46.0954 iterations 9
Cbc0038I Pass  44: suminf.    0.25000 (2) obj. -46.4447 iterations 5
Cbc0038I Pass  45: suminf.    0.58099 (2) obj. -46.0954 iterations 3
Cbc0038I Pass  46: suminf.    0.56185 (2) obj. -46.0954 iterations 1
Cbc0038I Pass  47: suminf.    0.54809 (2) obj. -46.0954 iterations 2
Cbc0038I Pass  48: suminf.    1.31430 (5) obj. -46.0954 iterations 11
Cbc0038I Pass  49: suminf.    1.43345 (5) obj. -46.0954 iterations 5
Cbc0038I Pass  50: suminf.    0.35532 (2) obj. -46.0954 iterations 13
Cbc0038I Pass  51: suminf.    0.35532 (2) obj. -46.0954 iterations 0
Cbc0038I Pass  52: suminf.    0.37495 (2) obj. -46.0954 iterations 3
Cbc0038I Pass  53: suminf.    0.84037 (3) obj. -46.0954 iterations 14
Cbc0038I Pass  54: suminf.    0.37500 (3) obj. -46.4815 iterations 9
Cbc0038I Pass  55: suminf.    0.64735 (3) obj. -46.0954 iterations 6
Cbc0038I Pass  56: suminf.    0.60967 (3) obj. -46.0954 iterations 3
Cbc0038I Pass  57: suminf.    0.49677 (3) obj. -46.0954 iterations 6
Cbc0038I Pass  58: suminf.    0.49677 (3) obj. -46.0954 iterations 1
Cbc0038I Pass  59: suminf.    0.50301 (3) obj. -46.0954 iterations 13
Cbc0038I Pass  60: suminf.    0.71520 (3) obj. -46.0954 iterations 14
Cbc0038I Rounding solution of -45.2148 is better than previous of -45.1997

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 35 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -47.1703
Cbc0038I Pass  60: suminf.    0.87500 (7) obj. -49.6633 iterations 0
Cbc0038I Pass  61: suminf.    0.78879 (4) obj. -47.1703 iterations 28
Cbc0038I Pass  62: suminf.    0.72052 (4) obj. -47.1703 iterations 7
Cbc0038I Pass  63: suminf.    0.48809 (4) obj. -47.1703 iterations 25
Cbc0038I Pass  64: suminf.    0.46925 (4) obj. -47.1703 iterations 1
Cbc0038I Pass  65: suminf.    0.56998 (4) obj. -47.1703 iterations 23
Cbc0038I Pass  66: suminf.    0.56998 (4) obj. -47.1703 iterations 8
Cbc0038I Pass  67: suminf.    0.50067 (3) obj. -47.1703 iterations 14
Cbc0038I Pass  68: suminf.    0.37500 (3) obj. -47.2304 iterations 4
Cbc0038I Pass  69: suminf.    0.44710 (3) obj. -47.1703 iterations 6
Cbc0038I Pass  70: suminf.    1.00250 (5) obj. -47.1703 iterations 13
Cbc0038I Pass  71: suminf.    0.66368 (5) obj. -47.1703 iterations 13
Cbc0038I Pass  72: suminf.    0.37500 (3) obj. -47.2085 iterations 13
Cbc0038I Pass  73: suminf.    0.42082 (3) obj. -47.1703 iterations 10
Cbc0038I Pass  74: suminf.    0.97604 (5) obj. -47.1703 iterations 10
Cbc0038I Pass  75: suminf.    0.91982 (5) obj. -47.1703 iterations 15
Cbc0038I Pass  76: suminf.    0.66577 (7) obj. -47.1703 iterations 12
Cbc0038I Pass  77: suminf.    0.93205 (4) obj. -47.1703 iterations 13
Cbc0038I Pass  78: suminf.    0.91950 (5) obj. -47.1703 iterations 6
Cbc0038I Pass  79: suminf.    1.24004 (5) obj. -47.1703 iterations 14
Cbc0038I Pass  80: suminf.    1.02131 (5) obj. -47.1703 iterations 9
Cbc0038I Pass  81: suminf.    0.37500 (3) obj. -47.2085 iterations 14
Cbc0038I Pass  82: suminf.    0.42082 (3) obj. -47.1703 iterations 9
Cbc0038I Pass  83: suminf.    0.46176 (4) obj. -47.1703 iterations 10
Cbc0038I Pass  84: suminf.    0.37500 (3) obj. -47.2288 iterations 14
Cbc0038I Pass  85: suminf.    0.44522 (3) obj. -47.1703 iterations 9
Cbc0038I Pass  86: suminf.    0.76315 (4) obj. -47.1703 iterations 11
Cbc0038I Pass  87: suminf.    0.55200 (4) obj. -47.1703 iterations 29
Cbc0038I Pass  88: suminf.    0.49323 (4) obj. -47.1703 iterations 11
Cbc0038I Pass  89: suminf.    0.41165 (3) obj. -47.1703 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 34 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.2148 - took 0.07 seconds
Cbc0012I Integer solution of -45.214846 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 12 rows 16 columns
Cbc0031I 23 added rows had average density of 70.478261
Cbc0013I At root node, 23 cuts changed objective from -49.678366 to -48.005903 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 108.5 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 85 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 82 row cuts average 55.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 167 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.214846 best solution, best possible -48.005903 (0.44 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 32 rows 42 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 36 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0010I After 1000 nodes, 403 on tree, -45.214846 best solution, best possible -48.005903 (6.92 seconds)
Cbc0010I After 2000 nodes, 413 on tree, -45.214846 best solution, best possible -48.005903 (10.69 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 23 columns
Cbc0010I After 3000 nodes, 411 on tree, -45.214846 best solution, best possible -48.005903 (12.10 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 33 columns
Cbc0010I After 4000 nodes, 408 on tree, -45.214846 best solution, best possible -48.005903 (13.55 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 35 columns
Cbc0010I After 5000 nodes, 410 on tree, -45.214846 best solution, best possible -48.005903 (14.50 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0010I After 6000 nodes, 425 on tree, -45.214846 best solution, best possible -48.005903 (16.91 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 22 columns
Cbc0010I After 7000 nodes, 423 on tree, -45.214846 best solution, best possible -48.005903 (18.14 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 33 columns
Cbc0010I After 8000 nodes, 422 on tree, -45.214846 best solution, best possible -48.005903 (19.10 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 25 columns
Cbc0010I After 9000 nodes, 419 on tree, -45.214846 best solution, best possible -48.005903 (19.76 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 26 columns
Cbc0010I After 10000 nodes, 433 on tree, -45.214846 best solution, best possible -48.005903 (21.22 seconds)
Cbc0010I After 11000 nodes, 427 on tree, -45.214846 best solution, best possible -48.005903 (22.02 seconds)
Cbc0010I After 12000 nodes, 908 on tree, -45.214846 best solution, best possible -46.940343 (25.50 seconds)
Cbc0010I After 13000 nodes, 1384 on tree, -45.214846 best solution, best possible -46.793218 (29.34 seconds)
Cbc0010I After 14000 nodes, 1233 on tree, -45.214846 best solution, best possible -46.793218 (37.28 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0010I After 15000 nodes, 1731 on tree, -45.214846 best solution, best possible -46.706959 (38.93 seconds)
Cbc0010I After 16000 nodes, 2220 on tree, -45.214846 best solution, best possible -46.643824 (40.82 seconds)
Cbc0010I After 17000 nodes, 2698 on tree, -45.214846 best solution, best possible -46.59324 (42.98 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 26 columns
Cbc0010I After 18000 nodes, 2516 on tree, -45.214846 best solution, best possible -46.59324 (49.15 seconds)
Cbc0010I After 19000 nodes, 3009 on tree, -45.214846 best solution, best possible -46.542973 (50.56 seconds)
Cbc0010I After 20000 nodes, 3493 on tree, -45.214846 best solution, best possible -46.503248 (52.19 seconds)
Cbc0010I After 21000 nodes, 3975 on tree, -45.214846 best solution, best possible -46.470409 (53.69 seconds)
Cbc0010I After 22000 nodes, 3776 on tree, -45.214846 best solution, best possible -46.470409 (59.34 seconds)
Cbc0010I After 23000 nodes, 4266 on tree, -45.214846 best solution, best possible -46.439281 (60.77 seconds)
Cbc0010I After 24000 nodes, 4757 on tree, -45.214846 best solution, best possible -46.412445 (62.02 seconds)
Cbc0010I After 25000 nodes, 5243 on tree, -45.214846 best solution, best possible -46.385926 (63.31 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 29 columns
Cbc0010I After 26000 nodes, 5049 on tree, -45.214846 best solution, best possible -46.385926 (66.74 seconds)
Cbc0010I After 27000 nodes, 5539 on tree, -45.214846 best solution, best possible -46.361376 (68.09 seconds)
Cbc0010I After 28000 nodes, 6029 on tree, -45.214846 best solution, best possible -46.340331 (69.32 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 34 columns
Cbc0010I After 29000 nodes, 6512 on tree, -45.214846 best solution, best possible -46.32276 (70.63 seconds)
Cbc0010I After 30000 nodes, 6297 on tree, -45.214846 best solution, best possible -46.32276 (74.47 seconds)
Cbc0010I After 31000 nodes, 6791 on tree, -45.214846 best solution, best possible -46.30496 (75.72 seconds)
Cbc0010I After 32000 nodes, 7282 on tree, -45.214846 best solution, best possible -46.289654 (76.89 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 31 rows 40 columns
Cbc0010I After 33000 nodes, 7759 on tree, -45.214846 best solution, best possible -46.273971 (78.25 seconds)
Cbc0010I After 34000 nodes, 7541 on tree, -45.214846 best solution, best possible -46.273971 (82.17 seconds)
Cbc0010I After 35000 nodes, 8027 on tree, -45.214846 best solution, best possible -46.259863 (83.40 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 20 columns
Cbc0010I After 36000 nodes, 8511 on tree, -45.214846 best solution, best possible -46.246036 (84.56 seconds)
Cbc0010I After 37000 nodes, 8998 on tree, -45.214846 best solution, best possible -46.233123 (85.65 seconds)
Cbc0010I After 38000 nodes, 8787 on tree, -45.214846 best solution, best possible -46.233123 (88.94 seconds)
Cbc0010I After 39000 nodes, 9272 on tree, -45.214846 best solution, best possible -46.220615 (90.18 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 35 columns
Cbc0010I After 40000 nodes, 9743 on tree, -45.214846 best solution, best possible -46.209039 (91.40 seconds)
Cbc0010I After 41000 nodes, 10218 on tree, -45.214846 best solution, best possible -46.197619 (92.81 seconds)
Cbc0010I After 42000 nodes, 10016 on tree, -45.214846 best solution, best possible -46.197555 (96.29 seconds)
Cbc0010I After 43000 nodes, 10475 on tree, -45.214846 best solution, best possible -46.197555 (97.04 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 29 columns
Cbc0010I After 44000 nodes, 10893 on tree, -45.214846 best solution, best possible -46.197555 (97.81 seconds)
Cbc0010I After 45000 nodes, 10695 on tree, -45.214846 best solution, best possible -46.197555 (98.07 seconds)
Cbc0010I After 46000 nodes, 10558 on tree, -45.214846 best solution, best possible -46.197555 (99.70 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 27 columns
Cbc0010I After 47000 nodes, 10958 on tree, -45.214846 best solution, best possible -46.197555 (100.51 seconds)
Cbc0010I After 48000 nodes, 11333 on tree, -45.214846 best solution, best possible -46.197555 (101.27 seconds)
Cbc0010I After 49000 nodes, 11101 on tree, -45.214846 best solution, best possible -46.197555 (101.57 seconds)
Cbc0010I After 50000 nodes, 10923 on tree, -45.214846 best solution, best possible -46.197541 (102.85 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 30 rows 39 columns
Cbc0010I After 51000 nodes, 11279 on tree, -45.214846 best solution, best possible -46.197538 (103.66 seconds)
Cbc0010I After 52000 nodes, 11611 on tree, -45.214846 best solution, best possible -46.197538 (104.46 seconds)
Cbc0010I After 53000 nodes, 11400 on tree, -45.214846 best solution, best possible -46.197538 (104.77 seconds)
Cbc0010I After 54000 nodes, 11205 on tree, -45.214846 best solution, best possible -46.197538 (105.91 seconds)
Cbc0010I After 55000 nodes, 11501 on tree, -45.214846 best solution, best possible -46.197538 (106.76 seconds)
Cbc0010I After 56000 nodes, 11801 on tree, -45.214846 best solution, best possible -46.197538 (107.60 seconds)
Cbc0010I After 57000 nodes, 11504 on tree, -45.214846 best solution, best possible -46.197538 (107.92 seconds)
Cbc0010I After 58000 nodes, 11305 on tree, -45.214846 best solution, best possible -46.197519 (109.02 seconds)
Cbc0010I After 59000 nodes, 11588 on tree, -45.214846 best solution, best possible -46.197519 (109.93 seconds)
Cbc0010I After 60000 nodes, 11844 on tree, -45.214846 best solution, best possible -46.197519 (110.75 seconds)
Cbc0010I After 61000 nodes, 11593 on tree, -45.214846 best solution, best possible -46.197519 (111.14 seconds)
Cbc0010I After 62000 nodes, 11363 on tree, -45.214846 best solution, best possible -46.197519 (112.05 seconds)
Cbc0010I After 63000 nodes, 11667 on tree, -45.214846 best solution, best possible -46.197519 (112.97 seconds)
Cbc0010I After 64000 nodes, 11954 on tree, -45.214846 best solution, best possible -46.197519 (113.83 seconds)
Cbc0010I After 65000 nodes, 11691 on tree, -45.214846 best solution, best possible -46.197519 (114.20 seconds)
Cbc0010I After 66000 nodes, 11475 on tree, -45.214846 best solution, best possible -46.197518 (115.12 seconds)
Cbc0010I After 67000 nodes, 11755 on tree, -45.214846 best solution, best possible -46.197518 (116.03 seconds)
Cbc0010I After 68000 nodes, 12014 on tree, -45.214846 best solution, best possible -46.197518 (116.91 seconds)
Cbc0010I After 69000 nodes, 11720 on tree, -45.214846 best solution, best possible -46.197518 (117.31 seconds)
Cbc0010I After 70000 nodes, 11494 on tree, -45.214846 best solution, best possible -46.197518 (118.23 seconds)
Cbc0010I After 71000 nodes, 11816 on tree, -45.214846 best solution, best possible -46.197518 (119.16 seconds)
Cbc0010I After 72000 nodes, 12130 on tree, -45.214846 best solution, best possible -46.197518 (120.00 seconds)
Cbc0010I After 73000 nodes, 11846 on tree, -45.214846 best solution, best possible -46.197518 (120.35 seconds)
Cbc0010I After 74000 nodes, 11585 on tree, -45.214846 best solution, best possible -46.197511 (121.16 seconds)
Cbc0010I After 75000 nodes, 11899 on tree, -45.214846 best solution, best possible -46.197511 (122.07 seconds)
Cbc0010I After 76000 nodes, 12182 on tree, -45.214846 best solution, best possible -46.197511 (122.90 seconds)
Cbc0010I After 77000 nodes, 11909 on tree, -45.214846 best solution, best possible -46.197511 (123.23 seconds)
Cbc0010I After 78000 nodes, 11648 on tree, -45.214846 best solution, best possible -46.197511 (124.12 seconds)
Cbc0010I After 79000 nodes, 11946 on tree, -45.214846 best solution, best possible -46.197511 (125.01 seconds)
Cbc0010I After 80000 nodes, 12219 on tree, -45.214846 best solution, best possible -46.197511 (125.82 seconds)
Cbc0010I After 81000 nodes, 11942 on tree, -45.214846 best solution, best possible -46.197511 (126.14 seconds)
Cbc0010I After 82000 nodes, 11679 on tree, -45.214846 best solution, best possible -46.197485 (126.97 seconds)
Cbc0010I After 83000 nodes, 11949 on tree, -45.214846 best solution, best possible -46.197485 (127.85 seconds)
Cbc0010I After 84000 nodes, 12228 on tree, -45.214846 best solution, best possible -46.197485 (128.64 seconds)
Cbc0010I After 85000 nodes, 11958 on tree, -45.214846 best solution, best possible -46.197485 (129.01 seconds)
Cbc0010I After 86000 nodes, 11754 on tree, -45.214846 best solution, best possible -46.197485 (130.34 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0010I After 87000 nodes, 12016 on tree, -45.214846 best solution, best possible -46.197485 (131.22 seconds)
Cbc0010I After 88000 nodes, 12273 on tree, -45.214846 best solution, best possible -46.197485 (131.99 seconds)
Cbc0010I After 89000 nodes, 12002 on tree, -45.214846 best solution, best possible -46.197485 (132.37 seconds)
Cbc0010I After 90000 nodes, 11817 on tree, -45.214846 best solution, best possible -46.197477 (133.92 seconds)
Cbc0010I After 91000 nodes, 12060 on tree, -45.214846 best solution, best possible -46.197477 (134.76 seconds)
Cbc0010I After 92000 nodes, 12319 on tree, -45.214846 best solution, best possible -46.197477 (135.61 seconds)
Cbc0010I After 93000 nodes, 12047 on tree, -45.214846 best solution, best possible -46.197477 (136.02 seconds)
Cbc0010I After 94000 nodes, 11865 on tree, -45.214846 best solution, best possible -46.197477 (137.14 seconds)
Cbc0010I After 95000 nodes, 12142 on tree, -45.214846 best solution, best possible -46.197477 (137.96 seconds)
Cbc0010I After 96000 nodes, 12434 on tree, -45.214846 best solution, best possible -46.197477 (138.75 seconds)
Cbc0010I After 97000 nodes, 12141 on tree, -45.214846 best solution, best possible -46.197477 (139.09 seconds)
Cbc0010I After 98000 nodes, 11970 on tree, -45.214846 best solution, best possible -46.197392 (140.26 seconds)
Cbc0010I After 99000 nodes, 12211 on tree, -45.214846 best solution, best possible -46.197392 (141.07 seconds)
Cbc0010I After 100000 nodes, 12451 on tree, -45.214846 best solution, best possible -46.197392 (141.85 seconds)
Cbc0010I After 101000 nodes, 12159 on tree, -45.214846 best solution, best possible -46.197392 (142.23 seconds)
Cbc0010I After 102000 nodes, 12651 on tree, -45.214846 best solution, best possible -46.170974 (143.42 seconds)
Cbc0010I After 103000 nodes, 12931 on tree, -45.214846 best solution, best possible -46.170974 (144.23 seconds)
Cbc0010I After 104000 nodes, 13135 on tree, -45.214846 best solution, best possible -46.170974 (145.03 seconds)
Cbc0010I After 105000 nodes, 12864 on tree, -45.214846 best solution, best possible -46.170974 (145.40 seconds)
Cbc0010I After 106000 nodes, 13344 on tree, -45.214846 best solution, best possible -46.146321 (146.63 seconds)
Cbc0010I After 107000 nodes, 13591 on tree, -45.214846 best solution, best possible -46.146321 (147.47 seconds)
Cbc0010I After 108000 nodes, 13830 on tree, -45.214846 best solution, best possible -46.146321 (148.25 seconds)
Cbc0010I After 109000 nodes, 13539 on tree, -45.214846 best solution, best possible -46.146321 (148.59 seconds)
Cbc0010I After 110000 nodes, 14022 on tree, -45.214846 best solution, best possible -46.124827 (149.84 seconds)
Cbc0010I After 111000 nodes, 14233 on tree, -45.214846 best solution, best possible -46.124827 (150.72 seconds)
Cbc0010I After 112000 nodes, 14452 on tree, -45.214846 best solution, best possible -46.124827 (151.41 seconds)
Cbc0010I After 113000 nodes, 14159 on tree, -45.214846 best solution, best possible -46.124827 (151.78 seconds)
Cbc0010I After 114000 nodes, 14634 on tree, -45.214846 best solution, best possible -46.106001 (152.99 seconds)
Cbc0010I After 115000 nodes, 14834 on tree, -45.214846 best solution, best possible -46.106001 (153.75 seconds)
Cbc0010I After 116000 nodes, 15038 on tree, -45.214846 best solution, best possible -46.106001 (154.53 seconds)
Cbc0010I After 117000 nodes, 14764 on tree, -45.214846 best solution, best possible -46.106001 (154.93 seconds)
Cbc0010I After 118000 nodes, 15233 on tree, -45.214846 best solution, best possible -46.088093 (156.17 seconds)
Cbc0010I After 119000 nodes, 15427 on tree, -45.214846 best solution, best possible -46.088093 (156.93 seconds)
Cbc0010I After 120000 nodes, 15632 on tree, -45.214846 best solution, best possible -46.088093 (157.71 seconds)
Cbc0010I After 121000 nodes, 15369 on tree, -45.214846 best solution, best possible -46.088093 (158.13 seconds)
Cbc0010I After 122000 nodes, 15840 on tree, -45.214846 best solution, best possible -46.073934 (159.37 seconds)
Cbc0010I After 123000 nodes, 16022 on tree, -45.214846 best solution, best possible -46.073934 (160.13 seconds)
Cbc0010I After 124000 nodes, 16231 on tree, -45.214846 best solution, best possible -46.07392 (160.84 seconds)
Cbc0010I After 125000 nodes, 15909 on tree, -45.214846 best solution, best possible -46.07392 (161.24 seconds)
Cbc0010I After 126000 nodes, 16375 on tree, -45.214846 best solution, best possible -46.06007 (162.45 seconds)
Cbc0010I After 127000 nodes, 16518 on tree, -45.214846 best solution, best possible -46.06007 (163.29 seconds)
Cbc0010I After 128000 nodes, 16712 on tree, -45.214846 best solution, best possible -46.06007 (163.98 seconds)
Cbc0010I After 129000 nodes, 16479 on tree, -45.214846 best solution, best possible -46.06007 (164.36 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 33 columns
Cbc0010I After 130000 nodes, 16933 on tree, -45.214846 best solution, best possible -46.047592 (165.68 seconds)
Cbc0010I After 131000 nodes, 17085 on tree, -45.214846 best solution, best possible -46.047592 (166.47 seconds)
Cbc0010I After 132000 nodes, 17291 on tree, -45.214846 best solution, best possible -46.047592 (167.17 seconds)
Cbc0010I After 133000 nodes, 17031 on tree, -45.214846 best solution, best possible -46.047592 (167.55 seconds)
Cbc0010I After 134000 nodes, 17487 on tree, -45.214846 best solution, best possible -46.034805 (168.78 seconds)
Cbc0010I After 135000 nodes, 17630 on tree, -45.214846 best solution, best possible -46.034805 (169.63 seconds)
Cbc0010I After 136000 nodes, 17813 on tree, -45.214846 best solution, best possible -46.034805 (170.37 seconds)
Cbc0010I After 137000 nodes, 17498 on tree, -45.214846 best solution, best possible -46.034805 (170.72 seconds)
Cbc0010I After 138000 nodes, 17934 on tree, -45.214846 best solution, best possible -46.022849 (172.11 seconds)
Cbc0010I After 139000 nodes, 18069 on tree, -45.214846 best solution, best possible -46.022849 (172.81 seconds)
Cbc0010I After 140000 nodes, 18241 on tree, -45.214846 best solution, best possible -46.022849 (173.51 seconds)
Cbc0010I After 141000 nodes, 17976 on tree, -45.214846 best solution, best possible -46.022849 (173.88 seconds)
Cbc0010I After 142000 nodes, 18424 on tree, -45.214846 best solution, best possible -46.01095 (175.16 seconds)
Cbc0010I After 143000 nodes, 18529 on tree, -45.214846 best solution, best possible -46.01095 (175.97 seconds)
Cbc0010I After 144000 nodes, 18691 on tree, -45.214846 best solution, best possible -46.01095 (176.64 seconds)
Cbc0010I After 145000 nodes, 18424 on tree, -45.214846 best solution, best possible -46.01095 (177.05 seconds)
Cbc0010I After 146000 nodes, 18859 on tree, -45.214846 best solution, best possible -45.999555 (178.36 seconds)
Cbc0010I After 147000 nodes, 19007 on tree, -45.214846 best solution, best possible -45.999535 (179.16 seconds)
Cbc0010I After 148000 nodes, 19168 on tree, -45.214846 best solution, best possible -45.999535 (179.87 seconds)
Cbc0010I After 149000 nodes, 18906 on tree, -45.214846 best solution, best possible -45.999535 (180.33 seconds)
Cbc0010I After 150000 nodes, 19334 on tree, -45.214846 best solution, best possible -45.988086 (181.69 seconds)
Cbc0010I After 151000 nodes, 19456 on tree, -45.214846 best solution, best possible -45.988086 (182.44 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 29 columns
Cbc0010I After 152000 nodes, 19583 on tree, -45.214846 best solution, best possible -45.988086 (183.23 seconds)
Cbc0010I After 153000 nodes, 19285 on tree, -45.214846 best solution, best possible -45.988086 (183.61 seconds)
Cbc0010I After 154000 nodes, 19699 on tree, -45.214846 best solution, best possible -45.976574 (184.91 seconds)
Cbc0010I After 155000 nodes, 19817 on tree, -45.214846 best solution, best possible -45.976574 (185.62 seconds)
Cbc0010I After 156000 nodes, 19937 on tree, -45.214846 best solution, best possible -45.976574 (186.36 seconds)
Cbc0010I After 157000 nodes, 19665 on tree, -45.214846 best solution, best possible -45.976574 (186.74 seconds)
Cbc0010I After 158000 nodes, 20085 on tree, -45.214846 best solution, best possible -45.965384 (188.06 seconds)
Cbc0010I After 159000 nodes, 20184 on tree, -45.214846 best solution, best possible -45.965384 (188.83 seconds)
Cbc0010I After 160000 nodes, 20288 on tree, -45.214846 best solution, best possible -45.965384 (189.49 seconds)
Cbc0010I After 161000 nodes, 20050 on tree, -45.214846 best solution, best possible -45.965384 (189.96 seconds)
Cbc0010I After 162000 nodes, 20462 on tree, -45.214846 best solution, best possible -45.954917 (191.17 seconds)
Cbc0010I After 163000 nodes, 20537 on tree, -45.214846 best solution, best possible -45.954917 (191.82 seconds)
Cbc0010I After 164000 nodes, 20650 on tree, -45.214846 best solution, best possible -45.954917 (192.54 seconds)
Cbc0010I After 165000 nodes, 20326 on tree, -45.214846 best solution, best possible -45.954917 (192.93 seconds)
Cbc0010I After 166000 nodes, 20723 on tree, -45.214846 best solution, best possible -45.944501 (194.29 seconds)
Cbc0010I After 167000 nodes, 20808 on tree, -45.214846 best solution, best possible -45.944501 (195.00 seconds)
Cbc0010I After 168000 nodes, 20872 on tree, -45.214846 best solution, best possible -45.944485 (195.72 seconds)
Cbc0010I After 169000 nodes, 20621 on tree, -45.214846 best solution, best possible -45.944485 (196.21 seconds)
Cbc0010I After 170000 nodes, 21023 on tree, -45.214846 best solution, best possible -45.934597 (197.45 seconds)
Cbc0010I After 171000 nodes, 21071 on tree, -45.214846 best solution, best possible -45.934597 (198.05 seconds)
Cbc0010I After 172000 nodes, 21170 on tree, -45.214846 best solution, best possible -45.934597 (198.73 seconds)
Cbc0010I After 173000 nodes, 20763 on tree, -45.214846 best solution, best possible -45.934597 (199.21 seconds)
Cbc0010I After 174000 nodes, 21150 on tree, -45.214846 best solution, best possible -45.925241 (200.49 seconds)
Cbc0010I After 175000 nodes, 21187 on tree, -45.214846 best solution, best possible -45.925241 (201.14 seconds)
Cbc0010I After 176000 nodes, 21261 on tree, -45.214846 best solution, best possible -45.925241 (201.82 seconds)
Cbc0010I After 177000 nodes, 21148 on tree, -45.214846 best solution, best possible -45.925241 (202.30 seconds)
Cbc0010I After 178000 nodes, 21545 on tree, -45.214846 best solution, best possible -45.916516 (203.52 seconds)
Cbc0010I After 179000 nodes, 21594 on tree, -45.214846 best solution, best possible -45.916512 (204.26 seconds)
Cbc0010I After 180000 nodes, 21658 on tree, -45.214846 best solution, best possible -45.916512 (204.96 seconds)
Cbc0010I After 181000 nodes, 21245 on tree, -45.214846 best solution, best possible -45.916512 (205.34 seconds)
Cbc0010I After 182000 nodes, 21645 on tree, -45.214846 best solution, best possible -45.907668 (206.59 seconds)
Cbc0010I After 183000 nodes, 21717 on tree, -45.214846 best solution, best possible -45.907668 (207.24 seconds)
Cbc0010I After 184000 nodes, 21770 on tree, -45.214846 best solution, best possible -45.907668 (207.96 seconds)
Cbc0010I After 185000 nodes, 21612 on tree, -45.214846 best solution, best possible -45.907668 (208.38 seconds)
Cbc0010I After 186000 nodes, 21970 on tree, -45.214846 best solution, best possible -45.898507 (209.60 seconds)
Cbc0010I After 187000 nodes, 21994 on tree, -45.214846 best solution, best possible -45.898496 (210.26 seconds)
Cbc0010I After 188000 nodes, 22038 on tree, -45.214846 best solution, best possible -45.898496 (210.97 seconds)
Cbc0010I After 189000 nodes, 21695 on tree, -45.214846 best solution, best possible -45.898496 (211.33 seconds)
Cbc0010I After 190000 nodes, 22065 on tree, -45.214846 best solution, best possible -45.889363 (212.59 seconds)
Cbc0010I After 191000 nodes, 22112 on tree, -45.214846 best solution, best possible -45.889363 (213.27 seconds)
Cbc0010I After 192000 nodes, 22177 on tree, -45.214846 best solution, best possible -45.889363 (213.94 seconds)
Cbc0010I After 193000 nodes, 22002 on tree, -45.214846 best solution, best possible -45.889363 (214.36 seconds)
Cbc0010I After 194000 nodes, 22372 on tree, -45.214846 best solution, best possible -45.88023 (215.62 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 28 columns
Cbc0010I After 195000 nodes, 22417 on tree, -45.214846 best solution, best possible -45.88023 (216.36 seconds)
Cbc0010I After 196000 nodes, 22459 on tree, -45.214846 best solution, best possible -45.88023 (216.96 seconds)
Cbc0010I After 197000 nodes, 22130 on tree, -45.214846 best solution, best possible -45.88023 (217.35 seconds)
Cbc0010I After 198000 nodes, 22494 on tree, -45.214846 best solution, best possible -45.871226 (218.56 seconds)
Cbc0010I After 199000 nodes, 22525 on tree, -45.214846 best solution, best possible -45.871226 (219.29 seconds)
Cbc0010I After 200000 nodes, 22566 on tree, -45.214846 best solution, best possible -45.871226 (220.01 seconds)
Cbc0010I After 201000 nodes, 22399 on tree, -45.214846 best solution, best possible -45.871226 (220.42 seconds)
Cbc0010I After 202000 nodes, 22754 on tree, -45.214846 best solution, best possible -45.862003 (221.61 seconds)
Cbc0010I After 203000 nodes, 22775 on tree, -45.214846 best solution, best possible -45.862003 (222.27 seconds)
Cbc0010I After 204000 nodes, 22805 on tree, -45.214846 best solution, best possible -45.862003 (222.95 seconds)
Cbc0010I After 205000 nodes, 22456 on tree, -45.214846 best solution, best possible -45.862003 (223.36 seconds)
Cbc0010I After 206000 nodes, 22784 on tree, -45.214846 best solution, best possible -45.852878 (224.67 seconds)
Cbc0010I After 207000 nodes, 22781 on tree, -45.214846 best solution, best possible -45.852878 (225.44 seconds)
Cbc0010I After 208000 nodes, 22821 on tree, -45.214846 best solution, best possible -45.852878 (226.12 seconds)
Cbc0010I After 209000 nodes, 22515 on tree, -45.214846 best solution, best possible -45.852878 (226.59 seconds)
Cbc0010I After 210000 nodes, 22858 on tree, -45.214846 best solution, best possible -45.844046 (227.78 seconds)
Cbc0010I After 211000 nodes, 22854 on tree, -45.214846 best solution, best possible -45.844046 (228.49 seconds)
Cbc0010I After 212000 nodes, 22883 on tree, -45.214846 best solution, best possible -45.844046 (229.20 seconds)
Cbc0010I After 213000 nodes, 22658 on tree, -45.214846 best solution, best possible -45.844046 (229.63 seconds)
Cbc0010I After 214000 nodes, 23014 on tree, -45.214846 best solution, best possible -45.834805 (230.79 seconds)
Cbc0010I After 215000 nodes, 23013 on tree, -45.214846 best solution, best possible -45.834805 (231.48 seconds)
Cbc0010I After 216000 nodes, 23028 on tree, -45.214846 best solution, best possible -45.834805 (232.16 seconds)
Cbc0010I After 217000 nodes, 22707 on tree, -45.214846 best solution, best possible -45.834805 (232.56 seconds)
Cbc0010I After 218000 nodes, 23038 on tree, -45.214846 best solution, best possible -45.825234 (233.76 seconds)
Cbc0010I After 219000 nodes, 23031 on tree, -45.214846 best solution, best possible -45.825234 (234.49 seconds)
Cbc0010I After 220000 nodes, 23039 on tree, -45.214846 best solution, best possible -45.825234 (235.21 seconds)
Cbc0010I After 221000 nodes, 22773 on tree, -45.214846 best solution, best possible -45.825234 (235.64 seconds)
Cbc0010I After 222000 nodes, 23059 on tree, -45.214846 best solution, best possible -45.815632 (236.90 seconds)
Cbc0010I After 223000 nodes, 23049 on tree, -45.214846 best solution, best possible -45.815632 (237.64 seconds)
Cbc0010I After 224000 nodes, 23070 on tree, -45.214846 best solution, best possible -45.815632 (238.32 seconds)
Cbc0010I After 225000 nodes, 22834 on tree, -45.214846 best solution, best possible -45.815632 (238.74 seconds)
Cbc0010I After 226000 nodes, 23136 on tree, -45.214846 best solution, best possible -45.80546 (239.93 seconds)
Cbc0010I After 227000 nodes, 23088 on tree, -45.214846 best solution, best possible -45.80546 (240.59 seconds)
Cbc0010I After 228000 nodes, 23089 on tree, -45.214846 best solution, best possible -45.80546 (241.28 seconds)
Cbc0010I After 229000 nodes, 22726 on tree, -45.214846 best solution, best possible -45.80546 (241.65 seconds)
Cbc0010I After 230000 nodes, 23047 on tree, -45.214846 best solution, best possible -45.795565 (242.85 seconds)
Cbc0010I After 231000 nodes, 23017 on tree, -45.214846 best solution, best possible -45.795565 (243.55 seconds)
Cbc0010I After 232000 nodes, 22991 on tree, -45.214846 best solution, best possible -45.795565 (244.28 seconds)
Cbc0010I After 233000 nodes, 22666 on tree, -45.214846 best solution, best possible -45.795565 (244.64 seconds)
Cbc0010I After 234000 nodes, 22982 on tree, -45.214846 best solution, best possible -45.785861 (245.71 seconds)
Cbc0010I After 235000 nodes, 22950 on tree, -45.214846 best solution, best possible -45.785861 (246.39 seconds)
Cbc0010I After 236000 nodes, 22962 on tree, -45.214846 best solution, best possible -45.785861 (247.08 seconds)
Cbc0010I After 237000 nodes, 22658 on tree, -45.214846 best solution, best possible -45.785861 (247.53 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0010I After 238000 nodes, 22973 on tree, -45.214846 best solution, best possible -45.776059 (248.62 seconds)
Cbc0010I After 239000 nodes, 22944 on tree, -45.214846 best solution, best possible -45.776059 (249.27 seconds)
Cbc0010I After 240000 nodes, 22936 on tree, -45.214846 best solution, best possible -45.776059 (249.93 seconds)
Cbc0010I After 241000 nodes, 22591 on tree, -45.214846 best solution, best possible -45.776059 (250.39 seconds)
Cbc0010I After 242000 nodes, 22885 on tree, -45.214846 best solution, best possible -45.76655 (251.50 seconds)
Cbc0010I After 243000 nodes, 22843 on tree, -45.214846 best solution, best possible -45.76655 (252.18 seconds)
Cbc0010I After 244000 nodes, 22846 on tree, -45.214846 best solution, best possible -45.76655 (252.84 seconds)
Cbc0010I After 245000 nodes, 22528 on tree, -45.214846 best solution, best possible -45.76655 (253.28 seconds)
Cbc0010I After 246000 nodes, 22800 on tree, -45.214846 best solution, best possible -45.756117 (254.40 seconds)
Cbc0010I After 247000 nodes, 22734 on tree, -45.214846 best solution, best possible -45.756117 (255.03 seconds)
Cbc0010I After 248000 nodes, 22715 on tree, -45.214846 best solution, best possible -45.756117 (255.71 seconds)
Cbc0010I After 249000 nodes, 22417 on tree, -45.214846 best solution, best possible -45.756117 (256.12 seconds)
Cbc0010I After 250000 nodes, 22677 on tree, -45.214846 best solution, best possible -45.745682 (257.20 seconds)
Cbc0010I After 251000 nodes, 22575 on tree, -45.214846 best solution, best possible -45.745682 (257.83 seconds)
Cbc0010I After 252000 nodes, 22570 on tree, -45.214846 best solution, best possible -45.745682 (258.53 seconds)
Cbc0010I After 253000 nodes, 22248 on tree, -45.214846 best solution, best possible -45.745682 (258.92 seconds)
Cbc0010I After 254000 nodes, 22491 on tree, -45.214846 best solution, best possible -45.735617 (260.04 seconds)
Cbc0010I After 255000 nodes, 22425 on tree, -45.214846 best solution, best possible -45.735617 (260.73 seconds)
Cbc0010I After 256000 nodes, 22378 on tree, -45.214846 best solution, best possible -45.735617 (261.40 seconds)
Cbc0010I After 257000 nodes, 22042 on tree, -45.214846 best solution, best possible -45.735617 (261.74 seconds)
Cbc0010I After 258000 nodes, 22285 on tree, -45.214846 best solution, best possible -45.726419 (262.81 seconds)
Cbc0010I After 259000 nodes, 22174 on tree, -45.214846 best solution, best possible -45.726408 (263.46 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 27 columns
Cbc0010I After 260000 nodes, 22124 on tree, -45.214846 best solution, best possible -45.726408 (264.13 seconds)
Cbc0010I After 261000 nodes, 21937 on tree, -45.214846 best solution, best possible -45.726408 (264.52 seconds)
Cbc0010I After 262000 nodes, 22170 on tree, -45.214846 best solution, best possible -45.716766 (265.58 seconds)
Cbc0010I After 263000 nodes, 22071 on tree, -45.214846 best solution, best possible -45.716766 (266.23 seconds)
Cbc0010I After 264000 nodes, 21988 on tree, -45.214846 best solution, best possible -45.716766 (266.92 seconds)
Cbc0010I After 265000 nodes, 21639 on tree, -45.214846 best solution, best possible -45.716766 (267.30 seconds)
Cbc0010I After 266000 nodes, 21863 on tree, -45.214846 best solution, best possible -45.707181 (268.35 seconds)
Cbc0010I After 267000 nodes, 21767 on tree, -45.214846 best solution, best possible -45.707181 (269.00 seconds)
Cbc0010I After 268000 nodes, 21692 on tree, -45.214846 best solution, best possible -45.707181 (269.64 seconds)
Cbc0010I After 269000 nodes, 21362 on tree, -45.214846 best solution, best possible -45.707181 (270.01 seconds)
Cbc0010I After 270000 nodes, 21545 on tree, -45.214846 best solution, best possible -45.696961 (271.12 seconds)
Cbc0010I After 271000 nodes, 21421 on tree, -45.214846 best solution, best possible -45.696873 (271.74 seconds)
Cbc0010I After 272000 nodes, 21339 on tree, -45.214846 best solution, best possible -45.696873 (272.40 seconds)
Cbc0010I After 273000 nodes, 20997 on tree, -45.214846 best solution, best possible -45.696873 (272.86 seconds)
Cbc0010I After 274000 nodes, 21173 on tree, -45.214846 best solution, best possible -45.686983 (273.87 seconds)
Cbc0010I After 275000 nodes, 21068 on tree, -45.214846 best solution, best possible -45.686983 (274.46 seconds)
Cbc0010I After 276000 nodes, 20968 on tree, -45.214846 best solution, best possible -45.686983 (275.11 seconds)
Cbc0010I After 277000 nodes, 20694 on tree, -45.214846 best solution, best possible -45.686983 (275.51 seconds)
Cbc0010I After 278000 nodes, 20833 on tree, -45.214846 best solution, best possible -45.678483 (276.54 seconds)
Cbc0010I After 279000 nodes, 20698 on tree, -45.214846 best solution, best possible -45.678483 (277.18 seconds)
Cbc0010I After 280000 nodes, 20636 on tree, -45.214846 best solution, best possible -45.678483 (277.84 seconds)
Cbc0010I After 281000 nodes, 20305 on tree, -45.214846 best solution, best possible -45.678483 (278.24 seconds)
Cbc0010I After 282000 nodes, 20449 on tree, -45.214846 best solution, best possible -45.668517 (279.34 seconds)
Cbc0010I After 283000 nodes, 20314 on tree, -45.214846 best solution, best possible -45.668517 (279.95 seconds)
Cbc0010I After 284000 nodes, 20224 on tree, -45.214846 best solution, best possible -45.668508 (280.61 seconds)
Cbc0010I After 285000 nodes, 19886 on tree, -45.214846 best solution, best possible -45.668508 (280.97 seconds)
Cbc0010I After 286000 nodes, 20047 on tree, -45.214846 best solution, best possible -45.658595 (281.95 seconds)
Cbc0010I After 287000 nodes, 19905 on tree, -45.214846 best solution, best possible -45.658595 (282.57 seconds)
Cbc0010I After 288000 nodes, 19794 on tree, -45.214846 best solution, best possible -45.658595 (283.19 seconds)
Cbc0010I After 289000 nodes, 19499 on tree, -45.214846 best solution, best possible -45.658595 (283.53 seconds)
Cbc0010I After 290000 nodes, 19608 on tree, -45.214846 best solution, best possible -45.64891 (284.48 seconds)
Cbc0010I After 291000 nodes, 19463 on tree, -45.214846 best solution, best possible -45.64891 (285.09 seconds)
Cbc0010I After 292000 nodes, 19360 on tree, -45.214846 best solution, best possible -45.64891 (285.73 seconds)
Cbc0010I After 293000 nodes, 18853 on tree, -45.214846 best solution, best possible -45.64891 (286.03 seconds)
Cbc0010I After 294000 nodes, 18962 on tree, -45.214846 best solution, best possible -45.638865 (287.01 seconds)
Cbc0010I After 295000 nodes, 18799 on tree, -45.214846 best solution, best possible -45.638865 (287.60 seconds)
Cbc0010I After 296000 nodes, 18686 on tree, -45.214846 best solution, best possible -45.638865 (288.21 seconds)
Cbc0010I After 297000 nodes, 18480 on tree, -45.214846 best solution, best possible -45.638865 (288.71 seconds)
Cbc0010I After 298000 nodes, 18585 on tree, -45.214846 best solution, best possible -45.628309 (289.65 seconds)
Cbc0010I After 299000 nodes, 18430 on tree, -45.214846 best solution, best possible -45.628309 (290.25 seconds)
Cbc0010I After 300000 nodes, 18301 on tree, -45.214846 best solution, best possible -45.628309 (290.88 seconds)
Cbc0010I After 301000 nodes, 17885 on tree, -45.214846 best solution, best possible -45.628309 (291.30 seconds)
Cbc0010I After 302000 nodes, 17964 on tree, -45.214846 best solution, best possible -45.617219 (292.24 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 31 columns
Cbc0010I After 303000 nodes, 17782 on tree, -45.214846 best solution, best possible -45.617219 (292.82 seconds)
Cbc0010I After 304000 nodes, 17654 on tree, -45.214846 best solution, best possible -45.617219 (293.42 seconds)
Cbc0010I After 305000 nodes, 17288 on tree, -45.214846 best solution, best possible -45.617219 (293.79 seconds)
Cbc0010I After 306000 nodes, 17351 on tree, -45.214846 best solution, best possible -45.60657 (294.70 seconds)
Cbc0010I After 307000 nodes, 17183 on tree, -45.214846 best solution, best possible -45.60657 (295.32 seconds)
Cbc0010I After 308000 nodes, 17063 on tree, -45.214846 best solution, best possible -45.60657 (295.96 seconds)
Cbc0010I After 309000 nodes, 16716 on tree, -45.214846 best solution, best possible -45.60657 (296.30 seconds)
Cbc0010I After 310000 nodes, 16786 on tree, -45.214846 best solution, best possible -45.596047 (297.20 seconds)
Cbc0010I After 311000 nodes, 16569 on tree, -45.214846 best solution, best possible -45.596047 (297.77 seconds)
Cbc0010I After 312000 nodes, 16438 on tree, -45.214846 best solution, best possible -45.596047 (298.40 seconds)
Cbc0010I After 313000 nodes, 16127 on tree, -45.214846 best solution, best possible -45.596047 (298.75 seconds)
Cbc0010I After 314000 nodes, 16168 on tree, -45.214846 best solution, best possible -45.585209 (299.67 seconds)
Cbc0010I After 315000 nodes, 15976 on tree, -45.214846 best solution, best possible -45.585209 (300.23 seconds)
Cbc0010I After 316000 nodes, 15812 on tree, -45.214846 best solution, best possible -45.585209 (300.86 seconds)
Cbc0010I After 317000 nodes, 15491 on tree, -45.214846 best solution, best possible -45.585209 (301.23 seconds)
Cbc0010I After 318000 nodes, 15541 on tree, -45.214846 best solution, best possible -45.573048 (302.12 seconds)
Cbc0010I After 319000 nodes, 15341 on tree, -45.214846 best solution, best possible -45.573048 (302.64 seconds)
Cbc0010I After 320000 nodes, 15165 on tree, -45.214846 best solution, best possible -45.573048 (303.21 seconds)
Cbc0010I After 321000 nodes, 14773 on tree, -45.214846 best solution, best possible -45.573048 (303.60 seconds)
Cbc0010I After 322000 nodes, 14790 on tree, -45.214846 best solution, best possible -45.561714 (304.46 seconds)
Cbc0010I After 323000 nodes, 14579 on tree, -45.214846 best solution, best possible -45.561714 (305.00 seconds)
Cbc0010I After 324000 nodes, 14385 on tree, -45.214846 best solution, best possible -45.561714 (305.60 seconds)
Cbc0010I After 325000 nodes, 14080 on tree, -45.214846 best solution, best possible -45.561714 (305.98 seconds)
Cbc0010I After 326000 nodes, 14073 on tree, -45.214846 best solution, best possible -45.549666 (306.81 seconds)
Cbc0010I After 327000 nodes, 13844 on tree, -45.214846 best solution, best possible -45.549666 (307.34 seconds)
Cbc0010I After 328000 nodes, 13654 on tree, -45.214846 best solution, best possible -45.549666 (307.91 seconds)
Cbc0010I After 329000 nodes, 13338 on tree, -45.214846 best solution, best possible -45.549666 (308.24 seconds)
Cbc0010I After 330000 nodes, 13287 on tree, -45.214846 best solution, best possible -45.536797 (309.04 seconds)
Cbc0010I After 331000 nodes, 13064 on tree, -45.214846 best solution, best possible -45.536797 (309.58 seconds)
Cbc0010I After 332000 nodes, 12886 on tree, -45.214846 best solution, best possible -45.536782 (310.16 seconds)
Cbc0010I After 333000 nodes, 12504 on tree, -45.214846 best solution, best possible -45.536782 (310.60 seconds)
Cbc0010I After 334000 nodes, 12438 on tree, -45.214846 best solution, best possible -45.524484 (311.42 seconds)
Cbc0010I After 335000 nodes, 12199 on tree, -45.214846 best solution, best possible -45.524484 (311.93 seconds)
Cbc0010I After 336000 nodes, 11988 on tree, -45.214846 best solution, best possible -45.524484 (312.51 seconds)
Cbc0010I After 337000 nodes, 11543 on tree, -45.214846 best solution, best possible -45.524484 (312.90 seconds)
Cbc0010I After 338000 nodes, 11494 on tree, -45.214846 best solution, best possible -45.511082 (313.73 seconds)
Cbc0010I After 339000 nodes, 11240 on tree, -45.214846 best solution, best possible -45.511082 (314.21 seconds)
Cbc0010I After 340000 nodes, 11050 on tree, -45.214846 best solution, best possible -45.511082 (314.76 seconds)
Cbc0010I After 341000 nodes, 10716 on tree, -45.214846 best solution, best possible -45.511082 (315.09 seconds)
Cbc0010I After 342000 nodes, 10665 on tree, -45.214846 best solution, best possible -45.496609 (315.85 seconds)
Cbc0010I After 343000 nodes, 10439 on tree, -45.214846 best solution, best possible -45.496609 (316.35 seconds)
Cbc0010I After 344000 nodes, 10210 on tree, -45.214846 best solution, best possible -45.496609 (316.93 seconds)
Cbc0010I After 345000 nodes, 9852 on tree, -45.214846 best solution, best possible -45.496609 (317.26 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 24 columns
Cbc0010I After 346000 nodes, 9643 on tree, -45.214846 best solution, best possible -45.496609 (317.85 seconds)
Cbc0010I After 347000 nodes, 9571 on tree, -45.214846 best solution, best possible -45.479628 (318.65 seconds)
Cbc0010I After 348000 nodes, 9431 on tree, -45.214846 best solution, best possible -45.465213 (319.40 seconds)
Cbc0010I After 349000 nodes, 9320 on tree, -45.214846 best solution, best possible -45.453826 (320.11 seconds)
Cbc0010I After 350000 nodes, 9009 on tree, -45.214846 best solution, best possible -45.453801 (320.52 seconds)
Cbc0010I After 351000 nodes, 8866 on tree, -45.214846 best solution, best possible -45.44093 (321.21 seconds)
Cbc0010I After 352000 nodes, 8679 on tree, -45.214846 best solution, best possible -45.429064 (321.88 seconds)
Cbc0010I After 353000 nodes, 8475 on tree, -45.214846 best solution, best possible -45.417406 (322.55 seconds)
Cbc0010I After 354000 nodes, 8139 on tree, -45.214846 best solution, best possible -45.417406 (322.94 seconds)
Cbc0010I After 355000 nodes, 7935 on tree, -45.214846 best solution, best possible -45.408286 (323.61 seconds)
Cbc0010I After 356000 nodes, 7735 on tree, -45.214846 best solution, best possible -45.399081 (324.27 seconds)
Cbc0010I After 357000 nodes, 7503 on tree, -45.214846 best solution, best possible -45.389894 (324.88 seconds)
Cbc0010I After 358000 nodes, 7145 on tree, -45.214846 best solution, best possible -45.389894 (325.23 seconds)
Cbc0010I After 359000 nodes, 6895 on tree, -45.214846 best solution, best possible -45.380148 (325.80 seconds)
Cbc0010I After 360000 nodes, 6629 on tree, -45.214846 best solution, best possible -45.370245 (326.35 seconds)
Cbc0010I After 361000 nodes, 6364 on tree, -45.214846 best solution, best possible -45.360965 (326.94 seconds)
Cbc0010I After 362000 nodes, 5950 on tree, -45.214846 best solution, best possible -45.360965 (327.25 seconds)
Cbc0010I After 363000 nodes, 5676 on tree, -45.214846 best solution, best possible -45.35159 (327.81 seconds)
Cbc0010I After 364000 nodes, 5356 on tree, -45.214846 best solution, best possible -45.342444 (328.33 seconds)
Cbc0010I After 365000 nodes, 5034 on tree, -45.214846 best solution, best possible -45.333118 (328.83 seconds)
Cbc0010I After 366000 nodes, 4642 on tree, -45.214846 best solution, best possible -45.333107 (329.15 seconds)
Cbc0010I After 367000 nodes, 4312 on tree, -45.214846 best solution, best possible -45.322174 (329.65 seconds)
Cbc0010I After 368000 nodes, 3955 on tree, -45.214846 best solution, best possible -45.311343 (330.11 seconds)
Cbc0010I After 369000 nodes, 3593 on tree, -45.214846 best solution, best possible -45.301747 (330.53 seconds)
Cbc0010I After 370000 nodes, 3176 on tree, -45.214846 best solution, best possible -45.301747 (330.83 seconds)
Cbc0010I After 371000 nodes, 2792 on tree, -45.214846 best solution, best possible -45.289912 (331.24 seconds)
Cbc0010I After 372000 nodes, 2414 on tree, -45.214846 best solution, best possible -45.2778 (331.64 seconds)
Cbc0010I After 373000 nodes, 2017 on tree, -45.214846 best solution, best possible -45.266281 (331.98 seconds)
Cbc0010I After 374000 nodes, 1581 on tree, -45.214846 best solution, best possible -45.266281 (332.22 seconds)
Cbc0010I After 375000 nodes, 1166 on tree, -45.214846 best solution, best possible -45.251296 (332.57 seconds)
Cbc0010I After 376000 nodes, 720 on tree, -45.214846 best solution, best possible -45.237604 (332.86 seconds)
Cbc0010I After 377000 nodes, 270 on tree, -45.214846 best solution, best possible -45.223387 (333.10 seconds)
Cbc0001I Search completed - best objective -45.21484623290627, took 20068701 iterations and 3198413 nodes (333.21 seconds)
Cbc0032I Strong branching done 1516196 times (10812394 iterations), fathomed 74416 nodes and fixed 241942 variables
Cbc0041I Maximum depth 30, 895193 variables fixed on reduced cost (complete fathoming 42006 times, 2820841 nodes taking 16153485 iterations)
Cuts at root node changed objective from -49.6784 to -48.0059
Probing was tried 100 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 139949 times and created 179141 cuts of which 0 were active after adding rounds of cuts (8.172 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 139964 times and created 40880 cuts of which 0 were active after adding rounds of cuts (5.323 seconds)
FlowCover was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
TwoMirCuts was tried 139949 times and created 14643 cuts of which 0 were active after adding rounds of cuts (2.663 seconds)
ZeroHalf was tried 139964 times and created 37246 cuts of which 0 were active after adding rounds of cuts (8.934 seconds)

Result - Optimal solution found

Objective value:                45.21484623
Enumerated nodes:               3198413
Total iterations:               20068701
Time (CPU seconds):             331.25
Time (Wallclock seconds):       333.22

Option for printingOptions changed from normal to all
Total time (CPU seconds):       331.25   (Wallclock seconds):       333.22

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/246212122032499db6ae875c9d5bc309-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/246212122032499db6ae875c9d5bc309-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.7079 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.6616 iterations 15
Cbc0038I Solution found of -32.9019
Cbc0038I Cleaned solution of -32.9019
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -32.9019 to -33.2261 (0.00 seconds)
Cbc0038I Round again with cutoff of -33.5743
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.6616 iterations 0
Cbc0038I Pass   3: suminf.    0.29999 (1) obj. -33.5743 iterations 7
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -33.7273 iterations 5
Cbc0038I Pass   5: suminf.    0.30436 (1) obj. -33.5743 iterations 2
Cbc0038I Pass   6: suminf.    0.51793 (3) obj. -33.5743 iterations 15
Cbc0038I Pass   7: suminf.    0.28571 (2) obj. -33.8023 iterations 10
Cbc0038I Pass   8: suminf.    0.53846 (2) obj. -33.5743 iterations 5
Cbc0038I Pass   9: suminf.    0.56203 (3) obj. -33.5743 iterations 15
Cbc0038I Pass  10: suminf.    0.50825 (3) obj. -33.5743 iterations 4
Cbc0038I Pass  11: suminf.    0.19706 (2) obj. -33.5743 iterations 2
Cbc0038I Pass  12: suminf.    0.19706 (2) obj. -33.5743 iterations 0
Cbc0038I Pass  13: suminf.    0.25657 (2) obj. -33.5743 iterations 2
Cbc0038I Pass  14: suminf.    0.07013 (1) obj. -33.5743 iterations 7
Cbc0038I Pass  15: suminf.    0.07013 (1) obj. -33.5743 iterations 3
Cbc0038I Pass  16: suminf.    0.14286 (1) obj. -34.1602 iterations 4
Cbc0038I Pass  17: suminf.    0.24604 (1) obj. -33.5743 iterations 1
Cbc0038I Pass  18: suminf.    0.26899 (2) obj. -33.5743 iterations 6
Cbc0038I Pass  19: suminf.    0.51638 (7) obj. -33.5743 iterations 25
Cbc0038I Pass  20: suminf.    0.14286 (1) obj. -33.7124 iterations 8
Cbc0038I Pass  21: suminf.    0.29592 (1) obj. -33.5743 iterations 2
Cbc0038I Pass  22: suminf.    1.00940 (5) obj. -33.5743 iterations 14
Cbc0038I Pass  23: suminf.    0.28571 (2) obj. -33.7904 iterations 8
Cbc0038I Pass  24: suminf.    0.52523 (2) obj. -33.5743 iterations 5
Cbc0038I Pass  25: suminf.    0.49594 (3) obj. -33.5743 iterations 12
Cbc0038I Pass  26: suminf.    0.28571 (2) obj. -33.6079 iterations 10
Cbc0038I Pass  27: suminf.    0.32289 (2) obj. -33.5743 iterations 4
Cbc0038I Pass  28: suminf.    0.22478 (1) obj. -33.5743 iterations 6
Cbc0038I Pass  29: suminf.    0.14286 (1) obj. -33.6559 iterations 5
Cbc0038I Pass  30: suminf.    0.23325 (1) obj. -33.5743 iterations 3
Cbc0038I Pass  31: suminf.    0.30712 (3) obj. -33.5743 iterations 17
Cbc0038I Rounding solution of -33.5865 is better than previous of -33.2261

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.2108
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -36.6616 iterations 0
Cbc0038I Pass  32: suminf.    0.53833 (2) obj. -34.2108 iterations 9
Cbc0038I Pass  33: suminf.    0.28571 (2) obj. -34.4289 iterations 12
Cbc0038I Pass  34: suminf.    0.62363 (2) obj. -34.2108 iterations 5
Cbc0038I Pass  35: suminf.    0.54742 (2) obj. -34.2108 iterations 1
Cbc0038I Pass  36: suminf.    0.23158 (2) obj. -34.2108 iterations 8
Cbc0038I Pass  37: suminf.    0.24686 (2) obj. -34.2108 iterations 7
Cbc0038I Pass  38: suminf.    0.14286 (1) obj. -34.2251 iterations 8
Cbc0038I Pass  39: suminf.    0.15875 (1) obj. -34.2108 iterations 3
Cbc0038I Pass  40: suminf.    0.16239 (2) obj. -34.2108 iterations 2
Cbc0038I Pass  41: suminf.    0.47507 (4) obj. -34.2108 iterations 16
Cbc0038I Pass  42: suminf.    1.83478 (7) obj. -34.2108 iterations 5
Cbc0038I Pass  43: suminf.    0.78348 (3) obj. -34.2108 iterations 8
Cbc0038I Pass  44: suminf.    0.28571 (2) obj. -34.6029 iterations 8
Cbc0038I Pass  45: suminf.    0.56532 (2) obj. -34.2108 iterations 7
Cbc0038I Pass  46: suminf.    0.49661 (2) obj. -34.2108 iterations 1
Cbc0038I Pass  47: suminf.    0.14286 (1) obj. -34.2251 iterations 7
Cbc0038I Pass  48: suminf.    0.15875 (1) obj. -34.2108 iterations 4
Cbc0038I Pass  49: suminf.    0.38594 (3) obj. -34.2108 iterations 14
Cbc0038I Pass  50: suminf.    0.38594 (3) obj. -34.2108 iterations 3
Cbc0038I Pass  51: suminf.    0.18658 (1) obj. -34.2108 iterations 3
Cbc0038I Pass  52: suminf.    0.31173 (2) obj. -34.2108 iterations 12
Cbc0038I Pass  53: suminf.    0.31190 (8) obj. -34.2108 iterations 7
Cbc0038I Pass  54: suminf.    0.28610 (3) obj. -34.2108 iterations 5
Cbc0038I Pass  55: suminf.    0.61621 (3) obj. -34.2108 iterations 6
Cbc0038I Pass  56: suminf.    0.77007 (5) obj. -34.2108 iterations 13
Cbc0038I Pass  57: suminf.    0.61271 (4) obj. -34.2108 iterations 8
Cbc0038I Pass  58: suminf.    0.91474 (2) obj. -34.2108 iterations 19
Cbc0038I Pass  59: suminf.    0.18658 (1) obj. -34.2108 iterations 1
Cbc0038I Pass  60: suminf.    0.14286 (1) obj. -34.2251 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -33.5865 - took 0.04 seconds
Cbc0012I Integer solution of -33.58653 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 6 rows 9 columns
Cbc0031I 22 added rows had average density of 60.772727
Cbc0013I At root node, 22 cuts changed objective from -36.707888 to -34.632305 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 818 row cuts average 81.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 63 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.58653 best solution, best possible -34.632305 (0.23 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 29 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 31 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 38 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 18 columns
Cbc0010I After 1000 nodes, 5 on tree, -33.58653 best solution, best possible -34.6323 (1.92 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 32 columns
Cbc0001I Search completed - best objective -33.58652990683899, took 170789 iterations and 21823 nodes (2.14 seconds)
Cbc0032I Strong branching done 9766 times (67455 iterations), fathomed 277 nodes and fixed 767 variables
Cbc0041I Maximum depth 25, 3353 variables fixed on reduced cost (complete fathoming 184 times, 20659 nodes taking 149480 iterations)
Cuts at root node changed objective from -36.7079 to -34.6323
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 467 times and created 1190 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 100 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.58652991
Enumerated nodes:               21823
Total iterations:               170789
Time (CPU seconds):             2.10
Time (Wallclock seconds):       2.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.14

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/49e0aecd3ffd4c53936529e96f0041f7-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/49e0aecd3ffd4c53936529e96f0041f7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.3631 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.3458 iterations 9
Cbc0038I Solution found of -13.8931
Cbc0038I Cleaned solution of -13.8931
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -13.8931 to -13.9794 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.2178
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.3458 iterations 0
Cbc0038I Pass   3: suminf.    0.34259 (1) obj. -14.2178 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.7023 iterations 6
Cbc0038I Pass   5: suminf.    0.09601 (1) obj. -14.2178 iterations 3
Cbc0038I Pass   6: suminf.    0.40000 (1) obj. -14.6297 iterations 7
Cbc0038I Solution found of -14.2659
Cbc0038I Cleaned solution of -14.2659
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.6853
Cbc0038I Pass   7: suminf.    0.80000 (4) obj. -16.3458 iterations 0
Cbc0038I Pass   8: suminf.    0.24708 (2) obj. -14.6853 iterations 7
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -14.7023 iterations 2
Cbc0038I Pass  10: suminf.    0.54085 (2) obj. -14.6853 iterations 8
Cbc0038I Pass  11: suminf.    0.47631 (2) obj. -14.6853 iterations 1
Cbc0038I Pass  12: suminf.    0.20000 (1) obj. -14.8146 iterations 10
Cbc0038I Pass  13: suminf.    0.34343 (1) obj. -14.6853 iterations 2
Cbc0038I Pass  14: suminf.    0.30054 (2) obj. -14.6853 iterations 8
Cbc0038I Pass  15: suminf.    0.20000 (1) obj. -14.8199 iterations 2
Cbc0038I Pass  16: suminf.    0.42452 (1) obj. -14.6853 iterations 3
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. -15.0799 iterations 7
Cbc0038I Pass  18: suminf.    0.20000 (1) obj. -14.7559 iterations 3
Cbc0038I Pass  19: suminf.    0.27834 (1) obj. -14.6853 iterations 2
Cbc0038I Pass  20: suminf.    0.54070 (2) obj. -14.6853 iterations 6
Cbc0038I Pass  21: suminf.    0.54070 (2) obj. -14.6853 iterations 1
Cbc0038I Pass  22: suminf.    0.20000 (1) obj. -14.8671 iterations 5
Cbc0038I Pass  23: suminf.    0.40171 (1) obj. -14.6853 iterations 3
Cbc0038I Pass  24: suminf.    0.49376 (1) obj. -14.6853 iterations 9
Cbc0038I Pass  25: suminf.    0.49376 (1) obj. -14.6853 iterations 2
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -14.9257 iterations 5
Cbc0038I Pass  27: suminf.    0.46680 (1) obj. -14.6853 iterations 3
Cbc0038I Pass  28: suminf.    0.42297 (1) obj. -14.6853 iterations 2
Cbc0038I Pass  29: suminf.    0.42297 (1) obj. -14.6853 iterations 0
Cbc0038I Pass  30: suminf.    0.42297 (1) obj. -14.6853 iterations 0
Cbc0038I Pass  31: suminf.    0.42297 (1) obj. -14.6853 iterations 0
Cbc0038I Pass  32: suminf.    0.42297 (1) obj. -14.6853 iterations 1
Cbc0038I Pass  33: suminf.    0.35677 (2) obj. -14.6853 iterations 7
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -14.8146 iterations 5
Cbc0038I Pass  35: suminf.    0.34343 (1) obj. -14.6853 iterations 4
Cbc0038I Pass  36: suminf.    0.42452 (1) obj. -14.6853 iterations 3
Cbc0038I Rounding solution of -14.377 is better than previous of -14.2659

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.1887
Cbc0038I Pass  36: suminf.    0.80000 (4) obj. -16.3458 iterations 0
Cbc0038I Pass  37: suminf.    0.45772 (2) obj. -15.1887 iterations 7
Cbc0038I Pass  38: suminf.    0.40000 (2) obj. -15.254 iterations 6
Cbc0038I Pass  39: suminf.    0.62404 (2) obj. -15.1887 iterations 3
Cbc0038I Pass  40: suminf.    0.40000 (2) obj. -15.3686 iterations 7
Cbc0038I Pass  41: suminf.    0.65979 (2) obj. -15.1887 iterations 4
Cbc0038I Pass  42: suminf.    0.66250 (3) obj. -15.1887 iterations 5
Cbc0038I Pass  43: suminf.    1.49509 (6) obj. -15.1887 iterations 4
Cbc0038I Pass  44: suminf.    0.69051 (2) obj. -15.1887 iterations 4
Cbc0038I Pass  45: suminf.    0.69051 (2) obj. -15.1887 iterations 0
Cbc0038I Pass  46: suminf.    0.67544 (2) obj. -15.1887 iterations 5
Cbc0038I Pass  47: suminf.    0.54346 (2) obj. -15.1887 iterations 4
Cbc0038I Pass  48: suminf.    0.65162 (2) obj. -15.1887 iterations 7
Cbc0038I Pass  49: suminf.    0.54346 (2) obj. -15.1887 iterations 6
Cbc0038I Pass  50: suminf.    0.73937 (3) obj. -15.1887 iterations 8
Cbc0038I Pass  51: suminf.    0.73937 (3) obj. -15.1887 iterations 6
Cbc0038I Pass  52: suminf.    0.73115 (6) obj. -15.1887 iterations 10
Cbc0038I Pass  53: suminf.    0.68024 (2) obj. -15.1887 iterations 4
Cbc0038I Pass  54: suminf.    0.64797 (2) obj. -15.1887 iterations 1
Cbc0038I Pass  55: suminf.    0.54346 (2) obj. -15.1887 iterations 7
Cbc0038I Pass  56: suminf.    0.65162 (2) obj. -15.1887 iterations 6
Cbc0038I Pass  57: suminf.    0.73937 (3) obj. -15.1887 iterations 2
Cbc0038I Pass  58: suminf.    0.73937 (3) obj. -15.1887 iterations 5
Cbc0038I Pass  59: suminf.    0.73115 (6) obj. -15.1887 iterations 11
Cbc0038I Pass  60: suminf.    0.68024 (2) obj. -15.1887 iterations 4
Cbc0038I Pass  61: suminf.    0.64797 (2) obj. -15.1887 iterations 1
Cbc0038I Pass  62: suminf.    0.54346 (2) obj. -15.1887 iterations 7
Cbc0038I Pass  63: suminf.    0.65162 (2) obj. -15.1887 iterations 6
Cbc0038I Pass  64: suminf.    0.72167 (2) obj. -15.1887 iterations 11
Cbc0038I Pass  65: suminf.    0.40000 (2) obj. -15.3686 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.377 - took 0.02 seconds
Cbc0012I Integer solution of -14.377042 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 4 rows 6 columns
Cbc0031I 10 added rows had average density of 32.7
Cbc0013I At root node, 10 cuts changed objective from -16.363095 to -15.060882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 650 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.377042 best solution, best possible -15.060882 (0.09 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 9 rows 12 columns
Cbc0001I Search completed - best objective -14.37704217061396, took 4413 iterations and 120 nodes (0.19 seconds)
Cbc0032I Strong branching done 1010 times (4717 iterations), fathomed 30 nodes and fixed 25 variables
Cbc0035I Maximum depth 11, 198 variables fixed on reduced cost
Cuts at root node changed objective from -16.3631 to -15.0609
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 299 times and created 1157 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 299 times and created 107 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.37704217
Enumerated nodes:               120
Total iterations:               4413
Time (CPU seconds):             0.19
Time (Wallclock seconds):       0.19

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cd0443ead5434532a0e228a57bf7b852-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/cd0443ead5434532a0e228a57bf7b852-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.6406 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.6083 iterations 3
Cbc0038I Solution found of -14.1274
Cbc0038I Cleaned solution of -14.1274
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -14.1274 to -14.2889 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.524
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.6083 iterations 0
Cbc0038I Pass   3: suminf.    0.44120 (1) obj. -14.524 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.8311 iterations 4
Cbc0038I Pass   5: suminf.    0.48537 (1) obj. -14.524 iterations 1
Cbc0038I Pass   6: suminf.    0.24757 (1) obj. -14.524 iterations 4
Cbc0038I Pass   7: suminf.    0.24757 (1) obj. -14.524 iterations 0
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -14.9926 iterations 2
Cbc0038I Pass   9: suminf.    0.32000 (1) obj. -14.524 iterations 1
Cbc0038I Pass  10: suminf.    0.61528 (2) obj. -14.524 iterations 2
Cbc0038I Pass  11: suminf.    0.54810 (2) obj. -14.524 iterations 1
Cbc0038I Solution found of -14.5669
Cbc0038I Cleaned solution of -14.5669
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 8 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.9816
Cbc0038I Pass  12: suminf.    0.80000 (4) obj. -16.6083 iterations 0
Cbc0038I Pass  13: suminf.    0.35184 (2) obj. -14.9816 iterations 6
Cbc0038I Pass  14: suminf.    0.28932 (2) obj. -14.9816 iterations 1
Cbc0038I Pass  15: suminf.    0.20000 (1) obj. -15.0996 iterations 6
Cbc0038I Pass  16: suminf.    0.32091 (1) obj. -14.9816 iterations 2
Cbc0038I Pass  17: suminf.    0.42784 (1) obj. -14.9816 iterations 4
Cbc0038I Pass  18: suminf.    0.35906 (1) obj. -14.9816 iterations 5
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -15.111 iterations 8
Cbc0038I Pass  20: suminf.    0.35906 (1) obj. -14.9816 iterations 2
Cbc0038I Pass  21: suminf.    0.44962 (2) obj. -14.9816 iterations 7
Cbc0038I Pass  22: suminf.    0.20000 (1) obj. -15.1103 iterations 5
Cbc0038I Pass  23: suminf.    0.33180 (1) obj. -14.9816 iterations 3
Cbc0038I Pass  24: suminf.    0.65776 (2) obj. -14.9816 iterations 2
Cbc0038I Pass  25: suminf.    0.40050 (2) obj. -14.9816 iterations 6
Cbc0038I Pass  26: suminf.    0.53318 (4) obj. -14.9816 iterations 16
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -14.9884 iterations 6
Cbc0038I Pass  28: suminf.    0.20695 (1) obj. -14.9816 iterations 4
Cbc0038I Pass  29: suminf.    0.45161 (3) obj. -14.9816 iterations 6
Cbc0038I Pass  30: suminf.    0.45161 (3) obj. -14.9816 iterations 2
Cbc0038I Pass  31: suminf.    0.44236 (1) obj. -14.9816 iterations 4
Cbc0038I Pass  32: suminf.    0.20000 (1) obj. -15.1103 iterations 5
Cbc0038I Pass  33: suminf.    0.33180 (1) obj. -14.9816 iterations 3
Cbc0038I Pass  34: suminf.    0.69538 (3) obj. -14.9816 iterations 8
Cbc0038I Pass  35: suminf.    0.58547 (3) obj. -14.9816 iterations 6
Cbc0038I Pass  36: suminf.    0.47512 (2) obj. -14.9816 iterations 11
Cbc0038I Pass  37: suminf.    0.43946 (2) obj. -14.9816 iterations 3
Cbc0038I Pass  38: suminf.    0.24712 (2) obj. -14.9816 iterations 5
Cbc0038I Pass  39: suminf.    0.20000 (1) obj. -15.111 iterations 8
Cbc0038I Pass  40: suminf.    0.35906 (1) obj. -14.9816 iterations 2
Cbc0038I Pass  41: suminf.    0.81640 (2) obj. -14.9816 iterations 7
Cbc0038I Rounding solution of -14.5734 is better than previous of -14.5669

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -14.5734 to -14.5775 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.4793
Cbc0038I Pass  41: suminf.    0.80000 (4) obj. -16.6083 iterations 0
Cbc0038I Pass  42: suminf.    0.48858 (2) obj. -15.4793 iterations 5
Cbc0038I Pass  43: suminf.    0.40000 (2) obj. -15.5607 iterations 3
Cbc0038I Pass  44: suminf.    0.49308 (2) obj. -15.4793 iterations 3
Cbc0038I Pass  45: suminf.    1.01008 (3) obj. -15.4793 iterations 10
Cbc0038I Pass  46: suminf.    0.58215 (3) obj. -15.4793 iterations 5
Cbc0038I Pass  47: suminf.    0.52878 (2) obj. -15.4793 iterations 6
Cbc0038I Pass  48: suminf.    0.68542 (2) obj. -15.4793 iterations 6
Cbc0038I Pass  49: suminf.    0.40000 (2) obj. -15.6479 iterations 12
Cbc0038I Pass  50: suminf.    0.60731 (2) obj. -15.4793 iterations 4
Cbc0038I Pass  51: suminf.    0.67220 (2) obj. -15.4793 iterations 7
Cbc0038I Pass  52: suminf.    0.67220 (2) obj. -15.4793 iterations 1
Cbc0038I Pass  53: suminf.    0.66547 (2) obj. -15.4793 iterations 3
Cbc0038I Pass  54: suminf.    0.67519 (2) obj. -15.4793 iterations 2
Cbc0038I Pass  55: suminf.    0.67802 (2) obj. -15.4793 iterations 1
Cbc0038I Pass  56: suminf.    0.40000 (2) obj. -15.6479 iterations 6
Cbc0038I Pass  57: suminf.    0.60731 (2) obj. -15.4793 iterations 4
Cbc0038I Pass  58: suminf.    1.36002 (6) obj. -15.4793 iterations 14
Cbc0038I Pass  59: suminf.    0.64768 (3) obj. -15.4793 iterations 5
Cbc0038I Pass  60: suminf.    1.55615 (6) obj. -15.4793 iterations 5
Cbc0038I Pass  61: suminf.    0.67220 (2) obj. -15.4793 iterations 3
Cbc0038I Pass  62: suminf.    0.67220 (2) obj. -15.4793 iterations 1
Cbc0038I Pass  63: suminf.    0.66547 (2) obj. -15.4793 iterations 5
Cbc0038I Pass  64: suminf.    0.67519 (2) obj. -15.4793 iterations 2
Cbc0038I Pass  65: suminf.    0.65735 (2) obj. -15.4793 iterations 3
Cbc0038I Pass  66: suminf.    0.65735 (2) obj. -15.4793 iterations 0
Cbc0038I Pass  67: suminf.    0.49481 (2) obj. -15.4793 iterations 9
Cbc0038I Pass  68: suminf.    0.40000 (2) obj. -15.5714 iterations 7
Cbc0038I Pass  69: suminf.    0.50524 (2) obj. -15.4793 iterations 3
Cbc0038I Pass  70: suminf.    0.60359 (2) obj. -15.4793 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.5775 - took 0.02 seconds
Cbc0012I Integer solution of -14.577509 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 9 rows 10 columns
Cbc0031I 11 added rows had average density of 28.727273
Cbc0013I At root node, 11 cuts changed objective from -16.640582 to -15.23194 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 462 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.577509 best solution, best possible -15.23194 (0.09 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 21 columns
Cbc0001I Search completed - best objective -14.57750888541339, took 5086 iterations and 130 nodes (0.22 seconds)
Cbc0032I Strong branching done 1412 times (6151 iterations), fathomed 40 nodes and fixed 40 variables
Cbc0035I Maximum depth 11, 262 variables fixed on reduced cost
Cuts at root node changed objective from -16.6406 to -15.2319
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 369 times and created 1278 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 100 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.57750889
Enumerated nodes:               130
Total iterations:               5086
Time (CPU seconds):             0.21
Time (Wallclock seconds):       0.22

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/967a210d9b534ca78d9ca60bf74e330e-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/967a210d9b534ca78d9ca60bf74e330e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 50.6445 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -50.6091 iterations 37
Cbc0038I Solution found of -45.038
Cbc0038I Cleaned solution of -45.038
Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -45.038 to -45.3214 (0.00 seconds)
Cbc0038I Round again with cutoff of -45.8538
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -50.6091 iterations 0
Cbc0038I Pass   3: suminf.    0.17196 (1) obj. -45.8538 iterations 8
Cbc0038I Pass   4: suminf.    0.12500 (1) obj. -45.9108 iterations 12
Cbc0038I Pass   5: suminf.    0.25154 (2) obj. -45.8538 iterations 13
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -45.894 iterations 2
Cbc0038I Pass   7: suminf.    0.42610 (1) obj. -45.8538 iterations 2
Cbc0038I Pass   8: suminf.    0.12500 (1) obj. -46.1558 iterations 12
Cbc0038I Pass   9: suminf.    0.48703 (1) obj. -45.8538 iterations 2
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -46.0921 iterations 10
Cbc0038I Pass  11: suminf.    0.49395 (1) obj. -45.8538 iterations 2
Cbc0038I Pass  12: suminf.    0.23229 (2) obj. -45.8538 iterations 22
Cbc0038I Pass  13: suminf.    0.22298 (2) obj. -45.8538 iterations 2
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -45.8636 iterations 10
Cbc0038I Solution found of -45.8636
Cbc0038I Cleaned solution of -45.8636
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -45.8636 to -45.9587 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.8958
Cbc0038I Pass  15: suminf.    0.87500 (7) obj. -50.6091 iterations 0
Cbc0038I Pass  16: suminf.    0.39908 (3) obj. -46.8958 iterations 26
Cbc0038I Pass  17: suminf.    0.35007 (3) obj. -46.8958 iterations 2
Cbc0038I Pass  18: suminf.    0.52914 (2) obj. -46.8958 iterations 14
Cbc0038I Pass  19: suminf.    0.25000 (2) obj. -47.1742 iterations 10
Cbc0038I Pass  20: suminf.    0.55162 (2) obj. -46.8958 iterations 5
Cbc0038I Pass  21: suminf.    0.53063 (2) obj. -46.8958 iterations 1
Cbc0038I Pass  22: suminf.    0.83522 (2) obj. -46.8958 iterations 19
Cbc0038I Pass  23: suminf.    0.37500 (2) obj. -47.2026 iterations 14
Cbc0038I Pass  24: suminf.    0.70755 (2) obj. -46.8958 iterations 5
Cbc0038I Pass  25: suminf.    0.71635 (3) obj. -46.8958 iterations 26
Cbc0038I Pass  26: suminf.    0.69130 (3) obj. -46.8958 iterations 3
Cbc0038I Pass  27: suminf.    3.52613 (10) obj. -46.8958 iterations 26
Cbc0038I Pass  28: suminf.    0.39043 (2) obj. -46.8958 iterations 8
Cbc0038I Pass  29: suminf.    0.37045 (2) obj. -46.8958 iterations 1
Cbc0038I Pass  30: suminf.    0.38087 (2) obj. -46.8958 iterations 3
Cbc0038I Pass  31: suminf.    0.50553 (3) obj. -46.8958 iterations 27
Cbc0038I Pass  32: suminf.    0.50135 (3) obj. -46.8958 iterations 5
Cbc0038I Pass  33: suminf.    1.39847 (10) obj. -46.8958 iterations 15
Cbc0038I Pass  34: suminf.    0.50528 (3) obj. -46.8958 iterations 7
Cbc0038I Pass  35: suminf.    1.56018 (8) obj. -46.8958 iterations 24
Cbc0038I Pass  36: suminf.    0.37765 (2) obj. -46.8958 iterations 11
Cbc0038I Pass  37: suminf.    0.35589 (2) obj. -46.8958 iterations 2
Cbc0038I Pass  38: suminf.    0.22209 (2) obj. -46.8958 iterations 9
Cbc0038I Pass  39: suminf.    0.23497 (2) obj. -46.8958 iterations 2
Cbc0038I Pass  40: suminf.    0.95521 (3) obj. -46.8958 iterations 15
Cbc0038I Pass  41: suminf.    0.37500 (2) obj. -47.362 iterations 16
Cbc0038I Pass  42: suminf.    0.61960 (2) obj. -46.8958 iterations 6
Cbc0038I Pass  43: suminf.    0.58648 (2) obj. -46.8958 iterations 2
Cbc0038I Pass  44: suminf.    0.71647 (2) obj. -46.8958 iterations 5
Cbc0038I Rounding solution of -46.1487 is better than previous of -45.9587

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 32 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -48.0204
Cbc0038I Pass  44: suminf.    0.87500 (7) obj. -50.6091 iterations 0
Cbc0038I Pass  45: suminf.    0.79151 (4) obj. -48.0204 iterations 32
Cbc0038I Pass  46: suminf.    0.71792 (4) obj. -48.0204 iterations 3
Cbc0038I Pass  47: suminf.    0.89699 (4) obj. -48.0204 iterations 27
Cbc0038I Pass  48: suminf.    0.57306 (4) obj. -48.0204 iterations 6
Cbc0038I Pass  49: suminf.    0.44790 (3) obj. -48.0204 iterations 6
Cbc0038I Pass  50: suminf.    0.37500 (3) obj. -48.072 iterations 8
Cbc0038I Pass  51: suminf.    0.44095 (3) obj. -48.0204 iterations 8
Cbc0038I Pass  52: suminf.    0.37581 (4) obj. -48.0204 iterations 21
Cbc0038I Pass  53: suminf.    0.37500 (3) obj. -48.0282 iterations 13
Cbc0038I Pass  54: suminf.    0.38460 (3) obj. -48.0204 iterations 7
Cbc0038I Pass  55: suminf.    1.34499 (6) obj. -48.0204 iterations 38
Cbc0038I Pass  56: suminf.    1.02883 (4) obj. -48.0204 iterations 18
Cbc0038I Pass  57: suminf.    1.01408 (8) obj. -48.0204 iterations 22
Cbc0038I Pass  58: suminf.    0.50000 (3) obj. -48.0481 iterations 16
Cbc0038I Pass  59: suminf.    0.53442 (3) obj. -48.0204 iterations 9
Cbc0038I Pass  60: suminf.    0.64316 (5) obj. -48.0204 iterations 9
Cbc0038I Pass  61: suminf.    0.50000 (4) obj. -48.1243 iterations 15
Cbc0038I Pass  62: suminf.    0.63292 (4) obj. -48.0204 iterations 12
Cbc0038I Pass  63: suminf.    0.93477 (4) obj. -48.0204 iterations 36
Cbc0038I Pass  64: suminf.    0.55838 (5) obj. -48.0204 iterations 18
Cbc0038I Pass  65: suminf.    0.92955 (4) obj. -48.0204 iterations 20
Cbc0038I Pass  66: suminf.    0.65748 (3) obj. -48.0204 iterations 4
Cbc0038I Pass  67: suminf.    0.37500 (3) obj. -48.2314 iterations 9
Cbc0038I Pass  68: suminf.    0.64495 (3) obj. -48.0204 iterations 8
Cbc0038I Pass  69: suminf.    0.60653 (4) obj. -48.0204 iterations 9
Cbc0038I Pass  70: suminf.    0.92029 (5) obj. -48.0204 iterations 21
Cbc0038I Pass  71: suminf.    2.54693 (10) obj. -48.0204 iterations 17
Cbc0038I Pass  72: suminf.    0.99494 (5) obj. -48.0204 iterations 20
Cbc0038I Pass  73: suminf.    0.51301 (5) obj. -48.0204 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 38 rows 62 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -46.1487 - took 0.06 seconds
Cbc0012I Integer solution of -46.148655 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 20 columns
Cbc0031I 23 added rows had average density of 73.652174
Cbc0013I At root node, 23 cuts changed objective from -50.64449 to -48.992947 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1400 row cuts average 107.8 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 66 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 81 row cuts average 52.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 113 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -46.148655 best solution, best possible -48.992947 (0.41 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 35 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 22 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 37 columns
Cbc0010I After 1000 nodes, 328 on tree, -46.148655 best solution, best possible -48.992947 (8.51 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0010I After 2000 nodes, 343 on tree, -46.148655 best solution, best possible -48.992947 (10.99 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 29 columns
Cbc0010I After 3000 nodes, 341 on tree, -46.148655 best solution, best possible -48.992947 (11.87 seconds)
Cbc0010I After 4000 nodes, 342 on tree, -46.148655 best solution, best possible -48.992947 (13.38 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 26 columns
Cbc0010I After 5000 nodes, 341 on tree, -46.148655 best solution, best possible -48.992947 (14.64 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 34 columns
Cbc0010I After 6000 nodes, 272 on tree, -46.148655 best solution, best possible -48.992947 (15.32 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 13 rows 18 columns
Cbc0010I After 7000 nodes, 232 on tree, -46.148655 best solution, best possible -48.992947 (16.02 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 27 columns
Cbc0010I After 8000 nodes, 220 on tree, -46.148655 best solution, best possible -48.992947 (16.74 seconds)
Cbc0010I After 9000 nodes, 210 on tree, -46.148655 best solution, best possible -48.992947 (17.44 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 35 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 21 columns
Cbc0010I After 10000 nodes, 192 on tree, -46.148655 best solution, best possible -48.992947 (18.04 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 23 columns
Cbc0010I After 11000 nodes, 178 on tree, -46.148655 best solution, best possible -48.992947 (18.67 seconds)
Cbc0010I After 12000 nodes, 672 on tree, -46.148655 best solution, best possible -47.841047 (20.56 seconds)
Cbc0010I After 13000 nodes, 1172 on tree, -46.148655 best solution, best possible -47.688557 (21.87 seconds)
Cbc0010I After 14000 nodes, 1136 on tree, -46.148655 best solution, best possible -47.688557 (24.14 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 34 columns
Cbc0010I After 15000 nodes, 1634 on tree, -46.148655 best solution, best possible -47.59745 (25.41 seconds)
Cbc0010I After 16000 nodes, 2126 on tree, -46.148655 best solution, best possible -47.536327 (26.66 seconds)
Cbc0010I After 17000 nodes, 2622 on tree, -46.148655 best solution, best possible -47.487117 (27.75 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 34 columns
Cbc0010I After 18000 nodes, 2538 on tree, -46.148655 best solution, best possible -47.487117 (29.83 seconds)
Cbc0010I After 19000 nodes, 3037 on tree, -46.148655 best solution, best possible -47.441713 (30.90 seconds)
Cbc0010I After 20000 nodes, 3532 on tree, -46.148655 best solution, best possible -47.405015 (31.88 seconds)
Cbc0010I After 21000 nodes, 4012 on tree, -46.148655 best solution, best possible -47.372988 (33.18 seconds)
Cbc0010I After 22000 nodes, 3892 on tree, -46.148655 best solution, best possible -47.372988 (35.13 seconds)
Cbc0010I After 23000 nodes, 4385 on tree, -46.148655 best solution, best possible -47.343878 (36.29 seconds)
Cbc0010I After 24000 nodes, 4872 on tree, -46.148655 best solution, best possible -47.317016 (37.40 seconds)
Cbc0010I After 25000 nodes, 5365 on tree, -46.148655 best solution, best possible -47.295242 (38.28 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0010I After 26000 nodes, 5233 on tree, -46.148655 best solution, best possible -47.29517 (40.13 seconds)
Cbc0010I After 27000 nodes, 5731 on tree, -46.148655 best solution, best possible -47.275352 (41.09 seconds)
Cbc0010I After 28000 nodes, 6221 on tree, -46.148655 best solution, best possible -47.256611 (42.04 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 21 columns
Cbc0010I After 29000 nodes, 6709 on tree, -46.148655 best solution, best possible -47.240693 (42.98 seconds)
Cbc0010I After 30000 nodes, 6558 on tree, -46.148655 best solution, best possible -47.240693 (44.79 seconds)
Cbc0010I After 31000 nodes, 7058 on tree, -46.148655 best solution, best possible -47.225206 (45.82 seconds)
Cbc0010I After 32000 nodes, 7555 on tree, -46.148655 best solution, best possible -47.211623 (46.60 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 22 columns
Cbc0010I After 33000 nodes, 8048 on tree, -46.148655 best solution, best possible -47.19767 (47.37 seconds)
Cbc0010I After 34000 nodes, 7896 on tree, -46.148655 best solution, best possible -47.19767 (48.91 seconds)
Cbc0010I After 35000 nodes, 8393 on tree, -46.148655 best solution, best possible -47.183373 (49.86 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 32 columns
Cbc0010I After 36000 nodes, 8883 on tree, -46.148655 best solution, best possible -47.170864 (50.70 seconds)
Cbc0010I After 37000 nodes, 9373 on tree, -46.148655 best solution, best possible -47.159171 (51.53 seconds)
Cbc0010I After 38000 nodes, 9294 on tree, -46.148655 best solution, best possible -47.159171 (52.38 seconds)
Cbc0010I After 39000 nodes, 9790 on tree, -46.148655 best solution, best possible -47.148302 (53.14 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 27 columns
Cbc0010I After 40000 nodes, 10288 on tree, -46.148655 best solution, best possible -47.13904 (53.81 seconds)
Cbc0010I After 41000 nodes, 10306 on tree, -46.148655 best solution, best possible -47.13904 (54.16 seconds)
Cbc0010I After 42000 nodes, 10210 on tree, -46.148655 best solution, best possible -47.13904 (55.06 seconds)
Cbc0010I After 43000 nodes, 10681 on tree, -46.148655 best solution, best possible -47.13904 (55.67 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 22 columns
Cbc0010I After 44000 nodes, 11122 on tree, -46.148655 best solution, best possible -47.13904 (56.24 seconds)
Cbc0010I After 45000 nodes, 10943 on tree, -46.148655 best solution, best possible -47.13904 (56.54 seconds)
Cbc0010I After 46000 nodes, 10850 on tree, -46.148655 best solution, best possible -47.139038 (57.26 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 28 columns
Cbc0010I After 47000 nodes, 11230 on tree, -46.148655 best solution, best possible -47.139033 (57.93 seconds)
Cbc0010I After 48000 nodes, 11608 on tree, -46.148655 best solution, best possible -47.139033 (58.53 seconds)
Cbc0010I After 49000 nodes, 11381 on tree, -46.148655 best solution, best possible -47.139033 (58.84 seconds)
Cbc0010I After 50000 nodes, 11295 on tree, -46.148655 best solution, best possible -47.139033 (59.43 seconds)
Cbc0010I After 51000 nodes, 11663 on tree, -46.148655 best solution, best possible -47.139033 (60.12 seconds)
Cbc0010I After 52000 nodes, 12044 on tree, -46.148655 best solution, best possible -47.139033 (60.73 seconds)
Cbc0010I After 53000 nodes, 11831 on tree, -46.148655 best solution, best possible -47.139033 (61.06 seconds)
Cbc0010I After 54000 nodes, 11719 on tree, -46.148655 best solution, best possible -47.139006 (61.65 seconds)
Cbc0010I After 55000 nodes, 12063 on tree, -46.148655 best solution, best possible -47.139006 (62.38 seconds)
Cbc0010I After 56000 nodes, 12403 on tree, -46.148655 best solution, best possible -47.139006 (63.13 seconds)
Cbc0010I After 57000 nodes, 12186 on tree, -46.148655 best solution, best possible -47.139006 (63.47 seconds)
Cbc0010I After 58000 nodes, 12055 on tree, -46.148655 best solution, best possible -47.139006 (64.00 seconds)
Cbc0010I After 59000 nodes, 12412 on tree, -46.148655 best solution, best possible -47.139006 (64.80 seconds)
Cbc0010I After 60000 nodes, 12740 on tree, -46.148655 best solution, best possible -47.139006 (65.56 seconds)
Cbc0010I After 61000 nodes, 12513 on tree, -46.148655 best solution, best possible -47.139006 (65.94 seconds)
Cbc0010I After 62000 nodes, 12372 on tree, -46.148655 best solution, best possible -47.138996 (66.49 seconds)
Cbc0010I After 63000 nodes, 12747 on tree, -46.148655 best solution, best possible -47.138996 (67.23 seconds)
Cbc0010I After 64000 nodes, 13083 on tree, -46.148655 best solution, best possible -47.138996 (67.89 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 24 columns
Cbc0010I After 65000 nodes, 12873 on tree, -46.148655 best solution, best possible -47.138996 (68.24 seconds)
Cbc0010I After 66000 nodes, 12726 on tree, -46.148655 best solution, best possible -47.138996 (68.75 seconds)
Cbc0010I After 67000 nodes, 13047 on tree, -46.148655 best solution, best possible -47.138952 (69.49 seconds)
Cbc0010I After 68000 nodes, 13375 on tree, -46.148655 best solution, best possible -47.138952 (70.24 seconds)
Cbc0010I After 69000 nodes, 13149 on tree, -46.148655 best solution, best possible -47.138952 (70.56 seconds)
Cbc0010I After 70000 nodes, 12992 on tree, -46.148655 best solution, best possible -47.138952 (71.13 seconds)
Cbc0010I After 71000 nodes, 13283 on tree, -46.148655 best solution, best possible -47.138952 (71.92 seconds)
Cbc0010I After 72000 nodes, 13626 on tree, -46.148655 best solution, best possible -47.138952 (72.60 seconds)
Cbc0010I After 73000 nodes, 13401 on tree, -46.148655 best solution, best possible -47.138952 (72.94 seconds)
Cbc0010I After 74000 nodes, 13271 on tree, -46.148655 best solution, best possible -47.138951 (73.57 seconds)
Cbc0010I After 75000 nodes, 13573 on tree, -46.148655 best solution, best possible -47.138951 (74.31 seconds)
Cbc0010I After 76000 nodes, 13887 on tree, -46.148655 best solution, best possible -47.138951 (74.93 seconds)
Cbc0010I After 77000 nodes, 13663 on tree, -46.148655 best solution, best possible -47.138951 (75.27 seconds)
Cbc0010I After 78000 nodes, 13556 on tree, -46.148655 best solution, best possible -47.138951 (75.98 seconds)
Cbc0010I After 79000 nodes, 13865 on tree, -46.148655 best solution, best possible -47.138951 (76.74 seconds)
Cbc0010I After 80000 nodes, 14166 on tree, -46.148655 best solution, best possible -47.138951 (77.43 seconds)
Cbc0010I After 81000 nodes, 13899 on tree, -46.148655 best solution, best possible -47.138951 (77.76 seconds)
Cbc0010I After 82000 nodes, 13792 on tree, -46.148655 best solution, best possible -47.138882 (78.39 seconds)
Cbc0010I After 83000 nodes, 14092 on tree, -46.148655 best solution, best possible -47.138882 (79.15 seconds)
Cbc0010I After 84000 nodes, 14381 on tree, -46.148655 best solution, best possible -47.138882 (79.80 seconds)
Cbc0010I After 85000 nodes, 14208 on tree, -46.148655 best solution, best possible -47.138882 (80.14 seconds)
Cbc0010I After 86000 nodes, 14074 on tree, -46.148655 best solution, best possible -47.138882 (80.72 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 27 columns
Cbc0010I After 87000 nodes, 14374 on tree, -46.148655 best solution, best possible -47.138882 (81.53 seconds)
Cbc0010I After 88000 nodes, 14671 on tree, -46.148655 best solution, best possible -47.138882 (82.23 seconds)
Cbc0010I After 89000 nodes, 14450 on tree, -46.148655 best solution, best possible -47.138882 (82.56 seconds)
Cbc0010I After 90000 nodes, 14336 on tree, -46.148655 best solution, best possible -47.138865 (83.22 seconds)
Cbc0010I After 91000 nodes, 14614 on tree, -46.148655 best solution, best possible -47.138865 (83.93 seconds)
Cbc0010I After 92000 nodes, 14897 on tree, -46.148655 best solution, best possible -47.138865 (84.64 seconds)
Cbc0010I After 93000 nodes, 14618 on tree, -46.148655 best solution, best possible -47.138865 (84.97 seconds)
Cbc0010I After 94000 nodes, 14488 on tree, -46.148655 best solution, best possible -47.138865 (85.59 seconds)
Cbc0010I After 95000 nodes, 14760 on tree, -46.148655 best solution, best possible -47.138865 (86.39 seconds)
Cbc0010I After 96000 nodes, 15035 on tree, -46.148655 best solution, best possible -47.138865 (87.11 seconds)
Cbc0010I After 97000 nodes, 14810 on tree, -46.148655 best solution, best possible -47.138865 (87.46 seconds)
Cbc0010I After 98000 nodes, 14681 on tree, -46.148655 best solution, best possible -47.138862 (88.08 seconds)
Cbc0010I After 99000 nodes, 14932 on tree, -46.148655 best solution, best possible -47.138862 (88.83 seconds)
Cbc0010I After 100000 nodes, 15180 on tree, -46.148655 best solution, best possible -47.138862 (89.53 seconds)
Cbc0010I After 101000 nodes, 14921 on tree, -46.148655 best solution, best possible -47.138862 (89.88 seconds)
Cbc0010I After 102000 nodes, 15420 on tree, -46.148655 best solution, best possible -47.114665 (90.84 seconds)
Cbc0010I After 103000 nodes, 15705 on tree, -46.148655 best solution, best possible -47.114665 (91.38 seconds)
Cbc0010I After 104000 nodes, 15962 on tree, -46.148655 best solution, best possible -47.114665 (91.95 seconds)
Cbc0010I After 105000 nodes, 15697 on tree, -46.148655 best solution, best possible -47.114665 (92.29 seconds)
Cbc0010I After 106000 nodes, 16195 on tree, -46.148655 best solution, best possible -47.093747 (93.15 seconds)
Cbc0010I After 107000 nodes, 16468 on tree, -46.148655 best solution, best possible -47.093747 (93.68 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0010I After 108000 nodes, 16690 on tree, -46.148655 best solution, best possible -47.093747 (94.18 seconds)
Cbc0010I After 109000 nodes, 16430 on tree, -46.148655 best solution, best possible -47.093747 (94.48 seconds)
Cbc0010I After 110000 nodes, 16926 on tree, -46.148655 best solution, best possible -47.076667 (95.31 seconds)
Cbc0010I After 111000 nodes, 17185 on tree, -46.148655 best solution, best possible -47.076667 (95.87 seconds)
Cbc0010I After 112000 nodes, 17441 on tree, -46.148655 best solution, best possible -47.076667 (96.41 seconds)
Cbc0010I After 113000 nodes, 17202 on tree, -46.148655 best solution, best possible -47.076667 (96.73 seconds)
Cbc0010I After 114000 nodes, 17694 on tree, -46.148655 best solution, best possible -47.059533 (97.55 seconds)
Cbc0010I After 115000 nodes, 17952 on tree, -46.148655 best solution, best possible -47.059533 (98.10 seconds)
Cbc0010I After 116000 nodes, 18212 on tree, -46.148655 best solution, best possible -47.059533 (98.62 seconds)
Cbc0010I After 117000 nodes, 17983 on tree, -46.148655 best solution, best possible -47.059533 (98.94 seconds)
Cbc0010I After 118000 nodes, 18473 on tree, -46.148655 best solution, best possible -47.044086 (99.76 seconds)
Cbc0010I After 119000 nodes, 18717 on tree, -46.148655 best solution, best possible -47.044086 (100.24 seconds)
Cbc0010I After 120000 nodes, 18933 on tree, -46.148655 best solution, best possible -47.044086 (100.79 seconds)
Cbc0010I After 121000 nodes, 18698 on tree, -46.148655 best solution, best possible -47.044086 (101.10 seconds)
Cbc0010I After 122000 nodes, 19183 on tree, -46.148655 best solution, best possible -47.029182 (101.91 seconds)
Cbc0010I After 123000 nodes, 19387 on tree, -46.148655 best solution, best possible -47.029182 (102.44 seconds)
Cbc0010I After 124000 nodes, 19627 on tree, -46.148655 best solution, best possible -47.029182 (103.00 seconds)
Cbc0010I After 125000 nodes, 19331 on tree, -46.148655 best solution, best possible -47.029182 (103.33 seconds)
Cbc0010I After 126000 nodes, 19816 on tree, -46.148655 best solution, best possible -47.016095 (104.12 seconds)
Cbc0010I After 127000 nodes, 20044 on tree, -46.148655 best solution, best possible -47.016095 (104.62 seconds)
Cbc0010I After 128000 nodes, 20231 on tree, -46.148655 best solution, best possible -47.016095 (105.14 seconds)
Cbc0010I After 129000 nodes, 20022 on tree, -46.148655 best solution, best possible -47.016095 (105.48 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 33 columns
Cbc0010I After 130000 nodes, 20503 on tree, -46.148655 best solution, best possible -47.005055 (106.30 seconds)
Cbc0010I After 131000 nodes, 20728 on tree, -46.148655 best solution, best possible -47.005055 (106.83 seconds)
Cbc0010I After 132000 nodes, 20940 on tree, -46.148655 best solution, best possible -47.005055 (107.37 seconds)
Cbc0010I After 133000 nodes, 20736 on tree, -46.148655 best solution, best possible -47.005055 (107.71 seconds)
Cbc0010I After 134000 nodes, 21214 on tree, -46.148655 best solution, best possible -46.993644 (108.58 seconds)
Cbc0010I After 135000 nodes, 21420 on tree, -46.148655 best solution, best possible -46.993644 (109.12 seconds)
Cbc0010I After 136000 nodes, 21597 on tree, -46.148655 best solution, best possible -46.993644 (109.63 seconds)
Cbc0010I After 137000 nodes, 21341 on tree, -46.148655 best solution, best possible -46.993644 (109.94 seconds)
Cbc0010I After 138000 nodes, 21820 on tree, -46.148655 best solution, best possible -46.982342 (110.81 seconds)
Cbc0010I After 139000 nodes, 22042 on tree, -46.148655 best solution, best possible -46.982335 (111.35 seconds)
Cbc0010I After 140000 nodes, 22227 on tree, -46.148655 best solution, best possible -46.982335 (111.91 seconds)
Cbc0010I After 141000 nodes, 21959 on tree, -46.148655 best solution, best possible -46.982335 (112.24 seconds)
Cbc0010I After 142000 nodes, 22435 on tree, -46.148655 best solution, best possible -46.97081 (113.16 seconds)
Cbc0010I After 143000 nodes, 22637 on tree, -46.148655 best solution, best possible -46.97081 (113.66 seconds)
Cbc0010I After 144000 nodes, 22863 on tree, -46.148655 best solution, best possible -46.97081 (114.23 seconds)
Cbc0010I After 145000 nodes, 22599 on tree, -46.148655 best solution, best possible -46.97081 (114.57 seconds)
Cbc0010I After 146000 nodes, 23069 on tree, -46.148655 best solution, best possible -46.960285 (115.49 seconds)
Cbc0010I After 147000 nodes, 23296 on tree, -46.148655 best solution, best possible -46.960285 (116.06 seconds)
Cbc0010I After 148000 nodes, 23518 on tree, -46.148655 best solution, best possible -46.960285 (116.56 seconds)
Cbc0010I After 149000 nodes, 23240 on tree, -46.148655 best solution, best possible -46.960285 (116.89 seconds)
Cbc0010I After 150000 nodes, 23710 on tree, -46.148655 best solution, best possible -46.949466 (117.77 seconds)
Cbc0010I After 151000 nodes, 23878 on tree, -46.148655 best solution, best possible -46.949466 (118.30 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 36 columns
Cbc0010I After 152000 nodes, 24076 on tree, -46.148655 best solution, best possible -46.949466 (118.87 seconds)
Cbc0010I After 153000 nodes, 23805 on tree, -46.148655 best solution, best possible -46.949466 (119.20 seconds)
Cbc0010I After 154000 nodes, 24268 on tree, -46.148655 best solution, best possible -46.940073 (120.12 seconds)
Cbc0010I After 155000 nodes, 24460 on tree, -46.148655 best solution, best possible -46.940073 (120.66 seconds)
Cbc0010I After 156000 nodes, 24666 on tree, -46.148655 best solution, best possible -46.940073 (121.21 seconds)
Cbc0010I After 157000 nodes, 24383 on tree, -46.148655 best solution, best possible -46.940073 (121.52 seconds)
Cbc0010I After 158000 nodes, 24831 on tree, -46.148655 best solution, best possible -46.930406 (122.46 seconds)
Cbc0010I After 159000 nodes, 25027 on tree, -46.148655 best solution, best possible -46.930406 (122.99 seconds)
Cbc0010I After 160000 nodes, 25180 on tree, -46.148655 best solution, best possible -46.930406 (123.52 seconds)
Cbc0010I After 161000 nodes, 24937 on tree, -46.148655 best solution, best possible -46.930406 (123.85 seconds)
Cbc0010I After 162000 nodes, 25394 on tree, -46.148655 best solution, best possible -46.92094 (124.74 seconds)
Cbc0010I After 163000 nodes, 25565 on tree, -46.148655 best solution, best possible -46.92094 (125.24 seconds)
Cbc0010I After 164000 nodes, 25713 on tree, -46.148655 best solution, best possible -46.92094 (125.79 seconds)
Cbc0010I After 165000 nodes, 25389 on tree, -46.148655 best solution, best possible -46.92094 (126.15 seconds)
Cbc0010I After 166000 nodes, 25844 on tree, -46.148655 best solution, best possible -46.912396 (127.06 seconds)
Cbc0010I After 167000 nodes, 26013 on tree, -46.148655 best solution, best possible -46.912396 (127.61 seconds)
Cbc0010I After 168000 nodes, 26161 on tree, -46.148655 best solution, best possible -46.912396 (128.25 seconds)
Cbc0010I After 169000 nodes, 25887 on tree, -46.148655 best solution, best possible -46.912396 (128.61 seconds)
Cbc0010I After 170000 nodes, 26354 on tree, -46.148655 best solution, best possible -46.904218 (129.54 seconds)
Cbc0010I After 171000 nodes, 26515 on tree, -46.148655 best solution, best possible -46.904218 (130.08 seconds)
Cbc0010I After 172000 nodes, 26661 on tree, -46.148655 best solution, best possible -46.904218 (130.65 seconds)
Cbc0010I After 173000 nodes, 26360 on tree, -46.148655 best solution, best possible -46.904218 (131.00 seconds)
Cbc0010I After 174000 nodes, 26814 on tree, -46.148655 best solution, best possible -46.896324 (131.89 seconds)
Cbc0010I After 175000 nodes, 26984 on tree, -46.148655 best solution, best possible -46.896324 (132.51 seconds)
Cbc0010I After 176000 nodes, 27101 on tree, -46.148655 best solution, best possible -46.896324 (133.08 seconds)
Cbc0010I After 177000 nodes, 26829 on tree, -46.148655 best solution, best possible -46.896324 (133.40 seconds)
Cbc0010I After 178000 nodes, 27276 on tree, -46.148655 best solution, best possible -46.888917 (134.42 seconds)
Cbc0010I After 179000 nodes, 27408 on tree, -46.148655 best solution, best possible -46.888917 (134.99 seconds)
Cbc0010I After 180000 nodes, 27487 on tree, -46.148655 best solution, best possible -46.888917 (135.65 seconds)
Cbc0010I After 181000 nodes, 27224 on tree, -46.148655 best solution, best possible -46.888917 (136.04 seconds)
Cbc0010I After 182000 nodes, 27659 on tree, -46.148655 best solution, best possible -46.881592 (137.02 seconds)
Cbc0010I After 183000 nodes, 27759 on tree, -46.148655 best solution, best possible -46.881592 (137.67 seconds)
Cbc0010I After 184000 nodes, 27865 on tree, -46.148655 best solution, best possible -46.881592 (138.29 seconds)
Cbc0010I After 185000 nodes, 27586 on tree, -46.148655 best solution, best possible -46.881592 (138.68 seconds)
Cbc0010I After 186000 nodes, 28007 on tree, -46.148655 best solution, best possible -46.874611 (139.67 seconds)
Cbc0010I After 187000 nodes, 28176 on tree, -46.148655 best solution, best possible -46.874611 (140.31 seconds)
Cbc0010I After 188000 nodes, 28271 on tree, -46.148655 best solution, best possible -46.874611 (140.92 seconds)
Cbc0010I After 189000 nodes, 28036 on tree, -46.148655 best solution, best possible -46.874611 (141.32 seconds)
Cbc0010I After 190000 nodes, 28456 on tree, -46.148655 best solution, best possible -46.867069 (142.35 seconds)
Cbc0010I After 191000 nodes, 28587 on tree, -46.148655 best solution, best possible -46.867069 (142.90 seconds)
Cbc0010I After 192000 nodes, 28688 on tree, -46.148655 best solution, best possible -46.867069 (143.46 seconds)
Cbc0010I After 193000 nodes, 28307 on tree, -46.148655 best solution, best possible -46.867069 (143.78 seconds)
Cbc0010I After 194000 nodes, 28737 on tree, -46.148655 best solution, best possible -46.859759 (144.78 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0010I After 195000 nodes, 28843 on tree, -46.148655 best solution, best possible -46.859759 (145.37 seconds)
Cbc0010I After 196000 nodes, 28926 on tree, -46.148655 best solution, best possible -46.859759 (146.01 seconds)
Cbc0010I After 197000 nodes, 28678 on tree, -46.148655 best solution, best possible -46.859759 (146.36 seconds)
Cbc0010I After 198000 nodes, 29104 on tree, -46.148655 best solution, best possible -46.852528 (147.33 seconds)
Cbc0010I After 199000 nodes, 29199 on tree, -46.148655 best solution, best possible -46.852528 (147.90 seconds)
Cbc0010I After 200000 nodes, 29258 on tree, -46.148655 best solution, best possible -46.852528 (148.51 seconds)
Cbc0010I After 201000 nodes, 28996 on tree, -46.148655 best solution, best possible -46.852528 (148.86 seconds)
Cbc0010I After 202000 nodes, 29415 on tree, -46.148655 best solution, best possible -46.845366 (149.84 seconds)
Cbc0010I After 203000 nodes, 29512 on tree, -46.148655 best solution, best possible -46.845366 (150.38 seconds)
Cbc0010I After 204000 nodes, 29581 on tree, -46.148655 best solution, best possible -46.845366 (150.96 seconds)
Cbc0010I After 205000 nodes, 29241 on tree, -46.148655 best solution, best possible -46.845366 (151.28 seconds)
Cbc0010I After 206000 nodes, 29647 on tree, -46.148655 best solution, best possible -46.838333 (152.28 seconds)
Cbc0010I After 207000 nodes, 29721 on tree, -46.148655 best solution, best possible -46.838333 (152.92 seconds)
Cbc0010I After 208000 nodes, 29764 on tree, -46.148655 best solution, best possible -46.838333 (153.53 seconds)
Cbc0010I After 209000 nodes, 29474 on tree, -46.148655 best solution, best possible -46.838333 (153.89 seconds)
Cbc0010I After 210000 nodes, 29871 on tree, -46.148655 best solution, best possible -46.830762 (154.87 seconds)
Cbc0010I After 211000 nodes, 29956 on tree, -46.148655 best solution, best possible -46.830762 (155.44 seconds)
Cbc0010I After 212000 nodes, 29988 on tree, -46.148655 best solution, best possible -46.830762 (156.08 seconds)
Cbc0010I After 213000 nodes, 29709 on tree, -46.148655 best solution, best possible -46.830762 (156.49 seconds)
Cbc0010I After 214000 nodes, 30115 on tree, -46.148655 best solution, best possible -46.824229 (157.44 seconds)
Cbc0010I After 215000 nodes, 30169 on tree, -46.148655 best solution, best possible -46.824229 (158.02 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0010I After 216000 nodes, 30216 on tree, -46.148655 best solution, best possible -46.824229 (158.65 seconds)
Cbc0010I After 217000 nodes, 29987 on tree, -46.148655 best solution, best possible -46.824229 (159.03 seconds)
Cbc0010I After 218000 nodes, 30383 on tree, -46.148655 best solution, best possible -46.817003 (160.02 seconds)
Cbc0010I After 219000 nodes, 30440 on tree, -46.148655 best solution, best possible -46.817003 (160.63 seconds)
Cbc0010I After 220000 nodes, 30469 on tree, -46.148655 best solution, best possible -46.817003 (161.25 seconds)
Cbc0010I After 221000 nodes, 30124 on tree, -46.148655 best solution, best possible -46.817003 (161.60 seconds)
Cbc0010I After 222000 nodes, 30533 on tree, -46.148655 best solution, best possible -46.809365 (162.51 seconds)
Cbc0010I After 223000 nodes, 30572 on tree, -46.148655 best solution, best possible -46.809365 (163.06 seconds)
Cbc0010I After 224000 nodes, 30614 on tree, -46.148655 best solution, best possible -46.809365 (163.68 seconds)
Cbc0010I After 225000 nodes, 30329 on tree, -46.148655 best solution, best possible -46.809365 (164.05 seconds)
Cbc0010I After 226000 nodes, 30733 on tree, -46.148655 best solution, best possible -46.80192 (165.03 seconds)
Cbc0010I After 227000 nodes, 30798 on tree, -46.148655 best solution, best possible -46.80192 (165.62 seconds)
Cbc0010I After 228000 nodes, 30854 on tree, -46.148655 best solution, best possible -46.80192 (166.21 seconds)
Cbc0010I After 229000 nodes, 30613 on tree, -46.148655 best solution, best possible -46.80192 (166.57 seconds)
Cbc0010I After 230000 nodes, 31024 on tree, -46.148655 best solution, best possible -46.794788 (167.53 seconds)
Cbc0010I After 231000 nodes, 31070 on tree, -46.148655 best solution, best possible -46.794788 (168.14 seconds)
Cbc0010I After 232000 nodes, 31106 on tree, -46.148655 best solution, best possible -46.794788 (168.73 seconds)
Cbc0010I After 233000 nodes, 30824 on tree, -46.148655 best solution, best possible -46.794788 (169.09 seconds)
Cbc0010I After 234000 nodes, 31220 on tree, -46.148655 best solution, best possible -46.787238 (170.06 seconds)
Cbc0010I After 235000 nodes, 31268 on tree, -46.148655 best solution, best possible -46.787238 (170.70 seconds)
Cbc0010I After 236000 nodes, 31295 on tree, -46.148655 best solution, best possible -46.787238 (171.31 seconds)
Cbc0010I After 237000 nodes, 31030 on tree, -46.148655 best solution, best possible -46.787238 (171.73 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 37 columns
Cbc0010I After 238000 nodes, 31416 on tree, -46.148655 best solution, best possible -46.78011 (172.69 seconds)
Cbc0010I After 239000 nodes, 31439 on tree, -46.148655 best solution, best possible -46.78011 (173.23 seconds)
Cbc0010I After 240000 nodes, 31475 on tree, -46.148655 best solution, best possible -46.78011 (173.84 seconds)
Cbc0010I After 241000 nodes, 31191 on tree, -46.148655 best solution, best possible -46.78011 (174.22 seconds)
Cbc0010I After 242000 nodes, 31562 on tree, -46.148655 best solution, best possible -46.772677 (175.18 seconds)
Cbc0010I After 243000 nodes, 31578 on tree, -46.148655 best solution, best possible -46.772677 (175.78 seconds)
Cbc0010I After 244000 nodes, 31606 on tree, -46.148655 best solution, best possible -46.772677 (176.36 seconds)
Cbc0010I After 245000 nodes, 31294 on tree, -46.148655 best solution, best possible -46.772677 (176.73 seconds)
Cbc0010I After 246000 nodes, 31645 on tree, -46.148655 best solution, best possible -46.765151 (177.69 seconds)
Cbc0010I After 247000 nodes, 31662 on tree, -46.148655 best solution, best possible -46.765151 (178.26 seconds)
Cbc0010I After 248000 nodes, 31691 on tree, -46.148655 best solution, best possible -46.765151 (178.85 seconds)
Cbc0010I After 249000 nodes, 31341 on tree, -46.148655 best solution, best possible -46.765151 (179.19 seconds)
Cbc0010I After 250000 nodes, 31695 on tree, -46.148655 best solution, best possible -46.758168 (180.11 seconds)
Cbc0010I After 251000 nodes, 31696 on tree, -46.148655 best solution, best possible -46.758168 (180.69 seconds)
Cbc0010I After 252000 nodes, 31718 on tree, -46.148655 best solution, best possible -46.758168 (181.34 seconds)
Cbc0010I After 253000 nodes, 31430 on tree, -46.148655 best solution, best possible -46.758168 (181.71 seconds)
Cbc0010I After 254000 nodes, 31804 on tree, -46.148655 best solution, best possible -46.75088 (182.64 seconds)
Cbc0010I After 255000 nodes, 31804 on tree, -46.148655 best solution, best possible -46.75088 (183.19 seconds)
Cbc0010I After 256000 nodes, 31825 on tree, -46.148655 best solution, best possible -46.75088 (183.79 seconds)
Cbc0010I After 257000 nodes, 31503 on tree, -46.148655 best solution, best possible -46.75088 (184.12 seconds)
Cbc0010I After 258000 nodes, 31840 on tree, -46.148655 best solution, best possible -46.74429 (185.09 seconds)
Cbc0010I After 259000 nodes, 31849 on tree, -46.148655 best solution, best possible -46.74429 (185.63 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 19 columns
Cbc0010I After 260000 nodes, 31861 on tree, -46.148655 best solution, best possible -46.74429 (186.21 seconds)
Cbc0010I After 261000 nodes, 31542 on tree, -46.148655 best solution, best possible -46.74429 (186.54 seconds)
Cbc0010I After 262000 nodes, 31878 on tree, -46.148655 best solution, best possible -46.737128 (187.49 seconds)
Cbc0010I After 263000 nodes, 31863 on tree, -46.148655 best solution, best possible -46.737128 (188.06 seconds)
Cbc0010I After 264000 nodes, 31854 on tree, -46.148655 best solution, best possible -46.737128 (188.71 seconds)
Cbc0010I After 265000 nodes, 31641 on tree, -46.148655 best solution, best possible -46.737128 (189.05 seconds)
Cbc0010I After 266000 nodes, 31968 on tree, -46.148655 best solution, best possible -46.72981 (190.00 seconds)
Cbc0010I After 267000 nodes, 31960 on tree, -46.148655 best solution, best possible -46.72981 (190.53 seconds)
Cbc0010I After 268000 nodes, 31965 on tree, -46.148655 best solution, best possible -46.72981 (191.16 seconds)
Cbc0010I After 269000 nodes, 31731 on tree, -46.148655 best solution, best possible -46.72981 (191.50 seconds)
Cbc0010I After 270000 nodes, 32058 on tree, -46.148655 best solution, best possible -46.723028 (192.41 seconds)
Cbc0010I After 271000 nodes, 32050 on tree, -46.148655 best solution, best possible -46.723028 (192.96 seconds)
Cbc0010I After 272000 nodes, 32043 on tree, -46.148655 best solution, best possible -46.723028 (193.55 seconds)
Cbc0010I After 273000 nodes, 31590 on tree, -46.148655 best solution, best possible -46.723028 (193.88 seconds)
Cbc0010I After 274000 nodes, 31920 on tree, -46.148655 best solution, best possible -46.716335 (194.80 seconds)
Cbc0010I After 275000 nodes, 31898 on tree, -46.148655 best solution, best possible -46.716335 (195.34 seconds)
Cbc0010I After 276000 nodes, 31876 on tree, -46.148655 best solution, best possible -46.716335 (195.93 seconds)
Cbc0010I After 277000 nodes, 31667 on tree, -46.148655 best solution, best possible -46.716335 (196.36 seconds)
Cbc0010I After 278000 nodes, 31964 on tree, -46.148655 best solution, best possible -46.709231 (197.25 seconds)
Cbc0010I After 279000 nodes, 31925 on tree, -46.148655 best solution, best possible -46.709231 (197.84 seconds)
Cbc0010I After 280000 nodes, 31889 on tree, -46.148655 best solution, best possible -46.709231 (198.42 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 25 columns
Cbc0010I After 281000 nodes, 31631 on tree, -46.148655 best solution, best possible -46.709231 (198.82 seconds)
Cbc0010I After 282000 nodes, 31961 on tree, -46.148655 best solution, best possible -46.70278 (199.72 seconds)
Cbc0010I After 283000 nodes, 31929 on tree, -46.148655 best solution, best possible -46.70278 (200.28 seconds)
Cbc0010I After 284000 nodes, 31916 on tree, -46.148655 best solution, best possible -46.70278 (200.86 seconds)
Cbc0010I After 285000 nodes, 31526 on tree, -46.148655 best solution, best possible -46.70278 (201.20 seconds)
Cbc0010I After 286000 nodes, 31813 on tree, -46.148655 best solution, best possible -46.696433 (202.12 seconds)
Cbc0010I After 287000 nodes, 31749 on tree, -46.148655 best solution, best possible -46.696433 (202.68 seconds)
Cbc0010I After 288000 nodes, 31701 on tree, -46.148655 best solution, best possible -46.696433 (203.27 seconds)
Cbc0010I After 289000 nodes, 31482 on tree, -46.148655 best solution, best possible -46.696433 (203.64 seconds)
Cbc0010I After 290000 nodes, 31762 on tree, -46.148655 best solution, best possible -46.69011 (204.55 seconds)
Cbc0010I After 291000 nodes, 31721 on tree, -46.148655 best solution, best possible -46.69011 (205.11 seconds)
Cbc0010I After 292000 nodes, 31682 on tree, -46.148655 best solution, best possible -46.69011 (205.68 seconds)
Cbc0010I After 293000 nodes, 31394 on tree, -46.148655 best solution, best possible -46.69011 (206.03 seconds)
Cbc0010I After 294000 nodes, 31659 on tree, -46.148655 best solution, best possible -46.683113 (206.93 seconds)
Cbc0010I After 295000 nodes, 31596 on tree, -46.148655 best solution, best possible -46.683113 (207.46 seconds)
Cbc0010I After 296000 nodes, 31553 on tree, -46.148655 best solution, best possible -46.683113 (208.05 seconds)
Cbc0010I After 297000 nodes, 31342 on tree, -46.148655 best solution, best possible -46.683113 (208.44 seconds)
Cbc0010I After 298000 nodes, 31603 on tree, -46.148655 best solution, best possible -46.676289 (209.33 seconds)
Cbc0010I After 299000 nodes, 31565 on tree, -46.148655 best solution, best possible -46.676289 (209.90 seconds)
Cbc0010I After 300000 nodes, 31519 on tree, -46.148655 best solution, best possible -46.676289 (210.49 seconds)
Cbc0010I After 301000 nodes, 31127 on tree, -46.148655 best solution, best possible -46.676289 (210.87 seconds)
Cbc0010I After 302000 nodes, 31384 on tree, -46.148655 best solution, best possible -46.669649 (211.76 seconds)
Cbc0010I After 303000 nodes, 31313 on tree, -46.148655 best solution, best possible -46.669649 (212.32 seconds)
Cbc0010I After 304000 nodes, 31253 on tree, -46.148655 best solution, best possible -46.669649 (212.90 seconds)
Cbc0010I After 305000 nodes, 30961 on tree, -46.148655 best solution, best possible -46.669649 (213.25 seconds)
Cbc0010I After 306000 nodes, 31233 on tree, -46.148655 best solution, best possible -46.663784 (214.11 seconds)
Cbc0010I After 307000 nodes, 31167 on tree, -46.148655 best solution, best possible -46.663784 (214.64 seconds)
Cbc0010I After 308000 nodes, 31103 on tree, -46.148655 best solution, best possible -46.663784 (215.20 seconds)
Cbc0010I After 309000 nodes, 30816 on tree, -46.148655 best solution, best possible -46.663784 (215.59 seconds)
Cbc0010I After 310000 nodes, 31040 on tree, -46.148655 best solution, best possible -46.656859 (216.44 seconds)
Cbc0010I After 311000 nodes, 30943 on tree, -46.148655 best solution, best possible -46.656859 (216.98 seconds)
Cbc0010I After 312000 nodes, 30878 on tree, -46.148655 best solution, best possible -46.656859 (217.53 seconds)
Cbc0010I After 313000 nodes, 30555 on tree, -46.148655 best solution, best possible -46.656859 (217.90 seconds)
Cbc0010I After 314000 nodes, 30762 on tree, -46.148655 best solution, best possible -46.650084 (218.75 seconds)
Cbc0010I After 315000 nodes, 30651 on tree, -46.148655 best solution, best possible -46.650084 (219.29 seconds)
Cbc0010I After 316000 nodes, 30585 on tree, -46.148655 best solution, best possible -46.650084 (219.85 seconds)
Cbc0010I After 317000 nodes, 30334 on tree, -46.148655 best solution, best possible -46.650084 (220.23 seconds)
Cbc0010I After 318000 nodes, 30557 on tree, -46.148655 best solution, best possible -46.64338 (221.07 seconds)
Cbc0010I After 319000 nodes, 30470 on tree, -46.148655 best solution, best possible -46.64338 (221.57 seconds)
Cbc0010I After 320000 nodes, 30400 on tree, -46.148655 best solution, best possible -46.64338 (222.11 seconds)
Cbc0010I After 321000 nodes, 30089 on tree, -46.148655 best solution, best possible -46.64338 (222.47 seconds)
Cbc0010I After 322000 nodes, 30322 on tree, -46.148655 best solution, best possible -46.636601 (223.32 seconds)
Cbc0010I After 323000 nodes, 30249 on tree, -46.148655 best solution, best possible -46.636601 (223.85 seconds)
Cbc0010I After 324000 nodes, 30171 on tree, -46.148655 best solution, best possible -46.636601 (224.40 seconds)
Cbc0010I After 325000 nodes, 29815 on tree, -46.148655 best solution, best possible -46.636601 (224.71 seconds)
Cbc0010I After 326000 nodes, 30001 on tree, -46.148655 best solution, best possible -46.629268 (225.52 seconds)
Cbc0010I After 327000 nodes, 29897 on tree, -46.148655 best solution, best possible -46.629268 (226.03 seconds)
Cbc0010I After 328000 nodes, 29807 on tree, -46.148655 best solution, best possible -46.629268 (226.59 seconds)
Cbc0010I After 329000 nodes, 29563 on tree, -46.148655 best solution, best possible -46.629268 (226.93 seconds)
Cbc0010I After 330000 nodes, 29749 on tree, -46.148655 best solution, best possible -46.622611 (227.75 seconds)
Cbc0010I After 331000 nodes, 29671 on tree, -46.148655 best solution, best possible -46.622611 (228.28 seconds)
Cbc0010I After 332000 nodes, 29582 on tree, -46.148655 best solution, best possible -46.622611 (228.84 seconds)
Cbc0010I After 333000 nodes, 29412 on tree, -46.148655 best solution, best possible -46.622611 (229.20 seconds)
Cbc0010I After 334000 nodes, 29588 on tree, -46.148655 best solution, best possible -46.615726 (230.04 seconds)
Cbc0010I After 335000 nodes, 29484 on tree, -46.148655 best solution, best possible -46.615726 (230.57 seconds)
Cbc0010I After 336000 nodes, 29394 on tree, -46.148655 best solution, best possible -46.615726 (231.16 seconds)
Cbc0010I After 337000 nodes, 29000 on tree, -46.148655 best solution, best possible -46.615726 (231.46 seconds)
Cbc0010I After 338000 nodes, 29152 on tree, -46.148655 best solution, best possible -46.609133 (232.30 seconds)
Cbc0010I After 339000 nodes, 29043 on tree, -46.148655 best solution, best possible -46.609133 (232.81 seconds)
Cbc0010I After 340000 nodes, 28967 on tree, -46.148655 best solution, best possible -46.609133 (233.37 seconds)
Cbc0010I After 341000 nodes, 28701 on tree, -46.148655 best solution, best possible -46.609133 (233.76 seconds)
Cbc0010I After 342000 nodes, 28866 on tree, -46.148655 best solution, best possible -46.602027 (234.61 seconds)
Cbc0010I After 343000 nodes, 28766 on tree, -46.148655 best solution, best possible -46.602027 (235.15 seconds)
Cbc0010I After 344000 nodes, 28645 on tree, -46.148655 best solution, best possible -46.602027 (235.70 seconds)
Cbc0010I After 345000 nodes, 28287 on tree, -46.148655 best solution, best possible -46.602027 (236.09 seconds)
Cbc0010I After 346000 nodes, 28452 on tree, -46.148655 best solution, best possible -46.59477 (236.88 seconds)
Cbc0010I After 347000 nodes, 28336 on tree, -46.148655 best solution, best possible -46.59477 (237.42 seconds)
Cbc0010I After 348000 nodes, 28238 on tree, -46.148655 best solution, best possible -46.59477 (237.98 seconds)
Cbc0010I After 349000 nodes, 27940 on tree, -46.148655 best solution, best possible -46.59477 (238.32 seconds)
Cbc0010I After 350000 nodes, 28100 on tree, -46.148655 best solution, best possible -46.58761 (239.15 seconds)
Cbc0010I After 351000 nodes, 27967 on tree, -46.148655 best solution, best possible -46.58761 (239.69 seconds)
Cbc0010I After 352000 nodes, 27854 on tree, -46.148655 best solution, best possible -46.58761 (240.23 seconds)
Cbc0010I After 353000 nodes, 27553 on tree, -46.148655 best solution, best possible -46.58761 (240.57 seconds)
Cbc0010I After 354000 nodes, 27704 on tree, -46.148655 best solution, best possible -46.58064 (241.36 seconds)
Cbc0010I After 355000 nodes, 27576 on tree, -46.148655 best solution, best possible -46.58064 (241.86 seconds)
Cbc0010I After 356000 nodes, 27483 on tree, -46.148655 best solution, best possible -46.58064 (242.43 seconds)
Cbc0010I After 357000 nodes, 27171 on tree, -46.148655 best solution, best possible -46.58064 (242.76 seconds)
Cbc0010I After 358000 nodes, 27310 on tree, -46.148655 best solution, best possible -46.57289 (243.56 seconds)
Cbc0010I After 359000 nodes, 27157 on tree, -46.148655 best solution, best possible -46.57289 (244.09 seconds)
Cbc0010I After 360000 nodes, 27029 on tree, -46.148655 best solution, best possible -46.57289 (244.65 seconds)
Cbc0010I After 361000 nodes, 26721 on tree, -46.148655 best solution, best possible -46.57289 (245.03 seconds)
Cbc0010I After 362000 nodes, 26820 on tree, -46.148655 best solution, best possible -46.565672 (245.81 seconds)
Cbc0010I After 363000 nodes, 26692 on tree, -46.148655 best solution, best possible -46.565672 (246.34 seconds)
Cbc0010I After 364000 nodes, 26596 on tree, -46.148655 best solution, best possible -46.565672 (246.87 seconds)
Cbc0010I After 365000 nodes, 26229 on tree, -46.148655 best solution, best possible -46.565672 (247.24 seconds)
Cbc0010I After 366000 nodes, 26326 on tree, -46.148655 best solution, best possible -46.558708 (248.02 seconds)
Cbc0010I After 367000 nodes, 26168 on tree, -46.148655 best solution, best possible -46.558708 (248.52 seconds)
Cbc0010I After 368000 nodes, 26073 on tree, -46.148655 best solution, best possible -46.558708 (249.02 seconds)
Cbc0010I After 369000 nodes, 25786 on tree, -46.148655 best solution, best possible -46.558708 (249.40 seconds)
Cbc0010I After 370000 nodes, 25892 on tree, -46.148655 best solution, best possible -46.551095 (250.19 seconds)
Cbc0010I After 371000 nodes, 25738 on tree, -46.148655 best solution, best possible -46.551095 (250.68 seconds)
Cbc0010I After 372000 nodes, 25631 on tree, -46.148655 best solution, best possible -46.551095 (251.24 seconds)
Cbc0010I After 373000 nodes, 25325 on tree, -46.148655 best solution, best possible -46.551095 (251.60 seconds)
Cbc0010I After 374000 nodes, 25397 on tree, -46.148655 best solution, best possible -46.544191 (252.35 seconds)
Cbc0010I After 375000 nodes, 25270 on tree, -46.148655 best solution, best possible -46.544191 (252.84 seconds)
Cbc0010I After 376000 nodes, 25129 on tree, -46.148655 best solution, best possible -46.544191 (253.39 seconds)
Cbc0010I After 377000 nodes, 24746 on tree, -46.148655 best solution, best possible -46.544191 (253.73 seconds)
Cbc0010I After 378000 nodes, 24849 on tree, -46.148655 best solution, best possible -46.536647 (254.50 seconds)
Cbc0010I After 379000 nodes, 24706 on tree, -46.148655 best solution, best possible -46.536647 (254.99 seconds)
Cbc0010I After 380000 nodes, 24574 on tree, -46.148655 best solution, best possible -46.536647 (255.53 seconds)
Cbc0010I After 381000 nodes, 24335 on tree, -46.148655 best solution, best possible -46.536647 (255.88 seconds)
Cbc0010I After 382000 nodes, 24400 on tree, -46.148655 best solution, best possible -46.528845 (256.65 seconds)
Cbc0010I After 383000 nodes, 24227 on tree, -46.148655 best solution, best possible -46.528845 (257.16 seconds)
Cbc0010I After 384000 nodes, 24084 on tree, -46.148655 best solution, best possible -46.528845 (257.70 seconds)
Cbc0010I After 385000 nodes, 23715 on tree, -46.148655 best solution, best possible -46.528845 (258.01 seconds)
Cbc0010I After 386000 nodes, 23786 on tree, -46.148655 best solution, best possible -46.521035 (258.78 seconds)
Cbc0010I After 387000 nodes, 23621 on tree, -46.148655 best solution, best possible -46.521035 (259.27 seconds)
Cbc0010I After 388000 nodes, 23482 on tree, -46.148655 best solution, best possible -46.521035 (259.78 seconds)
Cbc0010I After 389000 nodes, 23093 on tree, -46.148655 best solution, best possible -46.521035 (260.11 seconds)
Cbc0010I After 390000 nodes, 23175 on tree, -46.148655 best solution, best possible -46.513307 (260.85 seconds)
Cbc0010I After 391000 nodes, 22984 on tree, -46.148655 best solution, best possible -46.513307 (261.35 seconds)
Cbc0010I After 392000 nodes, 22840 on tree, -46.148655 best solution, best possible -46.513307 (261.90 seconds)
Cbc0010I After 393000 nodes, 22642 on tree, -46.148655 best solution, best possible -46.513307 (262.25 seconds)
Cbc0010I After 394000 nodes, 22682 on tree, -46.148655 best solution, best possible -46.50514 (263.02 seconds)
Cbc0010I After 395000 nodes, 22513 on tree, -46.148655 best solution, best possible -46.50514 (263.52 seconds)
Cbc0010I After 396000 nodes, 22358 on tree, -46.148655 best solution, best possible -46.50514 (264.05 seconds)
Cbc0010I After 397000 nodes, 21937 on tree, -46.148655 best solution, best possible -46.50514 (264.43 seconds)
Cbc0010I After 398000 nodes, 21973 on tree, -46.148655 best solution, best possible -46.498297 (265.18 seconds)
Cbc0010I After 399000 nodes, 21805 on tree, -46.148655 best solution, best possible -46.498297 (265.68 seconds)
Cbc0010I After 400000 nodes, 21644 on tree, -46.148655 best solution, best possible -46.498297 (266.23 seconds)
Cbc0010I After 401000 nodes, 21261 on tree, -46.148655 best solution, best possible -46.498297 (266.58 seconds)
Cbc0010I After 402000 nodes, 21279 on tree, -46.148655 best solution, best possible -46.490487 (267.33 seconds)
Cbc0010I After 403000 nodes, 21090 on tree, -46.148655 best solution, best possible -46.490487 (267.83 seconds)
Cbc0010I After 404000 nodes, 20917 on tree, -46.148655 best solution, best possible -46.490487 (268.37 seconds)
Cbc0010I After 405000 nodes, 20582 on tree, -46.148655 best solution, best possible -46.490487 (268.68 seconds)
Cbc0010I After 406000 nodes, 20593 on tree, -46.148655 best solution, best possible -46.482635 (269.41 seconds)
Cbc0010I After 407000 nodes, 20407 on tree, -46.148655 best solution, best possible -46.482635 (269.86 seconds)
Cbc0010I After 408000 nodes, 20233 on tree, -46.148655 best solution, best possible -46.482635 (270.40 seconds)
Cbc0010I After 409000 nodes, 19981 on tree, -46.148655 best solution, best possible -46.482635 (270.77 seconds)
Cbc0010I After 410000 nodes, 19979 on tree, -46.148655 best solution, best possible -46.474696 (271.52 seconds)
Cbc0010I After 411000 nodes, 19771 on tree, -46.148655 best solution, best possible -46.474696 (271.98 seconds)
Cbc0010I After 412000 nodes, 19577 on tree, -46.148655 best solution, best possible -46.474696 (272.50 seconds)
Cbc0010I After 413000 nodes, 19161 on tree, -46.148655 best solution, best possible -46.474696 (272.87 seconds)
Cbc0010I After 414000 nodes, 19139 on tree, -46.148655 best solution, best possible -46.466244 (273.62 seconds)
Cbc0010I After 415000 nodes, 18944 on tree, -46.148655 best solution, best possible -46.466244 (274.10 seconds)
Cbc0010I After 416000 nodes, 18774 on tree, -46.148655 best solution, best possible -46.466244 (274.63 seconds)
Cbc0010I After 417000 nodes, 18459 on tree, -46.148655 best solution, best possible -46.466244 (274.99 seconds)
Cbc0010I After 418000 nodes, 18417 on tree, -46.148655 best solution, best possible -46.458147 (275.69 seconds)
Cbc0010I After 419000 nodes, 18211 on tree, -46.148655 best solution, best possible -46.458147 (276.16 seconds)
Cbc0010I After 420000 nodes, 18011 on tree, -46.148655 best solution, best possible -46.458147 (276.65 seconds)
Cbc0010I After 421000 nodes, 17649 on tree, -46.148655 best solution, best possible -46.458147 (276.98 seconds)
Cbc0010I After 422000 nodes, 17611 on tree, -46.148655 best solution, best possible -46.449691 (277.69 seconds)
Cbc0010I After 423000 nodes, 17385 on tree, -46.148655 best solution, best possible -46.449691 (278.16 seconds)
Cbc0010I After 424000 nodes, 17178 on tree, -46.148655 best solution, best possible -46.449691 (278.66 seconds)
Cbc0010I After 425000 nodes, 16811 on tree, -46.148655 best solution, best possible -46.449691 (278.99 seconds)
Cbc0010I After 426000 nodes, 16759 on tree, -46.148655 best solution, best possible -46.441929 (279.69 seconds)
Cbc0010I After 427000 nodes, 16528 on tree, -46.148655 best solution, best possible -46.441929 (280.16 seconds)
Cbc0010I After 428000 nodes, 16321 on tree, -46.148655 best solution, best possible -46.441929 (280.66 seconds)
Cbc0010I After 429000 nodes, 16068 on tree, -46.148655 best solution, best possible -46.441929 (281.00 seconds)
Cbc0010I After 430000 nodes, 15999 on tree, -46.148655 best solution, best possible -46.433708 (281.69 seconds)
Cbc0010I After 431000 nodes, 15780 on tree, -46.148655 best solution, best possible -46.433708 (282.14 seconds)
Cbc0010I After 432000 nodes, 15585 on tree, -46.148655 best solution, best possible -46.433676 (282.64 seconds)
Cbc0010I After 433000 nodes, 15286 on tree, -46.148655 best solution, best possible -46.433676 (282.96 seconds)
Cbc0010I After 434000 nodes, 15216 on tree, -46.148655 best solution, best possible -46.424452 (283.64 seconds)
Cbc0010I After 435000 nodes, 14973 on tree, -46.148655 best solution, best possible -46.424452 (284.09 seconds)
Cbc0010I After 436000 nodes, 14763 on tree, -46.148655 best solution, best possible -46.424452 (284.61 seconds)
Cbc0010I After 437000 nodes, 14294 on tree, -46.148655 best solution, best possible -46.424452 (284.98 seconds)
Cbc0010I After 438000 nodes, 14157 on tree, -46.148655 best solution, best possible -46.415228 (285.66 seconds)
Cbc0010I After 439000 nodes, 13934 on tree, -46.148655 best solution, best possible -46.415228 (286.12 seconds)
Cbc0010I After 440000 nodes, 13740 on tree, -46.148655 best solution, best possible -46.415228 (286.62 seconds)
Cbc0010I After 441000 nodes, 13417 on tree, -46.148655 best solution, best possible -46.415228 (286.92 seconds)
Cbc0010I After 442000 nodes, 13319 on tree, -46.148655 best solution, best possible -46.404984 (287.59 seconds)
Cbc0010I After 443000 nodes, 13078 on tree, -46.148655 best solution, best possible -46.404984 (288.06 seconds)
Cbc0010I After 444000 nodes, 12858 on tree, -46.148655 best solution, best possible -46.404984 (288.58 seconds)
Cbc0010I After 445000 nodes, 12486 on tree, -46.148655 best solution, best possible -46.404984 (288.94 seconds)
Cbc0010I After 446000 nodes, 12353 on tree, -46.148655 best solution, best possible -46.393683 (289.57 seconds)
Cbc0010I After 447000 nodes, 12097 on tree, -46.148655 best solution, best possible -46.393683 (290.01 seconds)
Cbc0010I After 448000 nodes, 11881 on tree, -46.148655 best solution, best possible -46.393683 (290.53 seconds)
Cbc0010I After 449000 nodes, 11558 on tree, -46.148655 best solution, best possible -46.393683 (290.85 seconds)
Cbc0010I After 450000 nodes, 11429 on tree, -46.148655 best solution, best possible -46.381938 (291.53 seconds)
Cbc0010I After 451000 nodes, 11176 on tree, -46.148655 best solution, best possible -46.381938 (291.98 seconds)
Cbc0010I After 452000 nodes, 10932 on tree, -46.148655 best solution, best possible -46.381938 (292.47 seconds)
Cbc0010I After 453000 nodes, 10489 on tree, -46.148655 best solution, best possible -46.381938 (292.78 seconds)
Cbc0010I After 454000 nodes, 10321 on tree, -46.148655 best solution, best possible -46.369433 (293.42 seconds)
Cbc0010I After 455000 nodes, 10055 on tree, -46.148655 best solution, best possible -46.369393 (293.87 seconds)
Cbc0010I After 456000 nodes, 9819 on tree, -46.148655 best solution, best possible -46.369393 (294.38 seconds)
Cbc0010I After 457000 nodes, 9633 on tree, -46.148655 best solution, best possible -46.356901 (294.99 seconds)
Cbc0010I After 458000 nodes, 9354 on tree, -46.148655 best solution, best possible -46.356901 (295.43 seconds)
Cbc0010I After 459000 nodes, 9130 on tree, -46.148655 best solution, best possible -46.345779 (296.03 seconds)
Cbc0010I After 460000 nodes, 8942 on tree, -46.148655 best solution, best possible -46.337108 (296.64 seconds)
Cbc0010I After 461000 nodes, 8713 on tree, -46.148655 best solution, best possible -46.327813 (297.19 seconds)
Cbc0010I After 462000 nodes, 8388 on tree, -46.148655 best solution, best possible -46.327813 (297.57 seconds)
Cbc0010I After 463000 nodes, 8149 on tree, -46.148655 best solution, best possible -46.317948 (298.14 seconds)
Cbc0010I After 464000 nodes, 7902 on tree, -46.148655 best solution, best possible -46.308482 (298.70 seconds)
Cbc0010I After 465000 nodes, 7635 on tree, -46.148655 best solution, best possible -46.299676 (299.23 seconds)
Cbc0010I After 466000 nodes, 7306 on tree, -46.148655 best solution, best possible -46.299676 (299.58 seconds)
Cbc0010I After 467000 nodes, 7019 on tree, -46.148655 best solution, best possible -46.290746 (300.08 seconds)
Cbc0010I After 468000 nodes, 6715 on tree, -46.148655 best solution, best possible -46.282841 (300.56 seconds)
Cbc0010I After 469000 nodes, 6402 on tree, -46.148655 best solution, best possible -46.275219 (301.04 seconds)
Cbc0010I After 470000 nodes, 6061 on tree, -46.148655 best solution, best possible -46.275219 (301.36 seconds)
Cbc0010I After 471000 nodes, 5734 on tree, -46.148655 best solution, best possible -46.266567 (301.81 seconds)
Cbc0010I After 472000 nodes, 5401 on tree, -46.148655 best solution, best possible -46.25781 (302.26 seconds)
Cbc0010I After 473000 nodes, 5062 on tree, -46.148655 best solution, best possible -46.249721 (302.67 seconds)
Cbc0010I After 474000 nodes, 4703 on tree, -46.148655 best solution, best possible -46.24969 (302.97 seconds)
Cbc0010I After 475000 nodes, 4336 on tree, -46.148655 best solution, best possible -46.240449 (303.37 seconds)
Cbc0010I After 476000 nodes, 3967 on tree, -46.148655 best solution, best possible -46.230742 (303.77 seconds)
Cbc0010I After 477000 nodes, 3598 on tree, -46.148655 best solution, best possible -46.222054 (304.15 seconds)
Cbc0010I After 478000 nodes, 3209 on tree, -46.148655 best solution, best possible -46.222054 (304.43 seconds)
Cbc0010I After 479000 nodes, 2809 on tree, -46.148655 best solution, best possible -46.210888 (304.77 seconds)
Cbc0010I After 480000 nodes, 2403 on tree, -46.148655 best solution, best possible -46.20192 (305.09 seconds)
Cbc0010I After 481000 nodes, 1986 on tree, -46.148655 best solution, best possible -46.192063 (305.39 seconds)
Cbc0010I After 482000 nodes, 1542 on tree, -46.148655 best solution, best possible -46.192063 (305.61 seconds)
Cbc0010I After 483000 nodes, 1111 on tree, -46.148655 best solution, best possible -46.177541 (305.90 seconds)
Cbc0010I After 484000 nodes, 682 on tree, -46.148655 best solution, best possible -46.164762 (306.15 seconds)
Cbc0010I After 485000 nodes, 212 on tree, -46.148655 best solution, best possible -46.153167 (306.36 seconds)
Cbc0001I Search completed - best objective -46.14865521527854, took 10934028 iterations and 1553121 nodes (306.45 seconds)
Cbc0032I Strong branching done 1708496 times (11747873 iterations), fathomed 104071 nodes and fixed 306912 variables
Cbc0041I Maximum depth 43, 1021509 variables fixed on reduced cost (complete fathoming 26798 times, 1067679 nodes taking 5957529 iterations)
Cuts at root node changed objective from -50.6445 to -48.9929
Probing was tried 100 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 158801 times and created 192536 cuts of which 0 were active after adding rounds of cuts (8.770 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
TwoMirCuts was tried 100 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 158863 times and created 41904 cuts of which 0 were active after adding rounds of cuts (10.081 seconds)

Result - Optimal solution found

Objective value:                46.14865522
Enumerated nodes:               1553121
Total iterations:               10934028
Time (CPU seconds):             304.34
Time (Wallclock seconds):       306.45

Option for printingOptions changed from normal to all
Total time (CPU seconds):       304.34   (Wallclock seconds):       306.45

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b03cd79813cf47dab8d24128132057a6-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/b03cd79813cf47dab8d24128132057a6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.3469 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -26.3107 iterations 1
Cbc0038I Solution found of -22.6483
Cbc0038I Cleaned solution of -22.6483
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -22.6483 to -22.8658 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.2139
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -26.3107 iterations 0
Cbc0038I Pass   3: suminf.    0.42163 (1) obj. -23.2139 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.4867 iterations 8
Cbc0038I Pass   5: suminf.    0.44720 (1) obj. -23.2139 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -23.5744 iterations 5
Cbc0038I Pass   7: suminf.    0.46843 (1) obj. -23.2139 iterations 2
Cbc0038I Pass   8: suminf.    0.59389 (2) obj. -23.2139 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (2) obj. -23.4458 iterations 6
Cbc0038I Pass  10: suminf.    0.57820 (2) obj. -23.2139 iterations 3
Cbc0038I Pass  11: suminf.    0.75786 (3) obj. -23.2139 iterations 9
Cbc0038I Pass  12: suminf.    0.33333 (2) obj. -23.5902 iterations 6
Cbc0038I Pass  13: suminf.    0.60275 (2) obj. -23.2139 iterations 2
Cbc0038I Pass  14: suminf.    0.52172 (2) obj. -23.2139 iterations 2
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -23.2273 iterations 5
Cbc0038I Pass  16: suminf.    0.18082 (1) obj. -23.2139 iterations 2
Cbc0038I Pass  17: suminf.    0.39763 (2) obj. -23.2139 iterations 10
Cbc0038I Pass  18: suminf.    0.34466 (2) obj. -23.2139 iterations 2
Cbc0038I Pass  19: suminf.    0.65988 (2) obj. -23.2139 iterations 4
Cbc0038I Pass  20: suminf.    0.43890 (1) obj. -23.2139 iterations 2
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. -23.6016 iterations 4
Cbc0038I Solution found of -23.6016
Cbc0038I Cleaned solution of -23.6016
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.1507
Cbc0038I Pass  22: suminf.    0.83333 (5) obj. -26.3107 iterations 0
Cbc0038I Pass  23: suminf.    0.44311 (2) obj. -24.1507 iterations 12
Cbc0038I Pass  24: suminf.    0.33333 (2) obj. -24.2721 iterations 5
Cbc0038I Pass  25: suminf.    0.54973 (2) obj. -24.1507 iterations 3
Cbc0038I Pass  26: suminf.    0.33333 (2) obj. -24.3506 iterations 5
Cbc0038I Pass  27: suminf.    0.54442 (2) obj. -24.1507 iterations 3
Cbc0038I Pass  28: suminf.    1.18883 (3) obj. -24.1507 iterations 12
Cbc0038I Pass  29: suminf.    0.59750 (3) obj. -24.1507 iterations 8
Cbc0038I Pass  30: suminf.    0.66667 (2) obj. -24.4916 iterations 9
Cbc0038I Pass  31: suminf.    0.90938 (2) obj. -24.1507 iterations 6
Cbc0038I Pass  32: suminf.    0.74206 (2) obj. -24.1507 iterations 2
Cbc0038I Pass  33: suminf.    0.31719 (1) obj. -24.1507 iterations 1
Cbc0038I Pass  34: suminf.    0.16667 (1) obj. -24.2479 iterations 9
Cbc0038I Pass  35: suminf.    0.26930 (1) obj. -24.1507 iterations 4
Cbc0038I Pass  36: suminf.    0.24869 (2) obj. -24.1507 iterations 11
Cbc0038I Pass  37: suminf.    0.19274 (2) obj. -24.1507 iterations 3
Cbc0038I Pass  38: suminf.    0.75079 (2) obj. -24.1507 iterations 10
Cbc0038I Pass  39: suminf.    0.33333 (2) obj. -24.5198 iterations 9
Cbc0038I Pass  40: suminf.    0.61024 (2) obj. -24.1507 iterations 4
Cbc0038I Pass  41: suminf.    0.52921 (2) obj. -24.1507 iterations 2
Cbc0038I Pass  42: suminf.    0.16667 (1) obj. -24.157 iterations 6
Cbc0038I Pass  43: suminf.    0.17333 (1) obj. -24.1507 iterations 4
Cbc0038I Pass  44: suminf.    0.50390 (3) obj. -24.1507 iterations 10
Cbc0038I Pass  45: suminf.    0.41749 (3) obj. -24.1507 iterations 4
Cbc0038I Pass  46: suminf.    0.64216 (2) obj. -24.1507 iterations 5
Cbc0038I Pass  47: suminf.    0.83333 (2) obj. -24.3978 iterations 11
Cbc0038I Pass  48: suminf.    0.58060 (2) obj. -24.1507 iterations 11
Cbc0038I Pass  49: suminf.    0.64283 (2) obj. -24.1507 iterations 10
Cbc0038I Pass  50: suminf.    0.93472 (3) obj. -24.1507 iterations 9
Cbc0038I Pass  51: suminf.    0.84267 (3) obj. -24.1507 iterations 3
Cbc0038I Rounding solution of -23.6922 is better than previous of -23.6016

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -24.8095
Cbc0038I Pass  51: suminf.    0.83333 (5) obj. -26.3107 iterations 0
Cbc0038I Pass  52: suminf.    0.73959 (3) obj. -24.8095 iterations 10
Cbc0038I Pass  53: suminf.    0.50000 (3) obj. -25.0483 iterations 8
Cbc0038I Pass  54: suminf.    0.78515 (3) obj. -24.8095 iterations 4
Cbc0038I Pass  55: suminf.    0.67642 (3) obj. -24.8095 iterations 10
Cbc0038I Pass  56: suminf.    0.59204 (3) obj. -24.8095 iterations 1
Cbc0038I Pass  57: suminf.    2.22882 (7) obj. -24.8095 iterations 8
Cbc0038I Pass  58: suminf.    1.29318 (3) obj. -24.8095 iterations 7
Cbc0038I Pass  59: suminf.    1.25792 (3) obj. -24.8095 iterations 9
Cbc0038I Pass  60: suminf.    1.25792 (3) obj. -24.8095 iterations 7
Cbc0038I Pass  61: suminf.    0.93306 (3) obj. -24.8095 iterations 4
Cbc0038I Pass  62: suminf.    0.96861 (3) obj. -24.8095 iterations 3
Cbc0038I Pass  63: suminf.    0.93306 (3) obj. -24.8095 iterations 3
Cbc0038I Pass  64: suminf.    0.99089 (3) obj. -24.8095 iterations 1
Cbc0038I Pass  65: suminf.    0.93975 (3) obj. -24.8095 iterations 6
Cbc0038I Pass  66: suminf.    2.22882 (7) obj. -24.8095 iterations 2
Cbc0038I Pass  67: suminf.    1.29318 (3) obj. -24.8095 iterations 7
Cbc0038I Pass  68: suminf.    1.25792 (3) obj. -24.8095 iterations 9
Cbc0038I Pass  69: suminf.    2.14849 (7) obj. -24.8095 iterations 6
Cbc0038I Pass  70: suminf.    0.72943 (3) obj. -24.8095 iterations 6
Cbc0038I Pass  71: suminf.    1.32316 (6) obj. -24.8095 iterations 8
Cbc0038I Pass  72: suminf.    0.96861 (3) obj. -24.8095 iterations 8
Cbc0038I Pass  73: suminf.    0.93306 (3) obj. -24.8095 iterations 2
Cbc0038I Pass  74: suminf.    1.25792 (3) obj. -24.8095 iterations 4
Cbc0038I Pass  75: suminf.    1.25792 (3) obj. -24.8095 iterations 7
Cbc0038I Pass  76: suminf.    0.93306 (3) obj. -24.8095 iterations 5
Cbc0038I Pass  77: suminf.    2.18262 (7) obj. -24.8095 iterations 4
Cbc0038I Pass  78: suminf.    2.14849 (7) obj. -24.8095 iterations 4
Cbc0038I Pass  79: suminf.    0.72943 (3) obj. -24.8095 iterations 6
Cbc0038I Pass  80: suminf.    1.32316 (6) obj. -24.8095 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23.6922 - took 0.04 seconds
Cbc0012I Integer solution of -23.692174 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 14 added rows had average density of 45.357143
Cbc0013I At root node, 14 cuts changed objective from -26.346915 to -25.274424 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 956 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 12 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 61 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 119 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.692174 best solution, best possible -25.274424 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 32 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 27 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 16 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 24 columns
Cbc0001I Search completed - best objective -23.6921737231314, took 41692 iterations and 7166 nodes (1.06 seconds)
Cbc0032I Strong branching done 7674 times (42113 iterations), fathomed 237 nodes and fixed 457 variables
Cbc0041I Maximum depth 21, 1824 variables fixed on reduced cost (complete fathoming 69 times, 6300 nodes taking 25549 iterations)
Cuts at root node changed objective from -26.3469 to -25.2744
Probing was tried 100 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 723 times and created 2363 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 723 times and created 225 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 723 times and created 609 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)

Result - Optimal solution found

Objective value:                23.69217372
Enumerated nodes:               7166
Total iterations:               41692
Time (CPU seconds):             1.03
Time (Wallclock seconds):       1.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.06

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/542db338e53d4a5c8a0763064fcce337-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/542db338e53d4a5c8a0763064fcce337-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.60456 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -9.50106 iterations 7
Cbc0038I Solution found of -7.76596
Cbc0038I Cleaned solution of -7.76596
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -7.76596 to -8.17994 (0.00 seconds)
Cbc0038I Round again with cutoff of -8.32241
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -9.50106 iterations 0
Cbc0038I Pass   3: suminf.    0.37224 (1) obj. -8.32241 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.48357 iterations 2
Cbc0038I Pass   5: suminf.    0.47462 (1) obj. -8.32241 iterations 3
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -8.46328 iterations 7
Cbc0038I Pass   7: suminf.    0.39592 (1) obj. -8.32241 iterations 2
Cbc0038I Pass   8: suminf.    1.03673 (5) obj. -8.32241 iterations 3
Cbc0038I Pass   9: suminf.    1.95221 (5) obj. -8.32241 iterations 4
Cbc0038I Pass  10: suminf.    0.06204 (1) obj. -8.32241 iterations 3
Cbc0038I Pass  11: suminf.    0.25000 (1) obj. -8.71441 iterations 3
Cbc0038I Pass  12: suminf.    0.34392 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  13: suminf.    0.71114 (2) obj. -8.32241 iterations 1
Cbc0038I Pass  14: suminf.    0.61144 (2) obj. -8.32241 iterations 2
Cbc0038I Pass  15: suminf.    0.09474 (1) obj. -8.32241 iterations 2
Cbc0038I Pass  16: suminf.    0.09474 (1) obj. -8.32241 iterations 0
Cbc0038I Pass  17: suminf.    0.09474 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  18: suminf.    0.09474 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -8.71441 iterations 2
Cbc0038I Pass  20: suminf.    0.34392 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  21: suminf.    0.06204 (1) obj. -8.32241 iterations 2
Cbc0038I Pass  22: suminf.    0.06204 (1) obj. -8.32241 iterations 0
Cbc0038I Pass  23: suminf.    0.06204 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  24: suminf.    0.06204 (1) obj. -8.32241 iterations 1
Cbc0038I Pass  25: suminf.    0.42040 (2) obj. -8.32241 iterations 5
Cbc0038I Pass  26: suminf.    0.75000 (2) obj. -8.88954 iterations 3
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -8.45939 iterations 2
Cbc0038I Pass  28: suminf.    0.39189 (1) obj. -8.32241 iterations 2
Cbc0038I Pass  29: suminf.    0.67154 (2) obj. -8.32241 iterations 7
Cbc0038I Pass  30: suminf.    0.67154 (2) obj. -8.32241 iterations 0
Cbc0038I Pass  31: suminf.    0.66809 (2) obj. -8.32241 iterations 2
Cbc0038I Rounding solution of -8.28052 is better than previous of -8.17994

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8.57884
Cbc0038I Pass  31: suminf.    0.75000 (3) obj. -9.50106 iterations 0
Cbc0038I Pass  32: suminf.    0.45355 (2) obj. -8.57884 iterations 4
Cbc0038I Pass  33: suminf.    0.31128 (2) obj. -8.57884 iterations 1
Cbc0038I Pass  34: suminf.    0.25000 (1) obj. -8.66607 iterations 7
Cbc0038I Pass  35: suminf.    0.34036 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  36: suminf.    0.34840 (2) obj. -8.57884 iterations 1
Cbc0038I Pass  37: suminf.    0.36823 (2) obj. -8.57884 iterations 2
Cbc0038I Pass  38: suminf.    0.34676 (1) obj. -8.57884 iterations 4
Cbc0038I Pass  39: suminf.    0.78286 (5) obj. -8.57884 iterations 7
Cbc0038I Pass  40: suminf.    0.25000 (1) obj. -8.69045 iterations 4
Cbc0038I Pass  41: suminf.    0.36562 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  42: suminf.    0.44182 (1) obj. -8.57884 iterations 3
Cbc0038I Pass  43: suminf.    0.44182 (1) obj. -8.57884 iterations 0
Cbc0038I Pass  44: suminf.    0.25000 (1) obj. -8.71441 iterations 3
Cbc0038I Pass  45: suminf.    0.39044 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  46: suminf.    0.49610 (1) obj. -8.57884 iterations 3
Cbc0038I Pass  47: suminf.    0.44182 (1) obj. -8.57884 iterations 6
Cbc0038I Pass  48: suminf.    0.50000 (2) obj. -9.25024 iterations 6
Cbc0038I Pass  49: suminf.    0.45165 (1) obj. -8.57884 iterations 2
Cbc0038I Pass  50: suminf.    0.25000 (1) obj. -8.66607 iterations 3
Cbc0038I Pass  51: suminf.    0.34036 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  52: suminf.    0.73044 (2) obj. -8.57884 iterations 7
Cbc0038I Pass  53: suminf.    0.39560 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  54: suminf.    0.25000 (1) obj. -8.71441 iterations 2
Cbc0038I Pass  55: suminf.    0.39044 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  56: suminf.    0.56014 (5) obj. -8.57884 iterations 9
Cbc0038I Pass  57: suminf.    0.25000 (1) obj. -8.69045 iterations 3
Cbc0038I Pass  58: suminf.    0.36562 (1) obj. -8.57884 iterations 1
Cbc0038I Pass  59: suminf.    0.41519 (2) obj. -8.57884 iterations 4
Cbc0038I Pass  60: suminf.    0.30296 (2) obj. -8.57884 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.28052 - took 0.01 seconds
Cbc0012I Integer solution of -8.2805204 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 4 rows 6 columns
Cbc0031I 6 added rows had average density of 21.166667
Cbc0013I At root node, 6 cuts changed objective from -9.6045586 to -8.6293962 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 6.0 elements, 1 column cuts (1 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 412 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 8 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 75 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.2805204 best solution, best possible -8.6293962 (0.06 seconds)
Cbc0001I Search completed - best objective -8.280520416796371, took 1647 iterations and 14 nodes (0.08 seconds)
Cbc0032I Strong branching done 124 times (452 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 5, 25 variables fixed on reduced cost
Cuts at root node changed objective from -9.60456 to -8.6294
Probing was tried 100 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 173 times and created 644 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 173 times and created 103 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 173 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                8.28052042
Enumerated nodes:               14
Total iterations:               1647
Time (CPU seconds):             0.08
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/11689f98d811495c80e2dd91bc93af53-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/11689f98d811495c80e2dd91bc93af53-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 35.5798 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -35.5096 iterations 12
Cbc0038I Solution found of -31.0465
Cbc0038I Cleaned solution of -31.0465
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -31.0465 to -31.5373 (0.00 seconds)
Cbc0038I Round again with cutoff of -31.9416
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -35.5096 iterations 0
Cbc0038I Pass   3: suminf.    0.20715 (2) obj. -31.9416 iterations 15
Cbc0038I Pass   4: suminf.    0.16278 (2) obj. -31.9416 iterations 3
Cbc0038I Pass   5: suminf.    0.14286 (1) obj. -32.1821 iterations 13
Cbc0038I Pass   6: suminf.    0.45188 (1) obj. -31.9416 iterations 4
Cbc0038I Pass   7: suminf.    0.28571 (1) obj. -32.2172 iterations 10
Cbc0038I Pass   8: suminf.    0.40741 (1) obj. -31.9416 iterations 4
Cbc0038I Pass   9: suminf.    0.41854 (1) obj. -31.9416 iterations 31
Cbc0038I Pass  10: suminf.    0.14286 (1) obj. -32.2296 iterations 5
Cbc0038I Pass  11: suminf.    0.45486 (1) obj. -31.9416 iterations 4
Cbc0038I Pass  12: suminf.    0.14286 (1) obj. -32.3406 iterations 6
Cbc0038I Pass  13: suminf.    0.02440 (1) obj. -31.9416 iterations 5
Cbc0038I Pass  14: suminf.    0.28571 (1) obj. -32.1711 iterations 19
Cbc0038I Pass  15: suminf.    0.01900 (1) obj. -31.9416 iterations 4
Cbc0038I Pass  16: suminf.    0.88531 (3) obj. -31.9416 iterations 19
Cbc0038I Pass  17: suminf.    1.03374 (7) obj. -31.9416 iterations 8
Cbc0038I Pass  18: suminf.    0.67227 (2) obj. -31.9416 iterations 10
Cbc0038I Solution found of -32.0319
Cbc0038I Cleaned solution of -32.0319
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -32.0319 to -32.0895 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.7876
Cbc0038I Pass  19: suminf.    0.85714 (6) obj. -35.5096 iterations 0
Cbc0038I Pass  20: suminf.    0.37893 (3) obj. -32.7876 iterations 21
Cbc0038I Pass  21: suminf.    0.29706 (3) obj. -32.7876 iterations 5
Cbc0038I Pass  22: suminf.    0.72647 (2) obj. -32.7876 iterations 7
Cbc0038I Pass  23: suminf.    0.76204 (2) obj. -32.7876 iterations 11
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -32.8262 iterations 16
Cbc0038I Pass  25: suminf.    0.18887 (1) obj. -32.7876 iterations 4
Cbc0038I Pass  26: suminf.    0.36626 (3) obj. -32.7876 iterations 16
Cbc0038I Pass  27: suminf.    0.34098 (3) obj. -32.7876 iterations 2
Cbc0038I Pass  28: suminf.    1.17154 (6) obj. -32.7876 iterations 9
Cbc0038I Pass  29: suminf.    1.17154 (6) obj. -32.7876 iterations 0
Cbc0038I Pass  30: suminf.    0.20488 (1) obj. -32.7876 iterations 2
Cbc0038I Pass  31: suminf.    0.14286 (1) obj. -32.8302 iterations 5
Cbc0038I Pass  32: suminf.    0.19375 (1) obj. -32.7876 iterations 4
Cbc0038I Pass  33: suminf.    0.58411 (3) obj. -32.7876 iterations 16
Cbc0038I Pass  34: suminf.    0.28571 (2) obj. -33.092 iterations 7
Cbc0038I Pass  35: suminf.    0.28146 (2) obj. -32.7876 iterations 6
Cbc0038I Pass  36: suminf.    0.26564 (2) obj. -32.7876 iterations 1
Cbc0038I Pass  37: suminf.    0.68649 (2) obj. -32.7876 iterations 8
Cbc0038I Pass  38: suminf.    0.77280 (2) obj. -32.7876 iterations 3
Cbc0038I Pass  39: suminf.    0.77280 (2) obj. -32.7876 iterations 0
Cbc0038I Pass  40: suminf.    0.57143 (2) obj. -33.2501 iterations 9
Cbc0038I Pass  41: suminf.    0.70215 (2) obj. -32.7876 iterations 4
Cbc0038I Pass  42: suminf.    0.67425 (2) obj. -32.7876 iterations 4
Cbc0038I Pass  43: suminf.    0.14286 (1) obj. -32.8302 iterations 9
Cbc0038I Pass  44: suminf.    0.19375 (1) obj. -32.7876 iterations 3
Cbc0038I Pass  45: suminf.    0.86036 (4) obj. -32.7876 iterations 14
Cbc0038I Pass  46: suminf.    0.86640 (4) obj. -32.7876 iterations 9
Cbc0038I Pass  47: suminf.    0.98758 (3) obj. -32.7876 iterations 6
Cbc0038I Pass  48: suminf.    0.34830 (3) obj. -32.7876 iterations 6
Cbc0038I Rounding solution of -32.2153 is better than previous of -32.0895

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 26 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -32.2153 to -32.2194 (0.04 seconds)
Cbc0038I Round again with cutoff of -33.6252
Cbc0038I Pass  48: suminf.    0.85714 (6) obj. -35.5096 iterations 0
Cbc0038I Pass  49: suminf.    0.53171 (4) obj. -33.6252 iterations 20
Cbc0038I Pass  50: suminf.    0.42857 (4) obj. -33.6252 iterations 9
Cbc0038I Pass  51: suminf.    0.89474 (4) obj. -33.6252 iterations 17
Cbc0038I Pass  52: suminf.    0.57143 (3) obj. -33.9148 iterations 11
Cbc0038I Pass  53: suminf.    0.92039 (3) obj. -33.6252 iterations 5
Cbc0038I Pass  54: suminf.    0.87644 (3) obj. -33.6252 iterations 6
Cbc0038I Pass  55: suminf.    2.45886 (8) obj. -33.6252 iterations 7
Cbc0038I Pass  56: suminf.    1.15496 (5) obj. -33.6252 iterations 1
Cbc0038I Pass  57: suminf.    1.08927 (4) obj. -33.6252 iterations 8
Cbc0038I Pass  58: suminf.    1.08927 (4) obj. -33.6252 iterations 5
Cbc0038I Pass  59: suminf.    0.79831 (3) obj. -33.6252 iterations 5
Cbc0038I Pass  60: suminf.    0.54514 (3) obj. -33.6252 iterations 8
Cbc0038I Pass  61: suminf.    1.08927 (4) obj. -33.6252 iterations 3
Cbc0038I Pass  62: suminf.    1.87851 (9) obj. -33.6252 iterations 22
Cbc0038I Pass  63: suminf.    0.71429 (3) obj. -33.7863 iterations 24
Cbc0038I Pass  64: suminf.    0.87498 (3) obj. -33.6252 iterations 12
Cbc0038I Pass  65: suminf.    0.81323 (3) obj. -33.6252 iterations 4
Cbc0038I Pass  66: suminf.    1.08927 (4) obj. -33.6252 iterations 12
Cbc0038I Pass  67: suminf.    1.08927 (4) obj. -33.6252 iterations 5
Cbc0038I Pass  68: suminf.    0.79831 (3) obj. -33.6252 iterations 5
Cbc0038I Pass  69: suminf.    0.54514 (3) obj. -33.6252 iterations 8
Cbc0038I Pass  70: suminf.    1.08927 (4) obj. -33.6252 iterations 3
Cbc0038I Pass  71: suminf.    0.97155 (3) obj. -33.6252 iterations 7
Cbc0038I Pass  72: suminf.    0.71429 (3) obj. -33.8298 iterations 18
Cbc0038I Pass  73: suminf.    1.00971 (3) obj. -33.6252 iterations 11
Cbc0038I Pass  74: suminf.    0.82230 (4) obj. -33.6252 iterations 21
Cbc0038I Pass  75: suminf.    1.86583 (8) obj. -33.6252 iterations 5
Cbc0038I Pass  76: suminf.    0.57143 (3) obj. -33.7363 iterations 16
Cbc0038I Pass  77: suminf.    0.71043 (3) obj. -33.6252 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 31 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.2194 - took 0.06 seconds
Cbc0012I Integer solution of -32.219386 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 11 rows 14 columns
Cbc0031I 17 added rows had average density of 65.882353
Cbc0013I At root node, 17 cuts changed objective from -35.579754 to -34.016428 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 15.0 elements, 0 column cuts (1 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1168 row cuts average 81.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 20.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.219386 best solution, best possible -34.016428 (0.25 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 17 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 25 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 14 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 14 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 27 columns
Cbc0010I After 1000 nodes, 17 on tree, -32.219386 best solution, best possible -34.016428 (3.01 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 14 columns
Cbc0010I After 2000 nodes, 9 on tree, -32.219386 best solution, best possible -34.016428 (5.12 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 30 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 28 columns
Cbc0010I After 3000 nodes, 9 on tree, -32.219386 best solution, best possible -33.758896 (6.74 seconds)
Cbc0010I After 4000 nodes, 10 on tree, -32.219386 best solution, best possible -33.316005 (8.05 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 7 rows 9 columns
Cbc0001I Search completed - best objective -32.21938587725146, took 927081 iterations and 146834 nodes (8.40 seconds)
Cbc0032I Strong branching done 22108 times (155915 iterations), fathomed 490 nodes and fixed 1570 variables
Cbc0041I Maximum depth 30, 8357 variables fixed on reduced cost (complete fathoming 1326 times, 142354 nodes taking 880920 iterations)
Cuts at root node changed objective from -35.5798 to -34.0164
Probing was tried 100 times and created 1 cuts of which 1 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 1617 times and created 3278 cuts of which 0 were active after adding rounds of cuts (0.134 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 100 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                32.21938588
Enumerated nodes:               146834
Total iterations:               927081
Time (CPU seconds):             8.08
Time (Wallclock seconds):       8.41

Option for printingOptions changed from normal to all
Total time (CPU seconds):       8.08   (Wallclock seconds):       8.41

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1bbae40d74394cc992958b5748e6ff0a-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1bbae40d74394cc992958b5748e6ff0a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 34.967 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -34.8112 iterations 17
Cbc0038I Solution found of -30.307
Cbc0038I Cleaned solution of -30.307
Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -30.307 to -31.3973 (0.00 seconds)
Cbc0038I Round again with cutoff of -31.7543
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -34.8112 iterations 0
Cbc0038I Pass   3: suminf.    0.48697 (2) obj. -31.7543 iterations 17
Cbc0038I Pass   4: suminf.    0.28571 (2) obj. -31.9761 iterations 9
Cbc0038I Pass   5: suminf.    0.59691 (2) obj. -31.7543 iterations 6
Cbc0038I Pass   6: suminf.    0.50687 (2) obj. -31.7543 iterations 1
Cbc0038I Pass   7: suminf.    0.14286 (1) obj. -31.9312 iterations 9
Cbc0038I Pass   8: suminf.    0.46595 (1) obj. -31.7543 iterations 5
Cbc0038I Pass   9: suminf.    0.28571 (1) obj. -31.8791 iterations 13
Cbc0038I Pass  10: suminf.    0.41662 (1) obj. -31.7543 iterations 4
Cbc0038I Pass  11: suminf.    0.34053 (1) obj. -31.7543 iterations 20
Cbc0038I Pass  12: suminf.    0.14286 (1) obj. -31.8748 iterations 6
Cbc0038I Pass  13: suminf.    0.26924 (1) obj. -31.7543 iterations 4
Cbc0038I Pass  14: suminf.    0.63393 (3) obj. -31.7543 iterations 11
Cbc0038I Pass  15: suminf.    0.42857 (2) obj. -31.7895 iterations 11
Cbc0038I Pass  16: suminf.    0.47535 (2) obj. -31.7543 iterations 8
Cbc0038I Pass  17: suminf.    0.42516 (2) obj. -31.7543 iterations 10
Cbc0038I Pass  18: suminf.    0.14286 (1) obj. -31.9379 iterations 6
Cbc0038I Pass  19: suminf.    0.33542 (1) obj. -31.7543 iterations 5
Cbc0038I Pass  20: suminf.    0.80271 (2) obj. -31.7543 iterations 15
Cbc0038I Pass  21: suminf.    0.57143 (2) obj. -31.78 iterations 11
Cbc0038I Pass  22: suminf.    0.63717 (2) obj. -31.7543 iterations 13
Cbc0038I Pass  23: suminf.    0.61301 (2) obj. -31.7543 iterations 1
Cbc0038I Pass  24: suminf.    0.28313 (1) obj. -31.7543 iterations 1
Cbc0038I Pass  25: suminf.    0.14286 (1) obj. -32.1586 iterations 8
Cbc0038I Pass  26: suminf.    0.43320 (1) obj. -31.7543 iterations 7
Cbc0038I Pass  27: suminf.    0.53544 (3) obj. -31.7543 iterations 43
Cbc0038I Pass  28: suminf.    0.14286 (1) obj. -31.8697 iterations 9
Cbc0038I Pass  29: suminf.    0.62480 (2) obj. -31.7543 iterations 15
Cbc0038I Pass  30: suminf.    0.57143 (2) obj. -32.3106 iterations 12
Cbc0038I Pass  31: suminf.    0.14286 (1) obj. -31.9594 iterations 2
Cbc0038I Rounding solution of -31.8156 is better than previous of -31.3973

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 31 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -32.4459
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -34.8112 iterations 0
Cbc0038I Pass  32: suminf.    0.75173 (3) obj. -32.4459 iterations 20
Cbc0038I Pass  33: suminf.    0.42857 (3) obj. -32.8056 iterations 10
Cbc0038I Pass  34: suminf.    1.02544 (3) obj. -32.4459 iterations 15
Cbc0038I Pass  35: suminf.    0.71429 (3) obj. -32.7644 iterations 16
Cbc0038I Pass  36: suminf.    0.51786 (3) obj. -32.4459 iterations 15
Cbc0038I Pass  37: suminf.    1.71735 (7) obj. -32.4459 iterations 10
Cbc0038I Pass  38: suminf.    0.51508 (3) obj. -32.4459 iterations 11
Cbc0038I Pass  39: suminf.    0.51508 (3) obj. -32.4459 iterations 0
Cbc0038I Pass  40: suminf.    1.00455 (6) obj. -32.4459 iterations 10
Cbc0038I Pass  41: suminf.    0.30114 (2) obj. -32.4459 iterations 5
Cbc0038I Pass  42: suminf.    0.30114 (2) obj. -32.4459 iterations 1
Cbc0038I Pass  43: suminf.    0.29300 (2) obj. -32.4459 iterations 8
Cbc0038I Pass  44: suminf.    1.25500 (7) obj. -32.4459 iterations 9
Cbc0038I Pass  45: suminf.    0.15127 (1) obj. -32.4459 iterations 5
Cbc0038I Pass  46: suminf.    0.14665 (2) obj. -32.4459 iterations 5
Cbc0038I Pass  47: suminf.    0.14850 (2) obj. -32.4459 iterations 4
Cbc0038I Pass  48: suminf.    1.46582 (4) obj. -32.4459 iterations 26
Cbc0038I Pass  49: suminf.    0.71429 (3) obj. -33.2095 iterations 14
Cbc0038I Pass  50: suminf.    0.70571 (2) obj. -32.4459 iterations 14
Cbc0038I Pass  51: suminf.    0.55431 (2) obj. -32.4459 iterations 2
Cbc0038I Pass  52: suminf.    0.14286 (1) obj. -32.6009 iterations 12
Cbc0038I Pass  53: suminf.    0.30535 (1) obj. -32.4459 iterations 6
Cbc0038I Pass  54: suminf.    0.92334 (5) obj. -32.4459 iterations 4
Cbc0038I Pass  55: suminf.    0.63957 (5) obj. -32.4459 iterations 1
Cbc0038I Pass  56: suminf.    0.33176 (1) obj. -32.4459 iterations 3
Cbc0038I Pass  57: suminf.    0.14286 (1) obj. -32.8135 iterations 7
Cbc0038I Pass  58: suminf.    0.47165 (1) obj. -32.4459 iterations 6
Cbc0038I Pass  59: suminf.    0.61701 (4) obj. -32.4459 iterations 22
Cbc0038I Pass  60: suminf.    1.33418 (7) obj. -32.4459 iterations 10
Cbc0038I Rounding solution of -32.1958 is better than previous of -31.8156

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 33 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -33.2022
Cbc0038I Pass  60: suminf.    0.85714 (6) obj. -34.8112 iterations 0
Cbc0038I Pass  61: suminf.    0.89586 (4) obj. -33.2022 iterations 18
Cbc0038I Pass  62: suminf.    0.57143 (4) obj. -33.5966 iterations 9
Cbc0038I Pass  63: suminf.    1.29523 (4) obj. -33.2022 iterations 16
Cbc0038I Pass  64: suminf.    1.25164 (7) obj. -33.2022 iterations 21
Cbc0038I Pass  65: suminf.    0.94171 (4) obj. -33.2022 iterations 13
Cbc0038I Pass  66: suminf.    0.84783 (4) obj. -33.2022 iterations 11
Cbc0038I Pass  67: suminf.    0.84530 (3) obj. -33.2022 iterations 14
Cbc0038I Pass  68: suminf.    0.57946 (2) obj. -33.2022 iterations 2
Cbc0038I Pass  69: suminf.    0.28571 (2) obj. -33.3776 iterations 7
Cbc0038I Pass  70: suminf.    0.52348 (2) obj. -33.2022 iterations 7
Cbc0038I Pass  71: suminf.    0.74050 (3) obj. -33.2022 iterations 11
Cbc0038I Pass  72: suminf.    0.37878 (3) obj. -33.2022 iterations 8
Cbc0038I Pass  73: suminf.    0.60742 (3) obj. -33.2022 iterations 9
Cbc0038I Pass  74: suminf.    0.42857 (2) obj. -33.2093 iterations 11
Cbc0038I Pass  75: suminf.    0.52504 (2) obj. -33.2022 iterations 9
Cbc0038I Pass  76: suminf.    0.28571 (2) obj. -33.3317 iterations 11
Cbc0038I Pass  77: suminf.    0.46126 (2) obj. -33.2022 iterations 7
Cbc0038I Pass  78: suminf.    0.48599 (2) obj. -33.2022 iterations 2
Cbc0038I Pass  79: suminf.    2.77928 (9) obj. -33.2022 iterations 9
Cbc0038I Pass  80: suminf.    0.57887 (3) obj. -33.2022 iterations 9
Cbc0038I Pass  81: suminf.    0.88871 (3) obj. -33.2022 iterations 10
Cbc0038I Pass  82: suminf.    0.57145 (2) obj. -33.2022 iterations 1
Cbc0038I Pass  83: suminf.    0.28571 (2) obj. -33.3317 iterations 14
Cbc0038I Pass  84: suminf.    0.46126 (2) obj. -33.2022 iterations 7
Cbc0038I Pass  85: suminf.    1.99751 (7) obj. -33.2022 iterations 6
Cbc0038I Pass  86: suminf.    0.61241 (7) obj. -33.2022 iterations 10
Cbc0038I Pass  87: suminf.    0.28571 (2) obj. -33.3138 iterations 8
Cbc0038I Pass  88: suminf.    0.43413 (2) obj. -33.2022 iterations 8
Cbc0038I Pass  89: suminf.    0.64774 (3) obj. -33.2022 iterations 10
Cbc0038I Rounding solution of -32.2507 is better than previous of -32.1958

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 29 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -33.7317
Cbc0038I Pass  89: suminf.    0.85714 (6) obj. -34.8112 iterations 0
Cbc0038I Pass  90: suminf.    0.89122 (5) obj. -33.7317 iterations 17
Cbc0038I Pass  91: suminf.    0.68386 (5) obj. -33.7317 iterations 17
Cbc0038I Pass  92: suminf.    2.26639 (9) obj. -33.7317 iterations 17
Cbc0038I Pass  93: suminf.    2.26639 (9) obj. -33.7317 iterations 6
Cbc0038I Pass  94: suminf.    1.06254 (4) obj. -33.7317 iterations 20
Cbc0038I Pass  95: suminf.    1.49003 (8) obj. -33.7317 iterations 18
Cbc0038I Pass  96: suminf.    0.75426 (4) obj. -33.7317 iterations 11
Cbc0038I Pass  97: suminf.    1.67715 (9) obj. -33.7317 iterations 14
Cbc0038I Pass  98: suminf.    0.74487 (4) obj. -33.7317 iterations 10
Cbc0038I Pass  99: suminf.    1.91728 (11) obj. -33.7317 iterations 22
Cbc0038I Pass 100: suminf.    0.78061 (5) obj. -33.7317 iterations 16
Cbc0038I Pass 101: suminf.    0.84679 (4) obj. -33.7317 iterations 13
Cbc0038I Pass 102: suminf.    0.59702 (4) obj. -33.7317 iterations 2
Cbc0038I Pass 103: suminf.    0.44481 (4) obj. -33.7317 iterations 6
Cbc0038I Pass 104: suminf.    0.94769 (7) obj. -33.7317 iterations 11
Cbc0038I Pass 105: suminf.    0.79231 (4) obj. -33.7317 iterations 6
Cbc0038I Pass 106: suminf.    0.42857 (3) obj. -33.8688 iterations 14
Cbc0038I Pass 107: suminf.    0.61448 (3) obj. -33.7317 iterations 11
Cbc0038I Pass 108: suminf.    0.70125 (4) obj. -33.7317 iterations 9
Cbc0038I Pass 109: suminf.    0.62027 (4) obj. -33.7317 iterations 5
Cbc0038I Pass 110: suminf.    0.77121 (3) obj. -33.7317 iterations 6
Cbc0038I Pass 111: suminf.    0.71972 (3) obj. -33.7317 iterations 6
Cbc0038I Pass 112: suminf.    0.58464 (4) obj. -33.7317 iterations 11
Cbc0038I Pass 113: suminf.    0.74683 (5) obj. -33.7317 iterations 13
Cbc0038I Pass 114: suminf.    0.66574 (4) obj. -33.7317 iterations 5
Cbc0038I Pass 115: suminf.    0.98114 (4) obj. -33.7317 iterations 9
Cbc0038I Pass 116: suminf.    0.98114 (4) obj. -33.7317 iterations 6
Cbc0038I Pass 117: suminf.    0.66468 (3) obj. -33.7317 iterations 5
Cbc0038I Pass 118: suminf.    0.42857 (3) obj. -33.8229 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 33 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -32.2507 - took 0.09 seconds
Cbc0012I Integer solution of -32.250748 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 17 columns
Cbc0031I 13 added rows had average density of 64.769231
Cbc0013I At root node, 13 cuts changed objective from -34.96698 to -33.472687 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (2 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1069 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 66 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.250748 best solution, best possible -33.472687 (0.26 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 34 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 18 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 32 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 18 columns
Cbc0010I After 1000 nodes, 5 on tree, -32.250748 best solution, best possible -33.472687 (1.27 seconds)
Cbc0001I Search completed - best objective -32.25074785947801, took 69661 iterations and 7857 nodes (1.74 seconds)
Cbc0032I Strong branching done 11216 times (80733 iterations), fathomed 334 nodes and fixed 732 variables
Cbc0041I Maximum depth 21, 4328 variables fixed on reduced cost (complete fathoming 229 times, 6429 nodes taking 45735 iterations)
Cuts at root node changed objective from -34.967 to -33.4727
Probing was tried 100 times and created 0 cuts of which 2 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 488 times and created 1563 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 100 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                32.25074786
Enumerated nodes:               7857
Total iterations:               69661
Time (CPU seconds):             1.66
Time (Wallclock seconds):       1.74

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.66   (Wallclock seconds):       1.74

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/aee2fe43fea9418f9e3d6519eedad8aa-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/aee2fe43fea9418f9e3d6519eedad8aa-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.3186 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.2826 iterations 9
Cbc0038I Solution found of -21.0508
Cbc0038I Cleaned solution of -21.0508
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -21.0508 to -21.267 (0.00 seconds)
Cbc0038I Round again with cutoff of -21.5722
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.2826 iterations 0
Cbc0038I Pass   3: suminf.    0.41450 (1) obj. -21.5722 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -21.8091 iterations 8
Cbc0038I Pass   5: suminf.    0.49107 (1) obj. -21.5722 iterations 3
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -21.7848 iterations 10
Cbc0038I Pass   7: suminf.    0.30452 (1) obj. -21.5722 iterations 4
Cbc0038I Pass   8: suminf.    0.16667 (1) obj. -21.9918 iterations 3
Cbc0038I Pass   9: suminf.    0.95627 (3) obj. -21.5722 iterations 12
Cbc0038I Pass  10: suminf.    0.33333 (2) obj. -22.0349 iterations 7
Cbc0038I Pass  11: suminf.    0.41689 (2) obj. -21.5722 iterations 6
Cbc0038I Pass  12: suminf.    0.30634 (2) obj. -21.5722 iterations 1
Cbc0038I Pass  13: suminf.    0.16667 (1) obj. -21.7646 iterations 7
Cbc0038I Pass  14: suminf.    0.40920 (1) obj. -21.5722 iterations 5
Cbc0038I Pass  15: suminf.    0.48747 (2) obj. -21.5722 iterations 8
Cbc0038I Pass  16: suminf.    0.46049 (1) obj. -21.5722 iterations 3
Cbc0038I Solution found of -21.9596
Cbc0038I Cleaned solution of -21.9596
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -21.9596 to -21.9827 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.4499
Cbc0038I Pass  17: suminf.    0.83333 (5) obj. -24.2826 iterations 0
Cbc0038I Pass  18: suminf.    0.40641 (2) obj. -22.4499 iterations 10
Cbc0038I Pass  19: suminf.    0.33333 (2) obj. -22.5435 iterations 10
Cbc0038I Pass  20: suminf.    0.56362 (2) obj. -22.4499 iterations 4
Cbc0038I Pass  21: suminf.    0.33333 (2) obj. -22.6189 iterations 8
Cbc0038I Pass  22: suminf.    0.54636 (2) obj. -22.4499 iterations 4
Cbc0038I Pass  23: suminf.    0.70351 (3) obj. -22.4499 iterations 7
Cbc0038I Pass  24: suminf.    0.57292 (2) obj. -22.4499 iterations 6
Cbc0038I Pass  25: suminf.    0.83869 (2) obj. -22.4499 iterations 13
Cbc0038I Pass  26: suminf.    0.20732 (1) obj. -22.4499 iterations 1
Cbc0038I Pass  27: suminf.    0.16667 (1) obj. -22.4776 iterations 6
Cbc0038I Pass  28: suminf.    0.26876 (2) obj. -22.4499 iterations 8
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -22.5505 iterations 7
Cbc0038I Pass  30: suminf.    0.31439 (1) obj. -22.4499 iterations 6
Cbc0038I Pass  31: suminf.    0.74387 (3) obj. -22.4499 iterations 10
Cbc0038I Pass  32: suminf.    0.60211 (3) obj. -22.4499 iterations 5
Cbc0038I Pass  33: suminf.    0.73431 (3) obj. -22.4499 iterations 5
Cbc0038I Pass  34: suminf.    0.60211 (3) obj. -22.4499 iterations 5
Cbc0038I Pass  35: suminf.    2.66347 (8) obj. -22.4499 iterations 25
Cbc0038I Pass  36: suminf.    0.63781 (3) obj. -22.4499 iterations 10
Cbc0038I Pass  37: suminf.    0.50000 (2) obj. -22.7082 iterations 12
Cbc0038I Pass  38: suminf.    0.16667 (1) obj. -22.5381 iterations 3
Cbc0038I Pass  39: suminf.    0.29607 (1) obj. -22.4499 iterations 6
Cbc0038I Pass  40: suminf.    0.56289 (3) obj. -22.4499 iterations 12
Cbc0038I Pass  41: suminf.    0.49585 (3) obj. -22.4499 iterations 6
Cbc0038I Pass  42: suminf.    0.97559 (4) obj. -22.4499 iterations 18
Cbc0038I Pass  43: suminf.    0.50000 (3) obj. -22.5447 iterations 8
Cbc0038I Pass  44: suminf.    0.63923 (3) obj. -22.4499 iterations 5
Cbc0038I Pass  45: suminf.    0.49548 (3) obj. -22.4499 iterations 10
Cbc0038I Pass  46: suminf.    0.19227 (2) obj. -22.4499 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -21.9827 - took 0.03 seconds
Cbc0012I Integer solution of -21.98267 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 14 added rows had average density of 45
Cbc0013I At root node, 14 cuts changed objective from -24.318647 to -22.996341 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 895 row cuts average 57.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 21 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 65 row cuts average 32.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 69 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.98267 best solution, best possible -22.996341 (0.17 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 22 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 33 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 21 columns
Cbc0001I Search completed - best objective -21.98267026245602, took 23840 iterations and 2993 nodes (0.80 seconds)
Cbc0032I Strong branching done 6166 times (33682 iterations), fathomed 199 nodes and fixed 418 variables
Cbc0041I Maximum depth 18, 1651 variables fixed on reduced cost (complete fathoming 46 times, 2239 nodes taking 9895 iterations)
Cuts at root node changed objective from -24.3186 to -22.9963
Probing was tried 100 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 565 times and created 1872 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 565 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 565 times and created 333 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)

Result - Optimal solution found

Objective value:                21.98267026
Enumerated nodes:               2993
Total iterations:               23840
Time (CPU seconds):             0.78
Time (Wallclock seconds):       0.80

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.78   (Wallclock seconds):       0.80

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4b0fc538ea1f4ab5ac921c1a11c9f376-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/4b0fc538ea1f4ab5ac921c1a11c9f376-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 23.6663 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -23.5742 iterations 12
Cbc0038I Solution found of -20.9859
Cbc0038I Cleaned solution of -20.9859
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -20.9859 to -21.5382 (0.00 seconds)
Cbc0038I Round again with cutoff of -21.751
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -23.5742 iterations 0
Cbc0038I Pass   3: suminf.    0.21410 (1) obj. -21.751 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -21.8005 iterations 7
Cbc0038I Pass   5: suminf.    0.21857 (1) obj. -21.751 iterations 1
Cbc0038I Pass   6: suminf.    0.52313 (2) obj. -21.751 iterations 9
Cbc0038I Pass   7: suminf.    0.33333 (2) obj. -21.9154 iterations 7
Cbc0038I Pass   8: suminf.    0.53904 (2) obj. -21.751 iterations 3
Cbc0038I Pass   9: suminf.    0.36513 (2) obj. -21.751 iterations 19
Cbc0038I Pass  10: suminf.    0.36513 (2) obj. -21.751 iterations 0
Cbc0038I Pass  11: suminf.    0.23916 (1) obj. -21.751 iterations 8
Cbc0038I Pass  12: suminf.    0.16667 (1) obj. -22.2105 iterations 7
Cbc0038I Pass  13: suminf.    0.35153 (1) obj. -21.751 iterations 4
Cbc0038I Pass  14: suminf.    0.34499 (2) obj. -21.751 iterations 13
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -21.8951 iterations 6
Cbc0038I Pass  16: suminf.    0.31776 (1) obj. -21.751 iterations 4
Cbc0038I Pass  17: suminf.    0.24431 (2) obj. -21.751 iterations 7
Cbc0038I Pass  18: suminf.    0.22914 (2) obj. -21.751 iterations 1
Cbc0038I Pass  19: suminf.    0.39016 (2) obj. -21.751 iterations 4
Cbc0038I Pass  20: suminf.    0.16667 (1) obj. -21.7865 iterations 8
Cbc0038I Pass  21: suminf.    0.20382 (1) obj. -21.751 iterations 4
Cbc0038I Pass  22: suminf.    0.38724 (2) obj. -21.751 iterations 12
Cbc0038I Pass  23: suminf.    0.16667 (1) obj. -21.9059 iterations 3
Cbc0038I Pass  24: suminf.    0.32908 (1) obj. -21.751 iterations 4
Cbc0038I Pass  25: suminf.    0.57663 (2) obj. -21.751 iterations 7
Cbc0038I Pass  26: suminf.    0.33333 (2) obj. -21.8803 iterations 9
Cbc0038I Pass  27: suminf.    0.54113 (2) obj. -21.751 iterations 5
Cbc0038I Pass  28: suminf.    1.53494 (6) obj. -21.751 iterations 14
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -21.7626 iterations 6
Cbc0038I Pass  30: suminf.    0.17881 (1) obj. -21.751 iterations 3
Cbc0038I Pass  31: suminf.    0.49295 (2) obj. -21.751 iterations 13
Cbc0038I Rounding solution of -21.5631 is better than previous of -21.5382

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 26 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -21.5631 to -21.7037 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.1341
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -23.5742 iterations 0
Cbc0038I Pass  32: suminf.    0.58834 (2) obj. -22.1341 iterations 9
Cbc0038I Pass  33: suminf.    0.55481 (2) obj. -22.1341 iterations 2
Cbc0038I Pass  34: suminf.    0.45565 (2) obj. -22.1341 iterations 9
Cbc0038I Pass  35: suminf.    0.16667 (1) obj. -22.3215 iterations 7
Cbc0038I Pass  36: suminf.    0.36319 (1) obj. -22.1341 iterations 2
Cbc0038I Pass  37: suminf.    0.70440 (3) obj. -22.1341 iterations 17
Cbc0038I Pass  38: suminf.    0.70440 (3) obj. -22.1341 iterations 0
Cbc0038I Pass  39: suminf.    0.46576 (2) obj. -22.1341 iterations 3
Cbc0038I Pass  40: suminf.    0.46576 (2) obj. -22.1341 iterations 0
Cbc0038I Pass  41: suminf.    0.65550 (2) obj. -22.1341 iterations 4
Cbc0038I Pass  42: suminf.    0.76590 (3) obj. -22.1341 iterations 4
Cbc0038I Pass  43: suminf.    0.33333 (2) obj. -22.3884 iterations 7
Cbc0038I Pass  44: suminf.    0.59111 (2) obj. -22.1341 iterations 4
Cbc0038I Pass  45: suminf.    0.57594 (2) obj. -22.1341 iterations 1
Cbc0038I Pass  46: suminf.    0.47891 (3) obj. -22.1341 iterations 9
Cbc0038I Pass  47: suminf.    0.40741 (3) obj. -22.1341 iterations 3
Cbc0038I Pass  48: suminf.    0.31567 (1) obj. -22.1341 iterations 3
Cbc0038I Pass  49: suminf.    0.16667 (1) obj. -22.2317 iterations 6
Cbc0038I Pass  50: suminf.    0.26905 (1) obj. -22.1341 iterations 4
Cbc0038I Pass  51: suminf.    0.51478 (2) obj. -22.1341 iterations 15
Cbc0038I Pass  52: suminf.    0.33333 (2) obj. -22.2239 iterations 8
Cbc0038I Pass  53: suminf.    0.47772 (2) obj. -22.1341 iterations 4
Cbc0038I Pass  54: suminf.    1.54137 (6) obj. -22.1341 iterations 6
Cbc0038I Pass  55: suminf.    0.75822 (3) obj. -22.1341 iterations 3
Cbc0038I Pass  56: suminf.    0.46576 (2) obj. -22.1341 iterations 5
Cbc0038I Pass  57: suminf.    0.46576 (2) obj. -22.1341 iterations 0
Cbc0038I Pass  58: suminf.    0.65550 (2) obj. -22.1341 iterations 5
Cbc0038I Pass  59: suminf.    0.86026 (6) obj. -22.1341 iterations 6
Cbc0038I Pass  60: suminf.    0.33333 (2) obj. -22.2239 iterations 7
Cbc0038I Rounding solution of -21.7304 is better than previous of -21.7037

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -22.5937
Cbc0038I Pass  60: suminf.    0.83333 (5) obj. -23.5742 iterations 0
Cbc0038I Pass  61: suminf.    0.58285 (3) obj. -22.5937 iterations 14
Cbc0038I Pass  62: suminf.    0.36610 (3) obj. -22.5937 iterations 3
Cbc0038I Pass  63: suminf.    0.56468 (2) obj. -22.5937 iterations 9
Cbc0038I Pass  64: suminf.    0.33333 (2) obj. -22.7561 iterations 4
Cbc0038I Pass  65: suminf.    0.59433 (2) obj. -22.5937 iterations 4
Cbc0038I Pass  66: suminf.    0.65924 (2) obj. -22.5937 iterations 3
Cbc0038I Pass  67: suminf.    0.64123 (2) obj. -22.5937 iterations 1
Cbc0038I Pass  68: suminf.    0.64123 (2) obj. -22.5937 iterations 0
Cbc0038I Pass  69: suminf.    0.64123 (2) obj. -22.5937 iterations 0
Cbc0038I Pass  70: suminf.    0.56468 (2) obj. -22.5937 iterations 5
Cbc0038I Pass  71: suminf.    0.33333 (2) obj. -22.7561 iterations 4
Cbc0038I Pass  72: suminf.    0.59433 (2) obj. -22.5937 iterations 4
Cbc0038I Pass  73: suminf.    0.61838 (3) obj. -22.5937 iterations 3
Cbc0038I Pass  74: suminf.    0.33333 (2) obj. -22.7561 iterations 6
Cbc0038I Pass  75: suminf.    0.59433 (2) obj. -22.5937 iterations 4
Cbc0038I Pass  76: suminf.    0.65313 (2) obj. -22.5937 iterations 5
Cbc0038I Pass  77: suminf.    0.83130 (3) obj. -22.5937 iterations 12
Cbc0038I Pass  78: suminf.    0.83130 (3) obj. -22.5937 iterations 0
Cbc0038I Pass  79: suminf.    0.53365 (2) obj. -22.5937 iterations 7
Cbc0038I Pass  80: suminf.    0.53365 (2) obj. -22.5937 iterations 0
Cbc0038I Pass  81: suminf.    0.63406 (2) obj. -22.5937 iterations 7
Cbc0038I Pass  82: suminf.    0.33333 (2) obj. -22.8125 iterations 4
Cbc0038I Pass  83: suminf.    0.64833 (2) obj. -22.5937 iterations 4
Cbc0038I Pass  84: suminf.    0.63315 (2) obj. -22.5937 iterations 1
Cbc0038I Pass  85: suminf.    0.80062 (3) obj. -22.5937 iterations 7
Cbc0038I Pass  86: suminf.    0.75054 (3) obj. -22.5937 iterations 2
Cbc0038I Pass  87: suminf.    0.52132 (2) obj. -22.5937 iterations 1
Cbc0038I Pass  88: suminf.    0.52132 (2) obj. -22.5937 iterations 0
Cbc0038I Pass  89: suminf.    0.64201 (2) obj. -22.5937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -21.7304 - took 0.04 seconds
Cbc0012I Integer solution of -21.730441 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 6 columns
Cbc0031I 16 added rows had average density of 41.375
Cbc0013I At root node, 16 cuts changed objective from -23.666302 to -22.49162 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1020 row cuts average 57.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 20 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 61 row cuts average 45.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 71 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.730441 best solution, best possible -22.49162 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 22 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 20 columns
Cbc0001I Search completed - best objective -21.73044093325729, took 6581 iterations and 188 nodes (0.43 seconds)
Cbc0032I Strong branching done 2164 times (14808 iterations), fathomed 69 nodes and fixed 98 variables
Cbc0035I Maximum depth 14, 424 variables fixed on reduced cost
Cuts at root node changed objective from -23.6663 to -22.4916
Probing was tried 100 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 299 times and created 1391 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 299 times and created 209 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 299 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)

Result - Optimal solution found

Objective value:                21.73044093
Enumerated nodes:               188
Total iterations:               6581
Time (CPU seconds):             0.42
Time (Wallclock seconds):       0.43

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.43

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ec2318e6fe8e45f887fc8556125695ca-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/ec2318e6fe8e45f887fc8556125695ca-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.4978 - 0.00 seconds
Cgl0004I processed model has 36 rows, 59 columns (59 integer (29 of which binary)) and 148 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (4) obj. -25.3936 iterations 8
Cbc0038I Solution found of -22.4561
Cbc0038I Cleaned solution of -22.4561
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.4561 to -22.8661 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.1293
Cbc0038I Pass   2: suminf.    0.83333 (4) obj. -25.3936 iterations 0
Cbc0038I Pass   3: suminf.    0.34605 (2) obj. -23.1293 iterations 18
Cbc0038I Pass   4: suminf.    1.07933 (6) obj. -23.1293 iterations 3
Cbc0038I Pass   5: suminf.    0.36985 (1) obj. -23.1293 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -23.3852 iterations 7
Cbc0038I Pass   7: suminf.    0.28735 (1) obj. -23.1293 iterations 4
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -23.4751 iterations 8
Cbc0038I Pass   9: suminf.    0.30504 (1) obj. -23.1293 iterations 3
Cbc0038I Pass  10: suminf.    1.07162 (5) obj. -23.1293 iterations 14
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -23.2415 iterations 3
Cbc0038I Solution found of -23.2415
Cbc0038I Cleaned solution of -23.2415
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.6927
Cbc0038I Pass  12: suminf.    0.83333 (4) obj. -25.3936 iterations 0
Cbc0038I Pass  13: suminf.    0.74277 (2) obj. -23.6927 iterations 18
Cbc0038I Pass  14: suminf.    0.50000 (2) obj. -23.9989 iterations 7
Cbc0038I Pass  15: suminf.    0.58039 (2) obj. -23.6927 iterations 8
Cbc0038I Pass  16: suminf.    0.38054 (2) obj. -23.6927 iterations 2
Cbc0038I Pass  17: suminf.    2.62332 (6) obj. -23.6927 iterations 17
Cbc0038I Pass  18: suminf.    0.07594 (1) obj. -23.6927 iterations 11
Cbc0038I Pass  19: suminf.    0.07594 (1) obj. -23.6927 iterations 0
Cbc0038I Pass  20: suminf.    0.97034 (7) obj. -23.6927 iterations 16
Cbc0038I Pass  21: suminf.    0.19292 (2) obj. -23.6927 iterations 2
Cbc0038I Pass  22: suminf.    0.50000 (2) obj. -24.3232 iterations 5
Cbc0038I Pass  23: suminf.    0.16667 (1) obj. -23.9842 iterations 3
Cbc0038I Pass  24: suminf.    0.51024 (2) obj. -23.6927 iterations 4
Cbc0038I Pass  25: suminf.    0.58177 (2) obj. -23.6927 iterations 16
Cbc0038I Pass  26: suminf.    1.12257 (5) obj. -23.6927 iterations 4
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -23.7258 iterations 4
Cbc0038I Solution found of -23.7258
Cbc0038I Cleaned solution of -23.7258
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.2574
Cbc0038I Pass  28: suminf.    0.83333 (4) obj. -25.3936 iterations 0
Cbc0038I Pass  29: suminf.    0.87222 (3) obj. -24.2574 iterations 17
Cbc0038I Pass  30: suminf.    0.67876 (3) obj. -24.2574 iterations 6
Cbc0038I Pass  31: suminf.    1.12276 (3) obj. -24.2574 iterations 9
Cbc0038I Pass  32: suminf.    0.50000 (2) obj. -24.3232 iterations 26
Cbc0038I Pass  33: suminf.    2.74058 (8) obj. -24.2574 iterations 4
Cbc0038I Pass  34: suminf.    0.95094 (3) obj. -24.2574 iterations 14
Cbc0038I Pass  35: suminf.    0.83333 (3) obj. -24.963 iterations 18
Cbc0038I Pass  36: suminf.    0.33333 (2) obj. -24.4456 iterations 7
Cbc0038I Pass  37: suminf.    0.78772 (3) obj. -24.2574 iterations 8
Cbc0038I Pass  38: suminf.    0.72776 (3) obj. -24.2574 iterations 2
Cbc0038I Pass  39: suminf.    0.50000 (2) obj. -24.3232 iterations 7
Cbc0038I Pass  40: suminf.    2.74058 (8) obj. -24.2574 iterations 4
Cbc0038I Pass  41: suminf.    0.95094 (3) obj. -24.2574 iterations 12
Cbc0038I Pass  42: suminf.    0.83333 (3) obj. -24.963 iterations 16
Cbc0038I Pass  43: suminf.    0.33333 (2) obj. -24.4456 iterations 7
Cbc0038I Pass  44: suminf.    0.78772 (3) obj. -24.2574 iterations 8
Cbc0038I Pass  45: suminf.    0.72776 (3) obj. -24.2574 iterations 2
Cbc0038I Pass  46: suminf.    0.50000 (2) obj. -24.3232 iterations 7
Cbc0038I Pass  47: suminf.    2.74058 (8) obj. -24.2574 iterations 4
Cbc0038I Pass  48: suminf.    0.95094 (3) obj. -24.2574 iterations 12
Cbc0038I Pass  49: suminf.    0.83333 (3) obj. -24.963 iterations 16
Cbc0038I Pass  50: suminf.    0.33333 (2) obj. -24.4456 iterations 7
Cbc0038I Pass  51: suminf.    0.78772 (3) obj. -24.2574 iterations 8
Cbc0038I Pass  52: suminf.    0.72776 (3) obj. -24.2574 iterations 2
Cbc0038I Pass  53: suminf.    0.50000 (2) obj. -24.3232 iterations 7
Cbc0038I Pass  54: suminf.    2.74058 (8) obj. -24.2574 iterations 4
Cbc0038I Pass  55: suminf.    0.95094 (3) obj. -24.2574 iterations 12
Cbc0038I Pass  56: suminf.    0.83333 (3) obj. -24.963 iterations 16
Cbc0038I Pass  57: suminf.    0.33333 (2) obj. -24.4456 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 20 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.7258 - took 0.03 seconds
Cbc0012I Integer solution of -23.725821 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 8 rows 10 columns
Cbc0031I 11 added rows had average density of 42.909091
Cbc0013I At root node, 11 cuts changed objective from -25.497763 to -24.50814 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 712 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 6 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 44.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 88 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.725821 best solution, best possible -24.50814 (0.15 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 10 rows 12 columns
Cbc0001I Search completed - best objective -23.72582131996774, took 4830 iterations and 92 nodes (0.27 seconds)
Cbc0032I Strong branching done 982 times (5274 iterations), fathomed 36 nodes and fixed 39 variables
Cbc0035I Maximum depth 12, 284 variables fixed on reduced cost
Cuts at root node changed objective from -25.4978 to -24.5081
Probing was tried 100 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 262 times and created 1078 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 262 times and created 135 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 262 times and created 168 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                23.72582132
Enumerated nodes:               92
Total iterations:               4830
Time (CPU seconds):             0.27
Time (Wallclock seconds):       0.27

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.27

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/3e21ad3044cd45a7a37b3046552791c4-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/3e21ad3044cd45a7a37b3046552791c4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 17.4583 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -17.4583 iterations 8
Cbc0038I Solution found of -15.1255
Cbc0038I Cleaned solution of -15.1255
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -15.3588
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -17.4583 iterations 0
Cbc0038I Pass   3: suminf.    0.29244 (1) obj. -15.3588 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -15.752 iterations 8
Cbc0038I Pass   5: suminf.    0.34096 (1) obj. -15.3588 iterations 1
Cbc0038I Pass   6: suminf.    0.64315 (2) obj. -15.3588 iterations 3
Cbc0038I Pass   7: suminf.    0.28997 (1) obj. -15.3588 iterations 6
Cbc0038I Pass   8: suminf.    0.28997 (1) obj. -15.3588 iterations 0
Cbc0038I Pass   9: suminf.    0.40000 (1) obj. -15.5318 iterations 5
Cbc0038I Pass  10: suminf.    0.41934 (1) obj. -15.3588 iterations 2
Cbc0038I Pass  11: suminf.    0.39805 (1) obj. -15.3588 iterations 4
Cbc0038I Pass  12: suminf.    0.39805 (1) obj. -15.3588 iterations 0
Cbc0038I Pass  13: suminf.    0.28997 (1) obj. -15.3588 iterations 5
Cbc0038I Pass  14: suminf.    0.49188 (1) obj. -15.3588 iterations 9
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -15.4311 iterations 5
Cbc0038I Pass  16: suminf.    0.47548 (1) obj. -15.3588 iterations 3
Cbc0038I Pass  17: suminf.    0.34096 (1) obj. -15.3588 iterations 3
Cbc0038I Pass  18: suminf.    0.34096 (1) obj. -15.3588 iterations 0
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -15.752 iterations 3
Cbc0038I Pass  20: suminf.    0.47400 (2) obj. -15.3588 iterations 6
Cbc0038I Pass  21: suminf.    0.40000 (2) obj. -15.4179 iterations 3
Cbc0038I Pass  22: suminf.    0.52362 (2) obj. -15.3588 iterations 4
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -15.6583 iterations 2
Cbc0038I Pass  24: suminf.    0.48717 (1) obj. -15.3588 iterations 3
Cbc0038I Pass  25: suminf.    0.63319 (2) obj. -15.3588 iterations 7
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -15.752 iterations 3
Cbc0038I Pass  27: suminf.    0.34096 (1) obj. -15.3588 iterations 3
Cbc0038I Pass  28: suminf.    0.63319 (2) obj. -15.3588 iterations 1
Cbc0038I Pass  29: suminf.    0.28997 (1) obj. -15.3588 iterations 3
Cbc0038I Pass  30: suminf.    0.28997 (1) obj. -15.3588 iterations 0
Cbc0038I Pass  31: suminf.    0.40000 (1) obj. -15.5318 iterations 3
Cbc0038I Rounding solution of -15.1317 is better than previous of -15.1255

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.7787
Cbc0038I Pass  31: suminf.    0.80000 (4) obj. -17.4583 iterations 0
Cbc0038I Pass  32: suminf.    0.21915 (2) obj. -15.7787 iterations 9
Cbc0038I Pass  33: suminf.    0.21915 (2) obj. -15.7787 iterations 0
Cbc0038I Pass  34: suminf.    0.23351 (2) obj. -15.7787 iterations 5
Cbc0038I Pass  35: suminf.    0.31502 (2) obj. -15.7787 iterations 11
Cbc0038I Pass  36: suminf.    0.27996 (2) obj. -15.7787 iterations 1
Cbc0038I Pass  37: suminf.    0.62378 (2) obj. -15.7787 iterations 8
Cbc0038I Pass  38: suminf.    1.12860 (4) obj. -15.7787 iterations 8
Cbc0038I Pass  39: suminf.    0.60000 (2) obj. -16.0021 iterations 9
Cbc0038I Pass  40: suminf.    0.71195 (2) obj. -15.7787 iterations 8
Cbc0038I Pass  41: suminf.    0.21915 (2) obj. -15.7787 iterations 3
Cbc0038I Pass  42: suminf.    0.21915 (2) obj. -15.7787 iterations 0
Cbc0038I Pass  43: suminf.    0.23351 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  44: suminf.    0.63119 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  45: suminf.    0.62378 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  46: suminf.    0.71195 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  47: suminf.    0.62378 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  48: suminf.    0.71182 (2) obj. -15.7787 iterations 1
Cbc0038I Pass  49: suminf.    0.62378 (2) obj. -15.7787 iterations 1
Cbc0038I Pass  50: suminf.    0.62378 (2) obj. -15.7787 iterations 1
Cbc0038I Pass  51: suminf.    0.50859 (2) obj. -15.7787 iterations 8
Cbc0038I Pass  52: suminf.    0.42562 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  53: suminf.    0.50207 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  54: suminf.    0.42562 (2) obj. -15.7787 iterations 2
Cbc0038I Pass  55: suminf.    0.42562 (2) obj. -15.7787 iterations 0
Cbc0038I Pass  56: suminf.    0.65522 (3) obj. -15.7787 iterations 5
Cbc0038I Pass  57: suminf.    0.57154 (2) obj. -15.7787 iterations 3
Cbc0038I Pass  58: suminf.    0.98475 (8) obj. -15.7787 iterations 6
Cbc0038I Pass  59: suminf.    0.60000 (2) obj. -16.0021 iterations 9
Cbc0038I Pass  60: suminf.    0.71195 (2) obj. -15.7787 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15.1317 - took 0.01 seconds
Cbc0012I Integer solution of -15.131735 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 3 columns
Cbc0031I 11 added rows had average density of 30.181818
Cbc0013I At root node, 11 cuts changed objective from -17.458269 to -15.997392 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 936 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.131735 best solution, best possible -15.997392 (0.10 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 20 columns
Cbc0001I Search completed - best objective -15.13173507899045, took 5767 iterations and 148 nodes (0.22 seconds)
Cbc0032I Strong branching done 1330 times (5948 iterations), fathomed 46 nodes and fixed 44 variables
Cbc0035I Maximum depth 12, 235 variables fixed on reduced cost
Cuts at root node changed objective from -17.4583 to -15.9974
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 394 times and created 1745 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 100 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.13173508
Enumerated nodes:               148
Total iterations:               5767
Time (CPU seconds):             0.21
Time (Wallclock seconds):       0.22

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/07ca8d0e563c47008cedbd269dcec92c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/07ca8d0e563c47008cedbd269dcec92c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.2142 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -26.191 iterations 12
Cbc0038I Solution found of -22.8229
Cbc0038I Cleaned solution of -22.8229
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.8229 to -22.9622 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.2874
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -26.191 iterations 0
Cbc0038I Pass   3: suminf.    0.47882 (1) obj. -23.2874 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.6352 iterations 4
Cbc0038I Pass   5: suminf.    0.46597 (1) obj. -23.2874 iterations 2
Cbc0038I Pass   6: suminf.    0.56944 (2) obj. -23.2874 iterations 10
Cbc0038I Pass   7: suminf.    0.55273 (2) obj. -23.2874 iterations 1
Cbc0038I Pass   8: suminf.    0.16511 (1) obj. -23.2874 iterations 2
Cbc0038I Pass   9: suminf.    0.16667 (1) obj. -23.7735 iterations 4
Cbc0038I Pass  10: suminf.    0.31986 (1) obj. -23.2874 iterations 3
Cbc0038I Pass  11: suminf.    0.54583 (2) obj. -23.2874 iterations 11
Cbc0038I Pass  12: suminf.    0.50000 (2) obj. -23.3853 iterations 8
Cbc0038I Pass  13: suminf.    0.59231 (2) obj. -23.2874 iterations 4
Cbc0038I Pass  14: suminf.    0.56171 (2) obj. -23.2874 iterations 2
Cbc0038I Pass  15: suminf.    0.16511 (1) obj. -23.2874 iterations 1
Cbc0038I Pass  16: suminf.    0.16667 (1) obj. -23.7735 iterations 5
Cbc0038I Pass  17: suminf.    0.31986 (1) obj. -23.2874 iterations 3
Cbc0038I Pass  18: suminf.    0.16511 (1) obj. -23.2874 iterations 4
Cbc0038I Pass  19: suminf.    0.16511 (1) obj. -23.2874 iterations 2
Cbc0038I Pass  20: suminf.    0.61200 (2) obj. -23.2874 iterations 18
Cbc0038I Pass  21: suminf.    0.56370 (2) obj. -23.2874 iterations 3
Cbc0038I Pass  22: suminf.    0.01979 (1) obj. -23.2874 iterations 2
Cbc0038I Pass  23: suminf.    0.16667 (1) obj. -23.8856 iterations 8
Cbc0038I Pass  24: suminf.    0.20148 (1) obj. -23.2874 iterations 3
Cbc0038I Pass  25: suminf.    0.56686 (2) obj. -23.2874 iterations 6
Cbc0038I Pass  26: suminf.    0.53410 (2) obj. -23.2874 iterations 2
Cbc0038I Pass  27: suminf.    0.11698 (1) obj. -23.2874 iterations 2
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.8106 iterations 6
Cbc0038I Pass  29: suminf.    0.28065 (1) obj. -23.2874 iterations 4
Cbc0038I Pass  30: suminf.    0.38631 (2) obj. -23.2874 iterations 20
Cbc0038I Pass  31: suminf.    0.33333 (1) obj. -23.3418 iterations 5
Cbc0038I Rounding solution of -23.2721 is better than previous of -22.9622

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.8728
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -26.191 iterations 0
Cbc0038I Pass  32: suminf.    0.42699 (2) obj. -23.8728 iterations 8
Cbc0038I Pass  33: suminf.    0.39452 (2) obj. -23.8728 iterations 2
Cbc0038I Pass  34: suminf.    0.25539 (2) obj. -23.8728 iterations 7
Cbc0038I Pass  35: suminf.    0.23791 (2) obj. -23.8728 iterations 3
Cbc0038I Pass  36: suminf.    0.76021 (3) obj. -23.8728 iterations 12
Cbc0038I Pass  37: suminf.    0.69051 (3) obj. -23.8728 iterations 4
Cbc0038I Pass  38: suminf.    0.17305 (1) obj. -23.8728 iterations 3
Cbc0038I Pass  39: suminf.    0.67168 (5) obj. -23.8728 iterations 8
Cbc0038I Pass  40: suminf.    0.17305 (1) obj. -23.8728 iterations 3
Cbc0038I Pass  41: suminf.    0.37505 (2) obj. -23.8728 iterations 10
Cbc0038I Pass  42: suminf.    0.32578 (2) obj. -23.8728 iterations 2
Cbc0038I Pass  43: suminf.    0.16667 (1) obj. -23.9145 iterations 8
Cbc0038I Pass  44: suminf.    0.21079 (1) obj. -23.8728 iterations 2
Cbc0038I Pass  45: suminf.    0.21164 (1) obj. -23.8728 iterations 5
Cbc0038I Pass  46: suminf.    0.36877 (2) obj. -23.8728 iterations 9
Cbc0038I Pass  47: suminf.    0.34169 (3) obj. -23.8728 iterations 4
Cbc0038I Pass  48: suminf.    0.50000 (2) obj. -24.1304 iterations 11
Cbc0038I Pass  49: suminf.    0.16667 (1) obj. -23.8897 iterations 2
Cbc0038I Pass  50: suminf.    0.18455 (1) obj. -23.8728 iterations 2
Cbc0038I Pass  51: suminf.    0.34511 (2) obj. -23.8728 iterations 8
Cbc0038I Pass  52: suminf.    1.48390 (6) obj. -23.8728 iterations 4
Cbc0038I Pass  53: suminf.    0.34484 (2) obj. -23.8728 iterations 5
Cbc0038I Pass  54: suminf.    0.46219 (3) obj. -23.8728 iterations 5
Cbc0038I Pass  55: suminf.    0.41582 (3) obj. -23.8728 iterations 4
Cbc0038I Pass  56: suminf.    0.25876 (1) obj. -23.8728 iterations 4
Cbc0038I Pass  57: suminf.    0.16667 (1) obj. -23.9145 iterations 7
Cbc0038I Pass  58: suminf.    0.21079 (1) obj. -23.8728 iterations 3
Cbc0038I Pass  59: suminf.    0.34477 (3) obj. -23.8728 iterations 7
Cbc0038I Pass  60: suminf.    1.48390 (6) obj. -23.8728 iterations 6
Cbc0038I Rounding solution of -23.3011 is better than previous of -23.2721

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -24.5752
Cbc0038I Pass  60: suminf.    0.83333 (5) obj. -26.191 iterations 0
Cbc0038I Pass  61: suminf.    0.56628 (3) obj. -24.5752 iterations 8
Cbc0038I Pass  62: suminf.    0.48969 (3) obj. -24.5752 iterations 4
Cbc0038I Pass  63: suminf.    0.52160 (3) obj. -24.5752 iterations 12
Cbc0038I Pass  64: suminf.    0.52160 (3) obj. -24.5752 iterations 2
Cbc0038I Pass  65: suminf.    0.39090 (3) obj. -24.5752 iterations 6
Cbc0038I Pass  66: suminf.    0.39090 (3) obj. -24.5752 iterations 0
Cbc0038I Pass  67: suminf.    0.93934 (3) obj. -24.5752 iterations 6
Cbc0038I Pass  68: suminf.    0.33701 (3) obj. -24.5752 iterations 4
Cbc0038I Pass  69: suminf.    0.67921 (3) obj. -24.5752 iterations 5
Cbc0038I Pass  70: suminf.    0.33333 (2) obj. -24.5779 iterations 7
Cbc0038I Pass  71: suminf.    0.33678 (2) obj. -24.5752 iterations 3
Cbc0038I Pass  72: suminf.    0.51704 (3) obj. -24.5752 iterations 7
Cbc0038I Pass  73: suminf.    0.42075 (3) obj. -24.5752 iterations 6
Cbc0038I Pass  74: suminf.    0.36670 (2) obj. -24.5752 iterations 4
Cbc0038I Pass  75: suminf.    0.34022 (3) obj. -24.5752 iterations 7
Cbc0038I Pass  76: suminf.    0.36670 (2) obj. -24.5752 iterations 5
Cbc0038I Pass  77: suminf.    0.36425 (3) obj. -24.5752 iterations 5
Cbc0038I Pass  78: suminf.    0.35011 (3) obj. -24.5752 iterations 6
Cbc0038I Pass  79: suminf.    0.33367 (2) obj. -24.5752 iterations 7
Cbc0038I Pass  80: suminf.    1.50880 (5) obj. -24.5752 iterations 22
Cbc0038I Pass  81: suminf.    1.78837 (5) obj. -24.5752 iterations 7
Cbc0038I Pass  82: suminf.    0.66667 (3) obj. -24.7697 iterations 7
Cbc0038I Pass  83: suminf.    0.67068 (3) obj. -24.5752 iterations 7
Cbc0038I Pass  84: suminf.    0.57807 (3) obj. -24.5752 iterations 4
Cbc0038I Pass  85: suminf.    0.35597 (3) obj. -24.5752 iterations 8
Cbc0038I Pass  86: suminf.    0.35597 (3) obj. -24.5752 iterations 0
Cbc0038I Pass  87: suminf.    0.67921 (3) obj. -24.5752 iterations 5
Cbc0038I Pass  88: suminf.    0.33333 (2) obj. -24.5779 iterations 8
Cbc0038I Pass  89: suminf.    0.33678 (2) obj. -24.5752 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.3011 - took 0.06 seconds
Cbc0012I Integer solution of -23.30112 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 12 columns
Cbc0031I 19 added rows had average density of 53.578947
Cbc0013I At root node, 19 cuts changed objective from -26.214199 to -24.785205 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 667 row cuts average 57.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 23 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 56 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 54 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.30112 best solution, best possible -24.785205 (0.21 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 25 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 10 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 17 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 16 columns
Cbc0010I After 1000 nodes, 7 on tree, -23.30112 best solution, best possible -24.191039 (1.19 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 20 columns
Cbc0001I Search completed - best objective -23.30111953988662, took 62393 iterations and 12153 nodes (1.29 seconds)
Cbc0032I Strong branching done 8344 times (46364 iterations), fathomed 306 nodes and fixed 440 variables
Cbc0041I Maximum depth 20, 2014 variables fixed on reduced cost (complete fathoming 149 times, 10993 nodes taking 43507 iterations)
Cuts at root node changed objective from -26.2142 to -24.7852
Probing was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 657 times and created 1951 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 657 times and created 139 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 657 times and created 391 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)

Result - Optimal solution found

Objective value:                23.30111954
Enumerated nodes:               12153
Total iterations:               62393
Time (CPU seconds):             1.27
Time (Wallclock seconds):       1.29

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.27   (Wallclock seconds):       1.29

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cfb0ceb0dd7448178f2ec7c7ba09ba80-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/cfb0ceb0dd7448178f2ec7c7ba09ba80-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.3399 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.2522 iterations 8
Cbc0038I Solution found of -31.7787
Cbc0038I Cleaned solution of -31.7787
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -31.7787 to -32.3926 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.7873
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.2522 iterations 0
Cbc0038I Pass   3: suminf.    0.34276 (2) obj. -32.7873 iterations 14
Cbc0038I Pass   4: suminf.    0.26693 (2) obj. -32.7873 iterations 2
Cbc0038I Pass   5: suminf.    0.28571 (1) obj. -32.9684 iterations 6
Cbc0038I Pass   6: suminf.    0.47051 (1) obj. -32.7873 iterations 3
Cbc0038I Pass   7: suminf.    0.27392 (1) obj. -32.7873 iterations 18
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -32.8736 iterations 10
Cbc0038I Pass   9: suminf.    0.23087 (1) obj. -32.7873 iterations 4
Cbc0038I Pass  10: suminf.    0.63175 (2) obj. -32.7873 iterations 10
Cbc0038I Pass  11: suminf.    0.58610 (2) obj. -32.7873 iterations 3
Cbc0038I Pass  12: suminf.    0.32477 (2) obj. -32.7873 iterations 5
Cbc0038I Pass  13: suminf.    0.14286 (1) obj. -32.9847 iterations 14
Cbc0038I Pass  14: suminf.    0.36196 (1) obj. -32.7873 iterations 5
Cbc0038I Pass  15: suminf.    1.14703 (6) obj. -32.7873 iterations 10
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. -32.8899 iterations 6
Cbc0038I Solution found of -32.8899
Cbc0038I Cleaned solution of -32.8899
Cbc0038I Rounding solution of -32.9344 is better than previous of -32.8899

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -32.9344 to -33.0816 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.7333
Cbc0038I Pass  17: suminf.    0.85714 (6) obj. -36.2522 iterations 0
Cbc0038I Pass  18: suminf.    0.61991 (3) obj. -33.7333 iterations 16
Cbc0038I Pass  19: suminf.    0.56974 (3) obj. -33.7333 iterations 6
Cbc0038I Pass  20: suminf.    0.29531 (3) obj. -33.7333 iterations 10
Cbc0038I Pass  21: suminf.    0.95229 (8) obj. -33.7333 iterations 3
Cbc0038I Pass  22: suminf.    0.30713 (2) obj. -33.7333 iterations 13
Cbc0038I Pass  23: suminf.    0.26580 (2) obj. -33.7333 iterations 3
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -33.8132 iterations 15
Cbc0038I Pass  25: suminf.    0.24228 (1) obj. -33.7333 iterations 5
Cbc0038I Pass  26: suminf.    0.38811 (3) obj. -33.7333 iterations 9
Cbc0038I Pass  27: suminf.    0.31672 (3) obj. -33.7333 iterations 6
Cbc0038I Pass  28: suminf.    0.83541 (5) obj. -33.7333 iterations 7
Cbc0038I Pass  29: suminf.    0.14286 (1) obj. -33.8072 iterations 6
Cbc0038I Pass  30: suminf.    0.21832 (1) obj. -33.7333 iterations 5
Cbc0038I Pass  31: suminf.    0.35631 (3) obj. -33.7333 iterations 6
Cbc0038I Pass  32: suminf.    0.28971 (3) obj. -33.7333 iterations 4
Cbc0038I Pass  33: suminf.    0.30686 (1) obj. -33.7333 iterations 2
Cbc0038I Pass  34: suminf.    0.61395 (3) obj. -33.7333 iterations 15
Cbc0038I Pass  35: suminf.    0.53739 (3) obj. -33.7333 iterations 4
Cbc0038I Pass  36: suminf.    0.24141 (1) obj. -33.7333 iterations 9
Cbc0038I Pass  37: suminf.    0.14286 (1) obj. -33.7795 iterations 8
Cbc0038I Pass  38: suminf.    0.19418 (1) obj. -33.7333 iterations 7
Cbc0038I Pass  39: suminf.    1.00527 (4) obj. -33.7333 iterations 9
Cbc0038I Pass  40: suminf.    0.91800 (4) obj. -33.7333 iterations 4
Cbc0038I Pass  41: suminf.    0.34751 (2) obj. -33.7333 iterations 12
Cbc0038I Pass  42: suminf.    0.32437 (2) obj. -33.7333 iterations 4
Cbc0038I Pass  43: suminf.    2.06697 (5) obj. -33.7333 iterations 6
Cbc0038I Pass  44: suminf.    0.42857 (3) obj. -34.2157 iterations 17
Cbc0038I Pass  45: suminf.    0.54261 (3) obj. -33.7333 iterations 11
Cbc0038I Pass  46: suminf.    0.44921 (3) obj. -33.7333 iterations 4
Cbc0038I Rounding solution of -33.253 is better than previous of -33.0816

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 29 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -34.5153
Cbc0038I Pass  46: suminf.    0.85714 (6) obj. -36.2522 iterations 0
Cbc0038I Pass  47: suminf.    0.74694 (4) obj. -34.5153 iterations 17
Cbc0038I Pass  48: suminf.    0.68187 (4) obj. -34.5153 iterations 10
Cbc0038I Pass  49: suminf.    0.60319 (4) obj. -34.5153 iterations 17
Cbc0038I Pass  50: suminf.    0.42857 (4) obj. -34.5153 iterations 12
Cbc0038I Pass  51: suminf.    0.55387 (3) obj. -34.5153 iterations 12
Cbc0038I Pass  52: suminf.    0.49647 (3) obj. -34.5153 iterations 2
Cbc0038I Pass  53: suminf.    0.43361 (3) obj. -34.5153 iterations 8
Cbc0038I Pass  54: suminf.    0.43361 (3) obj. -34.5153 iterations 0
Cbc0038I Pass  55: suminf.    0.73200 (3) obj. -34.5153 iterations 4
Cbc0038I Pass  56: suminf.    0.41229 (3) obj. -34.5153 iterations 3
Cbc0038I Pass  57: suminf.    2.09728 (7) obj. -34.5153 iterations 13
Cbc0038I Pass  58: suminf.    0.42857 (3) obj. -34.7159 iterations 15
Cbc0038I Pass  59: suminf.    0.71645 (3) obj. -34.5153 iterations 11
Cbc0038I Pass  60: suminf.    0.44141 (3) obj. -34.5153 iterations 9
Cbc0038I Pass  61: suminf.    0.41595 (3) obj. -34.5153 iterations 4
Cbc0038I Pass  62: suminf.    0.73200 (3) obj. -34.5153 iterations 2
Cbc0038I Pass  63: suminf.    0.41229 (3) obj. -34.5153 iterations 1
Cbc0038I Pass  64: suminf.    0.80532 (3) obj. -34.5153 iterations 2
Cbc0038I Pass  65: suminf.    0.41229 (3) obj. -34.5153 iterations 3
Cbc0038I Pass  66: suminf.    0.47194 (3) obj. -34.5153 iterations 5
Cbc0038I Pass  67: suminf.    2.69001 (9) obj. -34.5153 iterations 18
Cbc0038I Pass  68: suminf.    0.71429 (3) obj. -34.6365 iterations 22
Cbc0038I Pass  69: suminf.    0.85447 (3) obj. -34.5153 iterations 16
Cbc0038I Pass  70: suminf.    0.73116 (3) obj. -34.5153 iterations 15
Cbc0038I Pass  71: suminf.    0.71429 (4) obj. -34.5153 iterations 10
Cbc0038I Pass  72: suminf.    0.72596 (3) obj. -34.5153 iterations 5
Cbc0038I Pass  73: suminf.    0.85298 (4) obj. -34.5153 iterations 7
Cbc0038I Pass  74: suminf.    0.70514 (4) obj. -34.5153 iterations 6
Cbc0038I Pass  75: suminf.    0.98483 (3) obj. -34.5153 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 30 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -33.253 - took 0.07 seconds
Cbc0012I Integer solution of -33.252956 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 16 columns
Cbc0031I 18 added rows had average density of 55.888889
Cbc0013I At root node, 18 cuts changed objective from -36.339924 to -34.333779 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 70 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.252956 best solution, best possible -34.333779 (0.22 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 31 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 26 rows 32 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 20 columns
Cbc0010I After 1000 nodes, 8 on tree, -33.252956 best solution, best possible -34.333779 (1.61 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0001I Search completed - best objective -33.2529564313588, took 179721 iterations and 23682 nodes (2.47 seconds)
Cbc0032I Strong branching done 12332 times (88612 iterations), fathomed 295 nodes and fixed 920 variables
Cbc0041I Maximum depth 29, 3819 variables fixed on reduced cost (complete fathoming 401 times, 22036 nodes taking 155005 iterations)
Cuts at root node changed objective from -36.3399 to -34.3338
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 554 times and created 835 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 554 times and created 255 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.25295643
Enumerated nodes:               23682
Total iterations:               179721
Time (CPU seconds):             2.43
Time (Wallclock seconds):       2.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.43   (Wallclock seconds):       2.47

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4b65159439dd49c8aeab852981e54ea0-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/4b65159439dd49c8aeab852981e54ea0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.0869 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -25.0264 iterations 13
Cbc0038I Solution found of -21.3458
Cbc0038I Cleaned solution of -21.3458
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -21.3458 to -22.3702 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.6419
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -25.0264 iterations 0
Cbc0038I Pass   3: suminf.    0.64144 (2) obj. -22.6419 iterations 10
Cbc0038I Pass   4: suminf.    0.54826 (2) obj. -22.6419 iterations 2
Cbc0038I Pass   5: suminf.    0.16667 (1) obj. -22.7866 iterations 11
Cbc0038I Pass   6: suminf.    0.36800 (1) obj. -22.6419 iterations 3
Cbc0038I Pass   7: suminf.    0.33333 (1) obj. -23.006 iterations 8
Cbc0038I Pass   8: suminf.    0.14646 (1) obj. -22.6419 iterations 4
Cbc0038I Pass   9: suminf.    0.16667 (1) obj. -23.2343 iterations 10
Cbc0038I Solution found of -22.7118
Cbc0038I Cleaned solution of -22.7118
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -22.7118 to -23.2441 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.6127
Cbc0038I Pass  10: suminf.    0.83333 (5) obj. -25.0264 iterations 0
Cbc0038I Pass  11: suminf.    0.69025 (3) obj. -23.6127 iterations 14
Cbc0038I Pass  12: suminf.    0.50000 (3) obj. -23.8272 iterations 10
Cbc0038I Pass  13: suminf.    0.81442 (3) obj. -23.6127 iterations 8
Cbc0038I Pass  14: suminf.    0.50000 (3) obj. -23.9661 iterations 14
Cbc0038I Pass  15: suminf.    0.73609 (3) obj. -23.6127 iterations 12
Cbc0038I Pass  16: suminf.    1.59499 (6) obj. -23.6127 iterations 9
Cbc0038I Pass  17: suminf.    0.30880 (2) obj. -23.6127 iterations 7
Cbc0038I Pass  18: suminf.    0.16954 (2) obj. -23.6127 iterations 2
Cbc0038I Pass  19: suminf.    0.57878 (2) obj. -23.6127 iterations 2
Cbc0038I Pass  20: suminf.    0.57878 (2) obj. -23.6127 iterations 0
Cbc0038I Pass  21: suminf.    0.50000 (2) obj. -23.9554 iterations 10
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -23.7666 iterations 2
Cbc0038I Pass  23: suminf.    0.99305 (3) obj. -23.6127 iterations 7
Cbc0038I Pass  24: suminf.    0.72428 (3) obj. -23.6127 iterations 3
Cbc0038I Pass  25: suminf.    0.38127 (3) obj. -23.6127 iterations 12
Cbc0038I Pass  26: suminf.    0.31963 (2) obj. -23.6127 iterations 6
Cbc0038I Pass  27: suminf.    0.57878 (2) obj. -23.6127 iterations 7
Cbc0038I Pass  28: suminf.    0.57878 (2) obj. -23.6127 iterations 0
Cbc0038I Pass  29: suminf.    0.50000 (2) obj. -23.9554 iterations 8
Cbc0038I Pass  30: suminf.    0.16667 (1) obj. -23.7666 iterations 2
Cbc0038I Pass  31: suminf.    0.64774 (4) obj. -23.6127 iterations 8
Cbc0038I Pass  32: suminf.    0.16667 (1) obj. -23.7666 iterations 8
Cbc0038I Pass  33: suminf.    0.52745 (2) obj. -23.6127 iterations 10
Cbc0038I Pass  34: suminf.    0.50000 (2) obj. -23.718 iterations 10
Cbc0038I Pass  35: suminf.    0.98970 (3) obj. -23.6127 iterations 10
Cbc0038I Pass  36: suminf.    0.70671 (3) obj. -23.6127 iterations 1
Cbc0038I Pass  37: suminf.    0.50000 (2) obj. -23.9554 iterations 11
Cbc0038I Pass  38: suminf.    0.16667 (1) obj. -23.7666 iterations 2
Cbc0038I Pass  39: suminf.    0.57878 (2) obj. -23.6127 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -23.2441 - took 0.02 seconds
Cbc0012I Integer solution of -23.244114 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 9 columns
Cbc0031I 16 added rows had average density of 38.5
Cbc0013I At root node, 16 cuts changed objective from -25.086948 to -24.075087 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1143 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 22 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 57 row cuts average 40.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 78 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.244114 best solution, best possible -24.075087 (0.16 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 21 rows 24 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 22 columns
Cbc0001I Search completed - best objective -23.24411350116122, took 4695 iterations and 106 nodes (0.33 seconds)
Cbc0032I Strong branching done 1490 times (9789 iterations), fathomed 36 nodes and fixed 55 variables
Cbc0035I Maximum depth 12, 280 variables fixed on reduced cost
Cuts at root node changed objective from -25.0869 to -24.0751
Probing was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 262 times and created 1492 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 100 times and created 57 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 262 times and created 175 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)

Result - Optimal solution found

Objective value:                23.24411350
Enumerated nodes:               106
Total iterations:               4695
Time (CPU seconds):             0.31
Time (Wallclock seconds):       0.33

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.33

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ad663c2ab7c1473ca16def965fc5d956-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/ad663c2ab7c1473ca16def965fc5d956-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.4233 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.2854 iterations 9
Cbc0038I Solution found of -13.648
Cbc0038I Cleaned solution of -13.648
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -13.648 to -14.3371 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.5457
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.2854 iterations 0
Cbc0038I Pass   3: suminf.    0.40356 (2) obj. -14.5457 iterations 9
Cbc0038I Pass   4: suminf.    0.32605 (2) obj. -14.5457 iterations 2
Cbc0038I Pass   5: suminf.    0.20000 (1) obj. -14.6294 iterations 6
Cbc0038I Pass   6: suminf.    0.29148 (1) obj. -14.5457 iterations 3
Cbc0038I Pass   7: suminf.    0.74527 (2) obj. -14.5457 iterations 11
Cbc0038I Pass   8: suminf.    0.55670 (2) obj. -14.5457 iterations 3
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -14.882 iterations 9
Cbc0038I Pass  10: suminf.    0.43223 (1) obj. -14.5457 iterations 3
Cbc0038I Pass  11: suminf.    0.59383 (2) obj. -14.5457 iterations 2
Cbc0038I Pass  12: suminf.    0.59528 (2) obj. -14.5457 iterations 3
Cbc0038I Pass  13: suminf.    0.16672 (1) obj. -14.5457 iterations 10
Cbc0038I Pass  14: suminf.    0.16672 (1) obj. -14.5457 iterations 1
Cbc0038I Pass  15: suminf.    0.20000 (1) obj. -14.9995 iterations 6
Cbc0038I Pass  16: suminf.    0.30376 (1) obj. -14.5457 iterations 4
Cbc0038I Pass  17: suminf.    0.24131 (1) obj. -14.5457 iterations 3
Cbc0038I Pass  18: suminf.    0.24131 (1) obj. -14.5457 iterations 0
Cbc0038I Pass  19: suminf.    0.24131 (1) obj. -14.5457 iterations 1
Cbc0038I Pass  20: suminf.    0.24131 (1) obj. -14.5457 iterations 1
Cbc0038I Pass  21: suminf.    0.63738 (2) obj. -14.5457 iterations 3
Cbc0038I Pass  22: suminf.    0.60294 (2) obj. -14.5457 iterations 2
Cbc0038I Pass  23: suminf.    0.08242 (1) obj. -14.5457 iterations 3
Cbc0038I Pass  24: suminf.    0.20000 (1) obj. -14.6299 iterations 4
Cbc0038I Pass  25: suminf.    0.66953 (2) obj. -14.5457 iterations 7
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -14.9045 iterations 2
Cbc0038I Pass  27: suminf.    0.36731 (1) obj. -14.5457 iterations 2
Cbc0038I Pass  28: suminf.    0.66953 (2) obj. -14.5457 iterations 1
Cbc0038I Pass  29: suminf.    0.49886 (4) obj. -14.5457 iterations 10
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -14.5729 iterations 4
Cbc0038I Solution found of -14.5729
Cbc0038I Cleaned solution of -14.5729
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -14.5729 to -14.8868 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.1941
Cbc0038I Pass  31: suminf.    0.80000 (4) obj. -16.2854 iterations 0
Cbc0038I Pass  32: suminf.    0.57744 (3) obj. -15.1941 iterations 8
Cbc0038I Pass  33: suminf.    0.46494 (3) obj. -15.1941 iterations 6
Cbc0038I Pass  34: suminf.    0.63022 (3) obj. -15.1941 iterations 9
Cbc0038I Pass  35: suminf.    0.60000 (2) obj. -15.5763 iterations 16
Cbc0038I Pass  36: suminf.    0.26594 (2) obj. -15.1941 iterations 7
Cbc0038I Pass  37: suminf.    0.20482 (2) obj. -15.1941 iterations 1
Cbc0038I Pass  38: suminf.    0.57546 (2) obj. -15.1941 iterations 2
Cbc0038I Pass  39: suminf.    0.44178 (1) obj. -15.1941 iterations 1
Cbc0038I Pass  40: suminf.    0.20000 (1) obj. -15.3995 iterations 5
Cbc0038I Pass  41: suminf.    0.42467 (1) obj. -15.1941 iterations 4
Cbc0038I Pass  42: suminf.    0.42983 (2) obj. -15.1941 iterations 7
Cbc0038I Pass  43: suminf.    0.58969 (6) obj. -15.1941 iterations 2
Cbc0038I Pass  44: suminf.    1.04390 (3) obj. -15.1941 iterations 9
Cbc0038I Pass  45: suminf.    0.59540 (3) obj. -15.1941 iterations 6
Cbc0038I Pass  46: suminf.    0.60000 (2) obj. -15.3009 iterations 11
Cbc0038I Pass  47: suminf.    0.62231 (3) obj. -15.1941 iterations 15
Cbc0038I Pass  48: suminf.    0.53995 (3) obj. -15.1941 iterations 3
Cbc0038I Pass  49: suminf.    0.62231 (3) obj. -15.1941 iterations 1
Cbc0038I Pass  50: suminf.    0.53995 (3) obj. -15.1941 iterations 1
Cbc0038I Pass  51: suminf.    0.53995 (3) obj. -15.1941 iterations 2
Cbc0038I Pass  52: suminf.    0.53995 (3) obj. -15.1941 iterations 2
Cbc0038I Pass  53: suminf.    0.55231 (2) obj. -15.1941 iterations 6
Cbc0038I Pass  54: suminf.    0.20000 (1) obj. -15.3045 iterations 8
Cbc0038I Pass  55: suminf.    0.33317 (1) obj. -15.1941 iterations 4
Cbc0038I Pass  56: suminf.    0.35425 (2) obj. -15.1941 iterations 2
Cbc0038I Pass  57: suminf.    0.44178 (1) obj. -15.1941 iterations 4
Cbc0038I Pass  58: suminf.    0.44178 (1) obj. -15.1941 iterations 1
Cbc0038I Pass  59: suminf.    0.20000 (1) obj. -15.3995 iterations 7
Cbc0038I Pass  60: suminf.    0.42467 (1) obj. -15.1941 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.8868 - took 0.02 seconds
Cbc0012I Integer solution of -14.886756 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 8 rows 10 columns
Cbc0031I 8 added rows had average density of 33.5
Cbc0013I At root node, 8 cuts changed objective from -16.423273 to -15.250794 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 690 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.886756 best solution, best possible -15.250794 (0.10 seconds)
Cbc0001I Search completed - best objective -14.88675627857417, took 2248 iterations and 40 nodes (0.14 seconds)
Cbc0032I Strong branching done 418 times (2104 iterations), fathomed 9 nodes and fixed 13 variables
Cbc0035I Maximum depth 8, 92 variables fixed on reduced cost
Cuts at root node changed objective from -16.4233 to -15.2508
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 189 times and created 1021 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 100 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.88675628
Enumerated nodes:               40
Total iterations:               2248
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a67f5004c7aa4ece95f0d61032bad732-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/a67f5004c7aa4ece95f0d61032bad732-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 31 COLUMNS
At line 145 RHS
At line 172 BOUNDS
At line 195 ENDATA
Problem MODEL has 26 rows, 22 columns and 57 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.75519 - 0.00 seconds
Cgl0004I processed model has 9 rows, 12 columns (12 integer (6 of which binary)) and 30 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.666667
Cbc0038I Pass   1: suminf.    0.66667 (2) obj. -4.71506 iterations 3
Cbc0038I Solution found of -3.60933
Cbc0038I Cleaned solution of -3.60933
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 9 rows 12 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -3.60933 to -3.72972 (0.00 seconds)
Cbc0038I Round again with cutoff of -3.83228
Cbc0038I Pass   2: suminf.    0.66667 (2) obj. -4.71506 iterations 0
Cbc0038I Pass   3: suminf.    0.25796 (1) obj. -3.83228 iterations 3
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -4.18994 iterations 2
Cbc0038I Pass   5: suminf.    0.24639 (1) obj. -3.83228 iterations 2
Cbc0038I Pass   6: suminf.    0.25796 (1) obj. -3.83228 iterations 3
Cbc0038I Pass   7: suminf.    0.33333 (1) obj. -4.18994 iterations 3
Cbc0038I Pass   8: suminf.    0.24639 (1) obj. -3.83228 iterations 2
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -3.88737 iterations 3
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -4.01102 iterations 4
Cbc0038I Pass  11: suminf.    0.40876 (2) obj. -3.83228 iterations 3
Cbc0038I Pass  12: suminf.    0.66667 (2) obj. -4.71506 iterations 4
Cbc0038I Pass  13: suminf.    0.25796 (1) obj. -3.83228 iterations 3
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -4.18994 iterations 2
Cbc0038I Pass  15: suminf.    0.24639 (1) obj. -3.83228 iterations 2
Cbc0038I Pass  16: suminf.    0.24639 (1) obj. -3.83228 iterations 0
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -3.88737 iterations 3
Cbc0038I Pass  18: suminf.    0.24639 (1) obj. -3.83228 iterations 3
Cbc0038I Pass  19: suminf.    0.24639 (1) obj. -3.83228 iterations 0
Cbc0038I Pass  20: suminf.    0.33333 (1) obj. -3.88737 iterations 3
Cbc0038I Pass  21: suminf.    0.66667 (2) obj. -4.71506 iterations 2
Cbc0038I Pass  22: suminf.    0.66667 (2) obj. -4.71506 iterations 0
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -4.01102 iterations 3
Cbc0038I Pass  24: suminf.    0.40876 (2) obj. -3.83228 iterations 3
Cbc0038I Pass  25: suminf.    0.66667 (2) obj. -4.71506 iterations 4
Cbc0038I Pass  26: suminf.    0.25796 (1) obj. -3.83228 iterations 3
Cbc0038I Pass  27: suminf.    0.33333 (1) obj. -4.18994 iterations 2
Cbc0038I Pass  28: suminf.    0.24639 (1) obj. -3.83228 iterations 2
Cbc0038I Pass  29: suminf.    0.18713 (1) obj. -3.83228 iterations 5
Cbc0038I Pass  30: suminf.    0.33333 (1) obj. -4.24037 iterations 1
Cbc0038I Pass  31: suminf.    0.18713 (1) obj. -3.83228 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 12 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -3.72972 - took 0.00 seconds
Cbc0012I Integer solution of -3.7297219 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4.7551908 to -4.7551908 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3.729721922427441, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -4.75519 to -4.75519
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3.72972192
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/9da78eb8d0f04313b628f121fb12427a-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/9da78eb8d0f04313b628f121fb12427a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 35.4554 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -35.3581 iterations 21
Cbc0038I Solution found of -30.8539
Cbc0038I Cleaned solution of -30.8539
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -30.8539 to -32.3757 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.6837
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -35.3581 iterations 0
Cbc0038I Pass   3: suminf.    0.44182 (3) obj. -32.6837 iterations 13
Cbc0038I Pass   4: suminf.    0.30065 (3) obj. -32.6837 iterations 3
Cbc0038I Pass   5: suminf.    0.37396 (2) obj. -32.6837 iterations 12
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -33.2557 iterations 11
Cbc0038I Pass   7: suminf.    0.27613 (1) obj. -32.6837 iterations 1
Cbc0038I Pass   8: suminf.    1.51099 (5) obj. -32.6837 iterations 18
Cbc0038I Pass   9: suminf.    0.14286 (1) obj. -32.9019 iterations 3
Cbc0038I Pass  10: suminf.    0.37177 (1) obj. -32.6837 iterations 2
Cbc0038I Pass  11: suminf.    0.31081 (2) obj. -32.6837 iterations 9
Cbc0038I Pass  12: suminf.    0.31081 (2) obj. -32.6837 iterations 0
Cbc0038I Pass  13: suminf.    0.57143 (2) obj. -33.1777 iterations 8
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -32.7172 iterations 2
Cbc0038I Pass  15: suminf.    0.75884 (2) obj. -32.6837 iterations 4
Cbc0038I Pass  16: suminf.    0.41142 (1) obj. -32.6837 iterations 27
Cbc0038I Pass  17: suminf.    0.41142 (1) obj. -32.6837 iterations 0
Cbc0038I Pass  18: suminf.    0.14286 (1) obj. -33.0896 iterations 6
Cbc0038I Pass  19: suminf.    0.43122 (1) obj. -32.6837 iterations 4
Cbc0038I Pass  20: suminf.    0.31122 (2) obj. -32.6837 iterations 23
Cbc0038I Pass  21: suminf.    0.15924 (2) obj. -32.6837 iterations 1
Cbc0038I Pass  22: suminf.    0.14286 (1) obj. -33.2808 iterations 10
Cbc0038I Pass  23: suminf.    0.23061 (1) obj. -32.6837 iterations 5
Cbc0038I Pass  24: suminf.    2.02150 (6) obj. -32.6837 iterations 43
Cbc0038I Pass  25: suminf.    0.71429 (2) obj. -32.9792 iterations 17
Cbc0038I Pass  26: suminf.    0.37505 (6) obj. -32.6837 iterations 7
Cbc0038I Pass  27: suminf.    0.52513 (2) obj. -32.6837 iterations 6
Cbc0038I Pass  28: suminf.    0.52513 (2) obj. -32.6837 iterations 0
Cbc0038I Pass  29: suminf.    0.71429 (2) obj. -33.0727 iterations 16
Cbc0038I Pass  30: suminf.    0.28571 (1) obj. -32.7331 iterations 2
Cbc0038I Pass  31: suminf.    0.33594 (1) obj. -32.6837 iterations 3
Cbc0038I Rounding solution of -32.584 is better than previous of -32.3757

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 31 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -32.584 to -32.739 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.2823
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -35.3581 iterations 0
Cbc0038I Pass  32: suminf.    0.46200 (3) obj. -33.2823 iterations 13
Cbc0038I Pass  33: suminf.    0.42857 (3) obj. -33.3808 iterations 13
Cbc0038I Pass  34: suminf.    0.82904 (3) obj. -33.2823 iterations 14
Cbc0038I Pass  35: suminf.    0.42857 (3) obj. -33.6217 iterations 14
Cbc0038I Pass  36: suminf.    0.65193 (3) obj. -33.2823 iterations 8
Cbc0038I Pass  37: suminf.    0.43968 (3) obj. -33.2823 iterations 3
Cbc0038I Pass  38: suminf.    0.17749 (2) obj. -33.2823 iterations 11
Cbc0038I Pass  39: suminf.    0.14286 (1) obj. -33.3914 iterations 9
Cbc0038I Pass  40: suminf.    0.25375 (1) obj. -33.2823 iterations 1
Cbc0038I Pass  41: suminf.    0.84121 (3) obj. -33.2823 iterations 14
Cbc0038I Pass  42: suminf.    0.65866 (3) obj. -33.2823 iterations 1
Cbc0038I Pass  43: suminf.    0.57143 (2) obj. -33.7385 iterations 7
Cbc0038I Pass  44: suminf.    0.61772 (2) obj. -33.2823 iterations 10
Cbc0038I Pass  45: suminf.    0.61772 (2) obj. -33.2823 iterations 0
Cbc0038I Pass  46: suminf.    0.28380 (4) obj. -33.2823 iterations 10
Cbc0038I Pass  47: suminf.    0.14286 (1) obj. -33.2962 iterations 5
Cbc0038I Pass  48: suminf.    0.15888 (1) obj. -33.2823 iterations 3
Cbc0038I Pass  49: suminf.    0.27333 (2) obj. -33.2823 iterations 10
Cbc0038I Pass  50: suminf.    0.20278 (2) obj. -33.2823 iterations 1
Cbc0038I Pass  51: suminf.    0.14286 (1) obj. -33.4102 iterations 7
Cbc0038I Pass  52: suminf.    0.29000 (1) obj. -33.2823 iterations 3
Cbc0038I Pass  53: suminf.    0.33265 (2) obj. -33.2823 iterations 3
Cbc0038I Pass  54: suminf.    0.27683 (2) obj. -33.2823 iterations 1
Cbc0038I Pass  55: suminf.    0.14286 (1) obj. -33.4295 iterations 6
Cbc0038I Pass  56: suminf.    0.29238 (1) obj. -33.2823 iterations 2
Cbc0038I Pass  57: suminf.    0.50753 (3) obj. -33.2823 iterations 10
Cbc0038I Pass  58: suminf.    0.37737 (3) obj. -33.2823 iterations 1
Cbc0038I Pass  59: suminf.    0.70328 (3) obj. -33.2823 iterations 6
Cbc0038I Pass  60: suminf.    0.28571 (3) obj. -33.2823 iterations 6
Cbc0038I Rounding solution of -32.849 is better than previous of -32.739

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 30 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -32.849 to -33.0011 (0.05 seconds)
Cbc0038I Round again with cutoff of -33.9342
Cbc0038I Pass  60: suminf.    0.85714 (6) obj. -35.3581 iterations 0
Cbc0038I Pass  61: suminf.    0.70557 (4) obj. -33.9342 iterations 16
Cbc0038I Pass  62: suminf.    0.57143 (4) obj. -34.1447 iterations 19
Cbc0038I Pass  63: suminf.    1.02277 (5) obj. -33.9342 iterations 14
Cbc0038I Pass  64: suminf.    0.69460 (4) obj. -33.9342 iterations 17
Cbc0038I Pass  65: suminf.    0.81076 (3) obj. -33.9342 iterations 21
Cbc0038I Pass  66: suminf.    0.79550 (3) obj. -33.9342 iterations 9
Cbc0038I Pass  67: suminf.    0.66085 (3) obj. -33.9342 iterations 12
Cbc0038I Pass  68: suminf.    0.99697 (3) obj. -33.9342 iterations 11
Cbc0038I Pass  69: suminf.    0.99697 (3) obj. -33.9342 iterations 10
Cbc0038I Pass  70: suminf.    0.66085 (3) obj. -33.9342 iterations 5
Cbc0038I Pass  71: suminf.    0.30516 (3) obj. -33.9342 iterations 14
Cbc0038I Pass  72: suminf.    0.28571 (2) obj. -33.9362 iterations 6
Cbc0038I Pass  73: suminf.    0.98339 (3) obj. -33.9342 iterations 7
Cbc0038I Pass  74: suminf.    0.76828 (3) obj. -33.9342 iterations 1
Cbc0038I Pass  75: suminf.    0.65945 (3) obj. -33.9342 iterations 3
Cbc0038I Pass  76: suminf.    0.70135 (3) obj. -33.9342 iterations 9
Cbc0038I Pass  77: suminf.    0.70135 (3) obj. -33.9342 iterations 7
Cbc0038I Pass  78: suminf.    0.72288 (3) obj. -33.9342 iterations 10
Cbc0038I Pass  79: suminf.    0.72288 (3) obj. -33.9342 iterations 7
Cbc0038I Pass  80: suminf.    0.70135 (3) obj. -33.9342 iterations 10
Cbc0038I Pass  81: suminf.    0.69137 (3) obj. -33.9342 iterations 2
Cbc0038I Pass  82: suminf.    0.69137 (3) obj. -33.9342 iterations 8
Cbc0038I Pass  83: suminf.    1.26155 (5) obj. -33.9342 iterations 17
Cbc0038I Pass  84: suminf.    0.85223 (3) obj. -33.9342 iterations 17
Cbc0038I Pass  85: suminf.    0.70135 (3) obj. -33.9342 iterations 13
Cbc0038I Pass  86: suminf.    0.70135 (3) obj. -33.9342 iterations 7
Cbc0038I Pass  87: suminf.    0.72288 (3) obj. -33.9342 iterations 10
Cbc0038I Pass  88: suminf.    0.72288 (3) obj. -33.9342 iterations 6
Cbc0038I Pass  89: suminf.    0.70135 (3) obj. -33.9342 iterations 9
Cbc0038I Rounding solution of -33.0652 is better than previous of -33.0011

Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -34.3906
Cbc0038I Pass  89: suminf.    0.85714 (6) obj. -35.3581 iterations 0
Cbc0038I Pass  90: suminf.    0.98871 (5) obj. -34.3906 iterations 19
Cbc0038I Pass  91: suminf.    0.77826 (5) obj. -34.3906 iterations 12
Cbc0038I Pass  92: suminf.    1.02775 (5) obj. -34.3906 iterations 19
Cbc0038I Pass  93: suminf.    1.71423 (8) obj. -34.3906 iterations 4
Cbc0038I Pass  94: suminf.    1.22463 (4) obj. -34.3906 iterations 15
Cbc0038I Pass  95: suminf.    0.96968 (4) obj. -34.3906 iterations 21
Cbc0038I Pass  96: suminf.    0.79131 (4) obj. -34.3906 iterations 28
Cbc0038I Pass  97: suminf.    0.79131 (4) obj. -34.3906 iterations 16
Cbc0038I Pass  98: suminf.    1.17232 (7) obj. -34.3906 iterations 25
Cbc0038I Pass  99: suminf.    0.93518 (7) obj. -34.3906 iterations 6
Cbc0038I Pass 100: suminf.    0.71817 (3) obj. -34.3906 iterations 4
Cbc0038I Pass 101: suminf.    1.04523 (5) obj. -34.3906 iterations 16
Cbc0038I Pass 102: suminf.    1.46913 (9) obj. -34.3906 iterations 8
Cbc0038I Pass 103: suminf.    1.08261 (4) obj. -34.3906 iterations 14
Cbc0038I Pass 104: suminf.    0.66491 (4) obj. -34.3906 iterations 7
Cbc0038I Pass 105: suminf.    0.91003 (4) obj. -34.3906 iterations 8
Cbc0038I Pass 106: suminf.    0.59824 (4) obj. -34.3906 iterations 5
Cbc0038I Pass 107: suminf.    0.75592 (4) obj. -34.3906 iterations 7
Cbc0038I Pass 108: suminf.    0.75592 (4) obj. -34.3906 iterations 0
Cbc0038I Pass 109: suminf.    0.81955 (4) obj. -34.3906 iterations 12
Cbc0038I Pass 110: suminf.    0.77841 (4) obj. -34.3906 iterations 9
Cbc0038I Pass 111: suminf.    0.75592 (4) obj. -34.3906 iterations 4
Cbc0038I Pass 112: suminf.    1.09180 (5) obj. -34.3906 iterations 21
Cbc0038I Pass 113: suminf.    2.20207 (9) obj. -34.3906 iterations 11
Cbc0038I Pass 114: suminf.    0.80796 (4) obj. -34.3906 iterations 12
Cbc0038I Pass 115: suminf.    0.90167 (5) obj. -34.3906 iterations 6
Cbc0038I Pass 116: suminf.    1.26900 (5) obj. -34.3906 iterations 21
Cbc0038I Pass 117: suminf.    0.75369 (5) obj. -34.3906 iterations 4
Cbc0038I Pass 118: suminf.    0.91678 (4) obj. -34.3906 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 33 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -33.0652 - took 0.07 seconds
Cbc0012I Integer solution of -33.065236 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 14 columns
Cbc0031I 13 added rows had average density of 74.615385
Cbc0013I At root node, 13 cuts changed objective from -35.455409 to -34.318433 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 866 row cuts average 82.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.065236 best solution, best possible -34.318433 (0.25 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 18 rows 22 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 30 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 15 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 1 rows 2 columns
Cbc0010I After 1000 nodes, 5 on tree, -33.065236 best solution, best possible -34.124996 (1.85 seconds)
Cbc0001I Search completed - best objective -33.06523554399599, took 118179 iterations and 15501 nodes (1.95 seconds)
Cbc0032I Strong branching done 9334 times (64264 iterations), fathomed 260 nodes and fixed 615 variables
Cbc0041I Maximum depth 20, 3633 variables fixed on reduced cost (complete fathoming 180 times, 14421 nodes taking 98548 iterations)
Cuts at root node changed objective from -35.4554 to -34.3184
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 639 times and created 1704 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 100 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.06523554
Enumerated nodes:               15501
Total iterations:               118179
Time (CPU seconds):             1.85
Time (Wallclock seconds):       1.95

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.86   (Wallclock seconds):       1.95

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e9065e0f78c24dc68a427a6a0770d990-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/e9065e0f78c24dc68a427a6a0770d990-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.837 - 0.00 seconds
Cgl0004I processed model has 36 rows, 59 columns (59 integer (29 of which binary)) and 148 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (4) obj. -24.7492 iterations 6
Cbc0038I Solution found of -22.2382
Cbc0038I Cleaned solution of -22.2382
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -22.2382 to -22.5016 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.7352
Cbc0038I Pass   2: suminf.    0.83333 (4) obj. -24.7492 iterations 0
Cbc0038I Pass   3: suminf.    0.49450 (1) obj. -22.7352 iterations 4
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -22.8919 iterations 14
Cbc0038I Pass   5: suminf.    0.49196 (1) obj. -22.7352 iterations 2
Cbc0038I Pass   6: suminf.    0.63911 (2) obj. -22.7352 iterations 10
Cbc0038I Pass   7: suminf.    0.50000 (2) obj. -22.7872 iterations 5
Cbc0038I Pass   8: suminf.    0.56813 (2) obj. -22.7352 iterations 5
Cbc0038I Pass   9: suminf.    0.70218 (2) obj. -22.7352 iterations 12
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -23.0336 iterations 4
Cbc0038I Pass  11: suminf.    0.36467 (1) obj. -22.7352 iterations 3
Cbc0038I Pass  12: suminf.    0.74175 (2) obj. -22.7352 iterations 6
Cbc0038I Pass  13: suminf.    0.71001 (2) obj. -22.7352 iterations 14
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -23.0018 iterations 9
Cbc0038I Pass  15: suminf.    0.39685 (1) obj. -22.7352 iterations 4
Cbc0038I Pass  16: suminf.    0.68792 (2) obj. -22.7352 iterations 8
Cbc0038I Pass  17: suminf.    0.60229 (3) obj. -22.7352 iterations 12
Cbc0038I Pass  18: suminf.    0.50000 (2) obj. -22.803 iterations 8
Cbc0038I Pass  19: suminf.    0.68058 (2) obj. -22.7352 iterations 9
Cbc0038I Pass  20: suminf.    0.33333 (1) obj. -23.0302 iterations 6
Cbc0038I Pass  21: suminf.    0.36810 (1) obj. -22.7352 iterations 6
Cbc0038I Pass  22: suminf.    0.74612 (2) obj. -22.7352 iterations 7
Cbc0038I Pass  23: suminf.    0.28939 (1) obj. -22.7352 iterations 12
Cbc0038I Pass  24: suminf.    0.28939 (1) obj. -22.7352 iterations 5
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. -22.8086 iterations 8
Cbc0038I Pass  26: suminf.    0.42572 (1) obj. -22.7352 iterations 5
Cbc0038I Pass  27: suminf.    1.41707 (6) obj. -22.7352 iterations 21
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -22.9636 iterations 5
Cbc0038I Solution found of -22.9636
Cbc0038I Cleaned solution of -22.9636
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 24 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -22.9636 to -23.0557 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.412
Cbc0038I Pass  29: suminf.    0.83333 (4) obj. -24.7492 iterations 0
Cbc0038I Pass  30: suminf.    0.65540 (2) obj. -23.412 iterations 16
Cbc0038I Pass  31: suminf.    0.50000 (2) obj. -23.5308 iterations 5
Cbc0038I Pass  32: suminf.    0.34189 (2) obj. -23.412 iterations 6
Cbc0038I Pass  33: suminf.    0.16667 (1) obj. -23.514 iterations 5
Cbc0038I Pass  34: suminf.    0.26990 (1) obj. -23.412 iterations 4
Cbc0038I Pass  35: suminf.    0.60757 (2) obj. -23.412 iterations 6
Cbc0038I Pass  36: suminf.    0.33333 (2) obj. -23.5807 iterations 11
Cbc0038I Pass  37: suminf.    0.55930 (2) obj. -23.412 iterations 4
Cbc0038I Pass  38: suminf.    0.53086 (2) obj. -23.412 iterations 10
Cbc0038I Pass  39: suminf.    0.33333 (2) obj. -23.5762 iterations 6
Cbc0038I Pass  40: suminf.    0.55324 (2) obj. -23.412 iterations 5
Cbc0038I Pass  41: suminf.    0.31257 (1) obj. -23.412 iterations 12
Cbc0038I Pass  42: suminf.    0.16667 (1) obj. -23.5128 iterations 7
Cbc0038I Pass  43: suminf.    0.26875 (1) obj. -23.412 iterations 5
Cbc0038I Pass  44: suminf.    0.61846 (2) obj. -23.412 iterations 8
Cbc0038I Pass  45: suminf.    0.50000 (2) obj. -23.7177 iterations 9
Cbc0038I Pass  46: suminf.    0.56969 (2) obj. -23.412 iterations 12
Cbc0038I Pass  47: suminf.    0.56969 (2) obj. -23.412 iterations 1
Cbc0038I Pass  48: suminf.    0.50152 (2) obj. -23.412 iterations 4
Cbc0038I Pass  49: suminf.    0.37591 (2) obj. -23.412 iterations 3
Cbc0038I Pass  50: suminf.    0.54668 (2) obj. -23.412 iterations 4
Cbc0038I Pass  51: suminf.    0.16667 (1) obj. -23.6702 iterations 9
Cbc0038I Pass  52: suminf.    0.48758 (1) obj. -23.412 iterations 6
Cbc0038I Pass  53: suminf.    0.17982 (1) obj. -23.412 iterations 7
Cbc0038I Pass  54: suminf.    0.16667 (1) obj. -23.4218 iterations 5
Cbc0038I Pass  55: suminf.    0.17982 (1) obj. -23.412 iterations 5
Cbc0038I Pass  56: suminf.    0.20597 (2) obj. -23.412 iterations 6
Cbc0038I Pass  57: suminf.    0.20597 (2) obj. -23.412 iterations 2
Cbc0038I Pass  58: suminf.    0.41417 (6) obj. -23.412 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23.0557 - took 0.04 seconds
Cbc0012I Integer solution of -23.055704 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 8 rows 11 columns
Cbc0031I 8 added rows had average density of 48
Cbc0013I At root node, 8 cuts changed objective from -24.836967 to -23.771831 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 699 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 37.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 66 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.055704 best solution, best possible -23.771831 (0.14 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 36 rows 59 columns, reduced to 19 rows 26 columns
Cbc0001I Search completed - best objective -23.05570350959907, took 5644 iterations and 168 nodes (0.32 seconds)
Cbc0032I Strong branching done 1480 times (8898 iterations), fathomed 51 nodes and fixed 80 variables
Cbc0035I Maximum depth 15, 512 variables fixed on reduced cost
Cuts at root node changed objective from -24.837 to -23.7718
Probing was tried 100 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 256 times and created 952 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 256 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 256 times and created 163 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)

Result - Optimal solution found

Objective value:                23.05570351
Enumerated nodes:               168
Total iterations:               5644
Time (CPU seconds):             0.31
Time (Wallclock seconds):       0.32

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.32

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7cf54d99fe884e41a960d68bbb95b28f-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/7cf54d99fe884e41a960d68bbb95b28f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 15.9624 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.9112 iterations 6
Cbc0038I Solution found of -13.1348
Cbc0038I Cleaned solution of -13.1348
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -13.1348 to -13.3908 (0.00 seconds)
Cbc0038I Round again with cutoff of -13.648
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.9112 iterations 0
Cbc0038I Pass   3: suminf.    0.45480 (1) obj. -13.648 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -13.9472 iterations 6
Cbc0038I Pass   5: suminf.    0.23725 (1) obj. -13.648 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -14.1594 iterations 7
Cbc0038I Pass   7: suminf.    0.24620 (1) obj. -13.648 iterations 2
Cbc0038I Pass   8: suminf.    0.69343 (2) obj. -13.648 iterations 10
Cbc0038I Pass   9: suminf.    0.59395 (2) obj. -13.648 iterations 1
Cbc0038I Solution found of -13.8413
Cbc0038I Cleaned solution of -13.8413
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.2656
Cbc0038I Pass  10: suminf.    0.80000 (4) obj. -15.9112 iterations 0
Cbc0038I Pass  11: suminf.    0.61387 (2) obj. -14.2656 iterations 9
Cbc0038I Pass  12: suminf.    0.45083 (2) obj. -14.2656 iterations 2
Cbc0038I Pass  13: suminf.    0.40000 (1) obj. -14.422 iterations 6
Cbc0038I Pass  14: suminf.    0.43061 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  15: suminf.    0.28317 (1) obj. -14.2656 iterations 3
Cbc0038I Pass  16: suminf.    0.20000 (1) obj. -14.3424 iterations 3
Cbc0038I Pass  17: suminf.    0.28317 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  18: suminf.    0.39350 (2) obj. -14.2656 iterations 4
Cbc0038I Pass  19: suminf.    0.22330 (2) obj. -14.2656 iterations 1
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -14.7563 iterations 7
Cbc0038I Pass  21: suminf.    0.26858 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  22: suminf.    0.27037 (2) obj. -14.2656 iterations 7
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -14.328 iterations 5
Cbc0038I Pass  24: suminf.    0.26760 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  25: suminf.    0.99769 (5) obj. -14.2656 iterations 6
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -14.4468 iterations 2
Cbc0038I Pass  27: suminf.    0.39622 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  28: suminf.    0.20576 (2) obj. -14.2656 iterations 7
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -14.271 iterations 2
Cbc0038I Pass  30: suminf.    0.20587 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  31: suminf.    0.20700 (1) obj. -14.2656 iterations 2
Cbc0038I Pass  32: suminf.    1.67375 (5) obj. -14.2656 iterations 11
Cbc0038I Pass  33: suminf.    0.20000 (1) obj. -14.3488 iterations 2
Cbc0038I Pass  34: suminf.    0.29012 (1) obj. -14.2656 iterations 3
Cbc0038I Pass  35: suminf.    1.37319 (4) obj. -14.2656 iterations 5
Cbc0038I Pass  36: suminf.    0.38159 (1) obj. -14.2656 iterations 11
Cbc0038I Pass  37: suminf.    0.38159 (1) obj. -14.2656 iterations 1
Cbc0038I Pass  38: suminf.    0.20000 (1) obj. -14.6108 iterations 6
Cbc0038I Pass  39: suminf.    0.42617 (1) obj. -14.2656 iterations 2
Cbc0038I Rounding solution of -14.0878 is better than previous of -13.8413

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -14.0878 to -14.5981 (0.02 seconds)
Cbc0038I Round again with cutoff of -15.0074
Cbc0038I Pass  39: suminf.    0.80000 (4) obj. -15.9112 iterations 0
Cbc0038I Pass  40: suminf.    0.85645 (3) obj. -15.0074 iterations 10
Cbc0038I Pass  41: suminf.    0.67676 (3) obj. -15.0074 iterations 5
Cbc0038I Pass  42: suminf.    0.88624 (3) obj. -15.0074 iterations 9
Cbc0038I Pass  43: suminf.    0.60000 (2) obj. -15.2288 iterations 7
Cbc0038I Pass  44: suminf.    0.33954 (2) obj. -15.0074 iterations 8
Cbc0038I Pass  45: suminf.    0.61668 (2) obj. -15.0074 iterations 2
Cbc0038I Pass  46: suminf.    0.61668 (2) obj. -15.0074 iterations 0
Cbc0038I Pass  47: suminf.    0.61668 (2) obj. -15.0074 iterations 1
Cbc0038I Pass  48: suminf.    0.61668 (2) obj. -15.0074 iterations 1
Cbc0038I Pass  49: suminf.    0.60000 (2) obj. -15.2288 iterations 8
Cbc0038I Pass  50: suminf.    0.33954 (2) obj. -15.0074 iterations 7
Cbc0038I Pass  51: suminf.    0.61668 (2) obj. -15.0074 iterations 2
Cbc0038I Pass  52: suminf.    0.60870 (4) obj. -15.0074 iterations 4
Cbc0038I Pass  53: suminf.    0.60870 (4) obj. -15.0074 iterations 2
Cbc0038I Pass  54: suminf.    0.60870 (4) obj. -15.0074 iterations 0
Cbc0038I Pass  55: suminf.    0.60870 (4) obj. -15.0074 iterations 0
Cbc0038I Pass  56: suminf.    0.60000 (2) obj. -15.2288 iterations 8
Cbc0038I Pass  57: suminf.    0.33954 (2) obj. -15.0074 iterations 7
Cbc0038I Pass  58: suminf.    0.61668 (2) obj. -15.0074 iterations 2
Cbc0038I Pass  59: suminf.    0.61668 (2) obj. -15.0074 iterations 0
Cbc0038I Pass  60: suminf.    0.79955 (3) obj. -15.0074 iterations 6
Cbc0038I Pass  61: suminf.    0.57172 (3) obj. -15.0074 iterations 2
Cbc0038I Pass  62: suminf.    0.60000 (2) obj. -15.2288 iterations 8
Cbc0038I Pass  63: suminf.    0.33954 (2) obj. -15.0074 iterations 7
Cbc0038I Pass  64: suminf.    0.61668 (2) obj. -15.0074 iterations 2
Cbc0038I Pass  65: suminf.    0.61668 (2) obj. -15.0074 iterations 0
Cbc0038I Pass  66: suminf.    1.73120 (6) obj. -15.0074 iterations 9
Cbc0038I Pass  67: suminf.    0.22991 (2) obj. -15.0074 iterations 2
Cbc0038I Pass  68: suminf.    0.60870 (4) obj. -15.0074 iterations 2
Cbc0038I Rounding solution of -14.617 is better than previous of -14.5981

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15.2939
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 5
Cbc0038I Pass  68: suminf.    0.80000 (4) obj. -15.9112 iterations 0
Cbc0038I Pass  69: suminf.    0.60774 (3) obj. -15.2939 iterations 9
Cbc0038I Pass  70: suminf.    0.60000 (3) obj. -15.3858 iterations 5
Cbc0038I Pass  71: suminf.    0.98380 (4) obj. -15.2939 iterations 6
Cbc0038I Pass  72: suminf.    0.71746 (4) obj. -15.2939 iterations 4
Cbc0038I Pass  73: suminf.    0.80000 (3) obj. -15.2939 iterations 7
Cbc0038I Pass  74: suminf.    0.48979 (2) obj. -15.2939 iterations 6
Cbc0038I Pass  75: suminf.    1.47843 (6) obj. -15.2939 iterations 1
Cbc0038I Pass  76: suminf.    0.85247 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  77: suminf.    0.76242 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  78: suminf.    0.80000 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  79: suminf.    0.48979 (2) obj. -15.2939 iterations 6
Cbc0038I Pass  80: suminf.    1.47843 (6) obj. -15.2939 iterations 1
Cbc0038I Pass  81: suminf.    0.85247 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  82: suminf.    0.76242 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  83: suminf.    0.80000 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  84: suminf.    0.48979 (2) obj. -15.2939 iterations 6
Cbc0038I Pass  85: suminf.    1.47843 (6) obj. -15.2939 iterations 1
Cbc0038I Pass  86: suminf.    0.85247 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  87: suminf.    0.76242 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  88: suminf.    0.80000 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  89: suminf.    0.48979 (2) obj. -15.2939 iterations 6
Cbc0038I Pass  90: suminf.    1.47843 (6) obj. -15.2939 iterations 1
Cbc0038I Pass  91: suminf.    0.85247 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  92: suminf.    0.76242 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  93: suminf.    0.80000 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  94: suminf.    0.48979 (2) obj. -15.2939 iterations 6
Cbc0038I Pass  95: suminf.    1.47843 (6) obj. -15.2939 iterations 1
Cbc0038I Pass  96: suminf.    0.85247 (3) obj. -15.2939 iterations 6
Cbc0038I Pass  97: suminf.    0.76242 (3) obj. -15.2939 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.617 - took 0.03 seconds
Cbc0012I Integer solution of -14.617001 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 10 rows 12 columns
Cbc0031I 8 added rows had average density of 29.375
Cbc0013I At root node, 8 cuts changed objective from -15.962436 to -15.015783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 450 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.617001 best solution, best possible -15.015783 (0.09 seconds)
Cbc0001I Search completed - best objective -14.61700120940782, took 2184 iterations and 40 nodes (0.14 seconds)
Cbc0032I Strong branching done 440 times (1815 iterations), fathomed 8 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 82 variables fixed on reduced cost
Cuts at root node changed objective from -15.9624 to -15.0158
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 200 times and created 828 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 200 times and created 170 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.61700121
Enumerated nodes:               40
Total iterations:               2184
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.14

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d9ecec5a4d1a4b858176cf943fca4a26-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/d9ecec5a4d1a4b858176cf943fca4a26-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 35.9871 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -35.92 iterations 18
Cbc0038I Solution found of -31.526
Cbc0038I Cleaned solution of -31.526
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -31.526 to -31.9953 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.3944
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -35.92 iterations 0
Cbc0038I Pass   3: suminf.    0.19369 (2) obj. -32.3944 iterations 10
Cbc0038I Pass   4: suminf.    0.59065 (6) obj. -32.3944 iterations 4
Cbc0038I Pass   5: suminf.    0.39309 (1) obj. -32.3944 iterations 2
Cbc0038I Pass   6: suminf.    0.28571 (1) obj. -32.4589 iterations 12
Cbc0038I Pass   7: suminf.    0.35270 (1) obj. -32.3944 iterations 3
Cbc0038I Pass   8: suminf.    0.25403 (2) obj. -32.3944 iterations 23
Cbc0038I Pass   9: suminf.    0.14286 (1) obj. -32.4827 iterations 4
Cbc0038I Pass  10: suminf.    0.23567 (1) obj. -32.3944 iterations 3
Cbc0038I Pass  11: suminf.    0.52239 (2) obj. -32.3944 iterations 5
Cbc0038I Pass  12: suminf.    0.14286 (1) obj. -32.6789 iterations 10
Cbc0038I Pass  13: suminf.    0.44207 (1) obj. -32.3944 iterations 3
Cbc0038I Pass  14: suminf.    0.17865 (2) obj. -32.3944 iterations 19
Cbc0038I Pass  15: suminf.    1.40737 (5) obj. -32.3944 iterations 4
Cbc0038I Pass  16: suminf.    0.47420 (1) obj. -32.3944 iterations 4
Cbc0038I Solution found of -32.7709
Cbc0038I Cleaned solution of -32.7709
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.4141
Cbc0038I Pass  17: suminf.    0.85714 (6) obj. -35.92 iterations 0
Cbc0038I Pass  18: suminf.    0.65390 (3) obj. -33.4141 iterations 18
Cbc0038I Pass  19: suminf.    0.57813 (3) obj. -33.4141 iterations 3
Cbc0038I Pass  20: suminf.    0.75245 (3) obj. -33.4141 iterations 19
Cbc0038I Pass  21: suminf.    0.62233 (6) obj. -33.4141 iterations 6
Cbc0038I Pass  22: suminf.    0.61864 (2) obj. -33.4141 iterations 3
Cbc0038I Pass  23: suminf.    0.59166 (2) obj. -33.4141 iterations 2
Cbc0038I Pass  24: suminf.    0.53451 (2) obj. -33.4141 iterations 7
Cbc0038I Pass  25: suminf.    0.34835 (2) obj. -33.4141 iterations 3
Cbc0038I Pass  26: suminf.    0.68371 (2) obj. -33.4141 iterations 5
Cbc0038I Pass  27: suminf.    0.14286 (1) obj. -33.4282 iterations 6
Cbc0038I Pass  28: suminf.    0.15764 (1) obj. -33.4141 iterations 4
Cbc0038I Pass  29: suminf.    0.49007 (3) obj. -33.4141 iterations 14
Cbc0038I Pass  30: suminf.    0.40512 (3) obj. -33.4141 iterations 5
Cbc0038I Pass  31: suminf.    0.30729 (1) obj. -33.4141 iterations 4
Cbc0038I Pass  32: suminf.    0.14286 (1) obj. -33.5222 iterations 6
Cbc0038I Pass  33: suminf.    0.25659 (1) obj. -33.4141 iterations 4
Cbc0038I Pass  34: suminf.    0.41532 (3) obj. -33.4141 iterations 17
Cbc0038I Pass  35: suminf.    0.35596 (3) obj. -33.4141 iterations 6
Cbc0038I Pass  36: suminf.    0.42857 (2) obj. -33.5807 iterations 15
Cbc0038I Pass  37: suminf.    0.22159 (2) obj. -33.4141 iterations 5
Cbc0038I Pass  38: suminf.    0.56978 (2) obj. -33.4141 iterations 3
Cbc0038I Pass  39: suminf.    0.14286 (1) obj. -33.5222 iterations 7
Cbc0038I Pass  40: suminf.    0.25659 (1) obj. -33.4141 iterations 4
Cbc0038I Pass  41: suminf.    0.31415 (2) obj. -33.4141 iterations 7
Cbc0038I Pass  42: suminf.    0.30319 (2) obj. -33.4141 iterations 1
Cbc0038I Pass  43: suminf.    0.26465 (2) obj. -33.4141 iterations 8
Cbc0038I Pass  44: suminf.    0.32607 (2) obj. -33.4141 iterations 3
Cbc0038I Pass  45: suminf.    0.26465 (2) obj. -33.4141 iterations 3
Cbc0038I Pass  46: suminf.    0.14286 (1) obj. -33.5222 iterations 11
Cbc0038I Rounding solution of -32.8642 is better than previous of -32.7709

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 26 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.186
Cbc0038I Pass  46: suminf.    0.85714 (6) obj. -35.92 iterations 0
Cbc0038I Pass  47: suminf.    0.81481 (4) obj. -34.186 iterations 21
Cbc0038I Pass  48: suminf.    0.73964 (4) obj. -34.186 iterations 7
Cbc0038I Pass  49: suminf.    0.59063 (4) obj. -34.186 iterations 16
Cbc0038I Pass  50: suminf.    0.59063 (4) obj. -34.186 iterations 8
Cbc0038I Pass  51: suminf.    0.81475 (3) obj. -34.186 iterations 22
Cbc0038I Pass  52: suminf.    0.92610 (7) obj. -34.186 iterations 19
Cbc0038I Pass  53: suminf.    0.61346 (3) obj. -34.186 iterations 5
Cbc0038I Pass  54: suminf.    0.57389 (4) obj. -34.186 iterations 3
Cbc0038I Pass  55: suminf.    0.85351 (3) obj. -34.186 iterations 19
Cbc0038I Pass  56: suminf.    0.47775 (4) obj. -34.186 iterations 14
Cbc0038I Pass  57: suminf.    0.63120 (3) obj. -34.186 iterations 7
Cbc0038I Pass  58: suminf.    0.45699 (4) obj. -34.186 iterations 5
Cbc0038I Pass  59: suminf.    0.62124 (3) obj. -34.186 iterations 7
Cbc0038I Pass  60: suminf.    0.84142 (3) obj. -34.186 iterations 6
Cbc0038I Pass  61: suminf.    1.62905 (5) obj. -34.186 iterations 19
Cbc0038I Pass  62: suminf.    0.87032 (4) obj. -34.186 iterations 12
Cbc0038I Pass  63: suminf.    1.41624 (4) obj. -34.186 iterations 20
Cbc0038I Pass  64: suminf.    1.41624 (4) obj. -34.186 iterations 5
Cbc0038I Pass  65: suminf.    0.86251 (3) obj. -34.186 iterations 19
Cbc0038I Pass  66: suminf.    0.45699 (4) obj. -34.186 iterations 12
Cbc0038I Pass  67: suminf.    0.62124 (3) obj. -34.186 iterations 9
Cbc0038I Pass  68: suminf.    0.47775 (4) obj. -34.186 iterations 3
Cbc0038I Pass  69: suminf.    0.63120 (3) obj. -34.186 iterations 7
Cbc0038I Pass  70: suminf.    0.86963 (5) obj. -34.186 iterations 18
Cbc0038I Pass  71: suminf.    0.42857 (3) obj. -34.3142 iterations 13
Cbc0038I Pass  72: suminf.    0.59007 (3) obj. -34.186 iterations 10
Cbc0038I Pass  73: suminf.    1.15575 (5) obj. -34.186 iterations 17
Cbc0038I Pass  74: suminf.    1.04930 (5) obj. -34.186 iterations 10
Cbc0038I Pass  75: suminf.    0.65856 (3) obj. -34.186 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.8642 - took 0.06 seconds
Cbc0012I Integer solution of -32.864231 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 15 columns
Cbc0031I 13 added rows had average density of 55.538462
Cbc0013I At root node, 13 cuts changed objective from -35.987072 to -34.26199 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 858 row cuts average 80.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 62 row cuts average 49.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.864231 best solution, best possible -34.26199 (0.23 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 33 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 29 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 33 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 38 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 23 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 21 columns
Cbc0010I After 1000 nodes, 5 on tree, -32.864231 best solution, best possible -34.26199 (2.11 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 21 columns
Cbc0016I Integer solution of -32.86494 found by strong branching after 20900 iterations and 1354 nodes (2.58 seconds)
Cbc0001I Search completed - best objective -32.86494038999092, took 224767 iterations and 31707 nodes (2.70 seconds)
Cbc0032I Strong branching done 10280 times (69580 iterations), fathomed 281 nodes and fixed 780 variables
Cbc0041I Maximum depth 24, 3323 variables fixed on reduced cost (complete fathoming 341 times, 30253 nodes taking 202357 iterations)
Cuts at root node changed objective from -35.9871 to -34.262
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 600 times and created 1536 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 600 times and created 252 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                32.86494039
Enumerated nodes:               31707
Total iterations:               224767
Time (CPU seconds):             2.58
Time (Wallclock seconds):       2.70

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.58   (Wallclock seconds):       2.70

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/db004be73d274e38af159fb165943912-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/db004be73d274e38af159fb165943912-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.2095 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -25.1168 iterations 16
Cbc0038I Solution found of -22.2235
Cbc0038I Cleaned solution of -22.2235
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.2235 to -22.7798 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.0228
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -25.1168 iterations 0
Cbc0038I Pass   3: suminf.    0.17260 (2) obj. -23.0228 iterations 11
Cbc0038I Pass   4: suminf.    0.55297 (6) obj. -23.0228 iterations 3
Cbc0038I Pass   5: suminf.    0.34810 (1) obj. -23.0228 iterations 2
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -23.2008 iterations 5
Cbc0038I Pass   7: suminf.    0.39659 (1) obj. -23.0228 iterations 4
Cbc0038I Pass   8: suminf.    0.35212 (2) obj. -23.0228 iterations 3
Cbc0038I Pass   9: suminf.    0.33333 (2) obj. -23.0268 iterations 8
Cbc0038I Pass  10: suminf.    0.33850 (2) obj. -23.0228 iterations 5
Cbc0038I Pass  11: suminf.    0.31901 (1) obj. -23.0228 iterations 7
Cbc0038I Pass  12: suminf.    0.31901 (1) obj. -23.0228 iterations 1
Cbc0038I Pass  13: suminf.    0.16667 (1) obj. -23.3844 iterations 5
Cbc0038I Pass  14: suminf.    0.44941 (1) obj. -23.0228 iterations 2
Cbc0038I Pass  15: suminf.    0.50048 (3) obj. -23.0228 iterations 10
Cbc0038I Pass  16: suminf.    0.36423 (3) obj. -23.0228 iterations 4
Cbc0038I Pass  17: suminf.    0.28829 (1) obj. -23.0228 iterations 4
Cbc0038I Pass  18: suminf.    0.65145 (2) obj. -23.0228 iterations 4
Cbc0038I Pass  19: suminf.    0.65145 (2) obj. -23.0228 iterations 0
Cbc0038I Pass  20: suminf.    0.36309 (1) obj. -23.0228 iterations 3
Cbc0038I Pass  21: suminf.    0.16667 (1) obj. -23.3299 iterations 6
Cbc0038I Pass  22: suminf.    0.49272 (1) obj. -23.0228 iterations 3
Cbc0038I Pass  23: suminf.    1.15174 (3) obj. -23.0228 iterations 10
Cbc0038I Pass  24: suminf.    0.18287 (2) obj. -23.0228 iterations 1
Cbc0038I Pass  25: suminf.    0.59346 (2) obj. -23.0228 iterations 3
Cbc0038I Pass  26: suminf.    0.84639 (2) obj. -23.0228 iterations 5
Cbc0038I Pass  27: suminf.    0.59346 (2) obj. -23.0228 iterations 5
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.3299 iterations 7
Cbc0038I Pass  29: suminf.    0.49272 (1) obj. -23.0228 iterations 3
Cbc0038I Pass  30: suminf.    0.61880 (2) obj. -23.0228 iterations 4
Cbc0038I Pass  31: suminf.    0.39302 (3) obj. -23.0228 iterations 19
Cbc0038I Rounding solution of -22.8127 is better than previous of -22.7798

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.4601
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -25.1168 iterations 0
Cbc0038I Pass  32: suminf.    0.66509 (2) obj. -23.4601 iterations 11
Cbc0038I Pass  33: suminf.    0.33333 (2) obj. -23.7726 iterations 5
Cbc0038I Pass  34: suminf.    0.59649 (2) obj. -23.4601 iterations 5
Cbc0038I Pass  35: suminf.    0.55059 (2) obj. -23.4601 iterations 2
Cbc0038I Pass  36: suminf.    0.46360 (2) obj. -23.4601 iterations 4
Cbc0038I Pass  37: suminf.    0.22698 (2) obj. -23.4601 iterations 4
Cbc0038I Pass  38: suminf.    0.61324 (2) obj. -23.4601 iterations 6
Cbc0038I Pass  39: suminf.    0.59434 (2) obj. -23.4601 iterations 11
Cbc0038I Pass  40: suminf.    0.50000 (2) obj. -23.6269 iterations 9
Cbc0038I Pass  41: suminf.    0.54635 (2) obj. -23.4601 iterations 7
Cbc0038I Pass  42: suminf.    0.46360 (2) obj. -23.4601 iterations 1
Cbc0038I Pass  43: suminf.    0.22698 (2) obj. -23.4601 iterations 4
Cbc0038I Pass  44: suminf.    0.61324 (2) obj. -23.4601 iterations 2
Cbc0038I Pass  45: suminf.    0.46833 (2) obj. -23.4601 iterations 16
Cbc0038I Pass  46: suminf.    0.46833 (2) obj. -23.4601 iterations 1
Cbc0038I Pass  47: suminf.    0.29816 (2) obj. -23.4601 iterations 3
Cbc0038I Pass  48: suminf.    0.70496 (3) obj. -23.4601 iterations 13
Cbc0038I Pass  49: suminf.    0.56295 (3) obj. -23.4601 iterations 5
Cbc0038I Pass  50: suminf.    1.05341 (4) obj. -23.4601 iterations 12
Cbc0038I Pass  51: suminf.    1.66662 (7) obj. -23.4601 iterations 11
Cbc0038I Pass  52: suminf.    0.45202 (3) obj. -23.4601 iterations 8
Cbc0038I Pass  53: suminf.    0.34004 (3) obj. -23.4601 iterations 3
Cbc0038I Pass  54: suminf.    0.60567 (2) obj. -23.4601 iterations 7
Cbc0038I Pass  55: suminf.    0.22698 (2) obj. -23.4601 iterations 3
Cbc0038I Pass  56: suminf.    0.61324 (2) obj. -23.4601 iterations 5
Cbc0038I Pass  57: suminf.    0.61324 (2) obj. -23.4601 iterations 2
Cbc0038I Pass  58: suminf.    0.61324 (2) obj. -23.4601 iterations 2
Cbc0038I Pass  59: suminf.    0.72574 (2) obj. -23.4601 iterations 3
Cbc0038I Pass  60: suminf.    0.28582 (2) obj. -23.4601 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22.8127 - took 0.04 seconds
Cbc0012I Integer solution of -22.812655 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 3 columns
Cbc0031I 17 added rows had average density of 45.294118
Cbc0013I At root node, 17 cuts changed objective from -25.209494 to -24.219212 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1315 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 35 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 54 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 137 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.812655 best solution, best possible -24.219212 (0.20 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 10 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 29 columns
Cbc0001I Search completed - best objective -22.81265507265913, took 13229 iterations and 543 nodes (0.72 seconds)
Cbc0032I Strong branching done 5224 times (34907 iterations), fathomed 173 nodes and fixed 342 variables
Cbc0041I Maximum depth 19, 1323 variables fixed on reduced cost (complete fathoming 2 times, 11 nodes taking 10 iterations)
Cuts at root node changed objective from -25.2095 to -24.2192
Probing was tried 100 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 539 times and created 2257 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 100 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 540 times and created 478 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)

Result - Optimal solution found

Objective value:                22.81265507
Enumerated nodes:               543
Total iterations:               13229
Time (CPU seconds):             0.72
Time (Wallclock seconds):       0.73

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.73

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1119d7608d134e4e94f1ac49c3afb80d-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1119d7608d134e4e94f1ac49c3afb80d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.2217 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -26.2 iterations 6
Cbc0038I Solution found of -22.3747
Cbc0038I Cleaned solution of -22.3747
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.3747 to -22.5048 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.8765
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -26.2 iterations 0
Cbc0038I Pass   3: suminf.    0.49027 (1) obj. -22.8765 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.2628 iterations 8
Cbc0038I Pass   5: suminf.    0.09963 (1) obj. -22.8765 iterations 3
Cbc0038I Pass   6: suminf.    0.33333 (1) obj. -23.4291 iterations 10
Cbc0038I Pass   7: suminf.    0.08296 (1) obj. -22.8765 iterations 2
Cbc0038I Pass   8: suminf.    0.47685 (2) obj. -22.8765 iterations 7
Cbc0038I Pass   9: suminf.    0.34860 (2) obj. -22.8765 iterations 5
Cbc0038I Solution found of -23.3918
Cbc0038I Cleaned solution of -23.3918
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.9578
Cbc0038I Pass  10: suminf.    0.83333 (5) obj. -26.2 iterations 0
Cbc0038I Pass  11: suminf.    0.37577 (2) obj. -23.9578 iterations 10
Cbc0038I Pass  12: suminf.    0.33333 (2) obj. -24.0016 iterations 10
Cbc0038I Pass  13: suminf.    0.37964 (2) obj. -23.9578 iterations 2
Cbc0038I Pass  14: suminf.    0.48116 (2) obj. -23.9578 iterations 21
Cbc0038I Pass  15: suminf.    0.41067 (2) obj. -23.9578 iterations 2
Cbc0038I Pass  16: suminf.    0.57702 (3) obj. -23.9578 iterations 14
Cbc0038I Pass  17: suminf.    0.52699 (2) obj. -23.9578 iterations 1
Cbc0038I Pass  18: suminf.    0.50000 (2) obj. -24.3802 iterations 10
Cbc0038I Pass  19: suminf.    0.16667 (1) obj. -24.052 iterations 8
Cbc0038I Pass  20: suminf.    0.64215 (2) obj. -23.9578 iterations 9
Cbc0038I Pass  21: suminf.    0.44122 (2) obj. -23.9578 iterations 3
Cbc0038I Pass  22: suminf.    0.44122 (2) obj. -23.9578 iterations 2
Cbc0038I Pass  23: suminf.    0.42044 (2) obj. -23.9578 iterations 4
Cbc0038I Pass  24: suminf.    0.42044 (2) obj. -23.9578 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (2) obj. -24.3802 iterations 6
Cbc0038I Pass  26: suminf.    0.16667 (1) obj. -24.052 iterations 7
Cbc0038I Pass  27: suminf.    0.64215 (2) obj. -23.9578 iterations 9
Cbc0038I Pass  28: suminf.    0.63488 (3) obj. -23.9578 iterations 17
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -24.0683 iterations 7
Cbc0038I Pass  30: suminf.    0.28155 (1) obj. -23.9578 iterations 2
Cbc0038I Pass  31: suminf.    1.03939 (3) obj. -23.9578 iterations 12
Cbc0038I Pass  32: suminf.    0.80208 (3) obj. -23.9578 iterations 5
Cbc0038I Pass  33: suminf.    0.63275 (2) obj. -23.9578 iterations 1
Cbc0038I Pass  34: suminf.    0.16667 (1) obj. -23.9883 iterations 3
Cbc0038I Pass  35: suminf.    0.19837 (1) obj. -23.9578 iterations 1
Cbc0038I Pass  36: suminf.    0.54166 (2) obj. -23.9578 iterations 21
Cbc0038I Pass  37: suminf.    0.49157 (2) obj. -23.9578 iterations 5
Cbc0038I Pass  38: suminf.    0.38521 (5) obj. -23.9578 iterations 9
Cbc0038I Pass  39: suminf.    0.56014 (2) obj. -23.9578 iterations 6
Cbc0038I Rounding solution of -23.6392 is better than previous of -23.3918

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 26 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -24.6369
Cbc0038I Pass  39: suminf.    0.83333 (5) obj. -26.2 iterations 0
Cbc0038I Pass  40: suminf.    0.66418 (3) obj. -24.6369 iterations 14
Cbc0038I Pass  41: suminf.    0.50000 (3) obj. -24.7951 iterations 11
Cbc0038I Pass  42: suminf.    0.66703 (3) obj. -24.6369 iterations 4
Cbc0038I Pass  43: suminf.    1.31693 (3) obj. -24.6369 iterations 25
Cbc0038I Pass  44: suminf.    0.83333 (3) obj. -24.966 iterations 15
Cbc0038I Pass  45: suminf.    0.42105 (3) obj. -24.6369 iterations 11
Cbc0038I Pass  46: suminf.    2.83719 (9) obj. -24.6369 iterations 16
Cbc0038I Pass  47: suminf.    2.83719 (9) obj. -24.6369 iterations 0
Cbc0038I Pass  48: suminf.    0.79702 (3) obj. -24.6369 iterations 11
Cbc0038I Pass  49: suminf.    0.81914 (3) obj. -24.6369 iterations 18
Cbc0038I Pass  50: suminf.    0.84882 (3) obj. -24.6369 iterations 5
Cbc0038I Pass  51: suminf.    0.98659 (4) obj. -24.6369 iterations 16
Cbc0038I Pass  52: suminf.    0.61328 (3) obj. -24.6369 iterations 4
Cbc0038I Pass  53: suminf.    0.81126 (3) obj. -24.6369 iterations 3
Cbc0038I Pass  54: suminf.    2.83719 (9) obj. -24.6369 iterations 2
Cbc0038I Pass  55: suminf.    0.79702 (3) obj. -24.6369 iterations 10
Cbc0038I Pass  56: suminf.    0.81914 (3) obj. -24.6369 iterations 17
Cbc0038I Pass  57: suminf.    0.84882 (3) obj. -24.6369 iterations 5
Cbc0038I Pass  58: suminf.    1.24406 (4) obj. -24.6369 iterations 23
Cbc0038I Pass  59: suminf.    0.71547 (3) obj. -24.6369 iterations 7
Cbc0038I Pass  60: suminf.    1.50364 (5) obj. -24.6369 iterations 12
Cbc0038I Pass  61: suminf.    2.02180 (8) obj. -24.6369 iterations 11
Cbc0038I Pass  62: suminf.    0.85040 (3) obj. -24.6369 iterations 9
Cbc0038I Pass  63: suminf.    0.85040 (3) obj. -24.6369 iterations 5
Cbc0038I Pass  64: suminf.    0.81914 (3) obj. -24.6369 iterations 15
Cbc0038I Pass  65: suminf.    0.84882 (3) obj. -24.6369 iterations 4
Cbc0038I Pass  66: suminf.    1.63877 (5) obj. -24.6369 iterations 15
Cbc0038I Pass  67: suminf.    1.28845 (6) obj. -24.6369 iterations 11
Cbc0038I Pass  68: suminf.    1.04169 (5) obj. -24.6369 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -23.6392 - took 0.04 seconds
Cbc0012I Integer solution of -23.639231 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 14 columns
Cbc0031I 10 added rows had average density of 44
Cbc0013I At root node, 10 cuts changed objective from -26.221685 to -25.148632 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 31 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1196 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 23 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 58 row cuts average 37.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 118 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.639231 best solution, best possible -25.148632 (0.19 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 6 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 7 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 19 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 22 columns
Cbc0012I Integer solution of -23.648036 found by DiveCoefficient after 10556 iterations and 537 nodes (0.57 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 29 columns
Cbc0001I Search completed - best objective -23.64803615584962, took 23031 iterations and 2331 nodes (0.82 seconds)
Cbc0032I Strong branching done 6528 times (35362 iterations), fathomed 233 nodes and fixed 311 variables
Cbc0041I Maximum depth 17, 1710 variables fixed on reduced cost (complete fathoming 35 times, 1589 nodes taking 7842 iterations)
Cuts at root node changed objective from -26.2217 to -25.1486
Probing was tried 100 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 599 times and created 2353 cuts of which 0 were active after adding rounds of cuts (0.053 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 100 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 599 times and created 418 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)

Result - Optimal solution found

Objective value:                23.64803616
Enumerated nodes:               2331
Total iterations:               23031
Time (CPU seconds):             0.82
Time (Wallclock seconds):       0.82

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.82   (Wallclock seconds):       0.82

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/008457f9d5f54cfda407cb0d094fa4cb-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/008457f9d5f54cfda407cb0d094fa4cb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 49.6306 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -49.528 iterations 26
Cbc0038I Solution found of -43.8791
Cbc0038I Cleaned solution of -43.8791
Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 6 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -43.8791 to -44.7003 (0.00 seconds)
Cbc0038I Round again with cutoff of -45.1933
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -49.528 iterations 0
Cbc0038I Pass   3: suminf.    0.58015 (2) obj. -45.1933 iterations 14
Cbc0038I Pass   4: suminf.    0.51551 (2) obj. -45.1933 iterations 3
Cbc0038I Pass   5: suminf.    0.12500 (1) obj. -45.2824 iterations 14
Cbc0038I Pass   6: suminf.    0.49318 (1) obj. -45.1933 iterations 5
Cbc0038I Pass   7: suminf.    0.12500 (1) obj. -45.5605 iterations 14
Cbc0038I Pass   8: suminf.    0.49149 (1) obj. -45.1933 iterations 4
Cbc0038I Pass   9: suminf.    0.55818 (3) obj. -45.1933 iterations 28
Cbc0038I Pass  10: suminf.    0.46040 (3) obj. -45.1933 iterations 7
Cbc0038I Pass  11: suminf.    0.49832 (1) obj. -45.1933 iterations 3
Cbc0038I Solution found of -45.6051
Cbc0038I Cleaned solution of -45.6051
Cbc0038I Rounding solution of -46.0702 is better than previous of -45.6051

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -46.0702 to -46.3801 (0.01 seconds)
Cbc0038I Round again with cutoff of -47.0302
Cbc0038I Pass  12: suminf.    0.87500 (7) obj. -49.528 iterations 0
Cbc0038I Pass  13: suminf.    0.78754 (4) obj. -47.0302 iterations 27
Cbc0038I Pass  14: suminf.    0.50000 (4) obj. -47.3186 iterations 18
Cbc0038I Pass  15: suminf.    0.86442 (4) obj. -47.0302 iterations 8
Cbc0038I Pass  16: suminf.    0.67674 (4) obj. -47.0302 iterations 6
Cbc0038I Pass  17: suminf.    0.89201 (4) obj. -47.0302 iterations 19
Cbc0038I Pass  18: suminf.    1.61014 (6) obj. -47.0302 iterations 12
Cbc0038I Pass  19: suminf.    0.65191 (2) obj. -47.0302 iterations 11
Cbc0038I Pass  20: suminf.    0.37500 (2) obj. -47.2169 iterations 20
Cbc0038I Pass  21: suminf.    0.57332 (2) obj. -47.0302 iterations 13
Cbc0038I Pass  22: suminf.    0.43809 (2) obj. -47.0302 iterations 11
Cbc0038I Pass  23: suminf.    0.37957 (2) obj. -47.0302 iterations 3
Cbc0038I Pass  24: suminf.    0.31646 (3) obj. -47.0302 iterations 5
Cbc0038I Pass  25: suminf.    1.49963 (6) obj. -47.0302 iterations 28
Cbc0038I Pass  26: suminf.    0.19967 (2) obj. -47.0302 iterations 15
Cbc0038I Pass  27: suminf.    0.19967 (2) obj. -47.0302 iterations 1
Cbc0038I Pass  28: suminf.    0.79490 (2) obj. -47.0302 iterations 11
Cbc0038I Pass  29: suminf.    0.12500 (1) obj. -47.1381 iterations 18
Cbc0038I Pass  30: suminf.    0.28512 (1) obj. -47.0302 iterations 9
Cbc0038I Pass  31: suminf.    0.80598 (4) obj. -47.0302 iterations 9
Cbc0038I Pass  32: suminf.    0.12500 (1) obj. -47.1317 iterations 7
Cbc0038I Pass  33: suminf.    0.27569 (1) obj. -47.0302 iterations 8
Cbc0038I Pass  34: suminf.    0.51075 (4) obj. -47.0302 iterations 27
Cbc0038I Pass  35: suminf.    0.37500 (3) obj. -47.0435 iterations 10
Cbc0038I Pass  36: suminf.    0.39462 (3) obj. -47.0302 iterations 11
Cbc0038I Pass  37: suminf.    0.46725 (3) obj. -47.0302 iterations 11
Cbc0038I Pass  38: suminf.    0.54687 (2) obj. -47.0302 iterations 24
Cbc0038I Pass  39: suminf.    0.25000 (2) obj. -47.2282 iterations 13
Cbc0038I Pass  40: suminf.    0.54391 (2) obj. -47.0302 iterations 10
Cbc0038I Pass  41: suminf.    0.55291 (2) obj. -47.0302 iterations 4
Cbc0038I Rounding solution of -46.5487 is better than previous of -46.3801

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 33 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -47.8103
Cbc0038I Pass  41: suminf.    0.87500 (7) obj. -49.528 iterations 0
Cbc0038I Pass  42: suminf.    0.99044 (5) obj. -47.8103 iterations 32
Cbc0038I Pass  43: suminf.    0.62500 (5) obj. -48.1906 iterations 27
Cbc0038I Pass  44: suminf.    0.94495 (5) obj. -47.8103 iterations 18
Cbc0038I Pass  45: suminf.    0.68282 (5) obj. -47.8103 iterations 11
Cbc0038I Pass  46: suminf.    0.67247 (3) obj. -47.8103 iterations 21
Cbc0038I Pass  47: suminf.    0.37500 (3) obj. -47.8912 iterations 17
Cbc0038I Pass  48: suminf.    0.46094 (3) obj. -47.8103 iterations 13
Cbc0038I Pass  49: suminf.    0.81154 (4) obj. -47.8103 iterations 22
Cbc0038I Pass  50: suminf.    0.72393 (4) obj. -47.8103 iterations 2
Cbc0038I Pass  51: suminf.    0.52922 (3) obj. -47.8103 iterations 25
Cbc0038I Pass  52: suminf.    0.45374 (3) obj. -47.8103 iterations 13
Cbc0038I Pass  53: suminf.    0.49496 (3) obj. -47.8103 iterations 5
Cbc0038I Pass  54: suminf.    0.49496 (3) obj. -47.8103 iterations 2
Cbc0038I Pass  55: suminf.    0.45374 (3) obj. -47.8103 iterations 5
Cbc0038I Pass  56: suminf.    0.51212 (4) obj. -47.8103 iterations 4
Cbc0038I Pass  57: suminf.    0.64704 (4) obj. -47.8103 iterations 11
Cbc0038I Pass  58: suminf.    0.74218 (7) obj. -47.8103 iterations 16
Cbc0038I Pass  59: suminf.    0.73662 (4) obj. -47.8103 iterations 18
Cbc0038I Pass  60: suminf.    2.15275 (9) obj. -47.8103 iterations 25
Cbc0038I Pass  61: suminf.    0.87500 (4) obj. -48.1818 iterations 33
Cbc0038I Pass  62: suminf.    0.82296 (8) obj. -47.8103 iterations 19
Cbc0038I Pass  63: suminf.    0.71158 (4) obj. -47.8103 iterations 4
Cbc0038I Pass  64: suminf.    1.40146 (6) obj. -47.8103 iterations 41
Cbc0038I Pass  65: suminf.    2.10495 (9) obj. -47.8103 iterations 21
Cbc0038I Pass  66: suminf.    0.62500 (4) obj. -47.8536 iterations 19
Cbc0038I Pass  67: suminf.    0.90787 (4) obj. -47.8103 iterations 20
Cbc0038I Pass  68: suminf.    0.62500 (4) obj. -48.0739 iterations 27
Cbc0038I Pass  69: suminf.    0.98367 (4) obj. -47.8103 iterations 21
Cbc0038I Pass  70: suminf.    0.70671 (4) obj. -47.8103 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 40 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -46.5487 - took 0.06 seconds
Cbc0012I Integer solution of -46.548698 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 20 columns
Cbc0031I 15 added rows had average density of 87.8
Cbc0013I At root node, 15 cuts changed objective from -49.630616 to -48.370576 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1422 row cuts average 108.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 39 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 77 row cuts average 67.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 149 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -46.548698 best solution, best possible -48.370576 (0.40 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 32 rows 43 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 33 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 14 rows 19 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0010I After 1000 nodes, 282 on tree, -46.548698 best solution, best possible -48.370576 (2.68 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 35 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 21 columns
Cbc0010I After 2000 nodes, 196 on tree, -46.548698 best solution, best possible -48.370576 (3.40 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 37 columns
Cbc0010I After 3000 nodes, 119 on tree, -46.548698 best solution, best possible -48.370576 (4.08 seconds)
Cbc0010I After 4000 nodes, 57 on tree, -46.548698 best solution, best possible -48.370576 (4.78 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 27 columns
Cbc0010I After 5000 nodes, 24 on tree, -46.548698 best solution, best possible -48.370576 (5.61 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 14 rows 17 columns
Cbc0010I After 6000 nodes, 10 on tree, -46.548698 best solution, best possible -48.370576 (6.25 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 29 columns
Cbc0010I After 7000 nodes, 17 on tree, -46.548698 best solution, best possible -48.370576 (7.03 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 20 columns
Cbc0010I After 8000 nodes, 10 on tree, -46.548698 best solution, best possible -48.370576 (7.98 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 32 columns
Cbc0010I After 9000 nodes, 12 on tree, -46.548698 best solution, best possible -47.960687 (9.10 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 24 columns
Cbc0010I After 10000 nodes, 6 on tree, -46.548698 best solution, best possible -47.94253 (9.96 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0001I Search completed - best objective -46.54869792610391, took 354974 iterations and 26548 nodes (10.31 seconds)
Cbc0032I Strong branching done 56420 times (532235 iterations), fathomed 2421 nodes and fixed 9338 variables
Cbc0041I Maximum depth 35, 36705 variables fixed on reduced cost (complete fathoming 57 times, 16236 nodes taking 161705 iterations)
Cuts at root node changed objective from -49.6306 to -48.3706
Probing was tried 100 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 4001 times and created 6564 cuts of which 0 were active after adding rounds of cuts (0.366 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
TwoMirCuts was tried 100 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 4001 times and created 3203 cuts of which 0 were active after adding rounds of cuts (0.310 seconds)

Result - Optimal solution found

Objective value:                46.54869793
Enumerated nodes:               26548
Total iterations:               354974
Time (CPU seconds):             9.97
Time (Wallclock seconds):       10.32

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.97   (Wallclock seconds):       10.32

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/98689f880c5848d7a28f23fd9c5bf282-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/98689f880c5848d7a28f23fd9c5bf282-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.7445 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.7215 iterations 10
Cbc0038I Solution found of -21.6651
Cbc0038I Cleaned solution of -21.6651
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -21.6651 to -21.8027 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.0969
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.7215 iterations 0
Cbc0038I Pass   3: suminf.    0.43935 (1) obj. -22.0969 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -22.5945 iterations 8
Cbc0038I Solution found of -22.328
Cbc0038I Cleaned solution of -22.328
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -22.328 to -22.3355 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.8173
Cbc0038I Pass   5: suminf.    0.83333 (5) obj. -24.7215 iterations 0
Cbc0038I Pass   6: suminf.    0.51359 (2) obj. -22.8173 iterations 11
Cbc0038I Pass   7: suminf.    0.39857 (2) obj. -22.8173 iterations 2
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -22.9697 iterations 11
Cbc0038I Pass   9: suminf.    0.49271 (1) obj. -22.8173 iterations 2
Cbc0038I Pass  10: suminf.    1.90188 (6) obj. -22.8173 iterations 4
Cbc0038I Pass  11: suminf.    0.33333 (2) obj. -23.2852 iterations 8
Cbc0038I Pass  12: suminf.    0.51076 (2) obj. -22.8173 iterations 2
Cbc0038I Pass  13: suminf.    0.39525 (2) obj. -22.8173 iterations 3
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -22.9697 iterations 3
Cbc0038I Pass  15: suminf.    0.49271 (1) obj. -22.8173 iterations 2
Cbc0038I Pass  16: suminf.    0.64202 (2) obj. -22.8173 iterations 10
Cbc0038I Pass  17: suminf.    0.55740 (2) obj. -22.8173 iterations 2
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -22.8309 iterations 8
Cbc0038I Pass  19: suminf.    0.18742 (1) obj. -22.8173 iterations 3
Cbc0038I Pass  20: suminf.    0.22462 (2) obj. -22.8173 iterations 4
Cbc0038I Pass  21: suminf.    0.22462 (2) obj. -22.8173 iterations 0
Cbc0038I Pass  22: suminf.    0.18480 (1) obj. -22.8173 iterations 19
Cbc0038I Pass  23: suminf.    0.18480 (1) obj. -22.8173 iterations 1
Cbc0038I Pass  24: suminf.    0.33333 (1) obj. -23.108 iterations 6
Cbc0038I Pass  25: suminf.    0.36273 (1) obj. -22.8173 iterations 3
Cbc0038I Pass  26: suminf.    0.32274 (1) obj. -22.8173 iterations 14
Cbc0038I Pass  27: suminf.    0.32274 (1) obj. -22.8173 iterations 2
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.247 iterations 10
Cbc0038I Pass  29: suminf.    0.18002 (1) obj. -22.8173 iterations 3
Cbc0038I Pass  30: suminf.    0.52131 (2) obj. -22.8173 iterations 11
Cbc0038I Pass  31: suminf.    0.33333 (1) obj. -22.9607 iterations 9
Cbc0038I Pass  32: suminf.    0.48334 (1) obj. -22.8173 iterations 3
Cbc0038I Pass  33: suminf.    0.63721 (2) obj. -22.8173 iterations 8
Cbc0038I Pass  34: suminf.    0.33333 (2) obj. -22.9914 iterations 10
Cbc0038I Rounding solution of -22.795 is better than previous of -22.3355

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -22.795 to -22.8461 (0.02 seconds)
Cbc0038I Round again with cutoff of -23.4156
Cbc0038I Pass  34: suminf.    0.83333 (5) obj. -24.7215 iterations 0
Cbc0038I Pass  35: suminf.    0.49802 (3) obj. -23.4156 iterations 13
Cbc0038I Pass  36: suminf.    0.38061 (3) obj. -23.4156 iterations 5
Cbc0038I Pass  37: suminf.    0.53898 (2) obj. -23.4156 iterations 8
Cbc0038I Pass  38: suminf.    0.33333 (2) obj. -23.5547 iterations 4
Cbc0038I Pass  39: suminf.    0.54483 (2) obj. -23.4156 iterations 4
Cbc0038I Pass  40: suminf.    0.47986 (2) obj. -23.4156 iterations 5
Cbc0038I Pass  41: suminf.    0.85069 (3) obj. -23.4156 iterations 12
Cbc0038I Pass  42: suminf.    0.85069 (3) obj. -23.4156 iterations 0
Cbc0038I Pass  43: suminf.    0.20343 (2) obj. -23.4156 iterations 7
Cbc0038I Pass  44: suminf.    0.20343 (2) obj. -23.4156 iterations 0
Cbc0038I Pass  45: suminf.    0.61061 (2) obj. -23.4156 iterations 8
Cbc0038I Pass  46: suminf.    0.91870 (3) obj. -23.4156 iterations 7
Cbc0038I Pass  47: suminf.    1.67222 (7) obj. -23.4156 iterations 5
Cbc0038I Pass  48: suminf.    0.74843 (2) obj. -23.4156 iterations 2
Cbc0038I Pass  49: suminf.    0.69522 (2) obj. -23.4156 iterations 6
Cbc0038I Pass  50: suminf.    0.97434 (2) obj. -23.4156 iterations 3
Cbc0038I Pass  51: suminf.    0.97434 (2) obj. -23.4156 iterations 1
Cbc0038I Pass  52: suminf.    0.91474 (2) obj. -23.4156 iterations 2
Cbc0038I Pass  53: suminf.    0.20343 (2) obj. -23.4156 iterations 4
Cbc0038I Pass  54: suminf.    0.61061 (2) obj. -23.4156 iterations 4
Cbc0038I Pass  55: suminf.    0.97434 (2) obj. -23.4156 iterations 8
Cbc0038I Pass  56: suminf.    1.93913 (6) obj. -23.4156 iterations 6
Cbc0038I Pass  57: suminf.    0.62993 (3) obj. -23.4156 iterations 6
Cbc0038I Pass  58: suminf.    0.82734 (7) obj. -23.4156 iterations 8
Cbc0038I Pass  59: suminf.    0.60281 (3) obj. -23.4156 iterations 6
Cbc0038I Pass  60: suminf.    1.75361 (5) obj. -23.4156 iterations 9
Cbc0038I Pass  61: suminf.    0.73613 (2) obj. -23.4156 iterations 2
Cbc0038I Pass  62: suminf.    0.20343 (2) obj. -23.4156 iterations 5
Cbc0038I Pass  63: suminf.    0.61061 (2) obj. -23.4156 iterations 4
Cbc0038I Rounding solution of -22.8569 is better than previous of -22.8461

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -23.8143
Cbc0038I Pass  63: suminf.    0.83333 (5) obj. -24.7215 iterations 0
Cbc0038I Pass  64: suminf.    0.66786 (3) obj. -23.8143 iterations 13
Cbc0038I Pass  65: suminf.    0.50000 (3) obj. -23.9716 iterations 11
Cbc0038I Pass  66: suminf.    0.73923 (3) obj. -23.8143 iterations 6
Cbc0038I Pass  67: suminf.    0.78095 (3) obj. -23.8143 iterations 4
Cbc0038I Pass  68: suminf.    0.78095 (3) obj. -23.8143 iterations 1
Cbc0038I Pass  69: suminf.    1.39329 (8) obj. -23.8143 iterations 13
Cbc0038I Pass  70: suminf.    1.00742 (4) obj. -23.8143 iterations 18
Cbc0038I Pass  71: suminf.    1.00742 (4) obj. -23.8143 iterations 0
Cbc0038I Pass  72: suminf.    0.79366 (3) obj. -23.8143 iterations 5
Cbc0038I Pass  73: suminf.    0.76190 (3) obj. -23.8143 iterations 3
Cbc0038I Pass  74: suminf.    0.56418 (3) obj. -23.8143 iterations 7
Cbc0038I Pass  75: suminf.    0.56418 (3) obj. -23.8143 iterations 4
Cbc0038I Pass  76: suminf.    0.34379 (2) obj. -23.8143 iterations 7
Cbc0038I Pass  77: suminf.    0.90852 (6) obj. -23.8143 iterations 6
Cbc0038I Pass  78: suminf.    0.56418 (3) obj. -23.8143 iterations 4
Cbc0038I Pass  79: suminf.    0.78721 (3) obj. -23.8143 iterations 15
Cbc0038I Pass  80: suminf.    0.59757 (3) obj. -23.8143 iterations 6
Cbc0038I Pass  81: suminf.    0.56418 (3) obj. -23.8143 iterations 5
Cbc0038I Pass  82: suminf.    0.56418 (3) obj. -23.8143 iterations 3
Cbc0038I Pass  83: suminf.    0.34379 (2) obj. -23.8143 iterations 5
Cbc0038I Pass  84: suminf.    0.90852 (6) obj. -23.8143 iterations 6
Cbc0038I Pass  85: suminf.    0.56418 (3) obj. -23.8143 iterations 4
Cbc0038I Pass  86: suminf.    0.83227 (3) obj. -23.8143 iterations 5
Cbc0038I Pass  87: suminf.    0.83227 (3) obj. -23.8143 iterations 1
Cbc0038I Pass  88: suminf.    0.56418 (3) obj. -23.8143 iterations 6
Cbc0038I Pass  89: suminf.    0.56418 (3) obj. -23.8143 iterations 3
Cbc0038I Pass  90: suminf.    0.34379 (2) obj. -23.8143 iterations 5
Cbc0038I Pass  91: suminf.    0.90852 (6) obj. -23.8143 iterations 6
Cbc0038I Pass  92: suminf.    0.56418 (3) obj. -23.8143 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22.8569 - took 0.04 seconds
Cbc0012I Integer solution of -22.856948 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 10 columns
Cbc0031I 10 added rows had average density of 39.4
Cbc0013I At root node, 10 cuts changed objective from -24.744453 to -23.847595 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 885 row cuts average 58.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 61 row cuts average 36.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 58 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.856948 best solution, best possible -23.847595 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 16 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 20 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 21 columns
Cbc0001I Search completed - best objective -22.85694821178896, took 7648 iterations and 258 nodes (0.49 seconds)
Cbc0032I Strong branching done 2608 times (17235 iterations), fathomed 87 nodes and fixed 126 variables
Cbc0035I Maximum depth 18, 725 variables fixed on reduced cost
Cuts at root node changed objective from -24.7445 to -23.8476
Probing was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 382 times and created 1482 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 382 times and created 144 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ZeroHalf was tried 382 times and created 283 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)

Result - Optimal solution found

Objective value:                22.85694821
Enumerated nodes:               258
Total iterations:               7648
Time (CPU seconds):             0.47
Time (Wallclock seconds):       0.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.47   (Wallclock seconds):       0.49

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cc1565822d224c61a7557efce3b7194c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/cc1565822d224c61a7557efce3b7194c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.1172 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -26.0996 iterations 8
Cbc0038I Solution found of -22.5871
Cbc0038I Cleaned solution of -22.5871
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.5871 to -22.6927 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.0351
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -26.0996 iterations 0
Cbc0038I Pass   3: suminf.    0.46112 (1) obj. -23.0351 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.404 iterations 4
Cbc0038I Pass   5: suminf.    0.43616 (1) obj. -23.0351 iterations 2
Cbc0038I Pass   6: suminf.    0.62003 (2) obj. -23.0351 iterations 8
Cbc0038I Pass   7: suminf.    0.58681 (2) obj. -23.0351 iterations 1
Cbc0038I Pass   8: suminf.    0.08912 (1) obj. -23.0351 iterations 4
Cbc0038I Pass   9: suminf.    0.16667 (1) obj. -23.6417 iterations 8
Cbc0038I Pass  10: suminf.    0.15371 (1) obj. -23.0351 iterations 2
Cbc0038I Pass  11: suminf.    0.16955 (2) obj. -23.0351 iterations 7
Cbc0038I Pass  12: suminf.    1.06091 (6) obj. -23.0351 iterations 5
Cbc0038I Pass  13: suminf.    0.16951 (1) obj. -23.0351 iterations 2
Cbc0038I Pass  14: suminf.    0.36978 (1) obj. -23.0351 iterations 16
Cbc0038I Pass  15: suminf.    0.36978 (1) obj. -23.0351 iterations 1
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -23.3156 iterations 4
Cbc0038I Pass  17: suminf.    0.36466 (1) obj. -23.0351 iterations 3
Cbc0038I Pass  18: suminf.    0.20316 (1) obj. -23.0351 iterations 10
Cbc0038I Pass  19: suminf.    0.20316 (1) obj. -23.0351 iterations 2
Cbc0038I Pass  20: suminf.    0.16667 (1) obj. -23.5714 iterations 6
Cbc0038I Pass  21: suminf.    0.25588 (1) obj. -23.0351 iterations 4
Cbc0038I Pass  22: suminf.    0.51439 (3) obj. -23.0351 iterations 13
Cbc0038I Pass  23: suminf.    0.47959 (3) obj. -23.0351 iterations 7
Cbc0038I Pass  24: suminf.    0.23253 (1) obj. -23.0351 iterations 3
Cbc0038I Pass  25: suminf.    0.16667 (1) obj. -23.0632 iterations 7
Cbc0038I Pass  26: suminf.    0.19695 (1) obj. -23.0351 iterations 5
Cbc0038I Pass  27: suminf.    0.57547 (3) obj. -23.0351 iterations 8
Cbc0038I Pass  28: suminf.    1.54341 (7) obj. -23.0351 iterations 4
Cbc0038I Pass  29: suminf.    0.89351 (2) obj. -23.0351 iterations 9
Cbc0038I Pass  30: suminf.    0.10156 (1) obj. -23.0351 iterations 1
Cbc0038I Pass  31: suminf.    0.50000 (1) obj. -23.2967 iterations 8
Cbc0038I Rounding solution of -23.1082 is better than previous of -22.6927

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.71
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -26.0996 iterations 0
Cbc0038I Pass  32: suminf.    0.50074 (2) obj. -23.71 iterations 9
Cbc0038I Pass  33: suminf.    0.47164 (2) obj. -23.71 iterations 2
Cbc0038I Pass  34: suminf.    0.34323 (2) obj. -23.71 iterations 7
Cbc0038I Pass  35: suminf.    0.24728 (2) obj. -23.71 iterations 10
Cbc0038I Pass  36: suminf.    0.17767 (2) obj. -23.71 iterations 7
Cbc0038I Pass  37: suminf.    0.46940 (2) obj. -23.71 iterations 6
Cbc0038I Pass  38: suminf.    0.16667 (1) obj. -23.825 iterations 7
Cbc0038I Pass  39: suminf.    0.29042 (1) obj. -23.71 iterations 4
Cbc0038I Pass  40: suminf.    0.22562 (2) obj. -23.71 iterations 21
Cbc0038I Pass  41: suminf.    0.20266 (2) obj. -23.71 iterations 5
Cbc0038I Pass  42: suminf.    0.16667 (1) obj. -23.7672 iterations 11
Cbc0038I Pass  43: suminf.    0.23071 (1) obj. -23.71 iterations 5
Cbc0038I Pass  44: suminf.    0.49773 (3) obj. -23.71 iterations 9
Cbc0038I Pass  45: suminf.    0.46315 (3) obj. -23.71 iterations 5
Cbc0038I Pass  46: suminf.    0.28332 (1) obj. -23.71 iterations 3
Cbc0038I Pass  47: suminf.    0.16667 (1) obj. -23.7781 iterations 7
Cbc0038I Pass  48: suminf.    0.23996 (1) obj. -23.71 iterations 5
Cbc0038I Pass  49: suminf.    0.28332 (1) obj. -23.71 iterations 4
Cbc0038I Pass  50: suminf.    0.64791 (2) obj. -23.71 iterations 11
Cbc0038I Pass  51: suminf.    0.16667 (1) obj. -23.825 iterations 10
Cbc0038I Pass  52: suminf.    0.29042 (1) obj. -23.71 iterations 5
Cbc0038I Pass  53: suminf.    0.24473 (2) obj. -23.71 iterations 8
Cbc0038I Pass  54: suminf.    0.21480 (2) obj. -23.71 iterations 3
Cbc0038I Pass  55: suminf.    0.46940 (2) obj. -23.71 iterations 3
Cbc0038I Pass  56: suminf.    0.24020 (2) obj. -23.71 iterations 11
Cbc0038I Pass  57: suminf.    0.22219 (2) obj. -23.71 iterations 3
Cbc0038I Pass  58: suminf.    0.17767 (2) obj. -23.71 iterations 4
Cbc0038I Pass  59: suminf.    1.55649 (5) obj. -23.71 iterations 7
Cbc0038I Pass  60: suminf.    1.22333 (5) obj. -23.71 iterations 3
Cbc0038I Rounding solution of -23.1932 is better than previous of -23.1082

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -24.4322
Cbc0038I Pass  60: suminf.    0.83333 (5) obj. -26.0996 iterations 0
Cbc0038I Pass  61: suminf.    0.63968 (3) obj. -24.4322 iterations 8
Cbc0038I Pass  62: suminf.    0.56879 (3) obj. -24.4322 iterations 3
Cbc0038I Pass  63: suminf.    0.48295 (3) obj. -24.4322 iterations 11
Cbc0038I Pass  64: suminf.    0.47825 (3) obj. -24.4322 iterations 3
Cbc0038I Pass  65: suminf.    0.73206 (3) obj. -24.4322 iterations 8
Cbc0038I Pass  66: suminf.    0.43333 (3) obj. -24.4322 iterations 1
Cbc0038I Pass  67: suminf.    0.37881 (2) obj. -24.4322 iterations 8
Cbc0038I Pass  68: suminf.    0.33333 (3) obj. -24.4322 iterations 8
Cbc0038I Pass  69: suminf.    0.34915 (2) obj. -24.4322 iterations 6
Cbc0038I Pass  70: suminf.    0.64017 (6) obj. -24.4322 iterations 1
Cbc0038I Pass  71: suminf.    0.69834 (9) obj. -24.4322 iterations 5
Cbc0038I Pass  72: suminf.    0.71797 (4) obj. -24.4322 iterations 8
Cbc0038I Pass  73: suminf.    0.96719 (3) obj. -24.4322 iterations 16
Cbc0038I Pass  74: suminf.    0.84118 (3) obj. -24.4322 iterations 6
Cbc0038I Pass  75: suminf.    0.84118 (3) obj. -24.4322 iterations 0
Cbc0038I Pass  76: suminf.    0.84118 (3) obj. -24.4322 iterations 0
Cbc0038I Pass  77: suminf.    0.37881 (2) obj. -24.4322 iterations 5
Cbc0038I Pass  78: suminf.    0.33333 (3) obj. -24.4322 iterations 8
Cbc0038I Pass  79: suminf.    0.34915 (2) obj. -24.4322 iterations 6
Cbc0038I Pass  80: suminf.    0.56833 (3) obj. -24.4322 iterations 6
Cbc0038I Pass  81: suminf.    0.56833 (3) obj. -24.4322 iterations 1
Cbc0038I Pass  82: suminf.    0.43333 (3) obj. -24.4322 iterations 5
Cbc0038I Pass  83: suminf.    0.43333 (3) obj. -24.4322 iterations 1
Cbc0038I Pass  84: suminf.    0.37881 (2) obj. -24.4322 iterations 4
Cbc0038I Pass  85: suminf.    0.33333 (3) obj. -24.4322 iterations 8
Cbc0038I Pass  86: suminf.    0.34915 (2) obj. -24.4322 iterations 6
Cbc0038I Pass  87: suminf.    0.33982 (2) obj. -24.4322 iterations 3
Cbc0038I Pass  88: suminf.    0.79025 (3) obj. -24.4322 iterations 25
Cbc0038I Pass  89: suminf.    0.50000 (3) obj. -24.6942 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.1932 - took 0.06 seconds
Cbc0012I Integer solution of -23.193204 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 11 added rows had average density of 48.818182
Cbc0013I At root node, 11 cuts changed objective from -26.11724 to -24.87823 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 851 row cuts average 57.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 34 row cuts average 18.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 67 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 126 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.193204 best solution, best possible -24.87823 (0.20 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 22 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 24 columns
Cbc0010I After 1000 nodes, 7 on tree, -23.193204 best solution, best possible -24.172197 (1.13 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 26 columns
Cbc0001I Search completed - best objective -23.19320448487995, took 94818 iterations and 15647 nodes (1.59 seconds)
Cbc0032I Strong branching done 9730 times (51587 iterations), fathomed 325 nodes and fixed 549 variables
Cbc0041I Maximum depth 20, 2602 variables fixed on reduced cost (complete fathoming 200 times, 14267 nodes taking 73346 iterations)
Cuts at root node changed objective from -26.1172 to -24.8782
Probing was tried 100 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 820 times and created 2324 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 820 times and created 170 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
ZeroHalf was tried 821 times and created 507 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)

Result - Optimal solution found

Objective value:                23.19320448
Enumerated nodes:               15647
Total iterations:               94818
Time (CPU seconds):             1.56
Time (Wallclock seconds):       1.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.56   (Wallclock seconds):       1.59

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/787dc102494441879e2de00af056fb5d-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/787dc102494441879e2de00af056fb5d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.405 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.3767 iterations 10
Cbc0038I Solution found of -32.0264
Cbc0038I Cleaned solution of -32.0264
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -32.0264 to -32.2245 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.6426
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.3767 iterations 0
Cbc0038I Pass   3: suminf.    0.37305 (1) obj. -32.6426 iterations 7
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -32.8828 iterations 9
Cbc0038I Pass   5: suminf.    0.44376 (1) obj. -32.6426 iterations 3
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -32.9258 iterations 9
Cbc0038I Pass   7: suminf.    0.45294 (1) obj. -32.6426 iterations 2
Cbc0038I Pass   8: suminf.    0.54630 (2) obj. -32.6426 iterations 15
Cbc0038I Pass   9: suminf.    0.51618 (2) obj. -32.6426 iterations 2
Cbc0038I Pass  10: suminf.    0.03395 (1) obj. -32.6426 iterations 5
Cbc0038I Pass  11: suminf.    0.14286 (1) obj. -33.3595 iterations 4
Cbc0038I Pass  12: suminf.    0.07214 (1) obj. -32.6426 iterations 3
Cbc0038I Pass  13: suminf.    0.47109 (2) obj. -32.6426 iterations 6
Cbc0038I Pass  14: suminf.    0.42983 (2) obj. -32.6426 iterations 1
Cbc0038I Pass  15: suminf.    0.20027 (2) obj. -32.6426 iterations 6
Cbc0038I Solution found of -32.8571
Cbc0038I Cleaned solution of -32.8571
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -33.5667
Cbc0038I Pass  16: suminf.    0.85714 (6) obj. -36.3767 iterations 0
Cbc0038I Pass  17: suminf.    0.39429 (2) obj. -33.5667 iterations 13
Cbc0038I Pass  18: suminf.    0.28571 (2) obj. -33.6845 iterations 8
Cbc0038I Pass  19: suminf.    0.41887 (2) obj. -33.5667 iterations 4
Cbc0038I Pass  20: suminf.    0.62620 (3) obj. -33.5667 iterations 24
Cbc0038I Pass  21: suminf.    0.28571 (2) obj. -33.851 iterations 5
Cbc0038I Pass  22: suminf.    0.60697 (2) obj. -33.5667 iterations 3
Cbc0038I Pass  23: suminf.    0.64258 (3) obj. -33.5667 iterations 20
Cbc0038I Pass  24: suminf.    0.42857 (2) obj. -33.7936 iterations 9
Cbc0038I Pass  25: suminf.    0.48520 (2) obj. -33.5667 iterations 10
Cbc0038I Pass  26: suminf.    0.45334 (2) obj. -33.5667 iterations 1
Cbc0038I Pass  27: suminf.    0.91609 (2) obj. -33.5667 iterations 16
Cbc0038I Pass  28: suminf.    0.15358 (1) obj. -33.5667 iterations 1
Cbc0038I Pass  29: suminf.    2.14238 (6) obj. -33.5667 iterations 13
Cbc0038I Pass  30: suminf.    0.15358 (1) obj. -33.5667 iterations 5
Cbc0038I Pass  31: suminf.    0.15543 (2) obj. -33.5667 iterations 22
Cbc0038I Pass  32: suminf.    2.60876 (7) obj. -33.5667 iterations 10
Cbc0038I Pass  33: suminf.    0.15343 (1) obj. -33.5667 iterations 5
Cbc0038I Pass  34: suminf.    0.48802 (2) obj. -33.5667 iterations 4
Cbc0038I Pass  35: suminf.    0.46478 (2) obj. -33.5667 iterations 2
Cbc0038I Pass  36: suminf.    0.76354 (3) obj. -33.5667 iterations 4
Cbc0038I Pass  37: suminf.    0.42857 (2) obj. -33.8679 iterations 15
Cbc0038I Pass  38: suminf.    0.14286 (1) obj. -33.6223 iterations 3
Cbc0038I Pass  39: suminf.    0.20267 (1) obj. -33.5667 iterations 5
Cbc0038I Pass  40: suminf.    0.20998 (2) obj. -33.5667 iterations 5
Cbc0038I Pass  41: suminf.    0.23531 (2) obj. -33.5667 iterations 8
Cbc0038I Pass  42: suminf.    0.14286 (1) obj. -33.6066 iterations 11
Cbc0038I Pass  43: suminf.    0.18576 (1) obj. -33.5667 iterations 5
Cbc0038I Pass  44: suminf.    1.21294 (3) obj. -33.5667 iterations 4
Cbc0038I Pass  45: suminf.    0.41867 (2) obj. -33.5667 iterations 8
Cbc0038I Rounding solution of -33.0897 is better than previous of -32.8571

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 31 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -34.4182
Cbc0038I Pass  45: suminf.    0.85714 (6) obj. -36.3767 iterations 0
Cbc0038I Pass  46: suminf.    0.45983 (3) obj. -34.4182 iterations 15
Cbc0038I Pass  47: suminf.    0.42857 (3) obj. -34.4882 iterations 9
Cbc0038I Pass  48: suminf.    0.70393 (3) obj. -34.4182 iterations 7
Cbc0038I Pass  49: suminf.    0.42857 (3) obj. -34.6722 iterations 13
Cbc0038I Pass  50: suminf.    0.73033 (3) obj. -34.4182 iterations 8
Cbc0038I Pass  51: suminf.    0.73675 (3) obj. -34.4182 iterations 7
Cbc0038I Pass  52: suminf.    0.71429 (3) obj. -34.4358 iterations 16
Cbc0038I Pass  53: suminf.    0.73850 (3) obj. -34.4182 iterations 13
Cbc0038I Pass  54: suminf.    0.83444 (4) obj. -34.4182 iterations 5
Cbc0038I Pass  55: suminf.    0.72715 (4) obj. -34.4182 iterations 3
Cbc0038I Pass  56: suminf.    0.79622 (3) obj. -34.4182 iterations 7
Cbc0038I Pass  57: suminf.    0.57541 (4) obj. -34.4182 iterations 5
Cbc0038I Pass  58: suminf.    0.95400 (3) obj. -34.4182 iterations 3
Cbc0038I Pass  59: suminf.    0.49900 (3) obj. -34.4182 iterations 8
Cbc0038I Pass  60: suminf.    1.10231 (4) obj. -34.4182 iterations 8
Cbc0038I Pass  61: suminf.    1.10231 (4) obj. -34.4182 iterations 0
Cbc0038I Pass  62: suminf.    0.71429 (3) obj. -34.4636 iterations 9
Cbc0038I Pass  63: suminf.    1.70049 (7) obj. -34.4182 iterations 18
Cbc0038I Pass  64: suminf.    1.10231 (4) obj. -34.4182 iterations 17
Cbc0038I Pass  65: suminf.    0.62653 (4) obj. -34.4182 iterations 10
Cbc0038I Pass  66: suminf.    0.57541 (4) obj. -34.4182 iterations 3
Cbc0038I Pass  67: suminf.    0.95400 (3) obj. -34.4182 iterations 3
Cbc0038I Pass  68: suminf.    0.49900 (3) obj. -34.4182 iterations 8
Cbc0038I Pass  69: suminf.    1.10231 (4) obj. -34.4182 iterations 8
Cbc0038I Pass  70: suminf.    1.10231 (4) obj. -34.4182 iterations 0
Cbc0038I Pass  71: suminf.    0.71429 (3) obj. -34.4636 iterations 9
Cbc0038I Pass  72: suminf.    1.70049 (7) obj. -34.4182 iterations 18
Cbc0038I Pass  73: suminf.    1.10231 (4) obj. -34.4182 iterations 17
Cbc0038I Pass  74: suminf.    0.99651 (4) obj. -34.4182 iterations 2
Cbc0038I Rounding solution of -33.1667 is better than previous of -33.0897

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -35.0142
Cbc0038I Pass  74: suminf.    0.85714 (6) obj. -36.3767 iterations 0
Cbc0038I Pass  75: suminf.    0.76807 (4) obj. -35.0142 iterations 16
Cbc0038I Pass  76: suminf.    0.57143 (4) obj. -35.2451 iterations 12
Cbc0038I Pass  77: suminf.    0.89522 (4) obj. -35.0142 iterations 10
Cbc0038I Pass  78: suminf.    0.76015 (5) obj. -35.0142 iterations 10
Cbc0038I Pass  79: suminf.    1.06910 (4) obj. -35.0142 iterations 4
Cbc0038I Pass  80: suminf.    0.67313 (4) obj. -35.0142 iterations 14
Cbc0038I Pass  81: suminf.    1.28463 (5) obj. -35.0142 iterations 16
Cbc0038I Pass  82: suminf.    1.28463 (5) obj. -35.0142 iterations 8
Cbc0038I Pass  83: suminf.    1.16914 (4) obj. -35.0142 iterations 15
Cbc0038I Pass  84: suminf.    0.71429 (4) obj. -35.2709 iterations 13
Cbc0038I Pass  85: suminf.    1.06751 (4) obj. -35.0142 iterations 12
Cbc0038I Pass  86: suminf.    0.75449 (5) obj. -35.0142 iterations 20
Cbc0038I Pass  87: suminf.    0.68662 (4) obj. -35.0142 iterations 12
Cbc0038I Pass  88: suminf.    1.28463 (5) obj. -35.0142 iterations 14
Cbc0038I Pass  89: suminf.    1.28463 (5) obj. -35.0142 iterations 6
Cbc0038I Pass  90: suminf.    1.16914 (4) obj. -35.0142 iterations 13
Cbc0038I Pass  91: suminf.    0.71429 (4) obj. -35.2709 iterations 14
Cbc0038I Pass  92: suminf.    1.06751 (4) obj. -35.0142 iterations 13
Cbc0038I Pass  93: suminf.    1.19391 (4) obj. -35.0142 iterations 11
Cbc0038I Pass  94: suminf.    0.85714 (4) obj. -35.1691 iterations 11
Cbc0038I Pass  95: suminf.    1.08979 (4) obj. -35.0142 iterations 12
Cbc0038I Pass  96: suminf.    1.02213 (4) obj. -35.0142 iterations 22
Cbc0038I Pass  97: suminf.    0.91152 (5) obj. -35.0142 iterations 9
Cbc0038I Pass  98: suminf.    0.79167 (4) obj. -35.0142 iterations 5
Cbc0038I Pass  99: suminf.    0.58424 (4) obj. -35.0142 iterations 8
Cbc0038I Pass 100: suminf.    1.28463 (5) obj. -35.0142 iterations 6
Cbc0038I Pass 101: suminf.    1.28463 (5) obj. -35.0142 iterations 4
Cbc0038I Pass 102: suminf.    1.16914 (4) obj. -35.0142 iterations 11
Cbc0038I Pass 103: suminf.    0.71429 (4) obj. -35.2709 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.1667 - took 0.05 seconds
Cbc0012I Integer solution of -33.166707 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0031I 17 added rows had average density of 56.176471
Cbc0013I At root node, 17 cuts changed objective from -36.405001 to -34.375104 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 865 row cuts average 81.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 62 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.166707 best solution, best possible -34.375104 (0.24 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 25 columns
Cbc0010I After 1000 nodes, 3 on tree, -33.166707 best solution, best possible -34.375104 (1.97 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 30 columns
Cbc0001I Search completed - best objective -33.16670745611168, took 274915 iterations and 37504 nodes (2.99 seconds)
Cbc0032I Strong branching done 10960 times (74173 iterations), fathomed 257 nodes and fixed 603 variables
Cbc0041I Maximum depth 24, 4256 variables fixed on reduced cost (complete fathoming 523 times, 35796 nodes taking 253610 iterations)
Cuts at root node changed objective from -36.405 to -34.3751
Probing was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 503 times and created 1254 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 503 times and created 254 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.16670746
Enumerated nodes:               37504
Total iterations:               274915
Time (CPU seconds):             2.87
Time (Wallclock seconds):       3.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.87   (Wallclock seconds):       3.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c20f4ed345474f83ae380706cfbf7bb1-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/c20f4ed345474f83ae380706cfbf7bb1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.39894 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -9.27705 iterations 3
Cbc0038I Solution found of -8.35877
Cbc0038I Cleaned solution of -8.35877
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -8.35877 to -8.84633 (0.00 seconds)
Cbc0038I Round again with cutoff of -8.9016
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -9.27705 iterations 0
Cbc0038I Pass   3: suminf.    0.35791 (2) obj. -8.9016 iterations 6
Cbc0038I Pass   4: suminf.    0.25000 (2) obj. -8.9016 iterations 1
Cbc0038I Pass   5: suminf.    0.19992 (1) obj. -8.9016 iterations 2
Cbc0038I Pass   6: suminf.    0.19992 (1) obj. -8.9016 iterations 0
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -9.05368 iterations 3
Cbc0038I Pass   8: suminf.    0.25000 (1) obj. -9.05368 iterations 0
Cbc0038I Pass   9: suminf.    0.50000 (2) obj. -9.25161 iterations 3
Cbc0038I Pass  10: suminf.    0.50000 (2) obj. -9.25161 iterations 0
Cbc0038I Pass  11: suminf.    0.98828 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  12: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  13: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  14: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  15: suminf.    0.70109 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  16: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  17: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  18: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  19: suminf.    0.98828 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  20: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  21: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  22: suminf.    0.70109 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  23: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  24: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  25: suminf.    0.98828 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  26: suminf.    0.98828 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  27: suminf.    0.70109 (3) obj. -8.9016 iterations 1
Cbc0038I Pass  28: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  29: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  30: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I Pass  31: suminf.    0.70109 (3) obj. -8.9016 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -8.84633 - took 0.00 seconds
Cbc0012I Integer solution of -8.8463276 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9.3989357 to -8.8463276 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.846327640116202, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Cuts at root node changed objective from -9.39894 to -8.84633
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                8.84632764
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ae567b6b71ab4bf98e7d9b81158ef54a-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/ae567b6b71ab4bf98e7d9b81158ef54a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.0145 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.9375 iterations 5
Cbc0038I Solution found of -13.4321
Cbc0038I Cleaned solution of -13.4321
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -13.4321 to -13.8174 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.0371
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.9375 iterations 0
Cbc0038I Pass   3: suminf.    0.36987 (1) obj. -14.0371 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.2788 iterations 6
Cbc0038I Pass   5: suminf.    0.26462 (1) obj. -14.0371 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -14.4562 iterations 7
Cbc0038I Pass   7: suminf.    0.30855 (1) obj. -14.0371 iterations 2
Cbc0038I Pass   8: suminf.    0.47370 (1) obj. -14.0371 iterations 9
Cbc0038I Pass   9: suminf.    0.47370 (1) obj. -14.0371 iterations 0
Cbc0038I Pass  10: suminf.    0.20000 (1) obj. -14.3153 iterations 3
Cbc0038I Pass  11: suminf.    0.33549 (1) obj. -14.0371 iterations 11
Cbc0038I Pass  12: suminf.    0.33549 (1) obj. -14.0371 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -14.4338 iterations 6
Cbc0038I Pass  14: suminf.    0.33479 (1) obj. -14.0371 iterations 3
Cbc0038I Pass  15: suminf.    0.65448 (2) obj. -14.0371 iterations 6
Cbc0038I Pass  16: suminf.    0.65448 (2) obj. -14.0371 iterations 0
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. -14.6819 iterations 8
Cbc0038I Pass  18: suminf.    0.31323 (2) obj. -14.0371 iterations 10
Cbc0038I Pass  19: suminf.    0.28756 (2) obj. -14.0371 iterations 1
Cbc0038I Pass  20: suminf.    0.27456 (2) obj. -14.0371 iterations 5
Cbc0038I Pass  21: suminf.    0.21201 (2) obj. -14.0371 iterations 3
Cbc0038I Pass  22: suminf.    0.25504 (2) obj. -14.0371 iterations 1
Cbc0038I Pass  23: suminf.    0.21201 (2) obj. -14.0371 iterations 1
Cbc0038I Pass  24: suminf.    0.23981 (2) obj. -14.0371 iterations 2
Cbc0038I Pass  25: suminf.    0.36471 (2) obj. -14.0371 iterations 4
Cbc0038I Pass  26: suminf.    0.36471 (2) obj. -14.0371 iterations 0
Cbc0038I Pass  27: suminf.    0.25910 (2) obj. -14.0371 iterations 5
Cbc0038I Pass  28: suminf.    0.23186 (2) obj. -14.0371 iterations 3
Cbc0038I Pass  29: suminf.    0.27456 (2) obj. -14.0371 iterations 3
Cbc0038I Pass  30: suminf.    0.30822 (2) obj. -14.0371 iterations 1
Cbc0038I Pass  31: suminf.    0.27456 (2) obj. -14.0371 iterations 1
Cbc0038I Rounding solution of -13.825 is better than previous of -13.8174

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -13.825 to -14.0272 (0.01 seconds)
Cbc0038I Round again with cutoff of -14.4326
Cbc0038I Pass  31: suminf.    0.80000 (4) obj. -15.9375 iterations 0
Cbc0038I Pass  32: suminf.    0.48986 (2) obj. -14.4326 iterations 9
Cbc0038I Pass  33: suminf.    0.39184 (2) obj. -14.4326 iterations 2
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -14.4562 iterations 8
Cbc0038I Pass  35: suminf.    0.22761 (1) obj. -14.4326 iterations 2
Cbc0038I Pass  36: suminf.    1.06811 (5) obj. -14.4326 iterations 13
Cbc0038I Pass  37: suminf.    0.20000 (1) obj. -14.5759 iterations 6
Cbc0038I Pass  38: suminf.    0.36809 (1) obj. -14.4326 iterations 3
Cbc0038I Pass  39: suminf.    0.55498 (2) obj. -14.4326 iterations 10
Cbc0038I Pass  40: suminf.    0.40000 (2) obj. -14.5167 iterations 6
Cbc0038I Pass  41: suminf.    0.52833 (2) obj. -14.4326 iterations 2
Cbc0038I Pass  42: suminf.    0.57665 (2) obj. -14.4326 iterations 6
Cbc0038I Pass  43: suminf.    0.20184 (2) obj. -14.4326 iterations 10
Cbc0038I Pass  44: suminf.    0.20000 (1) obj. -14.4484 iterations 4
Cbc0038I Pass  45: suminf.    0.21852 (1) obj. -14.4326 iterations 2
Cbc0038I Pass  46: suminf.    0.45024 (1) obj. -14.4326 iterations 5
Cbc0038I Pass  47: suminf.    0.20000 (1) obj. -14.5825 iterations 6
Cbc0038I Pass  48: suminf.    0.37581 (1) obj. -14.4326 iterations 3
Cbc0038I Pass  49: suminf.    0.39917 (1) obj. -14.4326 iterations 4
Cbc0038I Pass  50: suminf.    0.25190 (2) obj. -14.4326 iterations 6
Cbc0038I Pass  51: suminf.    0.22840 (2) obj. -14.4326 iterations 2
Cbc0038I Pass  52: suminf.    0.58820 (2) obj. -14.4326 iterations 3
Cbc0038I Pass  53: suminf.    0.45024 (1) obj. -14.4326 iterations 1
Cbc0038I Pass  54: suminf.    0.20000 (1) obj. -14.5825 iterations 4
Cbc0038I Pass  55: suminf.    0.37581 (1) obj. -14.4326 iterations 3
Cbc0038I Pass  56: suminf.    0.57665 (2) obj. -14.4326 iterations 3
Cbc0038I Pass  57: suminf.    0.40000 (2) obj. -14.5167 iterations 5
Cbc0038I Pass  58: suminf.    0.52833 (2) obj. -14.4326 iterations 2
Cbc0038I Pass  59: suminf.    0.47450 (2) obj. -14.4326 iterations 7
Cbc0038I Pass  60: suminf.    0.32900 (2) obj. -14.4326 iterations 7
Cbc0038I Rounding solution of -14.0414 is better than previous of -14.0272

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -14.0414 to -14.0548 (0.03 seconds)
Cbc0038I Round again with cutoff of -14.9072
Cbc0038I Pass  60: suminf.    0.80000 (4) obj. -15.9375 iterations 0
Cbc0038I Pass  61: suminf.    0.48464 (3) obj. -14.9072 iterations 10
Cbc0038I Pass  62: suminf.    0.40000 (2) obj. -14.91 iterations 4
Cbc0038I Pass  63: suminf.    0.61800 (2) obj. -14.9072 iterations 5
Cbc0038I Pass  64: suminf.    0.40000 (2) obj. -15.0916 iterations 7
Cbc0038I Pass  65: suminf.    0.68140 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  66: suminf.    0.66806 (2) obj. -14.9072 iterations 3
Cbc0038I Pass  67: suminf.    0.94860 (4) obj. -14.9072 iterations 11
Cbc0038I Pass  68: suminf.    0.89178 (3) obj. -14.9072 iterations 4
Cbc0038I Pass  69: suminf.    0.72136 (3) obj. -14.9072 iterations 12
Cbc0038I Pass  70: suminf.    0.68020 (2) obj. -14.9072 iterations 6
Cbc0038I Pass  71: suminf.    0.40000 (2) obj. -15.1116 iterations 5
Cbc0038I Pass  72: suminf.    0.68806 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  73: suminf.    0.63201 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  74: suminf.    0.66122 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  75: suminf.    0.76503 (3) obj. -14.9072 iterations 3
Cbc0038I Pass  76: suminf.    0.67097 (2) obj. -14.9072 iterations 14
Cbc0038I Pass  77: suminf.    0.40000 (2) obj. -15.0916 iterations 8
Cbc0038I Pass  78: suminf.    0.68140 (2) obj. -14.9072 iterations 3
Cbc0038I Pass  79: suminf.    0.69941 (2) obj. -14.9072 iterations 5
Cbc0038I Pass  80: suminf.    0.68559 (2) obj. -14.9072 iterations 6
Cbc0038I Pass  81: suminf.    0.64342 (2) obj. -14.9072 iterations 1
Cbc0038I Pass  82: suminf.    0.68559 (2) obj. -14.9072 iterations 3
Cbc0038I Pass  83: suminf.    0.64342 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  84: suminf.    0.66122 (2) obj. -14.9072 iterations 4
Cbc0038I Pass  85: suminf.    0.63201 (2) obj. -14.9072 iterations 2
Cbc0038I Pass  86: suminf.    0.63201 (2) obj. -14.9072 iterations 0
Cbc0038I Pass  87: suminf.    0.65949 (2) obj. -14.9072 iterations 1
Cbc0038I Pass  88: suminf.    0.63201 (2) obj. -14.9072 iterations 1
Cbc0038I Pass  89: suminf.    0.68806 (2) obj. -14.9072 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -14.0548 - took 0.04 seconds
Cbc0012I Integer solution of -14.054783 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 13 columns
Cbc0031I 12 added rows had average density of 35.666667
Cbc0013I At root node, 12 cuts changed objective from -16.014543 to -14.943166 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 686 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 48 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -14.054783 best solution, best possible -14.943166 (0.12 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 9 rows 11 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 21 columns
Cbc0001I Search completed - best objective -14.0547828897833, took 5921 iterations and 162 nodes (0.26 seconds)
Cbc0032I Strong branching done 1552 times (7531 iterations), fathomed 48 nodes and fixed 36 variables
Cbc0035I Maximum depth 12, 324 variables fixed on reduced cost
Cuts at root node changed objective from -16.0145 to -14.9432
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 437 times and created 1834 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 100 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.05478289
Enumerated nodes:               162
Total iterations:               5921
Time (CPU seconds):             0.26
Time (Wallclock seconds):       0.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.27

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/3ba8ac29dfe64696b052f69719c18191-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/3ba8ac29dfe64696b052f69719c18191-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 23.9898 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -23.8682 iterations 12
Cbc0038I Solution found of -20.9601
Cbc0038I Cleaned solution of -20.9601
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -20.9601 to -21.6898 (0.00 seconds)
Cbc0038I Round again with cutoff of -21.9198
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -23.8682 iterations 0
Cbc0038I Pass   3: suminf.    0.51275 (2) obj. -21.9198 iterations 11
Cbc0038I Pass   4: suminf.    0.47277 (2) obj. -21.9198 iterations 1
Cbc0038I Pass   5: suminf.    0.25384 (2) obj. -21.9198 iterations 10
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -22.0233 iterations 10
Cbc0038I Pass   7: suminf.    0.28207 (1) obj. -21.9198 iterations 3
Cbc0038I Pass   8: suminf.    0.50381 (2) obj. -21.9198 iterations 12
Cbc0038I Pass   9: suminf.    0.33333 (2) obj. -22.0113 iterations 9
Cbc0038I Pass  10: suminf.    0.65478 (2) obj. -21.9198 iterations 6
Cbc0038I Pass  11: suminf.    0.33333 (2) obj. -22.0864 iterations 7
Cbc0038I Pass  12: suminf.    0.51918 (2) obj. -21.9198 iterations 6
Cbc0038I Pass  13: suminf.    0.46145 (2) obj. -21.9198 iterations 12
Cbc0038I Pass  14: suminf.    0.33333 (2) obj. -21.9911 iterations 8
Cbc0038I Pass  15: suminf.    0.41284 (2) obj. -21.9198 iterations 7
Cbc0038I Pass  16: suminf.    0.63613 (3) obj. -21.9198 iterations 14
Cbc0038I Pass  17: suminf.    0.57671 (3) obj. -21.9198 iterations 4
Cbc0038I Pass  18: suminf.    0.78008 (2) obj. -21.9198 iterations 10
Cbc0038I Pass  19: suminf.    0.54949 (2) obj. -21.9198 iterations 3
Cbc0038I Pass  20: suminf.    0.16667 (1) obj. -22.1763 iterations 13
Cbc0038I Pass  21: suminf.    0.45270 (1) obj. -21.9198 iterations 5
Cbc0038I Pass  22: suminf.    0.61976 (4) obj. -21.9198 iterations 3
Cbc0038I Pass  23: suminf.    0.72644 (4) obj. -21.9198 iterations 15
Cbc0038I Pass  24: suminf.    0.91750 (4) obj. -21.9198 iterations 3
Cbc0038I Pass  25: suminf.    0.16667 (1) obj. -22.0664 iterations 10
Cbc0038I Pass  26: suminf.    0.33009 (1) obj. -21.9198 iterations 6
Cbc0038I Pass  27: suminf.    0.64125 (3) obj. -21.9198 iterations 19
Cbc0038I Pass  28: suminf.    0.56983 (2) obj. -21.9198 iterations 2
Cbc0038I Pass  29: suminf.    0.69181 (2) obj. -21.9198 iterations 6
Cbc0038I Pass  30: suminf.    0.16667 (1) obj. -22.1936 iterations 6
Cbc0038I Pass  31: suminf.    0.47201 (1) obj. -21.9198 iterations 5
Cbc0038I Rounding solution of -21.6952 is better than previous of -21.6898

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -22.3338
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -23.8682 iterations 0
Cbc0038I Pass  32: suminf.    0.36602 (3) obj. -22.3338 iterations 14
Cbc0038I Pass  33: suminf.    1.95587 (7) obj. -22.3338 iterations 5
Cbc0038I Pass  34: suminf.    0.56089 (2) obj. -22.3338 iterations 11
Cbc0038I Pass  35: suminf.    0.33333 (2) obj. -22.4784 iterations 4
Cbc0038I Pass  36: suminf.    0.52280 (2) obj. -22.3338 iterations 5
Cbc0038I Pass  37: suminf.    0.64075 (3) obj. -22.3338 iterations 12
Cbc0038I Pass  38: suminf.    0.60802 (3) obj. -22.3338 iterations 3
Cbc0038I Pass  39: suminf.    0.34147 (2) obj. -22.3338 iterations 7
Cbc0038I Pass  40: suminf.    0.34147 (2) obj. -22.3338 iterations 0
Cbc0038I Pass  41: suminf.    0.32363 (2) obj. -22.3338 iterations 4
Cbc0038I Pass  42: suminf.    0.65367 (3) obj. -22.3338 iterations 3
Cbc0038I Pass  43: suminf.    0.64919 (3) obj. -22.3338 iterations 3
Cbc0038I Pass  44: suminf.    0.51321 (3) obj. -22.3338 iterations 7
Cbc0038I Pass  45: suminf.    0.48048 (3) obj. -22.3338 iterations 2
Cbc0038I Pass  46: suminf.    0.54220 (3) obj. -22.3338 iterations 6
Cbc0038I Pass  47: suminf.    0.54220 (3) obj. -22.3338 iterations 1
Cbc0038I Pass  48: suminf.    0.47211 (3) obj. -22.3338 iterations 4
Cbc0038I Pass  49: suminf.    0.47211 (3) obj. -22.3338 iterations 0
Cbc0038I Pass  50: suminf.    0.65143 (2) obj. -22.3338 iterations 17
Cbc0038I Pass  51: suminf.    0.33333 (2) obj. -22.5539 iterations 6
Cbc0038I Pass  52: suminf.    0.57884 (2) obj. -22.3338 iterations 7
Cbc0038I Pass  53: suminf.    1.01832 (3) obj. -22.3338 iterations 11
Cbc0038I Pass  54: suminf.    0.68694 (3) obj. -22.3338 iterations 5
Cbc0038I Pass  55: suminf.    0.32315 (2) obj. -22.3338 iterations 5
Cbc0038I Pass  56: suminf.    0.34101 (2) obj. -22.3338 iterations 3
Cbc0038I Pass  57: suminf.    0.34101 (2) obj. -22.3338 iterations 1
Cbc0038I Pass  58: suminf.    0.34101 (2) obj. -22.3338 iterations 1
Cbc0038I Pass  59: suminf.    0.61064 (2) obj. -22.3338 iterations 9
Cbc0038I Pass  60: suminf.    0.33333 (2) obj. -22.4735 iterations 9
Cbc0038I Rounding solution of -21.6955 is better than previous of -21.6952

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -22.8306
Cbc0038I Pass  60: suminf.    0.83333 (5) obj. -23.8682 iterations 0
Cbc0038I Pass  61: suminf.    0.68627 (3) obj. -22.8306 iterations 14
Cbc0038I Pass  62: suminf.    0.50000 (3) obj. -22.9888 iterations 10
Cbc0038I Pass  63: suminf.    0.70736 (3) obj. -22.8306 iterations 7
Cbc0038I Pass  64: suminf.    0.69196 (3) obj. -22.8306 iterations 13
Cbc0038I Pass  65: suminf.    0.61649 (3) obj. -22.8306 iterations 4
Cbc0038I Pass  66: suminf.    0.46273 (3) obj. -22.8306 iterations 6
Cbc0038I Pass  67: suminf.    0.46273 (3) obj. -22.8306 iterations 2
Cbc0038I Pass  68: suminf.    0.52608 (3) obj. -22.8306 iterations 10
Cbc0038I Pass  69: suminf.    0.52608 (3) obj. -22.8306 iterations 2
Cbc0038I Pass  70: suminf.    0.45419 (3) obj. -22.8306 iterations 5
Cbc0038I Pass  71: suminf.    0.45419 (3) obj. -22.8306 iterations 0
Cbc0038I Pass  72: suminf.    0.57082 (3) obj. -22.8306 iterations 2
Cbc0038I Pass  73: suminf.    0.45419 (3) obj. -22.8306 iterations 4
Cbc0038I Pass  74: suminf.    0.52608 (3) obj. -22.8306 iterations 6
Cbc0038I Pass  75: suminf.    0.52608 (3) obj. -22.8306 iterations 2
Cbc0038I Pass  76: suminf.    0.45419 (3) obj. -22.8306 iterations 4
Cbc0038I Pass  77: suminf.    0.49053 (3) obj. -22.8306 iterations 6
Cbc0038I Pass  78: suminf.    0.53663 (3) obj. -22.8306 iterations 6
Cbc0038I Pass  79: suminf.    0.52834 (3) obj. -22.8306 iterations 7
Cbc0038I Pass  80: suminf.    1.28081 (5) obj. -22.8306 iterations 10
Cbc0038I Pass  81: suminf.    0.69898 (4) obj. -22.8306 iterations 7
Cbc0038I Pass  82: suminf.    1.22451 (4) obj. -22.8306 iterations 12
Cbc0038I Pass  83: suminf.    1.14379 (4) obj. -22.8306 iterations 9
Cbc0038I Pass  84: suminf.    0.87619 (3) obj. -22.8306 iterations 15
Cbc0038I Pass  85: suminf.    0.66667 (3) obj. -22.8794 iterations 17
Cbc0038I Pass  86: suminf.    0.65614 (3) obj. -22.8306 iterations 11
Cbc0038I Pass  87: suminf.    0.52608 (3) obj. -22.8306 iterations 4
Cbc0038I Pass  88: suminf.    0.45419 (3) obj. -22.8306 iterations 6
Cbc0038I Pass  89: suminf.    0.45419 (3) obj. -22.8306 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -21.6955 - took 0.05 seconds
Cbc0012I Integer solution of -21.695513 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 3 columns
Cbc0031I 16 added rows had average density of 35.4375
Cbc0013I At root node, 16 cuts changed objective from -23.98982 to -22.910688 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1051 row cuts average 58.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 19 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 65 row cuts average 40.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 98 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.695513 best solution, best possible -22.910688 (0.21 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 16 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0001I Search completed - best objective -21.69551349058741, took 12269 iterations and 522 nodes (0.73 seconds)
Cbc0032I Strong branching done 4946 times (31391 iterations), fathomed 179 nodes and fixed 316 variables
Cbc0035I Maximum depth 18, 1162 variables fixed on reduced cost
Cuts at root node changed objective from -23.9898 to -22.9107
Probing was tried 100 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Gomory was tried 476 times and created 1748 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 476 times and created 221 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 476 times and created 395 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)

Result - Optimal solution found

Objective value:                21.69551349
Enumerated nodes:               522
Total iterations:               12269
Time (CPU seconds):             0.68
Time (Wallclock seconds):       0.73

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.73

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1225b33a17db4e6ba69651a9efdade8a-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1225b33a17db4e6ba69651a9efdade8a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 46.1824 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -46.0856 iterations 30
Cbc0038I Solution found of -40.8767
Cbc0038I Cleaned solution of -40.8767
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -40.8767 to -41.6512 (0.00 seconds)
Cbc0038I Round again with cutoff of -42.1043
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -46.0856 iterations 0
Cbc0038I Pass   3: suminf.    0.54373 (2) obj. -42.1043 iterations 19
Cbc0038I Pass   4: suminf.    0.47062 (2) obj. -42.1043 iterations 2
Cbc0038I Pass   5: suminf.    1.30896 (6) obj. -42.1043 iterations 17
Cbc0038I Pass   6: suminf.    0.37231 (1) obj. -42.1043 iterations 5
Cbc0038I Pass   7: suminf.    0.37231 (1) obj. -42.1043 iterations 0
Cbc0038I Pass   8: suminf.    0.12500 (1) obj. -42.5939 iterations 11
Cbc0038I Pass   9: suminf.    0.27047 (1) obj. -42.1043 iterations 5
Cbc0038I Pass  10: suminf.    0.12500 (1) obj. -42.7124 iterations 14
Cbc0038I Solution found of -42.1451
Cbc0038I Cleaned solution of -42.1451
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 13 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -42.1451 to -42.1795 (0.01 seconds)
Cbc0038I Round again with cutoff of -42.9801
Cbc0038I Pass  11: suminf.    0.87500 (7) obj. -46.0856 iterations 0
Cbc0038I Pass  12: suminf.    0.73103 (3) obj. -42.9801 iterations 29
Cbc0038I Pass  13: suminf.    0.60029 (3) obj. -42.9801 iterations 4
Cbc0038I Pass  14: suminf.    0.37925 (2) obj. -42.9801 iterations 12
Cbc0038I Pass  15: suminf.    1.73112 (7) obj. -42.9801 iterations 13
Cbc0038I Pass  16: suminf.    0.54180 (2) obj. -42.9801 iterations 24
Cbc0038I Pass  17: suminf.    0.41690 (2) obj. -42.9801 iterations 3
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -43.283 iterations 14
Cbc0038I Solution found of -43.283
Cbc0038I Cleaned solution of -43.283
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -44.1528
Cbc0038I Pass  19: suminf.    0.87500 (7) obj. -46.0856 iterations 0
Cbc0038I Pass  20: suminf.    0.52961 (4) obj. -44.1528 iterations 29
Cbc0038I Pass  21: suminf.    0.50000 (4) obj. -44.2181 iterations 17
Cbc0038I Pass  22: suminf.    0.70376 (4) obj. -44.1528 iterations 12
Cbc0038I Pass  23: suminf.    0.50000 (4) obj. -44.3502 iterations 20
Cbc0038I Pass  24: suminf.    0.81049 (4) obj. -44.1528 iterations 6
Cbc0038I Pass  25: suminf.    0.60772 (4) obj. -44.1528 iterations 7
Cbc0038I Pass  26: suminf.    1.22461 (4) obj. -44.1528 iterations 26
Cbc0038I Pass  27: suminf.    0.77991 (4) obj. -44.1528 iterations 10
Cbc0038I Pass  28: suminf.    1.36872 (3) obj. -44.1528 iterations 16
Cbc0038I Pass  29: suminf.    0.63179 (3) obj. -44.1528 iterations 2
Cbc0038I Pass  30: suminf.    0.63997 (6) obj. -44.1528 iterations 14
Cbc0038I Pass  31: suminf.    0.68206 (3) obj. -44.1528 iterations 6
Cbc0038I Pass  32: suminf.    0.64679 (3) obj. -44.1528 iterations 1
Cbc0038I Pass  33: suminf.    0.70881 (3) obj. -44.1528 iterations 4
Cbc0038I Pass  34: suminf.    0.68726 (3) obj. -44.1528 iterations 1
Cbc0038I Pass  35: suminf.    0.66944 (3) obj. -44.1528 iterations 4
Cbc0038I Pass  36: suminf.    0.73886 (4) obj. -44.1528 iterations 18
Cbc0038I Pass  37: suminf.    0.37500 (3) obj. -44.3647 iterations 9
Cbc0038I Pass  38: suminf.    0.37591 (4) obj. -44.1528 iterations 11
Cbc0038I Pass  39: suminf.    0.26996 (8) obj. -44.1528 iterations 11
Cbc0038I Pass  40: suminf.    0.50426 (3) obj. -44.1528 iterations 8
Cbc0038I Pass  41: suminf.    0.71981 (3) obj. -44.1528 iterations 11
Cbc0038I Pass  42: suminf.    0.25000 (2) obj. -44.2778 iterations 14
Cbc0038I Pass  43: suminf.    0.44266 (2) obj. -44.1528 iterations 7
Cbc0038I Pass  44: suminf.    0.28696 (3) obj. -44.1528 iterations 41
Cbc0038I Pass  45: suminf.    1.47046 (6) obj. -44.1528 iterations 16
Cbc0038I Pass  46: suminf.    0.55036 (3) obj. -44.1528 iterations 6
Cbc0038I Pass  47: suminf.    1.86443 (8) obj. -44.1528 iterations 15
Cbc0038I Pass  48: suminf.    2.37800 (8) obj. -44.1528 iterations 10
Cbc0038I Rounding solution of -43.2839 is better than previous of -43.283

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 37 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -44.7617
Cbc0038I Pass  48: suminf.    0.87500 (7) obj. -46.0856 iterations 0
Cbc0038I Pass  49: suminf.    0.72340 (5) obj. -44.7617 iterations 30
Cbc0038I Pass  50: suminf.    0.62500 (5) obj. -44.9176 iterations 26
Cbc0038I Pass  51: suminf.    1.16679 (6) obj. -44.7617 iterations 14
Cbc0038I Pass  52: suminf.    0.65183 (6) obj. -44.7617 iterations 9
Cbc0038I Pass  53: suminf.    2.32500 (8) obj. -44.7617 iterations 15
Cbc0038I Pass  54: suminf.    0.87500 (4) obj. -44.8878 iterations 27
Cbc0038I Pass  55: suminf.    1.05169 (4) obj. -44.7617 iterations 29
Cbc0038I Pass  56: suminf.    1.80284 (10) obj. -44.7617 iterations 28
Cbc0038I Pass  57: suminf.    0.47104 (4) obj. -44.7617 iterations 18
Cbc0038I Pass  58: suminf.    0.81972 (4) obj. -44.7617 iterations 11
Cbc0038I Pass  59: suminf.    0.81972 (4) obj. -44.7617 iterations 0
Cbc0038I Pass  60: suminf.    1.66189 (10) obj. -44.7617 iterations 32
Cbc0038I Pass  61: suminf.    1.66189 (10) obj. -44.7617 iterations 7
Cbc0038I Pass  62: suminf.    0.95969 (4) obj. -44.7617 iterations 29
Cbc0038I Pass  63: suminf.    1.52265 (9) obj. -44.7617 iterations 12
Cbc0038I Pass  64: suminf.    0.75791 (4) obj. -44.7617 iterations 8
Cbc0038I Pass  65: suminf.    2.08939 (7) obj. -44.7617 iterations 9
Cbc0038I Pass  66: suminf.    1.42171 (7) obj. -44.7617 iterations 4
Cbc0038I Pass  67: suminf.    0.81972 (4) obj. -44.7617 iterations 13
Cbc0038I Pass  68: suminf.    0.81972 (4) obj. -44.7617 iterations 12
Cbc0038I Pass  69: suminf.    1.66189 (10) obj. -44.7617 iterations 26
Cbc0038I Pass  70: suminf.    1.66189 (10) obj. -44.7617 iterations 7
Cbc0038I Pass  71: suminf.    0.95969 (4) obj. -44.7617 iterations 26
Cbc0038I Pass  72: suminf.    1.52265 (9) obj. -44.7617 iterations 12
Cbc0038I Pass  73: suminf.    0.75791 (4) obj. -44.7617 iterations 8
Cbc0038I Pass  74: suminf.    1.16685 (5) obj. -44.7617 iterations 25
Cbc0038I Pass  75: suminf.    0.65860 (5) obj. -44.7617 iterations 14
Cbc0038I Pass  76: suminf.    0.81972 (4) obj. -44.7617 iterations 15
Cbc0038I Pass  77: suminf.    0.81972 (4) obj. -44.7617 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 37 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -43.2839 - took 0.08 seconds
Cbc0012I Integer solution of -43.28391 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 20 columns
Cbc0031I 20 added rows had average density of 77.45
Cbc0013I At root node, 20 cuts changed objective from -46.182433 to -44.905318 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1454 row cuts average 107.2 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 36 row cuts average 25.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 90 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 92 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.28391 best solution, best possible -44.905318 (0.39 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 21 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 40 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 29 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 35 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 28 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0010I After 1000 nodes, 8 on tree, -43.28391 best solution, best possible -44.905318 (2.24 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 30 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 25 columns
Cbc0016I Integer solution of -43.293418 found by strong branching after 34997 iterations and 1793 nodes (7.70 seconds)
Cbc0010I After 2000 nodes, 10 on tree, -43.293418 best solution, best possible -44.689342 (8.77 seconds)
Cbc0016I Integer solution of -43.30317 found by strong branching after 39600 iterations and 2045 nodes (9.21 seconds)
Cbc0016I Integer solution of -43.33875 found by strong branching after 40638 iterations and 2136 nodes (9.53 seconds)
Cbc0016I Integer solution of -43.362811 found by strong branching after 40867 iterations and 2158 nodes (9.59 seconds)
Cbc0016I Integer solution of -43.365733 found by strong branching after 40935 iterations and 2172 nodes (9.62 seconds)
Cbc0012I Integer solution of -43.406415 found by rounding after 41123 iterations and 2185 nodes (9.63 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 30 columns
Cbc0001I Search completed - best objective -43.40641479194195, took 1121626 iterations and 96446 nodes (10.07 seconds)
Cbc0032I Strong branching done 17820 times (188239 iterations), fathomed 322 nodes and fixed 1112 variables
Cbc0041I Maximum depth 24, 9618 variables fixed on reduced cost (complete fathoming 743 times, 93928 nodes taking 1076674 iterations)
Cuts at root node changed objective from -46.1824 to -44.9053
Probing was tried 100 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Gomory was tried 705 times and created 2300 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
TwoMirCuts was tried 705 times and created 201 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
ZeroHalf was tried 705 times and created 512 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)

Result - Optimal solution found

Objective value:                43.40641479
Enumerated nodes:               96446
Total iterations:               1121626
Time (CPU seconds):             9.70
Time (Wallclock seconds):       10.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       9.70   (Wallclock seconds):       10.08

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/023435ebfc824c98ba84584faa1b181c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/023435ebfc824c98ba84584faa1b181c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.48393 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.50000 (2) obj. -9.12363 iterations 3
Cbc0038I Solution found of -7.82479
Cbc0038I Cleaned solution of -7.82479
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -7.82479 to -8.4171 (0.00 seconds)
Cbc0038I Round again with cutoff of -8.52379
Cbc0038I Pass   2: suminf.    0.50000 (2) obj. -9.12363 iterations 0
Cbc0038I Pass   3: suminf.    0.28383 (1) obj. -8.52379 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.56155 iterations 3
Cbc0038I Pass   5: suminf.    0.28945 (1) obj. -8.52379 iterations 3
Cbc0038I Pass   6: suminf.    0.50971 (2) obj. -8.52379 iterations 6
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -8.72482 iterations 4
Cbc0038I Pass   8: suminf.    0.46004 (1) obj. -8.52379 iterations 3
Cbc0038I Pass   9: suminf.    0.28945 (1) obj. -8.52379 iterations 3
Cbc0038I Pass  10: suminf.    0.14117 (1) obj. -8.52379 iterations 3
Cbc0038I Pass  11: suminf.    0.14117 (1) obj. -8.52379 iterations 0
Cbc0038I Pass  12: suminf.    0.25000 (1) obj. -8.9336 iterations 5
Cbc0038I Pass  13: suminf.    0.32180 (1) obj. -8.52379 iterations 3
Cbc0038I Pass  14: suminf.    0.30814 (1) obj. -8.52379 iterations 1
Cbc0038I Pass  15: suminf.    0.30814 (1) obj. -8.52379 iterations 0
Cbc0038I Pass  16: suminf.    0.30814 (1) obj. -8.52379 iterations 0
Cbc0038I Pass  17: suminf.    0.21338 (1) obj. -8.52379 iterations 4
Cbc0038I Pass  18: suminf.    0.21338 (1) obj. -8.52379 iterations 2
Cbc0038I Pass  19: suminf.    0.68731 (2) obj. -8.52379 iterations 8
Cbc0038I Pass  20: suminf.    0.68731 (2) obj. -8.52379 iterations 0
Cbc0038I Pass  21: suminf.    0.75000 (2) obj. -8.92035 iterations 4
Cbc0038I Pass  22: suminf.    0.30188 (2) obj. -8.52379 iterations 6
Cbc0038I Pass  23: suminf.    0.85805 (5) obj. -8.52379 iterations 6
Cbc0038I Pass  24: suminf.    0.97310 (4) obj. -8.52379 iterations 3
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -8.58036 iterations 2
Cbc0038I Solution found of -8.58036
Cbc0038I Cleaned solution of -8.58036
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8.76108
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  26: suminf.    0.50000 (2) obj. -9.12363 iterations 0
Cbc0038I Pass  27: suminf.    0.52029 (2) obj. -8.76108 iterations 3
Cbc0038I Pass  28: suminf.    0.32436 (2) obj. -8.76108 iterations 2
Cbc0038I Pass  29: suminf.    0.25000 (1) obj. -8.98392 iterations 6
Cbc0038I Pass  30: suminf.    0.45515 (1) obj. -8.76108 iterations 3
Cbc0038I Pass  31: suminf.    0.45515 (1) obj. -8.76108 iterations 0
Cbc0038I Pass  32: suminf.    0.45515 (1) obj. -8.76108 iterations 0
Cbc0038I Pass  33: suminf.    0.45515 (1) obj. -8.76108 iterations 0
Cbc0038I Pass  34: suminf.    0.45515 (1) obj. -8.76108 iterations 0
Cbc0038I Pass  35: suminf.    0.67435 (2) obj. -8.76108 iterations 4
Cbc0038I Pass  36: suminf.    0.67435 (2) obj. -8.76108 iterations 0
Cbc0038I Pass  37: suminf.    0.96073 (2) obj. -8.76108 iterations 3
Cbc0038I Pass  38: suminf.    1.41880 (7) obj. -8.76108 iterations 6
Cbc0038I Pass  39: suminf.    0.82000 (3) obj. -8.76108 iterations 8
Cbc0038I Pass  40: suminf.    0.75000 (3) obj. -9.30696 iterations 8
Cbc0038I Pass  41: suminf.    0.52771 (3) obj. -8.76108 iterations 4
Cbc0038I Pass  42: suminf.    0.50000 (3) obj. -8.76108 iterations 4
Cbc0038I Pass  43: suminf.    0.52029 (2) obj. -8.76108 iterations 5
Cbc0038I Pass  44: suminf.    0.32436 (2) obj. -8.76108 iterations 2
Cbc0038I Pass  45: suminf.    0.25000 (1) obj. -8.98392 iterations 7
Cbc0038I Pass  46: suminf.    0.45515 (1) obj. -8.76108 iterations 4
Cbc0038I Pass  47: suminf.    0.99871 (2) obj. -8.76108 iterations 5
Cbc0038I Pass  48: suminf.    0.51955 (7) obj. -8.76108 iterations 5
Cbc0038I Pass  49: suminf.    0.82000 (3) obj. -8.76108 iterations 7
Cbc0038I Pass  50: suminf.    0.75000 (3) obj. -9.30696 iterations 8
Cbc0038I Pass  51: suminf.    0.52771 (3) obj. -8.76108 iterations 4
Cbc0038I Pass  52: suminf.    0.50000 (3) obj. -8.76108 iterations 4
Cbc0038I Pass  53: suminf.    0.52029 (2) obj. -8.76108 iterations 5
Cbc0038I Pass  54: suminf.    0.32436 (2) obj. -8.76108 iterations 2
Cbc0038I Pass  55: suminf.    0.25000 (1) obj. -8.98392 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.58036 - took 0.00 seconds
Cbc0012I Integer solution of -8.5803637 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 2 rows 3 columns
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 12 cuts changed objective from -9.483927 to -8.9665795 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.0 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 11 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 6 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -8.58036373928185, took 15 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Cuts at root node changed objective from -9.48393 to -8.96658
Probing was tried 3 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                8.58036374
Enumerated nodes:               0
Total iterations:               15
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/24f062b9efa84c68b9252c7b60d2d41f-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/24f062b9efa84c68b9252c7b60d2d41f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 49.7165 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -49.6314 iterations 30
Cbc0038I Solution found of -44.021
Cbc0038I Cleaned solution of -44.021
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -44.021 to -44.7019 (0.00 seconds)
Cbc0038I Round again with cutoff of -45.2034
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -49.6314 iterations 0
Cbc0038I Pass   3: suminf.    0.46386 (2) obj. -45.2034 iterations 19
Cbc0038I Pass   4: suminf.    0.42491 (2) obj. -45.2034 iterations 1
Cbc0038I Pass   5: suminf.    0.32132 (2) obj. -45.2034 iterations 8
Cbc0038I Pass   6: suminf.    0.37500 (1) obj. -45.2262 iterations 15
Cbc0038I Pass   7: suminf.    0.39847 (1) obj. -45.2034 iterations 3
Cbc0038I Pass   8: suminf.    0.85914 (3) obj. -45.2034 iterations 25
Cbc0038I Pass   9: suminf.    0.81539 (3) obj. -45.2034 iterations 1
Cbc0038I Pass  10: suminf.    0.50000 (2) obj. -45.2433 iterations 24
Cbc0038I Pass  11: suminf.    0.35253 (2) obj. -45.2034 iterations 8
Cbc0038I Solution found of -45.2664
Cbc0038I Cleaned solution of -45.2664
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -45.2664 to -45.314 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.1946
Cbc0038I Pass  12: suminf.    0.87500 (7) obj. -49.6314 iterations 0
Cbc0038I Pass  13: suminf.    0.74763 (3) obj. -46.1946 iterations 25
Cbc0038I Pass  14: suminf.    0.37500 (3) obj. -46.5492 iterations 18
Cbc0038I Pass  15: suminf.    0.74559 (3) obj. -46.1946 iterations 8
Cbc0038I Pass  16: suminf.    0.70473 (3) obj. -46.1946 iterations 3
Cbc0038I Pass  17: suminf.    0.84038 (3) obj. -46.1946 iterations 5
Cbc0038I Pass  18: suminf.    0.62299 (3) obj. -46.1946 iterations 2
Cbc0038I Pass  19: suminf.    0.32481 (2) obj. -46.1946 iterations 13
Cbc0038I Pass  20: suminf.    0.25000 (2) obj. -46.2526 iterations 6
Cbc0038I Pass  21: suminf.    0.31544 (2) obj. -46.1946 iterations 6
Cbc0038I Pass  22: suminf.    0.54191 (3) obj. -46.1946 iterations 17
Cbc0038I Pass  23: suminf.    0.37500 (3) obj. -46.3349 iterations 12
Cbc0038I Pass  24: suminf.    0.52555 (3) obj. -46.1946 iterations 8
Cbc0038I Pass  25: suminf.    0.72236 (3) obj. -46.1946 iterations 34
Cbc0038I Pass  26: suminf.    0.25000 (2) obj. -46.5646 iterations 14
Cbc0038I Pass  27: suminf.    0.58311 (2) obj. -46.1946 iterations 6
Cbc0038I Pass  28: suminf.    0.54102 (2) obj. -46.1946 iterations 1
Cbc0038I Pass  29: suminf.    0.33196 (2) obj. -46.1946 iterations 4
Cbc0038I Pass  30: suminf.    0.29994 (2) obj. -46.1946 iterations 6
Cbc0038I Pass  31: suminf.    0.28343 (2) obj. -46.1946 iterations 3
Cbc0038I Pass  32: suminf.    0.35812 (2) obj. -46.1946 iterations 20
Cbc0038I Pass  33: suminf.    0.34829 (2) obj. -46.1946 iterations 5
Cbc0038I Pass  34: suminf.    0.78254 (2) obj. -46.1946 iterations 3
Cbc0038I Pass  35: suminf.    0.15474 (2) obj. -46.1946 iterations 2
Cbc0038I Pass  36: suminf.    0.17422 (2) obj. -46.1946 iterations 9
Cbc0038I Pass  37: suminf.    0.44481 (3) obj. -46.1946 iterations 3
Cbc0038I Pass  38: suminf.    0.44481 (3) obj. -46.1946 iterations 4
Cbc0038I Pass  39: suminf.    0.15474 (2) obj. -46.1946 iterations 1
Cbc0038I Pass  40: suminf.    0.52056 (3) obj. -46.1946 iterations 6
Cbc0038I Pass  41: suminf.    0.47968 (3) obj. -46.1946 iterations 2
Cbc0038I Rounding solution of -45.4969 is better than previous of -45.314

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 33 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -47.2511
Cbc0038I Pass  41: suminf.    0.87500 (7) obj. -49.6314 iterations 0
Cbc0038I Pass  42: suminf.    0.61528 (4) obj. -47.2511 iterations 33
Cbc0038I Pass  43: suminf.    0.50000 (4) obj. -47.3707 iterations 21
Cbc0038I Pass  44: suminf.    0.63473 (4) obj. -47.2511 iterations 11
Cbc0038I Pass  45: suminf.    1.01002 (4) obj. -47.2511 iterations 24
Cbc0038I Pass  46: suminf.    1.84556 (9) obj. -47.2511 iterations 20
Cbc0038I Pass  47: suminf.    1.11923 (6) obj. -47.2511 iterations 17
Cbc0038I Pass  48: suminf.    2.62412 (12) obj. -47.2511 iterations 2
Cbc0038I Pass  49: suminf.    0.46791 (3) obj. -47.2511 iterations 28
Cbc0038I Pass  50: suminf.    0.37500 (3) obj. -47.2978 iterations 6
Cbc0038I Pass  51: suminf.    0.70523 (4) obj. -47.2511 iterations 11
Cbc0038I Pass  52: suminf.    1.45089 (9) obj. -47.2511 iterations 23
Cbc0038I Pass  53: suminf.    2.79123 (9) obj. -47.2511 iterations 13
Cbc0038I Pass  54: suminf.    0.96512 (4) obj. -47.2511 iterations 3
Cbc0038I Pass  55: suminf.    0.94621 (4) obj. -47.2511 iterations 18
Cbc0038I Pass  56: suminf.    0.63846 (3) obj. -47.2511 iterations 11
Cbc0038I Pass  57: suminf.    0.37500 (3) obj. -47.4179 iterations 18
Cbc0038I Pass  58: suminf.    0.59624 (3) obj. -47.2511 iterations 11
Cbc0038I Pass  59: suminf.    0.48080 (3) obj. -47.2511 iterations 11
Cbc0038I Pass  60: suminf.    0.37500 (3) obj. -47.3159 iterations 10
Cbc0038I Pass  61: suminf.    0.44444 (3) obj. -47.2511 iterations 10
Cbc0038I Pass  62: suminf.    0.47069 (3) obj. -47.2511 iterations 9
Cbc0038I Pass  63: suminf.    0.75394 (5) obj. -47.2511 iterations 19
Cbc0038I Pass  64: suminf.    1.74761 (9) obj. -47.2511 iterations 22
Cbc0038I Pass  65: suminf.    0.50831 (4) obj. -47.2511 iterations 13
Cbc0038I Pass  66: suminf.    0.78722 (5) obj. -47.2511 iterations 16
Cbc0038I Pass  67: suminf.    0.50845 (5) obj. -47.2511 iterations 9
Cbc0038I Pass  68: suminf.    0.55982 (4) obj. -47.2511 iterations 17
Cbc0038I Pass  69: suminf.    0.37500 (3) obj. -47.3891 iterations 15
Cbc0038I Pass  70: suminf.    0.55804 (3) obj. -47.2511 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 42 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.4969 - took 0.07 seconds
Cbc0012I Integer solution of -45.496944 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 14 rows 19 columns
Cbc0031I 18 added rows had average density of 84
Cbc0013I At root node, 18 cuts changed objective from -49.716539 to -48.056798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1788 row cuts average 108.9 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 38 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 77 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 78 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -45.496944 best solution, best possible -48.056798 (0.44 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 34 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 22 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 38 columns
Cbc0010I After 1000 nodes, 405 on tree, -45.496944 best solution, best possible -48.056798 (6.26 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 37 columns
Cbc0010I After 2000 nodes, 411 on tree, -45.496944 best solution, best possible -48.056798 (9.32 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 34 columns
Cbc0010I After 3000 nodes, 329 on tree, -45.496944 best solution, best possible -48.056798 (12.13 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 19 columns
Cbc0010I After 4000 nodes, 244 on tree, -45.496944 best solution, best possible -48.056798 (14.25 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 34 columns
Cbc0010I After 5000 nodes, 242 on tree, -45.496944 best solution, best possible -48.056798 (15.66 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 26 columns
Cbc0010I After 6000 nodes, 260 on tree, -45.496944 best solution, best possible -48.056798 (16.49 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 26 columns
Cbc0010I After 7000 nodes, 256 on tree, -45.496944 best solution, best possible -48.056798 (17.14 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0010I After 8000 nodes, 247 on tree, -45.496944 best solution, best possible -48.056798 (17.78 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 25 columns
Cbc0010I After 9000 nodes, 256 on tree, -45.496944 best solution, best possible -48.056798 (18.41 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 26 columns
Cbc0010I After 10000 nodes, 264 on tree, -45.496944 best solution, best possible -48.056798 (18.93 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 22 columns
Cbc0010I After 11000 nodes, 261 on tree, -45.496944 best solution, best possible -48.056798 (19.55 seconds)
Cbc0010I After 12000 nodes, 719 on tree, -45.496944 best solution, best possible -47.139693 (23.11 seconds)
Cbc0010I After 13000 nodes, 1173 on tree, -45.496944 best solution, best possible -46.968729 (25.82 seconds)
Cbc0010I After 14000 nodes, 1056 on tree, -45.496944 best solution, best possible -46.968729 (28.25 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 35 columns
Cbc0010I After 15000 nodes, 1553 on tree, -45.496944 best solution, best possible -46.868762 (29.37 seconds)
Cbc0010I After 16000 nodes, 2043 on tree, -45.496944 best solution, best possible -46.803264 (30.54 seconds)
Cbc0010I After 17000 nodes, 2521 on tree, -45.496944 best solution, best possible -46.746082 (31.73 seconds)
Cbc0010I After 18000 nodes, 2391 on tree, -45.496944 best solution, best possible -46.746082 (33.39 seconds)
Cbc0010I After 19000 nodes, 2885 on tree, -45.496944 best solution, best possible -46.69986 (34.46 seconds)
Cbc0010I After 20000 nodes, 3368 on tree, -45.496944 best solution, best possible -46.659404 (35.55 seconds)
Cbc0010I After 21000 nodes, 3859 on tree, -45.496944 best solution, best possible -46.624367 (36.52 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 29 columns
Cbc0010I After 22000 nodes, 3723 on tree, -45.496944 best solution, best possible -46.624367 (37.79 seconds)
Cbc0010I After 23000 nodes, 4213 on tree, -45.496944 best solution, best possible -46.592905 (38.78 seconds)
Cbc0010I After 24000 nodes, 4698 on tree, -45.496944 best solution, best possible -46.561743 (39.79 seconds)
Cbc0010I After 25000 nodes, 5182 on tree, -45.496944 best solution, best possible -46.534645 (40.77 seconds)
Cbc0010I After 26000 nodes, 5032 on tree, -45.496944 best solution, best possible -46.534645 (41.86 seconds)
Cbc0010I After 27000 nodes, 5520 on tree, -45.496944 best solution, best possible -46.510767 (42.80 seconds)
Cbc0010I After 28000 nodes, 6001 on tree, -45.496944 best solution, best possible -46.488925 (43.70 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 32 columns
Cbc0010I After 29000 nodes, 6478 on tree, -45.496944 best solution, best possible -46.469838 (44.58 seconds)
Cbc0010I After 30000 nodes, 6317 on tree, -45.496944 best solution, best possible -46.46982 (45.53 seconds)
Cbc0010I After 31000 nodes, 6807 on tree, -45.496944 best solution, best possible -46.448605 (46.42 seconds)
Cbc0010I After 32000 nodes, 7282 on tree, -45.496944 best solution, best possible -46.430166 (47.29 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 17 columns
Cbc0010I After 33000 nodes, 7760 on tree, -45.496944 best solution, best possible -46.412674 (48.14 seconds)
Cbc0010I After 34000 nodes, 7581 on tree, -45.496944 best solution, best possible -46.412674 (48.98 seconds)
Cbc0010I After 35000 nodes, 8069 on tree, -45.496944 best solution, best possible -46.395693 (49.80 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 33 columns
Cbc0010I After 36000 nodes, 8542 on tree, -45.496944 best solution, best possible -46.380617 (50.63 seconds)
Cbc0010I After 37000 nodes, 9021 on tree, -45.496944 best solution, best possible -46.367177 (51.41 seconds)
Cbc0010I After 38000 nodes, 8862 on tree, -45.496944 best solution, best possible -46.367177 (52.10 seconds)
Cbc0010I After 39000 nodes, 9334 on tree, -45.496944 best solution, best possible -46.354105 (52.92 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 23 columns
Cbc0010I After 40000 nodes, 9805 on tree, -45.496944 best solution, best possible -46.342052 (53.73 seconds)
Cbc0010I After 41000 nodes, 10266 on tree, -45.496944 best solution, best possible -46.330017 (54.50 seconds)
Cbc0010I After 42000 nodes, 10112 on tree, -45.496944 best solution, best possible -46.330017 (55.33 seconds)
Cbc0010I After 43000 nodes, 10487 on tree, -45.496944 best solution, best possible -46.330017 (55.96 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 18 rows 24 columns
Cbc0010I After 44000 nodes, 10762 on tree, -45.496944 best solution, best possible -46.330017 (56.54 seconds)
Cbc0010I After 45000 nodes, 10527 on tree, -45.496944 best solution, best possible -46.330017 (56.79 seconds)
Cbc0010I After 46000 nodes, 10421 on tree, -45.496944 best solution, best possible -46.330012 (57.57 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 20 rows 23 columns
Cbc0010I After 47000 nodes, 10697 on tree, -45.496944 best solution, best possible -46.330012 (58.19 seconds)
Cbc0010I After 48000 nodes, 10942 on tree, -45.496944 best solution, best possible -46.330012 (58.84 seconds)
Cbc0010I After 49000 nodes, 10692 on tree, -45.496944 best solution, best possible -46.330012 (59.15 seconds)
Cbc0010I After 50000 nodes, 10587 on tree, -45.496944 best solution, best possible -46.330012 (59.83 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 25 rows 32 columns
Cbc0010I After 51000 nodes, 10817 on tree, -45.496944 best solution, best possible -46.330012 (60.47 seconds)
Cbc0010I After 52000 nodes, 11011 on tree, -45.496944 best solution, best possible -46.330012 (61.12 seconds)
Cbc0010I After 53000 nodes, 10751 on tree, -45.496944 best solution, best possible -46.330012 (61.46 seconds)
Cbc0010I After 54000 nodes, 10626 on tree, -45.496944 best solution, best possible -46.330008 (62.04 seconds)
Cbc0010I After 55000 nodes, 10869 on tree, -45.496944 best solution, best possible -46.330008 (62.71 seconds)
Cbc0010I After 56000 nodes, 11071 on tree, -45.496944 best solution, best possible -46.330008 (63.37 seconds)
Cbc0010I After 57000 nodes, 10796 on tree, -45.496944 best solution, best possible -46.330008 (63.68 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0010I After 58000 nodes, 10661 on tree, -45.496944 best solution, best possible -46.330008 (64.24 seconds)
Cbc0010I After 59000 nodes, 10897 on tree, -45.496944 best solution, best possible -46.330008 (64.97 seconds)
Cbc0010I After 60000 nodes, 11088 on tree, -45.496944 best solution, best possible -46.330008 (65.65 seconds)
Cbc0010I After 61000 nodes, 10789 on tree, -45.496944 best solution, best possible -46.330008 (65.96 seconds)
Cbc0010I After 62000 nodes, 10636 on tree, -45.496944 best solution, best possible -46.329928 (66.51 seconds)
Cbc0010I After 63000 nodes, 10826 on tree, -45.496944 best solution, best possible -46.329928 (67.21 seconds)
Cbc0010I After 64000 nodes, 11005 on tree, -45.496944 best solution, best possible -46.329928 (67.86 seconds)
Cbc0010I After 65000 nodes, 10694 on tree, -45.496944 best solution, best possible -46.329928 (68.21 seconds)
Cbc0010I After 66000 nodes, 10534 on tree, -45.496944 best solution, best possible -46.329928 (68.77 seconds)
Cbc0010I After 67000 nodes, 10731 on tree, -45.496944 best solution, best possible -46.329928 (69.47 seconds)
Cbc0010I After 68000 nodes, 10884 on tree, -45.496944 best solution, best possible -46.329928 (70.17 seconds)
Cbc0010I After 69000 nodes, 10550 on tree, -45.496944 best solution, best possible -46.329928 (70.51 seconds)
Cbc0010I After 70000 nodes, 10366 on tree, -45.496944 best solution, best possible -46.329897 (71.01 seconds)
Cbc0010I After 71000 nodes, 10554 on tree, -45.496944 best solution, best possible -46.329897 (71.75 seconds)
Cbc0010I After 72000 nodes, 10750 on tree, -45.496944 best solution, best possible -46.329897 (72.51 seconds)
Cbc0010I After 73000 nodes, 10454 on tree, -45.496944 best solution, best possible -46.329897 (72.88 seconds)
Cbc0010I After 74000 nodes, 10244 on tree, -45.496944 best solution, best possible -46.329897 (73.37 seconds)
Cbc0010I After 75000 nodes, 10425 on tree, -45.496944 best solution, best possible -46.329897 (74.11 seconds)
Cbc0010I After 76000 nodes, 10590 on tree, -45.496944 best solution, best possible -46.329897 (74.83 seconds)
Cbc0010I After 77000 nodes, 10299 on tree, -45.496944 best solution, best possible -46.329897 (75.22 seconds)
Cbc0010I After 78000 nodes, 10080 on tree, -45.496944 best solution, best possible -46.329833 (75.72 seconds)
Cbc0010I After 79000 nodes, 10247 on tree, -45.496944 best solution, best possible -46.329833 (76.44 seconds)
Cbc0010I After 80000 nodes, 10390 on tree, -45.496944 best solution, best possible -46.329833 (77.14 seconds)
Cbc0010I After 81000 nodes, 10085 on tree, -45.496944 best solution, best possible -46.329833 (77.53 seconds)
Cbc0010I After 82000 nodes, 9792 on tree, -45.496944 best solution, best possible -46.329833 (77.95 seconds)
Cbc0010I After 83000 nodes, 9731 on tree, -45.496944 best solution, best possible -46.329833 (78.77 seconds)
Cbc0010I After 84000 nodes, 9642 on tree, -45.496944 best solution, best possible -46.329833 (79.47 seconds)
Cbc0010I After 85000 nodes, 9517 on tree, -45.496944 best solution, best possible -46.329833 (80.08 seconds)
Cbc0010I After 86000 nodes, 9345 on tree, -45.496944 best solution, best possible -46.329833 (80.61 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0010I After 87000 nodes, 9813 on tree, -45.496944 best solution, best possible -46.303779 (81.65 seconds)
Cbc0010I After 88000 nodes, 10271 on tree, -45.496944 best solution, best possible -46.279312 (82.61 seconds)
Cbc0010I After 89000 nodes, 10104 on tree, -45.496944 best solution, best possible -46.279312 (83.06 seconds)
Cbc0010I After 90000 nodes, 9989 on tree, -45.496944 best solution, best possible -46.279309 (83.81 seconds)
Cbc0010I After 91000 nodes, 9851 on tree, -45.496944 best solution, best possible -46.279309 (84.43 seconds)
Cbc0010I After 92000 nodes, 9545 on tree, -45.496944 best solution, best possible -46.279309 (84.88 seconds)
Cbc0010I After 93000 nodes, 9485 on tree, -45.496944 best solution, best possible -46.279309 (85.62 seconds)
Cbc0010I After 94000 nodes, 9387 on tree, -45.496944 best solution, best possible -46.279309 (86.20 seconds)
Cbc0010I After 95000 nodes, 9848 on tree, -45.496944 best solution, best possible -46.254133 (87.20 seconds)
Cbc0010I After 96000 nodes, 10300 on tree, -45.496944 best solution, best possible -46.234665 (88.12 seconds)
Cbc0010I After 97000 nodes, 10161 on tree, -45.496944 best solution, best possible -46.234665 (88.58 seconds)
Cbc0010I After 98000 nodes, 10026 on tree, -45.496944 best solution, best possible -46.234639 (89.27 seconds)
Cbc0010I After 99000 nodes, 10236 on tree, -45.496944 best solution, best possible -46.234639 (89.96 seconds)
Cbc0010I After 100000 nodes, 10345 on tree, -45.496944 best solution, best possible -46.234639 (90.54 seconds)
Cbc0010I After 101000 nodes, 10048 on tree, -45.496944 best solution, best possible -46.234639 (90.92 seconds)
Cbc0010I After 102000 nodes, 10485 on tree, -45.496944 best solution, best possible -46.21447 (91.87 seconds)
Cbc0010I After 103000 nodes, 10585 on tree, -45.496944 best solution, best possible -46.21447 (92.46 seconds)
Cbc0010I After 104000 nodes, 10698 on tree, -45.496944 best solution, best possible -46.21447 (93.06 seconds)
Cbc0010I After 105000 nodes, 10423 on tree, -45.496944 best solution, best possible -46.21447 (93.45 seconds)
Cbc0010I After 106000 nodes, 10840 on tree, -45.496944 best solution, best possible -46.194421 (94.41 seconds)
Cbc0010I After 107000 nodes, 10899 on tree, -45.496944 best solution, best possible -46.194421 (95.01 seconds)
Cbc0010I After 108000 nodes, 10985 on tree, -45.496944 best solution, best possible -46.194421 (95.63 seconds)
Cbc0010I After 109000 nodes, 10658 on tree, -45.496944 best solution, best possible -46.194421 (96.01 seconds)
Cbc0010I After 110000 nodes, 11062 on tree, -45.496944 best solution, best possible -46.176062 (96.95 seconds)
Cbc0010I After 111000 nodes, 11133 on tree, -45.496944 best solution, best possible -46.176062 (97.50 seconds)
Cbc0010I After 112000 nodes, 11215 on tree, -45.496944 best solution, best possible -46.176062 (98.10 seconds)
Cbc0010I After 113000 nodes, 10892 on tree, -45.496944 best solution, best possible -46.176062 (98.49 seconds)
Cbc0010I After 114000 nodes, 11282 on tree, -45.496944 best solution, best possible -46.156698 (99.46 seconds)
Cbc0010I After 115000 nodes, 11329 on tree, -45.496944 best solution, best possible -46.156698 (100.04 seconds)
Cbc0010I After 116000 nodes, 11410 on tree, -45.496944 best solution, best possible -46.156698 (100.64 seconds)
Cbc0010I After 117000 nodes, 11147 on tree, -45.496944 best solution, best possible -46.156698 (101.04 seconds)
Cbc0010I After 118000 nodes, 11534 on tree, -45.496944 best solution, best possible -46.139577 (101.96 seconds)
Cbc0010I After 119000 nodes, 11585 on tree, -45.496944 best solution, best possible -46.139577 (102.53 seconds)
Cbc0010I After 120000 nodes, 11634 on tree, -45.496944 best solution, best possible -46.139541 (103.12 seconds)
Cbc0010I After 121000 nodes, 11337 on tree, -45.496944 best solution, best possible -46.139541 (103.49 seconds)
Cbc0010I After 122000 nodes, 11710 on tree, -45.496944 best solution, best possible -46.123417 (104.43 seconds)
Cbc0010I After 123000 nodes, 11710 on tree, -45.496944 best solution, best possible -46.123417 (105.02 seconds)
Cbc0010I After 124000 nodes, 11736 on tree, -45.496944 best solution, best possible -46.123417 (105.69 seconds)
Cbc0010I After 125000 nodes, 11447 on tree, -45.496944 best solution, best possible -46.123417 (106.08 seconds)
Cbc0010I After 126000 nodes, 11798 on tree, -45.496944 best solution, best possible -46.108318 (106.99 seconds)
Cbc0010I After 127000 nodes, 11801 on tree, -45.496944 best solution, best possible -46.108318 (107.57 seconds)
Cbc0010I After 128000 nodes, 11799 on tree, -45.496944 best solution, best possible -46.108318 (108.20 seconds)
Cbc0010I After 129000 nodes, 11476 on tree, -45.496944 best solution, best possible -46.108318 (108.56 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 26 columns
Cbc0010I After 130000 nodes, 11819 on tree, -45.496944 best solution, best possible -46.092555 (109.48 seconds)
Cbc0010I After 131000 nodes, 11799 on tree, -45.496944 best solution, best possible -46.092555 (110.05 seconds)
Cbc0010I After 132000 nodes, 11797 on tree, -45.496944 best solution, best possible -46.092555 (110.66 seconds)
Cbc0010I After 133000 nodes, 11500 on tree, -45.496944 best solution, best possible -46.092555 (111.02 seconds)
Cbc0010I After 134000 nodes, 11840 on tree, -45.496944 best solution, best possible -46.076678 (111.95 seconds)
Cbc0010I After 135000 nodes, 11789 on tree, -45.496944 best solution, best possible -46.076678 (112.51 seconds)
Cbc0010I After 136000 nodes, 11773 on tree, -45.496944 best solution, best possible -46.076678 (113.13 seconds)
Cbc0010I After 137000 nodes, 11436 on tree, -45.496944 best solution, best possible -46.076678 (113.49 seconds)
Cbc0010I After 138000 nodes, 11744 on tree, -45.496944 best solution, best possible -46.059047 (114.42 seconds)
Cbc0010I After 139000 nodes, 11688 on tree, -45.496944 best solution, best possible -46.059047 (114.99 seconds)
Cbc0010I After 140000 nodes, 11671 on tree, -45.496944 best solution, best possible -46.059047 (115.62 seconds)
Cbc0010I After 141000 nodes, 11318 on tree, -45.496944 best solution, best possible -46.059047 (115.97 seconds)
Cbc0010I After 142000 nodes, 11584 on tree, -45.496944 best solution, best possible -46.041884 (116.91 seconds)
Cbc0010I After 143000 nodes, 11512 on tree, -45.496944 best solution, best possible -46.041884 (117.50 seconds)
Cbc0010I After 144000 nodes, 11479 on tree, -45.496944 best solution, best possible -46.041884 (118.10 seconds)
Cbc0010I After 145000 nodes, 11147 on tree, -45.496944 best solution, best possible -46.041884 (118.47 seconds)
Cbc0010I After 146000 nodes, 11411 on tree, -45.496944 best solution, best possible -46.025507 (119.37 seconds)
Cbc0010I After 147000 nodes, 11326 on tree, -45.496944 best solution, best possible -46.025507 (119.95 seconds)
Cbc0010I After 148000 nodes, 11260 on tree, -45.496944 best solution, best possible -46.025507 (120.54 seconds)
Cbc0010I After 149000 nodes, 10946 on tree, -45.496944 best solution, best possible -46.025507 (120.91 seconds)
Cbc0010I After 150000 nodes, 11182 on tree, -45.496944 best solution, best possible -46.007957 (121.83 seconds)
Cbc0010I After 151000 nodes, 11082 on tree, -45.496944 best solution, best possible -46.007957 (122.40 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 15 rows 19 columns
Cbc0010I After 152000 nodes, 11035 on tree, -45.496944 best solution, best possible -46.007957 (122.99 seconds)
Cbc0010I After 153000 nodes, 10701 on tree, -45.496944 best solution, best possible -46.007957 (123.35 seconds)
Cbc0010I After 154000 nodes, 10923 on tree, -45.496944 best solution, best possible -45.990546 (124.24 seconds)
Cbc0010I After 155000 nodes, 10803 on tree, -45.496944 best solution, best possible -45.990546 (124.76 seconds)
Cbc0010I After 156000 nodes, 10713 on tree, -45.496944 best solution, best possible -45.990546 (125.34 seconds)
Cbc0010I After 157000 nodes, 10371 on tree, -45.496944 best solution, best possible -45.990546 (125.69 seconds)
Cbc0010I After 158000 nodes, 10541 on tree, -45.496944 best solution, best possible -45.971591 (126.58 seconds)
Cbc0010I After 159000 nodes, 10412 on tree, -45.496944 best solution, best possible -45.971591 (127.16 seconds)
Cbc0010I After 160000 nodes, 10340 on tree, -45.496944 best solution, best possible -45.971591 (127.75 seconds)
Cbc0010I After 161000 nodes, 10029 on tree, -45.496944 best solution, best possible -45.971591 (128.12 seconds)
Cbc0010I After 162000 nodes, 10142 on tree, -45.496944 best solution, best possible -45.952866 (128.98 seconds)
Cbc0010I After 163000 nodes, 9995 on tree, -45.496944 best solution, best possible -45.952866 (129.59 seconds)
Cbc0010I After 164000 nodes, 10095 on tree, -45.496944 best solution, best possible -45.93431 (130.41 seconds)
Cbc0010I After 165000 nodes, 9798 on tree, -45.496944 best solution, best possible -45.93431 (130.80 seconds)
Cbc0010I After 166000 nodes, 9655 on tree, -45.496944 best solution, best possible -45.93431 (131.40 seconds)
Cbc0010I After 167000 nodes, 9761 on tree, -45.496944 best solution, best possible -45.915458 (132.24 seconds)
Cbc0010I After 168000 nodes, 9796 on tree, -45.496944 best solution, best possible -45.896922 (133.02 seconds)
Cbc0010I After 169000 nodes, 9792 on tree, -45.496944 best solution, best possible -45.881691 (133.77 seconds)
Cbc0010I After 170000 nodes, 9564 on tree, -45.496944 best solution, best possible -45.881691 (134.27 seconds)
Cbc0010I After 171000 nodes, 9575 on tree, -45.496944 best solution, best possible -45.865697 (135.03 seconds)
Cbc0010I After 172000 nodes, 9579 on tree, -45.496944 best solution, best possible -45.850657 (135.76 seconds)
Cbc0010I After 173000 nodes, 9551 on tree, -45.496944 best solution, best possible -45.836222 (136.49 seconds)
Cbc0010I After 174000 nodes, 9294 on tree, -45.496944 best solution, best possible -45.836222 (136.96 seconds)
Cbc0010I After 175000 nodes, 9250 on tree, -45.496944 best solution, best possible -45.821377 (137.71 seconds)
Cbc0010I After 176000 nodes, 9174 on tree, -45.496944 best solution, best possible -45.808587 (138.40 seconds)
Cbc0010I After 177000 nodes, 9073 on tree, -45.496944 best solution, best possible -45.795435 (139.07 seconds)
Cbc0010I After 178000 nodes, 8767 on tree, -45.496944 best solution, best possible -45.795435 (139.51 seconds)
Cbc0010I After 179000 nodes, 8630 on tree, -45.496944 best solution, best possible -45.781802 (140.17 seconds)
Cbc0010I After 180000 nodes, 8466 on tree, -45.496944 best solution, best possible -45.769113 (140.79 seconds)
Cbc0010I After 181000 nodes, 8327 on tree, -45.496944 best solution, best possible -45.757557 (141.43 seconds)
Cbc0010I After 182000 nodes, 8019 on tree, -45.496944 best solution, best possible -45.757529 (141.85 seconds)
Cbc0010I After 183000 nodes, 7835 on tree, -45.496944 best solution, best possible -45.744659 (142.44 seconds)
Cbc0010I After 184000 nodes, 7664 on tree, -45.496944 best solution, best possible -45.730904 (143.06 seconds)
Cbc0010I After 185000 nodes, 7447 on tree, -45.496944 best solution, best possible -45.720222 (143.65 seconds)
Cbc0010I After 186000 nodes, 7127 on tree, -45.496944 best solution, best possible -45.720222 (144.03 seconds)
Cbc0010I After 187000 nodes, 6931 on tree, -45.496944 best solution, best possible -45.707898 (144.61 seconds)
Cbc0010I After 188000 nodes, 6716 on tree, -45.496944 best solution, best possible -45.695774 (145.20 seconds)
Cbc0010I After 189000 nodes, 6485 on tree, -45.496944 best solution, best possible -45.684416 (145.77 seconds)
Cbc0010I After 190000 nodes, 6134 on tree, -45.496944 best solution, best possible -45.684416 (146.10 seconds)
Cbc0010I After 191000 nodes, 5866 on tree, -45.496944 best solution, best possible -45.671231 (146.63 seconds)
Cbc0010I After 192000 nodes, 5600 on tree, -45.496944 best solution, best possible -45.659073 (147.15 seconds)
Cbc0010I After 193000 nodes, 5318 on tree, -45.496944 best solution, best possible -45.647426 (147.65 seconds)
Cbc0010I After 194000 nodes, 4967 on tree, -45.496944 best solution, best possible -45.647426 (147.98 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0010I After 195000 nodes, 4661 on tree, -45.496944 best solution, best possible -45.634794 (148.48 seconds)
Cbc0010I After 196000 nodes, 4349 on tree, -45.496944 best solution, best possible -45.622055 (148.95 seconds)
Cbc0010I After 197000 nodes, 4024 on tree, -45.496944 best solution, best possible -45.609792 (149.40 seconds)
Cbc0010I After 198000 nodes, 3639 on tree, -45.496944 best solution, best possible -45.609792 (149.68 seconds)
Cbc0010I After 199000 nodes, 3302 on tree, -45.496944 best solution, best possible -45.596037 (150.09 seconds)
Cbc0010I After 200000 nodes, 2961 on tree, -45.496944 best solution, best possible -45.583991 (150.50 seconds)
Cbc0010I After 201000 nodes, 2620 on tree, -45.496944 best solution, best possible -45.570682 (150.88 seconds)
Cbc0010I After 202000 nodes, 2199 on tree, -45.496944 best solution, best possible -45.570682 (151.12 seconds)
Cbc0010I After 203000 nodes, 1810 on tree, -45.496944 best solution, best possible -45.55468 (151.48 seconds)
Cbc0010I After 204000 nodes, 1399 on tree, -45.496944 best solution, best possible -45.540618 (151.78 seconds)
Cbc0010I After 205000 nodes, 961 on tree, -45.496944 best solution, best possible -45.52626 (152.05 seconds)
Cbc0010I After 206000 nodes, 501 on tree, -45.496944 best solution, best possible -45.526233 (152.23 seconds)
Cbc0010I After 207000 nodes, 46 on tree, -45.496944 best solution, best possible -45.499665 (152.45 seconds)
Cbc0001I Search completed - best objective -45.49694428965457, took 6887377 iterations and 1033161 nodes (152.46 seconds)
Cbc0032I Strong branching done 890746 times (6410455 iterations), fathomed 47535 nodes and fixed 147053 variables
Cbc0041I Maximum depth 32, 529315 variables fixed on reduced cost (complete fathoming 14636 times, 826067 nodes taking 4516292 iterations)
Cuts at root node changed objective from -49.7165 to -48.0568
Probing was tried 100 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Gomory was tried 68583 times and created 104526 cuts of which 0 were active after adding rounds of cuts (4.208 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
TwoMirCuts was tried 100 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
ZeroHalf was tried 100 times and created 78 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)

Result - Optimal solution found

Objective value:                45.49694429
Enumerated nodes:               1033161
Total iterations:               6887377
Time (CPU seconds):             152.24
Time (Wallclock seconds):       152.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       152.24   (Wallclock seconds):       152.47

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/176606d2e5db48e386bcc912a79bf1b1-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/176606d2e5db48e386bcc912a79bf1b1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.892 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -25.8423 iterations 16
Cbc0038I Solution found of -22.5157
Cbc0038I Cleaned solution of -22.5157
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -22.5157 to -22.8135 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.1214
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -25.8423 iterations 0
Cbc0038I Pass   3: suminf.    0.36551 (1) obj. -23.1214 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.308 iterations 7
Cbc0038I Pass   5: suminf.    0.35829 (1) obj. -23.1214 iterations 2
Cbc0038I Pass   6: suminf.    0.48399 (2) obj. -23.1214 iterations 12
Cbc0038I Pass   7: suminf.    0.33333 (2) obj. -23.2493 iterations 9
Cbc0038I Pass   8: suminf.    0.48404 (2) obj. -23.1214 iterations 4
Cbc0038I Pass   9: suminf.    1.26261 (6) obj. -23.1214 iterations 5
Cbc0038I Pass  10: suminf.    1.26052 (6) obj. -23.1214 iterations 4
Cbc0038I Pass  11: suminf.    0.36672 (1) obj. -23.1214 iterations 6
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -23.4139 iterations 7
Cbc0038I Solution found of -23.4139
Cbc0038I Cleaned solution of -23.4139
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -23.9095
Cbc0038I Pass  13: suminf.    0.83333 (5) obj. -25.8423 iterations 0
Cbc0038I Pass  14: suminf.    0.46209 (2) obj. -23.9095 iterations 9
Cbc0038I Pass  15: suminf.    0.33333 (2) obj. -24.0156 iterations 11
Cbc0038I Pass  16: suminf.    0.45831 (2) obj. -23.9095 iterations 4
Cbc0038I Pass  17: suminf.    0.63664 (2) obj. -23.9095 iterations 6
Cbc0038I Pass  18: suminf.    0.50000 (2) obj. -23.9758 iterations 17
Cbc0038I Pass  19: suminf.    0.57803 (2) obj. -23.9095 iterations 7
Cbc0038I Pass  20: suminf.    0.68604 (3) obj. -23.9095 iterations 10
Cbc0038I Pass  21: suminf.    0.61652 (3) obj. -23.9095 iterations 19
Cbc0038I Pass  22: suminf.    0.53785 (3) obj. -23.9095 iterations 3
Cbc0038I Pass  23: suminf.    0.27164 (1) obj. -23.9095 iterations 4
Cbc0038I Pass  24: suminf.    0.16667 (1) obj. -23.9553 iterations 4
Cbc0038I Pass  25: suminf.    0.21375 (1) obj. -23.9095 iterations 2
Cbc0038I Pass  26: suminf.    0.27164 (1) obj. -23.9095 iterations 3
Cbc0038I Pass  27: suminf.    0.40946 (2) obj. -23.9095 iterations 18
Cbc0038I Pass  28: suminf.    0.33179 (2) obj. -23.9095 iterations 4
Cbc0038I Pass  29: suminf.    0.16667 (1) obj. -23.9843 iterations 10
Cbc0038I Pass  30: suminf.    0.24349 (1) obj. -23.9095 iterations 3
Cbc0038I Pass  31: suminf.    0.16700 (2) obj. -23.9095 iterations 12
Cbc0038I Pass  32: suminf.    1.28468 (6) obj. -23.9095 iterations 10
Cbc0038I Pass  33: suminf.    0.29727 (1) obj. -23.9095 iterations 5
Cbc0038I Pass  34: suminf.    0.30943 (1) obj. -23.9095 iterations 4
Cbc0038I Pass  35: suminf.    0.42473 (2) obj. -23.9095 iterations 13
Cbc0038I Pass  36: suminf.    0.33179 (2) obj. -23.9095 iterations 2
Cbc0038I Pass  37: suminf.    0.16667 (1) obj. -23.9843 iterations 8
Cbc0038I Pass  38: suminf.    0.24349 (1) obj. -23.9095 iterations 3
Cbc0038I Pass  39: suminf.    0.18204 (2) obj. -23.9095 iterations 7
Cbc0038I Pass  40: suminf.    1.28468 (6) obj. -23.9095 iterations 4
Cbc0038I Pass  41: suminf.    0.29727 (1) obj. -23.9095 iterations 5
Cbc0038I Pass  42: suminf.    0.61594 (3) obj. -23.9095 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.4139 - took 0.02 seconds
Cbc0012I Integer solution of -23.413864 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 13 added rows had average density of 46.076923
Cbc0013I At root node, 13 cuts changed objective from -25.891957 to -24.712017 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 63 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1004 row cuts average 58.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 12 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 138 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.413864 best solution, best possible -24.712017 (0.17 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 9 rows 11 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 13 columns
Cbc0016I Integer solution of -23.431462 found by strong branching after 6411 iterations and 226 nodes (0.41 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 16 columns
Cbc0001I Search completed - best objective -23.43146215379231, took 13108 iterations and 698 nodes (0.70 seconds)
Cbc0032I Strong branching done 5326 times (28740 iterations), fathomed 152 nodes and fixed 312 variables
Cbc0041I Maximum depth 18, 1279 variables fixed on reduced cost (complete fathoming 12 times, 74 nodes taking 341 iterations)
Cuts at root node changed objective from -25.892 to -24.712
Probing was tried 533 times and created 539 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Gomory was tried 486 times and created 2050 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 486 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 486 times and created 457 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)

Result - Optimal solution found

Objective value:                23.43146215
Enumerated nodes:               698
Total iterations:               13108
Time (CPU seconds):             0.67
Time (Wallclock seconds):       0.71

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.71

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1a134364fd7b4690815461e6f4a34856-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1a134364fd7b4690815461e6f4a34856-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.84074 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -8.84074 iterations 0
Cbc0038I Solution found of -7.56931
Cbc0038I Cleaned solution of -7.56931
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -7.69646
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -8.84074 iterations 0
Cbc0038I Pass   3: suminf.    0.21289 (1) obj. -7.69646 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.04494 iterations 2
Cbc0038I Pass   5: suminf.    0.02935 (1) obj. -7.69646 iterations 2
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. -7.81114 iterations 2
Cbc0038I Pass   7: suminf.    0.36582 (1) obj. -7.69646 iterations 1
Cbc0038I Pass   8: suminf.    0.20778 (1) obj. -7.69646 iterations 4
Cbc0038I Pass   9: suminf.    0.20778 (1) obj. -7.69646 iterations 0
Cbc0038I Pass  10: suminf.    0.18321 (1) obj. -7.69646 iterations 3
Cbc0038I Solution found of -7.82181
Cbc0038I Cleaned solution of -7.82181
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8.0256
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  11: suminf.    0.75000 (3) obj. -8.84074 iterations 0
Cbc0038I Pass  12: suminf.    0.26497 (2) obj. -8.0256 iterations 4
Cbc0038I Pass  13: suminf.    0.25000 (1) obj. -8.04494 iterations 3
Cbc0038I Pass  14: suminf.    0.62293 (2) obj. -8.0256 iterations 3
Cbc0038I Pass  15: suminf.    1.01291 (6) obj. -8.0256 iterations 2
Cbc0038I Pass  16: suminf.    0.39163 (2) obj. -8.0256 iterations 3
Cbc0038I Pass  17: suminf.    0.39163 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  18: suminf.    0.75000 (2) obj. -8.43849 iterations 2
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -8.1687 iterations 1
Cbc0038I Pass  20: suminf.    0.49375 (1) obj. -8.0256 iterations 1
Cbc0038I Pass  21: suminf.    0.42069 (2) obj. -8.0256 iterations 5
Cbc0038I Pass  22: suminf.    0.42069 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  23: suminf.    0.42069 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  24: suminf.    0.42069 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  25: suminf.    0.25000 (1) obj. -8.08474 iterations 6
Cbc0038I Pass  26: suminf.    0.62293 (2) obj. -8.0256 iterations 5
Cbc0038I Pass  27: suminf.    1.01291 (6) obj. -8.0256 iterations 2
Cbc0038I Pass  28: suminf.    0.39163 (2) obj. -8.0256 iterations 3
Cbc0038I Pass  29: suminf.    0.39163 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  30: suminf.    0.75000 (2) obj. -8.43849 iterations 2
Cbc0038I Pass  31: suminf.    0.25000 (1) obj. -8.1687 iterations 1
Cbc0038I Pass  32: suminf.    0.49375 (1) obj. -8.0256 iterations 1
Cbc0038I Pass  33: suminf.    0.39163 (2) obj. -8.0256 iterations 3
Cbc0038I Pass  34: suminf.    0.39163 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  35: suminf.    0.39163 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  36: suminf.    0.48056 (2) obj. -8.0256 iterations 2
Cbc0038I Pass  37: suminf.    0.48056 (2) obj. -8.0256 iterations 1
Cbc0038I Pass  38: suminf.    0.48056 (2) obj. -8.0256 iterations 1
Cbc0038I Pass  39: suminf.    0.48056 (2) obj. -8.0256 iterations 0
Cbc0038I Pass  40: suminf.    0.48056 (2) obj. -8.0256 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7.82181 - took 0.00 seconds
Cbc0012I Integer solution of -7.8218114 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 6 rows 7 columns
Cbc0031I 6 added rows had average density of 14.666667
Cbc0013I At root node, 6 cuts changed objective from -8.840739 to -7.917143 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 2.6 elements, 2 column cuts (2 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 479 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 16 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 45 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 37 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.8218114 best solution, best possible -7.917143 (0.05 seconds)
Cbc0001I Search completed - best objective -7.821811430156229, took 1123 iterations and 4 nodes (0.05 seconds)
Cbc0032I Strong branching done 34 times (87 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 5 variables fixed on reduced cost
Cuts at root node changed objective from -8.84074 to -7.91714
Probing was tried 108 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 105 times and created 485 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 105 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 105 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                7.82181143
Enumerated nodes:               4
Total iterations:               1123
Time (CPU seconds):             0.05
Time (Wallclock seconds):       0.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1d89efbc11a04435a262a14ed754a925-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1d89efbc11a04435a262a14ed754a925-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.768 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.6729 iterations 14
Cbc0038I Solution found of -13.9064
Cbc0038I Cleaned solution of -13.9064
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -13.9064 to -14.3821 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.6207
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.6729 iterations 0
Cbc0038I Pass   3: suminf.    0.27151 (1) obj. -14.6207 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.8317 iterations 6
Cbc0038I Pass   5: suminf.    0.01088 (1) obj. -14.6207 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -15.3137 iterations 6
Cbc0038I Pass   7: suminf.    0.10089 (1) obj. -14.6207 iterations 3
Cbc0038I Pass   8: suminf.    0.01088 (1) obj. -14.6207 iterations 3
Cbc0038I Pass   9: suminf.    0.38368 (1) obj. -14.6207 iterations 4
Cbc0038I Solution found of -14.997
Cbc0038I Cleaned solution of -14.997
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 7 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -15.3512
Cbc0038I Pass  10: suminf.    0.80000 (4) obj. -16.6729 iterations 0
Cbc0038I Pass  11: suminf.    0.46707 (2) obj. -15.3512 iterations 9
Cbc0038I Pass  12: suminf.    0.40000 (2) obj. -15.5345 iterations 4
Cbc0038I Pass  13: suminf.    0.24361 (2) obj. -15.3512 iterations 6
Cbc0038I Pass  14: suminf.    0.20000 (2) obj. -15.3512 iterations 3
Cbc0038I Pass  15: suminf.    0.41389 (2) obj. -15.3512 iterations 6
Cbc0038I Pass  16: suminf.    0.41389 (2) obj. -15.3512 iterations 0
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. -15.9139 iterations 8
Cbc0038I Pass  18: suminf.    0.20000 (1) obj. -15.5146 iterations 4
Cbc0038I Pass  19: suminf.    0.36486 (1) obj. -15.3512 iterations 3
Cbc0038I Pass  20: suminf.    1.18619 (6) obj. -15.3512 iterations 10
Cbc0038I Pass  21: suminf.    0.61904 (3) obj. -15.3512 iterations 3
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. -15.4654 iterations 6
Cbc0038I Solution found of -15.4654
Cbc0038I Cleaned solution of -15.4654
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.8562
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  23: suminf.    0.80000 (4) obj. -16.6729 iterations 0
Cbc0038I Pass  24: suminf.    0.88344 (3) obj. -15.8562 iterations 9
Cbc0038I Pass  25: suminf.    0.60000 (3) obj. -16.1002 iterations 4
Cbc0038I Pass  26: suminf.    1.04121 (3) obj. -15.8562 iterations 8
Cbc0038I Pass  27: suminf.    1.08552 (6) obj. -15.8562 iterations 11
Cbc0038I Pass  28: suminf.    0.79785 (2) obj. -15.8562 iterations 10
Cbc0038I Pass  29: suminf.    0.32227 (2) obj. -15.8562 iterations 8
Cbc0038I Pass  30: suminf.    2.87127 (7) obj. -15.8562 iterations 8
Cbc0038I Pass  31: suminf.    0.71299 (3) obj. -15.8562 iterations 1
Cbc0038I Pass  32: suminf.    0.80000 (3) obj. -16.4208 iterations 12
Cbc0038I Pass  33: suminf.    0.61133 (3) obj. -15.8562 iterations 8
Cbc0038I Pass  34: suminf.    0.87791 (6) obj. -15.8562 iterations 2
Cbc0038I Pass  35: suminf.    0.32140 (2) obj. -15.8562 iterations 3
Cbc0038I Pass  36: suminf.    0.21353 (2) obj. -15.8562 iterations 2
Cbc0038I Pass  37: suminf.    2.87127 (7) obj. -15.8562 iterations 8
Cbc0038I Pass  38: suminf.    0.71299 (3) obj. -15.8562 iterations 1
Cbc0038I Pass  39: suminf.    0.80000 (3) obj. -16.4208 iterations 14
Cbc0038I Pass  40: suminf.    0.61133 (3) obj. -15.8562 iterations 8
Cbc0038I Pass  41: suminf.    0.87791 (6) obj. -15.8562 iterations 2
Cbc0038I Pass  42: suminf.    0.32140 (2) obj. -15.8562 iterations 3
Cbc0038I Pass  43: suminf.    0.21353 (2) obj. -15.8562 iterations 2
Cbc0038I Pass  44: suminf.    2.87127 (7) obj. -15.8562 iterations 8
Cbc0038I Pass  45: suminf.    0.71299 (3) obj. -15.8562 iterations 1
Cbc0038I Pass  46: suminf.    0.80000 (3) obj. -16.4208 iterations 14
Cbc0038I Pass  47: suminf.    0.61133 (3) obj. -15.8562 iterations 8
Cbc0038I Pass  48: suminf.    0.87791 (6) obj. -15.8562 iterations 2
Cbc0038I Pass  49: suminf.    0.32140 (2) obj. -15.8562 iterations 3
Cbc0038I Pass  50: suminf.    0.21353 (2) obj. -15.8562 iterations 2
Cbc0038I Pass  51: suminf.    2.87127 (7) obj. -15.8562 iterations 8
Cbc0038I Pass  52: suminf.    0.71299 (3) obj. -15.8562 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.4654 - took 0.01 seconds
Cbc0012I Integer solution of -15.465446 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 8 rows 10 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 11
Cbc0013I At root node, 4 cuts changed objective from -16.768002 to -15.478632 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 3.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 35 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15.46544646844291, took 71 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Cuts at root node changed objective from -16.768 to -15.4786
Probing was tried 11 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 10 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 10 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.46544647
Enumerated nodes:               0
Total iterations:               71
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/75482fcdf0e34e4cb4feca07060e2675-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/75482fcdf0e34e4cb4feca07060e2675-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.6307 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.5423 iterations 13
Cbc0038I Solution found of -21.0461
Cbc0038I Cleaned solution of -21.0461
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -21.0461 to -21.5768 (0.00 seconds)
Cbc0038I Round again with cutoff of -21.8822
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.5423 iterations 0
Cbc0038I Pass   3: suminf.    0.18296 (2) obj. -21.8822 iterations 10
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -21.9549 iterations 4
Cbc0038I Pass   5: suminf.    0.34400 (1) obj. -21.8822 iterations 3
Cbc0038I Pass   6: suminf.    0.16667 (1) obj. -22.3625 iterations 5
Cbc0038I Pass   7: suminf.    0.09927 (1) obj. -21.8822 iterations 4
Cbc0038I Pass   8: suminf.    0.33333 (1) obj. -22.3718 iterations 9
Cbc0038I Pass   9: suminf.    0.10834 (1) obj. -21.8822 iterations 4
Cbc0038I Pass  10: suminf.    0.18328 (1) obj. -21.8822 iterations 5
Cbc0038I Pass  11: suminf.    0.18328 (1) obj. -21.8822 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -22.5073 iterations 9
Cbc0038I Solution found of -22.5073
Cbc0038I Cleaned solution of -22.5073
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -22.5073 to -22.5302 (0.01 seconds)
Cbc0038I Round again with cutoff of -22.9503
Cbc0038I Pass  13: suminf.    0.83333 (5) obj. -24.5423 iterations 0
Cbc0038I Pass  14: suminf.    0.71212 (3) obj. -22.9503 iterations 10
Cbc0038I Pass  15: suminf.    0.52653 (3) obj. -22.9503 iterations 6
Cbc0038I Pass  16: suminf.    0.62497 (2) obj. -22.9503 iterations 7
Cbc0038I Pass  17: suminf.    0.16667 (1) obj. -23.0391 iterations 12
Cbc0038I Pass  18: suminf.    0.26793 (1) obj. -22.9503 iterations 4
Cbc0038I Pass  19: suminf.    0.53228 (2) obj. -22.9503 iterations 21
Cbc0038I Pass  20: suminf.    0.42528 (2) obj. -22.9503 iterations 4
Cbc0038I Pass  21: suminf.    0.60474 (2) obj. -22.9503 iterations 12
Cbc0038I Pass  22: suminf.    0.60474 (2) obj. -22.9503 iterations 0
Cbc0038I Pass  23: suminf.    0.50000 (2) obj. -23.2815 iterations 8
Cbc0038I Pass  24: suminf.    0.16667 (1) obj. -23.0391 iterations 2
Cbc0038I Pass  25: suminf.    0.26793 (1) obj. -22.9503 iterations 4
Cbc0038I Pass  26: suminf.    0.36094 (2) obj. -22.9503 iterations 4
Cbc0038I Pass  27: suminf.    0.28207 (2) obj. -22.9503 iterations 4
Cbc0038I Pass  28: suminf.    0.56155 (3) obj. -22.9503 iterations 24
Cbc0038I Pass  29: suminf.    2.09016 (7) obj. -22.9503 iterations 12
Cbc0038I Pass  30: suminf.    0.49249 (2) obj. -22.9503 iterations 5
Cbc0038I Pass  31: suminf.    1.61704 (6) obj. -22.9503 iterations 4
Cbc0038I Pass  32: suminf.    0.55326 (2) obj. -22.9503 iterations 3
Cbc0038I Pass  33: suminf.    0.52012 (6) obj. -22.9503 iterations 7
Cbc0038I Pass  34: suminf.    0.55326 (2) obj. -22.9503 iterations 3
Cbc0038I Pass  35: suminf.    0.59656 (2) obj. -22.9503 iterations 6
Cbc0038I Pass  36: suminf.    2.10520 (6) obj. -22.9503 iterations 8
Cbc0038I Pass  37: suminf.    0.17918 (1) obj. -22.9503 iterations 4
Cbc0038I Pass  38: suminf.    0.49841 (3) obj. -22.9503 iterations 20
Cbc0038I Pass  39: suminf.    0.33333 (2) obj. -23.1174 iterations 8
Cbc0038I Pass  40: suminf.    0.50346 (2) obj. -22.9503 iterations 7
Cbc0038I Pass  41: suminf.    0.46514 (2) obj. -22.9503 iterations 1
Cbc0038I Pass  42: suminf.    0.33996 (3) obj. -22.9503 iterations 6
Cbc0038I Rounding solution of -22.5827 is better than previous of -22.5302

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -23.4544
Cbc0038I Pass  42: suminf.    0.83333 (5) obj. -24.5423 iterations 0
Cbc0038I Pass  43: suminf.    0.64318 (4) obj. -23.4544 iterations 9
Cbc0038I Pass  44: suminf.    1.19515 (8) obj. -23.4544 iterations 8
Cbc0038I Pass  45: suminf.    0.44350 (3) obj. -23.4544 iterations 16
Cbc0038I Pass  46: suminf.    0.39171 (3) obj. -23.4544 iterations 4
Cbc0038I Pass  47: suminf.    1.43668 (8) obj. -23.4544 iterations 6
Cbc0038I Pass  48: suminf.    0.61969 (3) obj. -23.4544 iterations 4
Cbc0038I Pass  49: suminf.    0.77925 (3) obj. -23.4544 iterations 4
Cbc0038I Pass  50: suminf.    0.75355 (3) obj. -23.4544 iterations 1
Cbc0038I Pass  51: suminf.    0.74788 (3) obj. -23.4544 iterations 4
Cbc0038I Pass  52: suminf.    0.74788 (3) obj. -23.4544 iterations 0
Cbc0038I Pass  53: suminf.    0.73852 (3) obj. -23.4544 iterations 13
Cbc0038I Pass  54: suminf.    1.93243 (7) obj. -23.4544 iterations 2
Cbc0038I Pass  55: suminf.    0.91709 (3) obj. -23.4544 iterations 14
Cbc0038I Pass  56: suminf.    0.33333 (2) obj. -23.5449 iterations 12
Cbc0038I Pass  57: suminf.    0.46640 (2) obj. -23.4544 iterations 8
Cbc0038I Pass  58: suminf.    0.84103 (4) obj. -23.4544 iterations 6
Cbc0038I Pass  59: suminf.    0.77925 (3) obj. -23.4544 iterations 8
Cbc0038I Pass  60: suminf.    0.75355 (3) obj. -23.4544 iterations 2
Cbc0038I Pass  61: suminf.    0.74788 (3) obj. -23.4544 iterations 3
Cbc0038I Pass  62: suminf.    0.74788 (3) obj. -23.4544 iterations 0
Cbc0038I Pass  63: suminf.    0.73852 (3) obj. -23.4544 iterations 11
Cbc0038I Pass  64: suminf.    1.93243 (7) obj. -23.4544 iterations 2
Cbc0038I Pass  65: suminf.    0.91709 (3) obj. -23.4544 iterations 14
Cbc0038I Pass  66: suminf.    0.33333 (2) obj. -23.5449 iterations 12
Cbc0038I Pass  67: suminf.    0.46640 (2) obj. -23.4544 iterations 8
Cbc0038I Pass  68: suminf.    0.44918 (3) obj. -23.4544 iterations 4
Cbc0038I Pass  69: suminf.    0.84578 (4) obj. -23.4544 iterations 8
Cbc0038I Pass  70: suminf.    0.77852 (3) obj. -23.4544 iterations 10
Cbc0038I Pass  71: suminf.    0.77852 (3) obj. -23.4544 iterations 1
Cbc0038I Rounding solution of -22.5861 is better than previous of -22.5827

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 26 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.8073
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 5
Cbc0038I Pass  71: suminf.    0.83333 (5) obj. -24.5423 iterations 0
Cbc0038I Pass  72: suminf.    0.89571 (4) obj. -23.8073 iterations 7
Cbc0038I Pass  73: suminf.    0.66667 (4) obj. -24.0575 iterations 7
Cbc0038I Pass  74: suminf.    0.92633 (4) obj. -23.8073 iterations 11
Cbc0038I Pass  75: suminf.    0.70729 (5) obj. -23.8073 iterations 12
Cbc0038I Pass  76: suminf.    1.23401 (4) obj. -23.8073 iterations 9
Cbc0038I Pass  77: suminf.    1.61918 (8) obj. -23.8073 iterations 10
Cbc0038I Pass  78: suminf.    0.91233 (10) obj. -23.8073 iterations 16
Cbc0038I Pass  79: suminf.    1.05568 (9) obj. -23.8073 iterations 1
Cbc0038I Pass  80: suminf.    1.28600 (5) obj. -23.8073 iterations 11
Cbc0038I Pass  81: suminf.    1.58928 (10) obj. -23.8073 iterations 3
Cbc0038I Pass  82: suminf.    1.18907 (4) obj. -23.8073 iterations 12
Cbc0038I Pass  83: suminf.    1.59157 (9) obj. -23.8073 iterations 7
Cbc0038I Pass  84: suminf.    0.83333 (3) obj. -23.8617 iterations 12
Cbc0038I Pass  85: suminf.    0.75228 (3) obj. -23.8073 iterations 6
Cbc0038I Pass  86: suminf.    1.05568 (9) obj. -23.8073 iterations 3
Cbc0038I Pass  87: suminf.    1.28600 (5) obj. -23.8073 iterations 11
Cbc0038I Pass  88: suminf.    1.61918 (8) obj. -23.8073 iterations 2
Cbc0038I Pass  89: suminf.    0.91233 (10) obj. -23.8073 iterations 16
Cbc0038I Pass  90: suminf.    0.76000 (4) obj. -23.8073 iterations 4
Cbc0038I Pass  91: suminf.    2.11550 (7) obj. -23.8073 iterations 8
Cbc0038I Pass  92: suminf.    2.11550 (7) obj. -23.8073 iterations 1
Cbc0038I Pass  93: suminf.    1.43634 (4) obj. -23.8073 iterations 9
Cbc0038I Pass  94: suminf.    1.25645 (4) obj. -23.8073 iterations 6
Cbc0038I Pass  95: suminf.    1.59157 (9) obj. -23.8073 iterations 17
Cbc0038I Pass  96: suminf.    0.83333 (3) obj. -23.8617 iterations 11
Cbc0038I Pass  97: suminf.    1.05568 (9) obj. -23.8073 iterations 10
Cbc0038I Pass  98: suminf.    1.28600 (5) obj. -23.8073 iterations 10
Cbc0038I Pass  99: suminf.    1.61918 (8) obj. -23.8073 iterations 2
Cbc0038I Pass 100: suminf.    0.91233 (10) obj. -23.8073 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -22.5861 - took 0.05 seconds
Cbc0012I Integer solution of -22.5861 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 14 columns
Cbc0031I 12 added rows had average density of 47.583333
Cbc0013I At root node, 12 cuts changed objective from -24.630729 to -23.79717 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 470 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 5 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 77 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.5861 best solution, best possible -23.79717 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 17 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 15 columns
Cbc0012I Integer solution of -22.587883 found by DiveCoefficient after 10107 iterations and 377 nodes (0.56 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 18 columns
Cbc0001I Search completed - best objective -22.58788281679157, took 11108 iterations and 408 nodes (0.60 seconds)
Cbc0032I Strong branching done 3798 times (23038 iterations), fathomed 139 nodes and fixed 148 variables
Cbc0035I Maximum depth 16, 1181 variables fixed on reduced cost
Cuts at root node changed objective from -24.6307 to -23.7972
Probing was tried 100 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 565 times and created 1396 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 565 times and created 196 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 566 times and created 448 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)

Result - Optimal solution found

Objective value:                22.58788282
Enumerated nodes:               408
Total iterations:               11108
Time (CPU seconds):             0.58
Time (Wallclock seconds):       0.60

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.60

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/12c906e39e0b437f8c0e2ebae6279f3b-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/12c906e39e0b437f8c0e2ebae6279f3b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.5175 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.3601 iterations 3
Cbc0038I Solution found of -13.6445
Cbc0038I Cleaned solution of -13.6445
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -13.6445 to -14.4313 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.6399
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.3601 iterations 0
Cbc0038I Pass   3: suminf.    0.44718 (2) obj. -14.6399 iterations 10
Cbc0038I Pass   4: suminf.    0.28938 (2) obj. -14.6399 iterations 2
Cbc0038I Pass   5: suminf.    0.20000 (1) obj. -14.978 iterations 10
Cbc0038I Pass   6: suminf.    0.38004 (1) obj. -14.6399 iterations 3
Cbc0038I Pass   7: suminf.    0.38004 (1) obj. -14.6399 iterations 2
Cbc0038I Pass   8: suminf.    0.38004 (1) obj. -14.6399 iterations 2
Cbc0038I Pass   9: suminf.    0.34818 (1) obj. -14.6399 iterations 11
Cbc0038I Pass  10: suminf.    0.34818 (1) obj. -14.6399 iterations 0
Cbc0038I Pass  11: suminf.    0.40000 (1) obj. -14.8092 iterations 5
Cbc0038I Pass  12: suminf.    0.41886 (1) obj. -14.6399 iterations 4
Cbc0038I Pass  13: suminf.    0.40984 (2) obj. -14.6399 iterations 4
Cbc0038I Pass  14: suminf.    0.72093 (6) obj. -14.6399 iterations 3
Cbc0038I Pass  15: suminf.    0.00192 (1) obj. -14.6399 iterations 4
Cbc0038I Pass  16: suminf.    0.00192 (1) obj. -14.6399 iterations 0
Cbc0038I Pass  17: suminf.    0.40000 (1) obj. -15.1906 iterations 11
Cbc0038I Pass  18: suminf.    0.01072 (1) obj. -14.6399 iterations 3
Cbc0038I Pass  19: suminf.    0.17677 (1) obj. -14.6399 iterations 8
Cbc0038I Solution found of -14.784
Cbc0038I Cleaned solution of -14.784
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -14.784 to -14.8528 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.1858
Cbc0038I Pass  20: suminf.    0.80000 (4) obj. -16.3601 iterations 0
Cbc0038I Pass  21: suminf.    0.50180 (3) obj. -15.1858 iterations 13
Cbc0038I Pass  22: suminf.    1.62676 (6) obj. -15.1858 iterations 4
Cbc0038I Pass  23: suminf.    0.45178 (2) obj. -15.1858 iterations 5
Cbc0038I Pass  24: suminf.    0.34546 (2) obj. -15.1858 iterations 2
Cbc0038I Pass  25: suminf.    0.20000 (1) obj. -15.4107 iterations 8
Cbc0038I Pass  26: suminf.    0.44068 (1) obj. -15.1858 iterations 3
Cbc0038I Pass  27: suminf.    0.47271 (1) obj. -15.1858 iterations 3
Cbc0038I Pass  28: suminf.    0.47271 (1) obj. -15.1858 iterations 0
Cbc0038I Pass  29: suminf.    0.47271 (1) obj. -15.1858 iterations 1
Cbc0038I Pass  30: suminf.    0.47271 (1) obj. -15.1858 iterations 1
Cbc0038I Pass  31: suminf.    0.47271 (1) obj. -15.1858 iterations 0
Cbc0038I Pass  32: suminf.    0.73605 (5) obj. -15.1858 iterations 4
Cbc0038I Pass  33: suminf.    0.20000 (1) obj. -15.447 iterations 5
Cbc0038I Pass  34: suminf.    0.47949 (1) obj. -15.1858 iterations 2
Cbc0038I Pass  35: suminf.    0.31031 (2) obj. -15.1858 iterations 4
Cbc0038I Pass  36: suminf.    0.31031 (2) obj. -15.1858 iterations 0
Cbc0038I Pass  37: suminf.    0.42044 (2) obj. -15.1858 iterations 6
Cbc0038I Pass  38: suminf.    0.41564 (2) obj. -15.1858 iterations 2
Cbc0038I Pass  39: suminf.    0.57027 (2) obj. -15.1858 iterations 2
Cbc0038I Pass  40: suminf.    0.20000 (1) obj. -15.447 iterations 5
Cbc0038I Pass  41: suminf.    0.47949 (1) obj. -15.1858 iterations 3
Cbc0038I Pass  42: suminf.    0.42675 (1) obj. -15.1858 iterations 3
Cbc0038I Pass  43: suminf.    0.42675 (1) obj. -15.1858 iterations 1
Cbc0038I Pass  44: suminf.    0.59011 (2) obj. -15.1858 iterations 4
Cbc0038I Pass  45: suminf.    0.44607 (2) obj. -15.1858 iterations 10
Cbc0038I Pass  46: suminf.    0.29205 (2) obj. -15.1858 iterations 2
Cbc0038I Pass  47: suminf.    0.70692 (3) obj. -15.1858 iterations 9
Cbc0038I Pass  48: suminf.    0.40000 (2) obj. -15.2255 iterations 6
Cbc0038I Pass  49: suminf.    0.44756 (2) obj. -15.1858 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -14.8528 - took 0.02 seconds
Cbc0012I Integer solution of -14.852823 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 4 rows 6 columns
Cbc0031I 7 added rows had average density of 39.714286
Cbc0013I At root node, 7 cuts changed objective from -16.517467 to -15.503057 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 362 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.852823 best solution, best possible -15.503057 (0.09 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 14 columns
Cbc0001I Search completed - best objective -14.85282277688384, took 3306 iterations and 66 nodes (0.18 seconds)
Cbc0032I Strong branching done 800 times (4135 iterations), fathomed 16 nodes and fixed 10 variables
Cbc0035I Maximum depth 10, 170 variables fixed on reduced cost
Cuts at root node changed objective from -16.5175 to -15.5031
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 273 times and created 942 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 273 times and created 102 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.85282278
Enumerated nodes:               66
Total iterations:               3306
Time (CPU seconds):             0.17
Time (Wallclock seconds):       0.18

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a324b68dfb0a48b780234de7adc874ce-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/a324b68dfb0a48b780234de7adc874ce-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.5819 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.4689 iterations 7
Cbc0038I Solution found of -14.0106
Cbc0038I Cleaned solution of -14.0106
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -14.0106 to -14.5754 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.7761
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.4689 iterations 0
Cbc0038I Pass   3: suminf.    0.21731 (2) obj. -14.7761 iterations 4
Cbc0038I Pass   4: suminf.    0.71545 (6) obj. -14.7761 iterations 3
Cbc0038I Pass   5: suminf.    0.46404 (1) obj. -14.7761 iterations 4
Cbc0038I Pass   6: suminf.    0.46404 (1) obj. -14.7761 iterations 1
Cbc0038I Pass   7: suminf.    0.20000 (1) obj. -15.0755 iterations 2
Cbc0038I Pass   8: suminf.    0.87570 (4) obj. -14.7761 iterations 12
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -15.0475 iterations 1
Cbc0038I Solution found of -15.0475
Cbc0038I Cleaned solution of -15.0475
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -15.3544
Cbc0038I Pass  10: suminf.    0.80000 (4) obj. -16.4689 iterations 0
Cbc0038I Pass  11: suminf.    0.55877 (2) obj. -15.3544 iterations 5
Cbc0038I Pass  12: suminf.    0.40000 (2) obj. -15.6327 iterations 5
Cbc0038I Pass  13: suminf.    0.76902 (2) obj. -15.3544 iterations 5
Cbc0038I Pass  14: suminf.    0.45859 (2) obj. -15.3544 iterations 3
Cbc0038I Pass  15: suminf.    0.66403 (2) obj. -15.3544 iterations 3
Cbc0038I Pass  16: suminf.    0.49748 (1) obj. -15.3544 iterations 1
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -15.4878 iterations 2
Cbc0038I Pass  18: suminf.    0.34974 (1) obj. -15.3544 iterations 1
Cbc0038I Pass  19: suminf.    0.33556 (1) obj. -15.3544 iterations 2
Cbc0038I Pass  20: suminf.    0.74568 (5) obj. -15.3544 iterations 3
Cbc0038I Pass  21: suminf.    0.78001 (3) obj. -15.3544 iterations 16
Cbc0038I Pass  22: suminf.    0.67493 (3) obj. -15.3544 iterations 2
Cbc0038I Pass  23: suminf.    0.91765 (6) obj. -15.3544 iterations 8
Cbc0038I Pass  24: suminf.    0.40981 (2) obj. -15.3544 iterations 3
Cbc0038I Pass  25: suminf.    0.22774 (2) obj. -15.3544 iterations 1
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -15.4896 iterations 5
Cbc0038I Pass  27: suminf.    0.35171 (1) obj. -15.3544 iterations 2
Cbc0038I Pass  28: suminf.    0.34846 (2) obj. -15.3544 iterations 1
Cbc0038I Pass  29: suminf.    1.07689 (4) obj. -15.3544 iterations 7
Cbc0038I Pass  30: suminf.    0.33470 (1) obj. -15.3544 iterations 3
Cbc0038I Pass  31: suminf.    0.33470 (1) obj. -15.3544 iterations 1
Cbc0038I Pass  32: suminf.    0.49465 (1) obj. -15.3544 iterations 5
Cbc0038I Pass  33: suminf.    0.49465 (1) obj. -15.3544 iterations 2
Cbc0038I Pass  34: suminf.    0.49465 (1) obj. -15.3544 iterations 0
Cbc0038I Pass  35: suminf.    0.49465 (1) obj. -15.3544 iterations 0
Cbc0038I Pass  36: suminf.    0.20000 (1) obj. -15.4896 iterations 3
Cbc0038I Pass  37: suminf.    0.35171 (1) obj. -15.3544 iterations 2
Cbc0038I Pass  38: suminf.    0.86454 (7) obj. -15.3544 iterations 6
Cbc0038I Pass  39: suminf.    0.73349 (2) obj. -15.3544 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.0475 - took 0.01 seconds
Cbc0012I Integer solution of -15.047473 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 7 columns
Cbc0031I 8 added rows had average density of 26.5
Cbc0013I At root node, 8 cuts changed objective from -16.581883 to -15.312911 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 573 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 53 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.047473 best solution, best possible -15.312911 (0.08 seconds)
Cbc0001I Search completed - best objective -15.04747290909299, took 1807 iterations and 20 nodes (0.11 seconds)
Cbc0032I Strong branching done 248 times (1253 iterations), fathomed 4 nodes and fixed 5 variables
Cbc0035I Maximum depth 5, 30 variables fixed on reduced cost
Cuts at root node changed objective from -16.5819 to -15.3129
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 149 times and created 773 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Knapsack was tried 149 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 149 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.04747291
Enumerated nodes:               20
Total iterations:               1807
Time (CPU seconds):             0.11
Time (Wallclock seconds):       0.11

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/0d1d9577a7e94ba290998316b5413fb7-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/0d1d9577a7e94ba290998316b5413fb7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 15.2743 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.1201 iterations 6
Cbc0038I Solution found of -12.8074
Cbc0038I Cleaned solution of -12.8074
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -12.8074 to -13.5783 (0.00 seconds)
Cbc0038I Round again with cutoff of -13.7479
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.1201 iterations 0
Cbc0038I Pass   3: suminf.    0.42091 (2) obj. -13.7479 iterations 10
Cbc0038I Pass   4: suminf.    0.27669 (2) obj. -13.7479 iterations 2
Cbc0038I Pass   5: suminf.    0.40000 (1) obj. -13.8067 iterations 4
Cbc0038I Pass   6: suminf.    0.46369 (1) obj. -13.7479 iterations 3
Cbc0038I Pass   7: suminf.    0.66320 (2) obj. -13.7479 iterations 9
Cbc0038I Pass   8: suminf.    0.66320 (2) obj. -13.7479 iterations 1
Cbc0038I Solution found of -13.7956
Cbc0038I Cleaned solution of -13.7956
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.0913
Cbc0038I Pass   9: suminf.    0.80000 (4) obj. -15.1201 iterations 0
Cbc0038I Pass  10: suminf.    0.54709 (2) obj. -14.0913 iterations 10
Cbc0038I Pass  11: suminf.    0.40000 (2) obj. -14.2405 iterations 3
Cbc0038I Pass  12: suminf.    0.62358 (2) obj. -14.0913 iterations 6
Cbc0038I Pass  13: suminf.    0.62042 (3) obj. -14.0913 iterations 10
Cbc0038I Pass  14: suminf.    0.40000 (2) obj. -14.1549 iterations 6
Cbc0038I Pass  15: suminf.    0.50483 (2) obj. -14.0913 iterations 6
Cbc0038I Pass  16: suminf.    0.40000 (2) obj. -14.1618 iterations 9
Cbc0038I Pass  17: suminf.    0.50556 (2) obj. -14.0913 iterations 7
Cbc0038I Pass  18: suminf.    0.44390 (2) obj. -14.0913 iterations 4
Cbc0038I Pass  19: suminf.    0.34075 (2) obj. -14.0913 iterations 3
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -14.1671 iterations 9
Cbc0038I Pass  21: suminf.    0.28213 (1) obj. -14.0913 iterations 3
Cbc0038I Pass  22: suminf.    0.79389 (3) obj. -14.0913 iterations 6
Cbc0038I Pass  23: suminf.    1.33775 (7) obj. -14.0913 iterations 7
Cbc0038I Pass  24: suminf.    0.42865 (2) obj. -14.0913 iterations 2
Cbc0038I Pass  25: suminf.    0.50035 (2) obj. -14.0913 iterations 2
Cbc0038I Pass  26: suminf.    0.63071 (2) obj. -14.0913 iterations 4
Cbc0038I Pass  27: suminf.    0.63071 (2) obj. -14.0913 iterations 1
Cbc0038I Pass  28: suminf.    0.21421 (1) obj. -14.0913 iterations 1
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -14.3459 iterations 4
Cbc0038I Pass  30: suminf.    0.47528 (1) obj. -14.0913 iterations 2
Cbc0038I Pass  31: suminf.    0.39201 (1) obj. -14.0913 iterations 1
Cbc0038I Pass  32: suminf.    0.39201 (1) obj. -14.0913 iterations 0
Cbc0038I Pass  33: suminf.    0.39495 (1) obj. -14.0913 iterations 10
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -14.1699 iterations 6
Cbc0038I Pass  35: suminf.    0.28501 (1) obj. -14.0913 iterations 3
Cbc0038I Pass  36: suminf.    2.07999 (7) obj. -14.0913 iterations 9
Cbc0038I Pass  37: suminf.    0.43413 (2) obj. -14.0913 iterations 3
Cbc0038I Pass  38: suminf.    2.17762 (6) obj. -14.0913 iterations 9
Cbc0038I Rounding solution of -13.9715 is better than previous of -13.7956

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.4462
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.80000 (4) obj. -15.1201 iterations 0
Cbc0038I Pass  39: suminf.    0.80991 (3) obj. -14.4462 iterations 7
Cbc0038I Pass  40: suminf.    0.47699 (3) obj. -14.4462 iterations 3
Cbc0038I Pass  41: suminf.    0.83801 (2) obj. -14.4462 iterations 10
Cbc0038I Pass  42: suminf.    0.26735 (2) obj. -14.4462 iterations 7
Cbc0038I Pass  43: suminf.    0.84063 (2) obj. -14.4462 iterations 7
Cbc0038I Pass  44: suminf.    0.54436 (2) obj. -14.4462 iterations 10
Cbc0038I Pass  45: suminf.    0.54436 (2) obj. -14.4462 iterations 1
Cbc0038I Pass  46: suminf.    0.31677 (2) obj. -14.4462 iterations 7
Cbc0038I Pass  47: suminf.    1.07658 (3) obj. -14.4462 iterations 11
Cbc0038I Pass  48: suminf.    0.53998 (3) obj. -14.4462 iterations 6
Cbc0038I Pass  49: suminf.    0.68519 (3) obj. -14.4462 iterations 6
Cbc0038I Pass  50: suminf.    0.60000 (2) obj. -14.5696 iterations 8
Cbc0038I Pass  51: suminf.    0.82062 (2) obj. -14.4462 iterations 3
Cbc0038I Pass  52: suminf.    3.31025 (9) obj. -14.4462 iterations 10
Cbc0038I Pass  53: suminf.    2.22992 (9) obj. -14.4462 iterations 12
Cbc0038I Pass  54: suminf.    0.80000 (3) obj. -14.783 iterations 7
Cbc0038I Pass  55: suminf.    0.79789 (3) obj. -14.4462 iterations 6
Cbc0038I Pass  56: suminf.    0.60069 (3) obj. -14.4462 iterations 4
Cbc0038I Pass  57: suminf.    0.75399 (3) obj. -14.4462 iterations 6
Cbc0038I Pass  58: suminf.    0.60069 (3) obj. -14.4462 iterations 7
Cbc0038I Pass  59: suminf.    0.82062 (2) obj. -14.4462 iterations 1
Cbc0038I Pass  60: suminf.    0.60000 (2) obj. -14.5696 iterations 3
Cbc0038I Pass  61: suminf.    0.57960 (2) obj. -14.4462 iterations 12
Cbc0038I Pass  62: suminf.    0.54264 (2) obj. -14.4462 iterations 2
Cbc0038I Pass  63: suminf.    0.83801 (2) obj. -14.4462 iterations 8
Cbc0038I Pass  64: suminf.    0.26735 (2) obj. -14.4462 iterations 5
Cbc0038I Pass  65: suminf.    0.84063 (2) obj. -14.4462 iterations 5
Cbc0038I Pass  66: suminf.    1.00242 (4) obj. -14.4462 iterations 15
Cbc0038I Pass  67: suminf.    1.86833 (7) obj. -14.4462 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13.9715 - took 0.01 seconds
Cbc0012I Integer solution of -13.971521 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 7 columns
Cbc0031I 10 added rows had average density of 27
Cbc0013I At root node, 10 cuts changed objective from -15.274321 to -14.340156 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 451 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.971521 best solution, best possible -14.340156 (0.09 seconds)
Cbc0001I Search completed - best objective -13.97152113169424, took 2050 iterations and 24 nodes (0.12 seconds)
Cbc0032I Strong branching done 320 times (1660 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 6, 62 variables fixed on reduced cost
Cuts at root node changed objective from -15.2743 to -14.3402
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 172 times and created 843 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 172 times and created 184 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                13.97152113
Enumerated nodes:               24
Total iterations:               2050
Time (CPU seconds):             0.12
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/14f7d777ceff4b1ab201074bee5f5831-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/14f7d777ceff4b1ab201074bee5f5831-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.3697 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.1667 iterations 11
Cbc0038I Solution found of -13.4647
Cbc0038I Cleaned solution of -13.4647
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -13.4647 to -14.4796 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.6686
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.1667 iterations 0
Cbc0038I Pass   3: suminf.    0.68882 (2) obj. -14.6686 iterations 11
Cbc0038I Pass   4: suminf.    0.40000 (2) obj. -14.9499 iterations 4
Cbc0038I Pass   5: suminf.    0.61440 (2) obj. -14.6686 iterations 4
Cbc0038I Pass   6: suminf.    0.53537 (2) obj. -14.6686 iterations 1
Cbc0038I Pass   7: suminf.    0.29902 (5) obj. -14.6686 iterations 12
Cbc0038I Pass   8: suminf.    0.41137 (1) obj. -14.6686 iterations 4
Cbc0038I Pass   9: suminf.    0.41137 (1) obj. -14.6686 iterations 0
Cbc0038I Pass  10: suminf.    0.40000 (1) obj. -14.7688 iterations 7
Cbc0038I Pass  11: suminf.    0.49005 (1) obj. -14.6686 iterations 3
Cbc0038I Pass  12: suminf.    0.26147 (2) obj. -14.6686 iterations 4
Cbc0038I Pass  13: suminf.    2.46262 (7) obj. -14.6686 iterations 4
Cbc0038I Pass  14: suminf.    0.37023 (1) obj. -14.6686 iterations 4
Cbc0038I Pass  15: suminf.    0.37023 (1) obj. -14.6686 iterations 0
Cbc0038I Pass  16: suminf.    0.40000 (1) obj. -14.7688 iterations 6
Cbc0038I Pass  17: suminf.    0.49005 (1) obj. -14.6686 iterations 3
Cbc0038I Pass  18: suminf.    1.89824 (6) obj. -14.6686 iterations 6
Cbc0038I Pass  19: suminf.    0.31912 (2) obj. -14.6686 iterations 4
Cbc0038I Pass  20: suminf.    0.26227 (2) obj. -14.6686 iterations 1
Cbc0038I Solution found of -14.7994
Cbc0038I Cleaned solution of -14.7994
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.1135
Cbc0038I Pass  21: suminf.    0.80000 (4) obj. -16.1667 iterations 0
Cbc0038I Pass  22: suminf.    0.61898 (3) obj. -15.1135 iterations 12
Cbc0038I Pass  23: suminf.    0.42454 (3) obj. -15.1135 iterations 3
Cbc0038I Pass  24: suminf.    0.56175 (2) obj. -15.1135 iterations 11
Cbc0038I Pass  25: suminf.    0.20000 (1) obj. -15.319 iterations 10
Cbc0038I Pass  26: suminf.    0.42541 (1) obj. -15.1135 iterations 2
Cbc0038I Pass  27: suminf.    0.44740 (1) obj. -15.1135 iterations 3
Cbc0038I Pass  28: suminf.    0.44740 (1) obj. -15.1135 iterations 1
Cbc0038I Pass  29: suminf.    0.44740 (1) obj. -15.1135 iterations 0
Cbc0038I Pass  30: suminf.    0.44740 (1) obj. -15.1135 iterations 0
Cbc0038I Pass  31: suminf.    0.92223 (3) obj. -15.1135 iterations 6
Cbc0038I Pass  32: suminf.    0.56175 (2) obj. -15.1135 iterations 3
Cbc0038I Pass  33: suminf.    0.20000 (1) obj. -15.319 iterations 7
Cbc0038I Pass  34: suminf.    0.42541 (1) obj. -15.1135 iterations 2
Cbc0038I Pass  35: suminf.    0.21735 (2) obj. -15.1135 iterations 10
Cbc0038I Pass  36: suminf.    0.21735 (2) obj. -15.1135 iterations 1
Cbc0038I Pass  37: suminf.    0.86470 (4) obj. -15.1135 iterations 7
Cbc0038I Pass  38: suminf.    0.40000 (2) obj. -15.2031 iterations 7
Cbc0038I Pass  39: suminf.    0.83510 (3) obj. -15.1135 iterations 6
Cbc0038I Pass  40: suminf.    0.73483 (3) obj. -15.1135 iterations 1
Cbc0038I Pass  41: suminf.    0.60000 (2) obj. -15.179 iterations 12
Cbc0038I Pass  42: suminf.    0.67044 (2) obj. -15.1135 iterations 6
Cbc0038I Pass  43: suminf.    1.82157 (6) obj. -15.1135 iterations 6
Cbc0038I Pass  44: suminf.    1.08622 (4) obj. -15.1135 iterations 10
Cbc0038I Pass  45: suminf.    0.64686 (4) obj. -15.1135 iterations 4
Cbc0038I Pass  46: suminf.    0.27088 (2) obj. -15.1135 iterations 4
Cbc0038I Pass  47: suminf.    0.94854 (6) obj. -15.1135 iterations 5
Cbc0038I Pass  48: suminf.    0.44740 (1) obj. -15.1135 iterations 5
Cbc0038I Pass  49: suminf.    0.44740 (1) obj. -15.1135 iterations 0
Cbc0038I Pass  50: suminf.    0.20000 (1) obj. -15.319 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -14.7994 - took 0.01 seconds
Cbc0012I Integer solution of -14.799385 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 2 rows 3 columns
Cbc0031I 7 added rows had average density of 21.142857
Cbc0013I At root node, 7 cuts changed objective from -16.369683 to -15.33937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 500 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 55 row cuts average 26.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.799385 best solution, best possible -15.33937 (0.08 seconds)
Cbc0001I Search completed - best objective -14.79938536137331, took 2523 iterations and 42 nodes (0.13 seconds)
Cbc0032I Strong branching done 440 times (2115 iterations), fathomed 7 nodes and fixed 8 variables
Cbc0035I Maximum depth 10, 80 variables fixed on reduced cost
Cuts at root node changed objective from -16.3697 to -15.3394
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 204 times and created 974 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 204 times and created 201 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.79938536
Enumerated nodes:               42
Total iterations:               2523
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.13

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.13

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/93c8fac7195541318205e14142ed8a60-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/93c8fac7195541318205e14142ed8a60-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 17 COLUMNS
At line 63 RHS
At line 76 BOUNDS
At line 86 ENDATA
Problem MODEL has 12 rows, 9 columns and 23 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 1.6189 - 0.00 seconds
Cgl0004I processed model has 0 rows, 0 columns (0 integer (0 of which binary)) and 0 elements
Cbc3007W No integer variables - nothing to do
Cuts at root node changed objective from -1.6189 to -1.79769e+308
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                1.61889672
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a8e3f900e9164357bb609c6f3067faa0-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/a8e3f900e9164357bb609c6f3067faa0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.09169 - 0.00 seconds
Cgl0004I processed model has 16 rows, 23 columns (23 integer (11 of which binary)) and 58 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.5
Cbc0038I Pass   1: suminf.    0.25000 (1) obj. -8.74445 iterations 2
Cbc0038I Solution found of -8.06544
Cbc0038I Cleaned solution of -8.06544
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 23 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -8.06544 to -8.83044 (0.00 seconds)
Cbc0038I Round again with cutoff of -8.85658
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.25000 (1) obj. -8.9357 iterations 2
Cbc0038I Pass   3: suminf.    0.04188 (1) obj. -8.85658 iterations 2
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.98643 iterations 1
Cbc0038I Pass   5: suminf.    0.04188 (1) obj. -8.85658 iterations 1
Cbc0038I Pass   6: suminf.    0.25000 (1) obj. -8.98643 iterations 1
Cbc0038I Pass   7: suminf.    0.04188 (1) obj. -8.85658 iterations 1
Cbc0038I Pass   8: suminf.    0.04188 (1) obj. -8.85658 iterations 0
Cbc0038I Pass   9: suminf.    0.25000 (1) obj. -8.98643 iterations 1
Cbc0038I Pass  10: suminf.    1.54786 (5) obj. -8.85658 iterations 2
Cbc0038I Pass  11: suminf.    0.25000 (1) obj. -8.98643 iterations 2
Cbc0038I Pass  12: suminf.    0.04188 (1) obj. -8.85658 iterations 1
Cbc0038I Pass  13: suminf.    1.54786 (5) obj. -8.85658 iterations 3
Cbc0038I Pass  14: suminf.    1.47791 (6) obj. -8.85658 iterations 3
Cbc0038I Pass  15: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  16: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  17: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  18: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  19: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  20: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  21: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  22: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  23: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  24: suminf.    1.47791 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  25: suminf.    1.17839 (6) obj. -8.85658 iterations 1
Cbc0038I Pass  26: suminf.    1.17839 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  27: suminf.    1.17839 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  28: suminf.    1.17839 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  29: suminf.    1.17839 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  30: suminf.    1.17839 (6) obj. -8.85658 iterations 0
Cbc0038I Pass  31: suminf.    0.04188 (1) obj. -8.85658 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 23 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -8.83044 - took 0.00 seconds
Cbc0012I Integer solution of -8.8304448 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -9.0916858 to -9.0916858 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -8.830444823950511, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Cuts at root node changed objective from -9.09169 to -9.09169
Probing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                8.83044482
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/727410e9c84d4899ba39eb33aace953c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/727410e9c84d4899ba39eb33aace953c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.0085 - 0.00 seconds
Cgl0004I processed model has 36 rows, 59 columns (59 integer (29 of which binary)) and 148 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (4) obj. -25.8441 iterations 18
Cbc0038I Solution found of -23.1238
Cbc0038I Cleaned solution of -23.1238
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 7 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -23.1238 to -23.8571 (0.00 seconds)
Cbc0038I Round again with cutoff of -24.0722
Cbc0038I Pass   2: suminf.    0.83333 (4) obj. -25.8441 iterations 0
Cbc0038I Pass   3: suminf.    0.64839 (2) obj. -24.0722 iterations 17
Cbc0038I Pass   4: suminf.    0.55427 (2) obj. -24.0722 iterations 3
Cbc0038I Pass   5: suminf.    0.16667 (1) obj. -24.1649 iterations 8
Cbc0038I Pass   6: suminf.    0.26183 (1) obj. -24.0722 iterations 3
Cbc0038I Pass   7: suminf.    1.55284 (6) obj. -24.0722 iterations 4
Cbc0038I Pass   8: suminf.    0.42343 (2) obj. -24.0722 iterations 13
Cbc0038I Pass   9: suminf.    0.73144 (6) obj. -24.0722 iterations 9
Cbc0038I Pass  10: suminf.    0.45376 (1) obj. -24.0722 iterations 5
Cbc0038I Pass  11: suminf.    0.16667 (1) obj. -24.2893 iterations 8
Cbc0038I Pass  12: suminf.    0.38703 (1) obj. -24.0722 iterations 4
Cbc0038I Pass  13: suminf.    0.66070 (2) obj. -24.0722 iterations 7
Cbc0038I Pass  14: suminf.    0.61919 (2) obj. -24.0722 iterations 2
Cbc0038I Pass  15: suminf.    0.72099 (2) obj. -24.0722 iterations 4
Cbc0038I Pass  16: suminf.    0.33333 (1) obj. -24.2543 iterations 8
Cbc0038I Pass  17: suminf.    0.48184 (1) obj. -24.0722 iterations 3
Cbc0038I Pass  18: suminf.    0.29655 (1) obj. -24.0722 iterations 4
Cbc0038I Pass  19: suminf.    0.29655 (1) obj. -24.0722 iterations 1
Cbc0038I Pass  20: suminf.    0.61512 (5) obj. -24.0722 iterations 15
Cbc0038I Pass  21: suminf.    0.16667 (1) obj. -24.3667 iterations 7
Cbc0038I Pass  22: suminf.    0.41409 (1) obj. -24.0722 iterations 5
Cbc0038I Pass  23: suminf.    0.41409 (1) obj. -24.0722 iterations 2
Cbc0038I Pass  24: suminf.    0.41409 (1) obj. -24.0722 iterations 2
Cbc0038I Pass  25: suminf.    0.72882 (2) obj. -24.0722 iterations 10
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -24.1062 iterations 8
Cbc0038I Pass  27: suminf.    0.46535 (1) obj. -24.0722 iterations 4
Cbc0038I Pass  28: suminf.    0.60730 (2) obj. -24.0722 iterations 15
Cbc0038I Pass  29: suminf.    0.58047 (2) obj. -24.0722 iterations 3
Cbc0038I Pass  30: suminf.    0.25183 (1) obj. -24.0722 iterations 2
Cbc0038I Pass  31: suminf.    1.39726 (3) obj. -24.0722 iterations 6
Cbc0038I Rounding solution of -23.896 is better than previous of -23.8571

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 21 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.4595
Cbc0038I Pass  31: suminf.    0.83333 (4) obj. -25.8441 iterations 0
Cbc0038I Pass  32: suminf.    0.60557 (2) obj. -24.4595 iterations 17
Cbc0038I Pass  33: suminf.    0.50000 (2) obj. -24.55 iterations 8
Cbc0038I Pass  34: suminf.    0.59249 (2) obj. -24.4595 iterations 7
Cbc0038I Pass  35: suminf.    0.60412 (2) obj. -24.4595 iterations 3
Cbc0038I Pass  36: suminf.    0.79307 (3) obj. -24.4595 iterations 6
Cbc0038I Pass  37: suminf.    0.50000 (2) obj. -24.6904 iterations 13
Cbc0038I Pass  38: suminf.    0.73605 (2) obj. -24.4595 iterations 7
Cbc0038I Pass  39: suminf.    0.61115 (2) obj. -24.4595 iterations 11
Cbc0038I Pass  40: suminf.    0.56384 (2) obj. -24.4595 iterations 1
Cbc0038I Pass  41: suminf.    0.66022 (2) obj. -24.4595 iterations 9
Cbc0038I Pass  42: suminf.    0.91611 (2) obj. -24.4595 iterations 5
Cbc0038I Pass  43: suminf.    0.49761 (2) obj. -24.4595 iterations 2
Cbc0038I Pass  44: suminf.    0.17784 (2) obj. -24.4595 iterations 6
Cbc0038I Pass  45: suminf.    1.08602 (3) obj. -24.4595 iterations 4
Cbc0038I Pass  46: suminf.    0.50000 (2) obj. -24.7929 iterations 10
Cbc0038I Pass  47: suminf.    0.82584 (2) obj. -24.4595 iterations 7
Cbc0038I Pass  48: suminf.    0.73556 (2) obj. -24.4595 iterations 3
Cbc0038I Pass  49: suminf.    0.56917 (2) obj. -24.4595 iterations 15
Cbc0038I Pass  50: suminf.    0.50000 (2) obj. -24.4936 iterations 5
Cbc0038I Pass  51: suminf.    0.95536 (3) obj. -24.4595 iterations 10
Cbc0038I Pass  52: suminf.    0.50000 (2) obj. -24.6782 iterations 11
Cbc0038I Pass  53: suminf.    0.72360 (2) obj. -24.4595 iterations 7
Cbc0038I Pass  54: suminf.    0.82384 (2) obj. -24.4595 iterations 9
Cbc0038I Pass  55: suminf.    0.66667 (2) obj. -24.5769 iterations 12
Cbc0038I Pass  56: suminf.    0.52727 (2) obj. -24.4595 iterations 5
Cbc0038I Pass  57: suminf.    0.79925 (2) obj. -24.4595 iterations 13
Cbc0038I Pass  58: suminf.    0.79925 (2) obj. -24.4595 iterations 0
Cbc0038I Pass  59: suminf.    0.66667 (2) obj. -24.6636 iterations 14
Cbc0038I Pass  60: suminf.    0.41999 (2) obj. -24.4595 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 59 columns, reduced to 20 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.896 - took 0.03 seconds
Cbc0012I Integer solution of -23.896018 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 6 rows 6 columns
Cbc0031I 11 added rows had average density of 50.363636
Cbc0013I At root node, 11 cuts changed objective from -26.008539 to -25.200283 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 676 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 11 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 53 row cuts average 43.4 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 79 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.896018 best solution, best possible -25.200283 (0.14 seconds)
Cbc0038I Full problem 36 rows 59 columns, reduced to 17 rows 20 columns
Cbc0038I Full problem 36 rows 59 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 36 rows 59 columns, reduced to 9 rows 12 columns
Cbc0001I Search completed - best objective -23.89601820707313, took 5951 iterations and 240 nodes (0.37 seconds)
Cbc0032I Strong branching done 2034 times (11476 iterations), fathomed 73 nodes and fixed 112 variables
Cbc0035I Maximum depth 15, 711 variables fixed on reduced cost
Cuts at root node changed objective from -26.0085 to -25.2003
Probing was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 301 times and created 955 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 301 times and created 173 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ZeroHalf was tried 301 times and created 171 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)

Result - Optimal solution found

Objective value:                23.89601821
Enumerated nodes:               240
Total iterations:               5951
Time (CPU seconds):             0.35
Time (Wallclock seconds):       0.37

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.35   (Wallclock seconds):       0.37

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/07c59ada30b34ab5b62e0e152c6bf45a-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/07c59ada30b34ab5b62e0e152c6bf45a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 15.8518 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.8518 iterations 8
Cbc0038I Solution found of -14.1478
Cbc0038I Cleaned solution of -14.1478
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.3182
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.8518 iterations 0
Cbc0038I Pass   3: suminf.    0.27462 (1) obj. -14.3182 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.7118 iterations 8
Cbc0038I Solution found of -14.4859
Cbc0038I Cleaned solution of -14.4859
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.7591
Cbc0038I Pass   5: suminf.    0.80000 (4) obj. -15.8518 iterations 0
Cbc0038I Pass   6: suminf.    0.42332 (2) obj. -14.7591 iterations 9
Cbc0038I Pass   7: suminf.    0.29184 (2) obj. -14.7591 iterations 1
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -14.8196 iterations 7
Cbc0038I Pass   9: suminf.    0.26706 (1) obj. -14.7591 iterations 1
Cbc0038I Pass  10: suminf.    0.27871 (2) obj. -14.7591 iterations 1
Cbc0038I Pass  11: suminf.    0.25203 (1) obj. -14.7591 iterations 3
Cbc0038I Pass  12: suminf.    0.22614 (2) obj. -14.7591 iterations 9
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -14.7937 iterations 4
Cbc0038I Pass  14: suminf.    0.23943 (1) obj. -14.7591 iterations 2
Cbc0038I Pass  15: suminf.    0.52819 (2) obj. -14.7591 iterations 7
Cbc0038I Pass  16: suminf.    0.40213 (2) obj. -14.7591 iterations 2
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -14.8196 iterations 6
Cbc0038I Pass  18: suminf.    0.26706 (1) obj. -14.7591 iterations 4
Cbc0038I Pass  19: suminf.    0.74566 (3) obj. -14.7591 iterations 4
Cbc0038I Pass  20: suminf.    0.40000 (2) obj. -15.0456 iterations 4
Cbc0038I Pass  21: suminf.    0.40000 (2) obj. -15.0985 iterations 5
Cbc0038I Pass  22: suminf.    0.46877 (1) obj. -14.7591 iterations 6
Cbc0038I Pass  23: suminf.    0.65743 (2) obj. -14.7591 iterations 8
Cbc0038I Pass  24: suminf.    1.71725 (5) obj. -14.7591 iterations 8
Cbc0038I Pass  25: suminf.    0.46877 (1) obj. -14.7591 iterations 5
Cbc0038I Pass  26: suminf.    0.20000 (1) obj. -14.8196 iterations 8
Cbc0038I Pass  27: suminf.    0.26706 (1) obj. -14.7591 iterations 4
Cbc0038I Pass  28: suminf.    0.54868 (2) obj. -14.7591 iterations 9
Cbc0038I Pass  29: suminf.    0.54868 (2) obj. -14.7591 iterations 3
Cbc0038I Pass  30: suminf.    0.60000 (2) obj. -15.0739 iterations 6
Cbc0038I Pass  31: suminf.    0.66719 (5) obj. -14.7591 iterations 2
Cbc0038I Pass  32: suminf.    0.54868 (2) obj. -14.7591 iterations 6
Cbc0038I Pass  33: suminf.    0.88618 (3) obj. -14.7591 iterations 3
Cbc0038I Pass  34: suminf.    0.80000 (3) obj. -15.5476 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -14.4859 to -14.5477 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.0869
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.80000 (4) obj. -15.8518 iterations 0
Cbc0038I Pass  35: suminf.    0.46105 (3) obj. -15.0869 iterations 10
Cbc0038I Pass  36: suminf.    0.40000 (2) obj. -15.1233 iterations 4
Cbc0038I Pass  37: suminf.    0.57040 (2) obj. -15.0869 iterations 3
Cbc0038I Pass  38: suminf.    0.54626 (2) obj. -15.0869 iterations 1
Cbc0038I Pass  39: suminf.    0.70798 (2) obj. -15.0869 iterations 2
Cbc0038I Pass  40: suminf.    0.49804 (2) obj. -15.0869 iterations 7
Cbc0038I Pass  41: suminf.    0.64938 (3) obj. -15.0869 iterations 4
Cbc0038I Pass  42: suminf.    0.49804 (2) obj. -15.0869 iterations 4
Cbc0038I Pass  43: suminf.    0.52878 (3) obj. -15.0869 iterations 6
Cbc0038I Pass  44: suminf.    0.40000 (2) obj. -15.1506 iterations 4
Cbc0038I Pass  45: suminf.    0.48096 (2) obj. -15.0869 iterations 1
Cbc0038I Pass  46: suminf.    2.40902 (8) obj. -15.0869 iterations 12
Cbc0038I Pass  47: suminf.    0.70334 (7) obj. -15.0869 iterations 2
Cbc0038I Pass  48: suminf.    0.60000 (2) obj. -15.1609 iterations 5
Cbc0038I Pass  49: suminf.    0.74399 (2) obj. -15.0869 iterations 6
Cbc0038I Pass  50: suminf.    0.96473 (3) obj. -15.0869 iterations 9
Cbc0038I Pass  51: suminf.    0.62934 (3) obj. -15.0869 iterations 8
Cbc0038I Pass  52: suminf.    0.70798 (2) obj. -15.0869 iterations 9
Cbc0038I Pass  53: suminf.    0.49804 (2) obj. -15.0869 iterations 6
Cbc0038I Pass  54: suminf.    0.61095 (3) obj. -15.0869 iterations 3
Cbc0038I Pass  55: suminf.    0.49804 (2) obj. -15.0869 iterations 3
Cbc0038I Pass  56: suminf.    0.61095 (3) obj. -15.0869 iterations 3
Cbc0038I Pass  57: suminf.    1.96319 (6) obj. -15.0869 iterations 11
Cbc0038I Pass  58: suminf.    0.70500 (2) obj. -15.0869 iterations 3
Cbc0038I Pass  59: suminf.    0.50132 (2) obj. -15.0869 iterations 6
Cbc0038I Pass  60: suminf.    0.70798 (2) obj. -15.0869 iterations 9
Cbc0038I Pass  61: suminf.    0.66450 (3) obj. -15.0869 iterations 7
Cbc0038I Pass  62: suminf.    0.76154 (3) obj. -15.0869 iterations 7
Cbc0038I Pass  63: suminf.    0.76154 (3) obj. -15.0869 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -14.5477 - took 0.01 seconds
Cbc0012I Integer solution of -14.54767 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 7 columns
Cbc0031I 8 added rows had average density of 19.875
Cbc0013I At root node, 8 cuts changed objective from -15.85181 to -14.71217 in 30 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 2.5 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 150 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 50 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.54767 best solution, best possible -14.71217 (0.03 seconds)
Cbc0001I Search completed - best objective -14.5476695522667, took 243 iterations and 4 nodes (0.03 seconds)
Cbc0032I Strong branching done 36 times (117 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 12 variables fixed on reduced cost
Cuts at root node changed objective from -15.8518 to -14.7122
Probing was tried 37 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 35 times and created 153 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 30 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 30 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 30 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 30 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 35 times and created 101 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ImplicationCuts was tried 5 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.54766955
Enumerated nodes:               4
Total iterations:               243
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/bb415cf3050f47c5b3602eac0662ac26-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/bb415cf3050f47c5b3602eac0662ac26-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.7577 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.695 iterations 3
Cbc0038I Solution found of -13.8973
Cbc0038I Cleaned solution of -13.8973
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -13.8973 to -14.2111 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.4658
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.695 iterations 0
Cbc0038I Pass   3: suminf.    0.40912 (1) obj. -14.4658 iterations 5
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.7033 iterations 6
Cbc0038I Pass   5: suminf.    0.40532 (1) obj. -14.4658 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -14.837 iterations 6
Cbc0038I Pass   7: suminf.    0.42182 (1) obj. -14.4658 iterations 3
Cbc0038I Pass   8: suminf.    0.69046 (2) obj. -14.4658 iterations 5
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -14.8729 iterations 4
Cbc0038I Pass  10: suminf.    0.38522 (1) obj. -14.4658 iterations 3
Cbc0038I Pass  11: suminf.    0.67404 (2) obj. -14.4658 iterations 9
Cbc0038I Pass  12: suminf.    0.61961 (2) obj. -14.4658 iterations 2
Cbc0038I Pass  13: suminf.    0.48105 (2) obj. -14.4658 iterations 5
Cbc0038I Pass  14: suminf.    0.02512 (1) obj. -14.4658 iterations 2
Cbc0038I Pass  15: suminf.    0.40000 (1) obj. -14.8329 iterations 9
Cbc0038I Pass  16: suminf.    0.22597 (1) obj. -14.4658 iterations 3
Cbc0038I Pass  17: suminf.    0.01332 (1) obj. -14.4658 iterations 5
Cbc0038I Solution found of -14.477
Cbc0038I Cleaned solution of -14.477
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.9332
Cbc0038I Pass  18: suminf.    0.80000 (4) obj. -16.695 iterations 0
Cbc0038I Pass  19: suminf.    0.47888 (2) obj. -14.9332 iterations 9
Cbc0038I Pass  20: suminf.    0.42008 (2) obj. -14.9332 iterations 2
Cbc0038I Pass  21: suminf.    0.20000 (1) obj. -14.9359 iterations 7
Cbc0038I Pass  22: suminf.    0.20279 (1) obj. -14.9332 iterations 3
Cbc0038I Pass  23: suminf.    0.67149 (2) obj. -14.9332 iterations 15
Cbc0038I Pass  24: suminf.    0.53072 (2) obj. -14.9332 iterations 6
Cbc0038I Pass  25: suminf.    0.40952 (2) obj. -14.9332 iterations 9
Cbc0038I Pass  26: suminf.    0.61269 (2) obj. -14.9332 iterations 1
Cbc0038I Pass  27: suminf.    0.40952 (2) obj. -14.9332 iterations 1
Cbc0038I Pass  28: suminf.    0.41220 (2) obj. -14.9332 iterations 2
Cbc0038I Pass  29: suminf.    0.44211 (2) obj. -14.9332 iterations 4
Cbc0038I Pass  30: suminf.    0.40952 (2) obj. -14.9332 iterations 2
Cbc0038I Pass  31: suminf.    1.07627 (3) obj. -14.9332 iterations 11
Cbc0038I Pass  32: suminf.    0.58292 (3) obj. -14.9332 iterations 5
Cbc0038I Pass  33: suminf.    0.25430 (2) obj. -14.9332 iterations 2
Cbc0038I Pass  34: suminf.    0.22042 (5) obj. -14.9332 iterations 6
Cbc0038I Pass  35: suminf.    0.24304 (1) obj. -14.9332 iterations 4
Cbc0038I Pass  36: suminf.    0.80334 (5) obj. -14.9332 iterations 5
Cbc0038I Pass  37: suminf.    0.20000 (1) obj. -15.0318 iterations 6
Cbc0038I Pass  38: suminf.    0.30049 (1) obj. -14.9332 iterations 4
Cbc0038I Pass  39: suminf.    0.27647 (1) obj. -14.9332 iterations 8
Cbc0038I Pass  40: suminf.    0.20000 (1) obj. -14.9599 iterations 6
Cbc0038I Pass  41: suminf.    0.22723 (1) obj. -14.9332 iterations 4
Cbc0038I Pass  42: suminf.    0.34669 (2) obj. -14.9332 iterations 10
Cbc0038I Pass  43: suminf.    0.20000 (1) obj. -15.0269 iterations 6
Cbc0038I Pass  44: suminf.    0.29548 (1) obj. -14.9332 iterations 3
Cbc0038I Pass  45: suminf.    0.37191 (2) obj. -14.9332 iterations 5
Cbc0038I Pass  46: suminf.    0.24993 (1) obj. -14.9332 iterations 10
Cbc0038I Pass  47: suminf.    0.28623 (2) obj. -14.9332 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -14.477 - took 0.03 seconds
Cbc0012I Integer solution of -14.477001 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 8 rows 10 columns
Cbc0031I 11 added rows had average density of 27.272727
Cbc0013I At root node, 11 cuts changed objective from -16.757746 to -15.391272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 437 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.477001 best solution, best possible -15.391272 (0.10 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 11 rows 15 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 16 rows 22 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 10 rows 12 columns
Cbc0038I Full problem 25 rows 40 columns, reduced to 13 rows 17 columns
Cbc0001I Search completed - best objective -14.47700137645008, took 7576 iterations and 360 nodes (0.30 seconds)
Cbc0032I Strong branching done 2718 times (11350 iterations), fathomed 107 nodes and fixed 90 variables
Cbc0035I Maximum depth 14, 565 variables fixed on reduced cost
Cuts at root node changed objective from -16.7577 to -15.3913
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 512 times and created 1452 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 512 times and created 126 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.47700138
Enumerated nodes:               360
Total iterations:               7576
Time (CPU seconds):             0.29
Time (Wallclock seconds):       0.30

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.30

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b51caba53b6e451d80fef613b69f75de-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/b51caba53b6e451d80fef613b69f75de-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.9726 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.9576 iterations 7
Cbc0038I Solution found of -32.4433
Cbc0038I Cleaned solution of -32.4433
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -32.4433 to -32.5481 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.9906
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.9576 iterations 0
Cbc0038I Pass   3: suminf.    0.44628 (1) obj. -32.9906 iterations 6
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -33.3092 iterations 9
Cbc0038I Pass   5: suminf.    0.42337 (1) obj. -32.9906 iterations 3
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -33.4757 iterations 6
Cbc0038I Pass   7: suminf.    0.00361 (1) obj. -32.9906 iterations 4
Cbc0038I Pass   8: suminf.    0.42857 (1) obj. -33.5308 iterations 5
Cbc0038I Pass   9: suminf.    0.01309 (1) obj. -32.9906 iterations 3
Cbc0038I Pass  10: suminf.    0.57927 (3) obj. -32.9906 iterations 27
Cbc0038I Pass  11: suminf.    0.54521 (2) obj. -32.9906 iterations 3
Cbc0038I Pass  12: suminf.    0.78710 (2) obj. -32.9906 iterations 5
Cbc0038I Pass  13: suminf.    0.50931 (2) obj. -32.9906 iterations 4
Cbc0038I Pass  14: suminf.    2.13114 (7) obj. -32.9906 iterations 9
Cbc0038I Pass  15: suminf.    0.44455 (1) obj. -32.9906 iterations 6
Cbc0038I Pass  16: suminf.    0.44455 (1) obj. -32.9906 iterations 0
Cbc0038I Pass  17: suminf.    0.14286 (1) obj. -33.3429 iterations 13
Cbc0038I Pass  18: suminf.    0.49302 (1) obj. -32.9906 iterations 4
Cbc0038I Pass  19: suminf.    0.76696 (3) obj. -32.9906 iterations 22
Cbc0038I Pass  20: suminf.    0.39823 (2) obj. -32.9906 iterations 2
Cbc0038I Pass  21: suminf.    0.57006 (2) obj. -32.9906 iterations 9
Cbc0038I Pass  22: suminf.    0.44455 (1) obj. -32.9906 iterations 2
Cbc0038I Pass  23: suminf.    0.14286 (1) obj. -33.3429 iterations 12
Cbc0038I Pass  24: suminf.    0.49302 (1) obj. -32.9906 iterations 4
Cbc0038I Pass  25: suminf.    0.60206 (3) obj. -32.9906 iterations 32
Cbc0038I Pass  26: suminf.    0.48193 (2) obj. -32.9906 iterations 6
Cbc0038I Pass  27: suminf.    0.30219 (2) obj. -32.9906 iterations 5
Cbc0038I Pass  28: suminf.    0.26506 (1) obj. -32.9906 iterations 1
Cbc0038I Solution found of -33.6107
Cbc0038I Cleaned solution of -33.6107
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -34.2831
Cbc0038I Pass  29: suminf.    0.85714 (6) obj. -36.9576 iterations 0
Cbc0038I Pass  30: suminf.    0.44273 (3) obj. -34.2831 iterations 11
Cbc0038I Pass  31: suminf.    0.38215 (3) obj. -34.2831 iterations 7
Cbc0038I Pass  32: suminf.    0.83327 (3) obj. -34.2831 iterations 11
Cbc0038I Pass  33: suminf.    0.42857 (2) obj. -34.3229 iterations 12
Cbc0038I Pass  34: suminf.    0.46886 (2) obj. -34.2831 iterations 6
Cbc0038I Pass  35: suminf.    1.75250 (9) obj. -34.2831 iterations 30
Cbc0038I Pass  36: suminf.    0.57143 (2) obj. -34.4071 iterations 11
Cbc0038I Pass  37: suminf.    0.97138 (3) obj. -34.2831 iterations 10
Cbc0038I Pass  38: suminf.    1.15825 (8) obj. -34.2831 iterations 5
Cbc0038I Pass  39: suminf.    2.24228 (7) obj. -34.2831 iterations 16
Cbc0038I Pass  40: suminf.    0.90529 (3) obj. -34.2831 iterations 14
Cbc0038I Pass  41: suminf.    0.80962 (3) obj. -34.2831 iterations 2
Cbc0038I Pass  42: suminf.    0.42857 (2) obj. -34.5734 iterations 14
Cbc0038I Pass  43: suminf.    0.14286 (1) obj. -34.3857 iterations 2
Cbc0038I Pass  44: suminf.    0.25742 (1) obj. -34.2831 iterations 4
Cbc0038I Pass  45: suminf.    0.40992 (4) obj. -34.2831 iterations 10
Cbc0038I Pass  46: suminf.    0.56159 (6) obj. -34.2831 iterations 7
Cbc0038I Pass  47: suminf.    0.15935 (1) obj. -34.2831 iterations 4
Cbc0038I Pass  48: suminf.    0.76245 (3) obj. -34.2831 iterations 7
Cbc0038I Pass  49: suminf.    0.52565 (2) obj. -34.2831 iterations 13
Cbc0038I Pass  50: suminf.    0.52565 (2) obj. -34.2831 iterations 1
Cbc0038I Pass  51: suminf.    0.26065 (2) obj. -34.2831 iterations 5
Cbc0038I Pass  52: suminf.    0.14286 (1) obj. -34.3028 iterations 10
Cbc0038I Pass  53: suminf.    0.16324 (1) obj. -34.2831 iterations 3
Cbc0038I Pass  54: suminf.    0.90076 (4) obj. -34.2831 iterations 24
Cbc0038I Pass  55: suminf.    0.57143 (3) obj. -34.5697 iterations 12
Cbc0038I Pass  56: suminf.    0.15376 (2) obj. -34.2831 iterations 12
Cbc0038I Pass  57: suminf.    0.56159 (6) obj. -34.2831 iterations 7
Cbc0038I Pass  58: suminf.    0.15935 (1) obj. -34.2831 iterations 4
Cbc0038I Rounding solution of -33.7876 is better than previous of -33.6107

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 32 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -35.0899
Cbc0038I Pass  58: suminf.    0.85714 (6) obj. -36.9576 iterations 0
Cbc0038I Pass  59: suminf.    0.58245 (4) obj. -35.0899 iterations 10
Cbc0038I Pass  60: suminf.    0.52019 (4) obj. -35.0899 iterations 10
Cbc0038I Pass  61: suminf.    0.53013 (3) obj. -35.0899 iterations 11
Cbc0038I Pass  62: suminf.    0.42857 (3) obj. -35.2061 iterations 9
Cbc0038I Pass  63: suminf.    0.73443 (3) obj. -35.0899 iterations 7
Cbc0038I Pass  64: suminf.    0.65259 (3) obj. -35.0899 iterations 2
Cbc0038I Pass  65: suminf.    0.98562 (3) obj. -35.0899 iterations 16
Cbc0038I Pass  66: suminf.    0.98562 (3) obj. -35.0899 iterations 0
Cbc0038I Pass  67: suminf.    0.45320 (3) obj. -35.0899 iterations 9
Cbc0038I Pass  68: suminf.    0.45320 (3) obj. -35.0899 iterations 2
Cbc0038I Pass  69: suminf.    0.98562 (3) obj. -35.0899 iterations 10
Cbc0038I Pass  70: suminf.    0.53419 (4) obj. -35.0899 iterations 17
Cbc0038I Pass  71: suminf.    0.78213 (3) obj. -35.0899 iterations 10
Cbc0038I Pass  72: suminf.    0.71666 (3) obj. -35.0899 iterations 2
Cbc0038I Pass  73: suminf.    0.98562 (3) obj. -35.0899 iterations 13
Cbc0038I Pass  74: suminf.    0.98562 (3) obj. -35.0899 iterations 0
Cbc0038I Pass  75: suminf.    0.45320 (3) obj. -35.0899 iterations 8
Cbc0038I Pass  76: suminf.    0.45320 (3) obj. -35.0899 iterations 2
Cbc0038I Pass  77: suminf.    0.98562 (3) obj. -35.0899 iterations 9
Cbc0038I Pass  78: suminf.    1.00047 (3) obj. -35.0899 iterations 5
Cbc0038I Pass  79: suminf.    0.45320 (3) obj. -35.0899 iterations 6
Cbc0038I Pass  80: suminf.    0.84804 (3) obj. -35.0899 iterations 3
Cbc0038I Pass  81: suminf.    0.51707 (3) obj. -35.0899 iterations 9
Cbc0038I Pass  82: suminf.    0.63828 (3) obj. -35.0899 iterations 15
Cbc0038I Pass  83: suminf.    0.56192 (3) obj. -35.0899 iterations 2
Cbc0038I Pass  84: suminf.    0.98562 (3) obj. -35.0899 iterations 9
Cbc0038I Pass  85: suminf.    0.98562 (3) obj. -35.0899 iterations 0
Cbc0038I Pass  86: suminf.    0.45320 (3) obj. -35.0899 iterations 7
Cbc0038I Pass  87: suminf.    0.45320 (3) obj. -35.0899 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -33.7876 - took 0.06 seconds
Cbc0012I Integer solution of -33.787613 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0031I 17 added rows had average density of 53.764706
Cbc0013I At root node, 17 cuts changed objective from -36.972604 to -34.870963 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 544 row cuts average 80.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 58 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -33.787613 best solution, best possible -34.870963 (0.22 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 16 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 9 rows 12 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 27 columns
Cbc0010I After 1000 nodes, 12 on tree, -33.787613 best solution, best possible -34.795729 (2.49 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 25 columns
Cbc0001I Search completed - best objective -33.78761253878463, took 302742 iterations and 42343 nodes (3.06 seconds)
Cbc0032I Strong branching done 10164 times (73519 iterations), fathomed 293 nodes and fixed 819 variables
Cbc0041I Maximum depth 23, 3385 variables fixed on reduced cost (complete fathoming 261 times, 40995 nodes taking 280388 iterations)
Cuts at root node changed objective from -36.9726 to -34.871
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 645 times and created 1017 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
TwoMirCuts was tried 645 times and created 249 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                33.78761254
Enumerated nodes:               42343
Total iterations:               302742
Time (CPU seconds):             2.96
Time (Wallclock seconds):       3.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.97   (Wallclock seconds):       3.06

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/bd7e3985aae441b3808b32d6798ab65c-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/bd7e3985aae441b3808b32d6798ab65c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.32297 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -9.22569 iterations 6
Cbc0038I Solution found of -7.20978
Cbc0038I Cleaned solution of -7.20978
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -7.20978 to -7.59891 (0.00 seconds)
Cbc0038I Round again with cutoff of -7.77132
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -9.22569 iterations 0
Cbc0038I Pass   3: suminf.    0.42513 (1) obj. -7.77132 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.02164 iterations 2
Cbc0038I Pass   5: suminf.    0.26865 (1) obj. -7.77132 iterations 3
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. -8.05697 iterations 3
Cbc0038I Pass   7: suminf.    0.11777 (1) obj. -7.77132 iterations 4
Cbc0038I Pass   8: suminf.    0.25000 (1) obj. -7.87723 iterations 3
Cbc0038I Pass   9: suminf.    0.57504 (2) obj. -7.77132 iterations 9
Cbc0038I Pass  10: suminf.    0.81754 (2) obj. -7.77132 iterations 6
Cbc0038I Pass  11: suminf.    0.27381 (1) obj. -7.77132 iterations 1
Cbc0038I Solution found of -7.9794
Cbc0038I Cleaned solution of -7.9794
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 10 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8.24812
Cbc0038I Pass  12: suminf.    0.75000 (3) obj. -9.22569 iterations 0
Cbc0038I Pass  13: suminf.    0.58593 (2) obj. -8.24812 iterations 5
Cbc0038I Pass  14: suminf.    0.49025 (2) obj. -8.24812 iterations 1
Cbc0038I Pass  15: suminf.    0.25000 (1) obj. -8.27823 iterations 6
Cbc0038I Pass  16: suminf.    0.68341 (2) obj. -8.24812 iterations 5
Cbc0038I Pass  17: suminf.    0.50000 (2) obj. -8.84139 iterations 3
Cbc0038I Pass  18: suminf.    0.25929 (2) obj. -8.24812 iterations 3
Cbc0038I Pass  19: suminf.    0.54339 (2) obj. -8.24812 iterations 6
Cbc0038I Pass  20: suminf.    0.25000 (1) obj. -8.45807 iterations 4
Cbc0038I Pass  21: suminf.    0.47374 (1) obj. -8.24812 iterations 2
Cbc0038I Pass  22: suminf.    0.33324 (1) obj. -8.24812 iterations 4
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -8.31138 iterations 1
Cbc0038I Pass  24: suminf.    0.33324 (1) obj. -8.24812 iterations 2
Cbc0038I Pass  25: suminf.    0.33324 (1) obj. -8.24812 iterations 0
Cbc0038I Pass  26: suminf.    0.56509 (2) obj. -8.24812 iterations 3
Cbc0038I Pass  27: suminf.    0.84183 (7) obj. -8.24812 iterations 8
Cbc0038I Pass  28: suminf.    0.67845 (2) obj. -8.24812 iterations 5
Cbc0038I Pass  29: suminf.    0.46006 (1) obj. -8.24812 iterations 2
Cbc0038I Pass  30: suminf.    0.25000 (1) obj. -8.45807 iterations 5
Cbc0038I Pass  31: suminf.    0.47374 (1) obj. -8.24812 iterations 2
Cbc0038I Pass  32: suminf.    0.72582 (2) obj. -8.24812 iterations 6
Cbc0038I Pass  33: suminf.    0.72582 (2) obj. -8.24812 iterations 2
Cbc0038I Pass  34: suminf.    0.75000 (2) obj. -8.64855 iterations 7
Cbc0038I Pass  35: suminf.    0.25000 (1) obj. -8.28562 iterations 2
Cbc0038I Pass  36: suminf.    0.68717 (2) obj. -8.24812 iterations 4
Cbc0038I Pass  37: suminf.    0.68717 (2) obj. -8.24812 iterations 1
Cbc0038I Pass  38: suminf.    0.68717 (2) obj. -8.24812 iterations 1
Cbc0038I Pass  39: suminf.    0.68717 (2) obj. -8.24812 iterations 0
Cbc0038I Pass  40: suminf.    1.41547 (4) obj. -8.24812 iterations 5
Cbc0038I Pass  41: suminf.    1.41547 (4) obj. -8.24812 iterations 0
Cbc0038I Rounding solution of -7.98828 is better than previous of -7.9794

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8.57058
Cbc0038I Pass  41: suminf.    0.75000 (3) obj. -9.22569 iterations 0
Cbc0038I Pass  42: suminf.    0.55977 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  43: suminf.    0.50000 (2) obj. -8.66252 iterations 2
Cbc0038I Pass  44: suminf.    0.85203 (3) obj. -8.57058 iterations 4
Cbc0038I Pass  45: suminf.    0.73809 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  46: suminf.    0.98940 (2) obj. -8.57058 iterations 7
Cbc0038I Pass  47: suminf.    0.42901 (2) obj. -8.57058 iterations 2
Cbc0038I Pass  48: suminf.    0.38917 (2) obj. -8.57058 iterations 2
Cbc0038I Pass  49: suminf.    0.60558 (2) obj. -8.57058 iterations 1
Cbc0038I Pass  50: suminf.    1.19419 (3) obj. -8.57058 iterations 7
Cbc0038I Pass  51: suminf.    1.19419 (3) obj. -8.57058 iterations 1
Cbc0038I Pass  52: suminf.    0.75000 (3) obj. -9.22569 iterations 9
Cbc0038I Pass  53: suminf.    0.55977 (2) obj. -8.57058 iterations 5
Cbc0038I Pass  54: suminf.    0.50000 (2) obj. -8.66252 iterations 4
Cbc0038I Pass  55: suminf.    0.85203 (3) obj. -8.57058 iterations 5
Cbc0038I Pass  56: suminf.    0.73809 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  57: suminf.    0.98940 (2) obj. -8.57058 iterations 5
Cbc0038I Pass  58: suminf.    0.42901 (2) obj. -8.57058 iterations 2
Cbc0038I Pass  59: suminf.    0.38917 (2) obj. -8.57058 iterations 2
Cbc0038I Pass  60: suminf.    0.60558 (2) obj. -8.57058 iterations 1
Cbc0038I Pass  61: suminf.    0.38917 (2) obj. -8.57058 iterations 1
Cbc0038I Pass  62: suminf.    0.38917 (2) obj. -8.57058 iterations 1
Cbc0038I Pass  63: suminf.    0.38917 (2) obj. -8.57058 iterations 1
Cbc0038I Pass  64: suminf.    0.38917 (2) obj. -8.57058 iterations 2
Cbc0038I Pass  65: suminf.    0.50520 (2) obj. -8.57058 iterations 5
Cbc0038I Pass  66: suminf.    0.42652 (2) obj. -8.57058 iterations 4
Cbc0038I Pass  67: suminf.    0.44454 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  68: suminf.    0.42652 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  69: suminf.    0.48210 (2) obj. -8.57058 iterations 3
Cbc0038I Pass  70: suminf.    0.60947 (2) obj. -8.57058 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7.98828 - took 0.01 seconds
Cbc0012I Integer solution of -7.9882839 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 4 rows 6 columns
Cbc0031I 8 added rows had average density of 13.875
Cbc0013I At root node, 8 cuts changed objective from -9.3229725 to -8.4438924 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 716 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 77 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.9882839 best solution, best possible -8.4438924 (0.07 seconds)
Cbc0001I Search completed - best objective -7.988283921033019, took 1919 iterations and 20 nodes (0.09 seconds)
Cbc0032I Strong branching done 210 times (859 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Cuts at root node changed objective from -9.32297 to -8.44389
Probing was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 197 times and created 999 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 197 times and created 115 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 197 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Optimal solution found

Objective value:                7.98828392
Enumerated nodes:               20
Total iterations:               1919
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b57cf764e2f849d4afeebe7008d138e5-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/b57cf764e2f849d4afeebe7008d138e5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.4081 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.3389 iterations 9
Cbc0038I Solution found of -15.0958
Cbc0038I Cleaned solution of -15.0958
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -15.0958 to -15.4418 (0.00 seconds)
Cbc0038I Round again with cutoff of -15.5385
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.3389 iterations 0
Cbc0038I Pass   3: suminf.    0.40130 (1) obj. -15.5385 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -15.6873 iterations 7
Cbc0038I Pass   5: suminf.    0.34869 (2) obj. -15.5385 iterations 2
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -15.6873 iterations 2
Cbc0038I Pass   7: suminf.    0.34236 (1) obj. -15.5385 iterations 4
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -15.6873 iterations 3
Cbc0038I Pass   9: suminf.    0.21342 (1) obj. -15.5385 iterations 3
Cbc0038I Pass  10: suminf.    0.21342 (1) obj. -15.5385 iterations 0
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -15.7213 iterations 8
Cbc0038I Pass  12: suminf.    0.41096 (1) obj. -15.5385 iterations 1
Cbc0038I Pass  13: suminf.    2.03147 (8) obj. -15.5385 iterations 15
Cbc0038I Pass  14: suminf.    0.60000 (3) obj. -15.8326 iterations 4
Cbc0038I Pass  15: suminf.    0.44264 (2) obj. -15.5385 iterations 6
Cbc0038I Pass  16: suminf.    0.40000 (2) obj. -15.5683 iterations 6
Cbc0038I Pass  17: suminf.    0.43444 (2) obj. -15.5385 iterations 3
Cbc0038I Pass  18: suminf.    0.61566 (2) obj. -15.5385 iterations 3
Cbc0038I Pass  19: suminf.    0.61566 (2) obj. -15.5385 iterations 0
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -15.7213 iterations 6
Cbc0038I Pass  21: suminf.    0.41096 (1) obj. -15.5385 iterations 1
Cbc0038I Pass  22: suminf.    0.41096 (1) obj. -15.5385 iterations 0
Cbc0038I Pass  23: suminf.    0.21342 (1) obj. -15.5385 iterations 2
Cbc0038I Pass  24: suminf.    0.21342 (1) obj. -15.5385 iterations 0
Cbc0038I Pass  25: suminf.    1.09122 (4) obj. -15.5385 iterations 15
Cbc0038I Pass  26: suminf.    1.09122 (4) obj. -15.5385 iterations 0
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -15.57 iterations 5
Cbc0038I Pass  28: suminf.    0.23265 (1) obj. -15.5385 iterations 1
Cbc0038I Pass  29: suminf.    0.41239 (2) obj. -15.5385 iterations 3
Cbc0038I Pass  30: suminf.    0.94394 (4) obj. -15.5385 iterations 9
Cbc0038I Pass  31: suminf.    0.60000 (3) obj. -15.9766 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 19 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.4418 - took 0.00 seconds
Cbc0012I Integer solution of -15.441838 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 5 added rows had average density of 10.4
Cbc0013I At root node, 5 cuts changed objective from -16.408055 to -15.559493 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 1.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 13 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15.4418383389711, took 19 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Cuts at root node changed objective from -16.4081 to -15.5595
Probing was tried 3 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.44183834
Enumerated nodes:               0
Total iterations:               19
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a8a8c3ebaaa24076ac8a355836655fde-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/a8a8c3ebaaa24076ac8a355836655fde-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.2609 - 0.00 seconds
Cgl0004I processed model has 25 rows, 39 columns (39 integer (19 of which binary)) and 98 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (3) obj. -16.1702 iterations 4
Cbc0038I Solution found of -14.3258
Cbc0038I Cleaned solution of -14.3258
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -14.3258 to -14.5659 (0.00 seconds)
Cbc0038I Round again with cutoff of -14.7355
Cbc0038I Pass   2: suminf.    0.80000 (3) obj. -16.1702 iterations 0
Cbc0038I Pass   3: suminf.    0.46692 (1) obj. -14.7355 iterations 4
Cbc0038I Pass   4: suminf.    0.40000 (1) obj. -14.8197 iterations 11
Cbc0038I Pass   5: suminf.    0.48793 (1) obj. -14.7355 iterations 2
Cbc0038I Pass   6: suminf.    0.90310 (3) obj. -14.7355 iterations 8
Cbc0038I Pass   7: suminf.    0.79416 (3) obj. -14.7355 iterations 1
Cbc0038I Pass   8: suminf.    0.40000 (1) obj. -14.9598 iterations 4
Cbc0038I Pass   9: suminf.    0.14426 (1) obj. -14.7355 iterations 3
Cbc0038I Pass  10: suminf.    0.69442 (2) obj. -14.7355 iterations 5
Cbc0038I Solution found of -14.9229
Cbc0038I Cleaned solution of -14.9229
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 12 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -14.9229 to -14.9653 (0.00 seconds)
Cbc0038I Round again with cutoff of -15.2244
Cbc0038I Pass  11: suminf.    0.80000 (3) obj. -16.1702 iterations 0
Cbc0038I Pass  12: suminf.    0.83833 (2) obj. -15.2244 iterations 12
Cbc0038I Pass  13: suminf.    0.67174 (2) obj. -15.2244 iterations 2
Cbc0038I Pass  14: suminf.    0.44234 (2) obj. -15.2244 iterations 5
Cbc0038I Pass  15: suminf.    0.37656 (2) obj. -15.2244 iterations 1
Cbc0038I Pass  16: suminf.    0.60000 (2) obj. -15.6409 iterations 10
Cbc0038I Pass  17: suminf.    0.20000 (1) obj. -15.337 iterations 2
Cbc0038I Pass  18: suminf.    0.48875 (2) obj. -15.2244 iterations 4
Cbc0038I Pass  19: suminf.    0.18810 (1) obj. -15.2244 iterations 4
Cbc0038I Pass  20: suminf.    0.18810 (1) obj. -15.2244 iterations 0
Cbc0038I Pass  21: suminf.    0.83029 (5) obj. -15.2244 iterations 2
Cbc0038I Pass  22: suminf.    0.18810 (1) obj. -15.2244 iterations 1
Cbc0038I Pass  23: suminf.    0.18810 (1) obj. -15.2244 iterations 1
Cbc0038I Pass  24: suminf.    0.37656 (2) obj. -15.2244 iterations 6
Cbc0038I Pass  25: suminf.    0.37656 (2) obj. -15.2244 iterations 0
Cbc0038I Pass  26: suminf.    0.60000 (2) obj. -15.6409 iterations 8
Cbc0038I Pass  27: suminf.    0.20000 (1) obj. -15.337 iterations 2
Cbc0038I Pass  28: suminf.    0.48875 (2) obj. -15.2244 iterations 4
Cbc0038I Pass  29: suminf.    0.48875 (2) obj. -15.2244 iterations 0
Cbc0038I Pass  30: suminf.    0.48875 (2) obj. -15.2244 iterations 0
Cbc0038I Pass  31: suminf.    0.43674 (2) obj. -15.2244 iterations 7
Cbc0038I Pass  32: suminf.    0.43674 (2) obj. -15.2244 iterations 0
Cbc0038I Pass  33: suminf.    0.60000 (2) obj. -15.6409 iterations 10
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -15.337 iterations 2
Cbc0038I Pass  35: suminf.    0.69461 (2) obj. -15.2244 iterations 16
Cbc0038I Pass  36: suminf.    0.69461 (2) obj. -15.2244 iterations 0
Cbc0038I Pass  37: suminf.    0.51515 (4) obj. -15.2244 iterations 7
Cbc0038I Pass  38: suminf.    0.51515 (4) obj. -15.2244 iterations 1
Cbc0038I Pass  39: suminf.    0.68984 (2) obj. -15.2244 iterations 8
Cbc0038I Pass  40: suminf.    0.68984 (2) obj. -15.2244 iterations 1
Cbc0038I Rounding solution of -15.0995 is better than previous of -14.9653

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 13 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.5354
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 4
Cbc0038I Pass  40: suminf.    0.80000 (3) obj. -16.1702 iterations 0
Cbc0038I Pass  41: suminf.    0.60479 (3) obj. -15.5354 iterations 11
Cbc0038I Pass  42: suminf.    0.84334 (7) obj. -15.5354 iterations 5
Cbc0038I Pass  43: suminf.    0.47081 (2) obj. -15.5354 iterations 7
Cbc0038I Pass  44: suminf.    0.38927 (2) obj. -15.5354 iterations 2
Cbc0038I Pass  45: suminf.    0.66205 (2) obj. -15.5354 iterations 4
Cbc0038I Pass  46: suminf.    0.20000 (1) obj. -15.5502 iterations 7
Cbc0038I Pass  47: suminf.    0.66205 (2) obj. -15.5354 iterations 3
Cbc0038I Pass  48: suminf.    0.40077 (3) obj. -15.5354 iterations 4
Cbc0038I Pass  49: suminf.    0.41374 (7) obj. -15.5354 iterations 1
Cbc0038I Pass  50: suminf.    0.67341 (3) obj. -15.5354 iterations 12
Cbc0038I Pass  51: suminf.    0.60490 (3) obj. -15.5354 iterations 2
Cbc0038I Pass  52: suminf.    0.60000 (2) obj. -15.6409 iterations 11
Cbc0038I Pass  53: suminf.    1.15017 (7) obj. -15.5354 iterations 3
Cbc0038I Pass  54: suminf.    0.95339 (3) obj. -15.5354 iterations 8
Cbc0038I Pass  55: suminf.    0.80000 (3) obj. -16.1702 iterations 9
Cbc0038I Pass  56: suminf.    0.60479 (3) obj. -15.5354 iterations 9
Cbc0038I Pass  57: suminf.    0.84334 (7) obj. -15.5354 iterations 4
Cbc0038I Pass  58: suminf.    0.47081 (2) obj. -15.5354 iterations 7
Cbc0038I Pass  59: suminf.    0.38927 (2) obj. -15.5354 iterations 2
Cbc0038I Pass  60: suminf.    0.66205 (2) obj. -15.5354 iterations 4
Cbc0038I Pass  61: suminf.    0.20000 (1) obj. -15.5502 iterations 7
Cbc0038I Pass  62: suminf.    0.66205 (2) obj. -15.5354 iterations 3
Cbc0038I Pass  63: suminf.    0.43755 (2) obj. -15.5354 iterations 2
Cbc0038I Pass  64: suminf.    0.37427 (2) obj. -15.5354 iterations 1
Cbc0038I Pass  65: suminf.    0.44175 (2) obj. -15.5354 iterations 2
Cbc0038I Pass  66: suminf.    0.37427 (2) obj. -15.5354 iterations 2
Cbc0038I Pass  67: suminf.    0.66205 (2) obj. -15.5354 iterations 3
Cbc0038I Pass  68: suminf.    0.20000 (1) obj. -15.5502 iterations 3
Cbc0038I Pass  69: suminf.    0.66205 (2) obj. -15.5354 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 13 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.0995 - took 0.01 seconds
Cbc0012I Integer solution of -15.099503 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 39 columns, reduced to 4 rows 6 columns
Cbc0031I 6 added rows had average density of 25
Cbc0013I At root node, 6 cuts changed objective from -16.260895 to -15.359364 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 4.0 elements, 5 column cuts (5 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 552 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 8 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 53 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 11 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.099503 best solution, best possible -15.359364 (0.07 seconds)
Cbc0001I Search completed - best objective -15.09950275719175, took 1781 iterations and 28 nodes (0.10 seconds)
Cbc0032I Strong branching done 250 times (914 iterations), fathomed 4 nodes and fixed 2 variables
Cbc0035I Maximum depth 8, 42 variables fixed on reduced cost
Cuts at root node changed objective from -16.2609 to -15.3594
Probing was tried 100 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 175 times and created 699 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 175 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 100 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 82 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.09950276
Enumerated nodes:               28
Total iterations:               1781
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/45d145c3d7734607983571a4f9e51f8b-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/45d145c3d7734607983571a4f9e51f8b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.0059 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.9442 iterations 9
Cbc0038I Solution found of -21.4983
Cbc0038I Cleaned solution of -21.4983
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -21.4983 to -21.8686 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.1824
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.9442 iterations 0
Cbc0038I Pass   3: suminf.    0.29118 (1) obj. -22.1824 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -22.3027 iterations 7
Cbc0038I Pass   5: suminf.    0.29147 (1) obj. -22.1824 iterations 1
Cbc0038I Pass   6: suminf.    0.98700 (5) obj. -22.1824 iterations 15
Cbc0038I Pass   7: suminf.    0.16667 (1) obj. -22.6314 iterations 4
Cbc0038I Pass   8: suminf.    0.36758 (1) obj. -22.1824 iterations 3
Cbc0038I Pass   9: suminf.    0.57102 (2) obj. -22.1824 iterations 10
Cbc0038I Pass  10: suminf.    0.52419 (2) obj. -22.1824 iterations 2
Cbc0038I Pass  11: suminf.    0.03746 (1) obj. -22.1824 iterations 4
Cbc0038I Pass  12: suminf.    0.33333 (1) obj. -22.5711 iterations 10
Cbc0038I Solution found of -22.3833
Cbc0038I Cleaned solution of -22.3833
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.9078
Cbc0038I Pass  13: suminf.    0.83333 (5) obj. -24.9442 iterations 0
Cbc0038I Pass  14: suminf.    0.49464 (2) obj. -22.9078 iterations 9
Cbc0038I Pass  15: suminf.    0.33333 (2) obj. -23.0533 iterations 8
Cbc0038I Pass  16: suminf.    0.49482 (2) obj. -22.9078 iterations 3
Cbc0038I Pass  17: suminf.    0.22665 (2) obj. -22.9078 iterations 18
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -22.9495 iterations 5
Cbc0038I Pass  19: suminf.    0.20992 (1) obj. -22.9078 iterations 3
Cbc0038I Pass  20: suminf.    0.35211 (3) obj. -22.9078 iterations 7
Cbc0038I Pass  21: suminf.    1.83589 (7) obj. -22.9078 iterations 6
Cbc0038I Pass  22: suminf.    1.72827 (5) obj. -22.9078 iterations 9
Cbc0038I Pass  23: suminf.    0.16667 (1) obj. -23.036 iterations 7
Cbc0038I Pass  24: suminf.    0.29957 (1) obj. -22.9078 iterations 4
Cbc0038I Pass  25: suminf.    0.44227 (3) obj. -22.9078 iterations 16
Cbc0038I Pass  26: suminf.    1.44252 (7) obj. -22.9078 iterations 9
Cbc0038I Pass  27: suminf.    0.40352 (2) obj. -22.9078 iterations 7
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.0196 iterations 8
Cbc0038I Pass  29: suminf.    0.28265 (1) obj. -22.9078 iterations 4
Cbc0038I Pass  30: suminf.    0.38748 (2) obj. -22.9078 iterations 5
Cbc0038I Pass  31: suminf.    0.33333 (2) obj. -22.9327 iterations 11
Cbc0038I Pass  32: suminf.    0.37025 (2) obj. -22.9078 iterations 8
Cbc0038I Pass  33: suminf.    0.31716 (2) obj. -22.9078 iterations 19
Cbc0038I Pass  34: suminf.    0.16667 (1) obj. -22.9765 iterations 6
Cbc0038I Pass  35: suminf.    0.23792 (1) obj. -22.9078 iterations 3
Cbc0038I Pass  36: suminf.    1.30801 (5) obj. -22.9078 iterations 9
Cbc0038I Pass  37: suminf.    0.16667 (1) obj. -23.0375 iterations 9
Cbc0038I Pass  38: suminf.    0.30113 (1) obj. -22.9078 iterations 4
Cbc0038I Pass  39: suminf.    0.42776 (1) obj. -22.9078 iterations 6
Cbc0038I Pass  40: suminf.    0.54255 (2) obj. -22.9078 iterations 10
Cbc0038I Pass  41: suminf.    0.28695 (2) obj. -22.9078 iterations 10
Cbc0038I Pass  42: suminf.    0.62423 (2) obj. -22.9078 iterations 6
Cbc0038I Rounding solution of -22.5195 is better than previous of -22.3833

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 23 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -23.5372
Cbc0038I Pass  42: suminf.    0.83333 (5) obj. -24.9442 iterations 0
Cbc0038I Pass  43: suminf.    0.81713 (3) obj. -23.5372 iterations 14
Cbc0038I Pass  44: suminf.    0.50000 (3) obj. -23.8387 iterations 7
Cbc0038I Pass  45: suminf.    0.82987 (3) obj. -23.5372 iterations 5
Cbc0038I Pass  46: suminf.    0.86476 (4) obj. -23.5372 iterations 13
Cbc0038I Pass  47: suminf.    0.80420 (4) obj. -23.5372 iterations 2
Cbc0038I Pass  48: suminf.    0.98062 (3) obj. -23.5372 iterations 14
Cbc0038I Pass  49: suminf.    0.43262 (2) obj. -23.5372 iterations 2
Cbc0038I Pass  50: suminf.    0.33333 (2) obj. -23.5571 iterations 6
Cbc0038I Pass  51: suminf.    0.36279 (2) obj. -23.5372 iterations 7
Cbc0038I Pass  52: suminf.    0.38732 (2) obj. -23.5372 iterations 9
Cbc0038I Pass  53: suminf.    0.33333 (2) obj. -23.5631 iterations 10
Cbc0038I Pass  54: suminf.    0.37143 (2) obj. -23.5372 iterations 7
Cbc0038I Pass  55: suminf.    0.35552 (3) obj. -23.5372 iterations 6
Cbc0038I Pass  56: suminf.    0.34858 (3) obj. -23.5372 iterations 3
Cbc0038I Pass  57: suminf.    0.36164 (3) obj. -23.5372 iterations 6
Cbc0038I Pass  58: suminf.    1.29943 (6) obj. -23.5372 iterations 7
Cbc0038I Pass  59: suminf.    0.67378 (3) obj. -23.5372 iterations 6
Cbc0038I Pass  60: suminf.    0.77948 (3) obj. -23.5372 iterations 7
Cbc0038I Pass  61: suminf.    1.38609 (8) obj. -23.5372 iterations 9
Cbc0038I Pass  62: suminf.    0.51141 (3) obj. -23.5372 iterations 4
Cbc0038I Pass  63: suminf.    0.89728 (3) obj. -23.5372 iterations 5
Cbc0038I Pass  64: suminf.    0.44861 (2) obj. -23.5372 iterations 1
Cbc0038I Pass  65: suminf.    0.33333 (2) obj. -23.5631 iterations 10
Cbc0038I Pass  66: suminf.    0.37143 (2) obj. -23.5372 iterations 8
Cbc0038I Pass  67: suminf.    0.77301 (3) obj. -23.5372 iterations 8
Cbc0038I Pass  68: suminf.    2.74723 (8) obj. -23.5372 iterations 17
Cbc0038I Pass  69: suminf.    0.75783 (3) obj. -23.5372 iterations 5
Cbc0038I Pass  70: suminf.    0.40150 (2) obj. -23.5372 iterations 9
Cbc0038I Pass  71: suminf.    0.33333 (2) obj. -23.5571 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 25 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -22.5195 - took 0.05 seconds
Cbc0012I Integer solution of -22.519469 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 11 added rows had average density of 47.909091
Cbc0013I At root node, 11 cuts changed objective from -25.0059 to -24.06197 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1010 row cuts average 58.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 25 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 132 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.519469 best solution, best possible -24.06197 (0.21 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 14 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 12 rows 16 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 17 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 29 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 26 columns
Cbc0001I Search completed - best objective -22.51946910098181, took 19702 iterations and 1718 nodes (0.89 seconds)
Cbc0032I Strong branching done 7242 times (39504 iterations), fathomed 251 nodes and fixed 310 variables
Cbc0041I Maximum depth 19, 1988 variables fixed on reduced cost (complete fathoming 61 times, 854 nodes taking 4180 iterations)
Cuts at root node changed objective from -25.0059 to -24.062
Probing was tried 100 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 647 times and created 2164 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 647 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ZeroHalf was tried 647 times and created 513 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)

Result - Optimal solution found

Objective value:                22.51946910
Enumerated nodes:               1718
Total iterations:               19702
Time (CPU seconds):             0.85
Time (Wallclock seconds):       0.89

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.89

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/fd18eb3132fb4069895c94bf0506ba25-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/fd18eb3132fb4069895c94bf0506ba25-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25.1947 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -25.1718 iterations 5
Cbc0038I Solution found of -22.0008
Cbc0038I Cleaned solution of -22.0008
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -22.0008 to -22.1387 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.4443
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -25.1718 iterations 0
Cbc0038I Pass   3: suminf.    0.48034 (1) obj. -22.4443 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -22.7615 iterations 7
Cbc0038I Pass   5: suminf.    0.49207 (1) obj. -22.4443 iterations 1
Cbc0038I Pass   6: suminf.    0.53566 (2) obj. -22.4443 iterations 5
Cbc0038I Pass   7: suminf.    0.33333 (2) obj. -22.6093 iterations 9
Cbc0038I Pass   8: suminf.    0.53438 (2) obj. -22.4443 iterations 2
Cbc0038I Pass   9: suminf.    1.12399 (4) obj. -22.4443 iterations 16
Cbc0038I Pass  10: suminf.    0.16667 (1) obj. -22.757 iterations 5
Cbc0038I Pass  11: suminf.    0.48744 (1) obj. -22.4443 iterations 2
Cbc0038I Pass  12: suminf.    0.47522 (2) obj. -22.4443 iterations 6
Cbc0038I Pass  13: suminf.    0.40191 (2) obj. -22.4443 iterations 4
Cbc0038I Pass  14: suminf.    2.05600 (7) obj. -22.4443 iterations 8
Cbc0038I Pass  15: suminf.    0.17782 (1) obj. -22.4443 iterations 2
Cbc0038I Pass  16: suminf.    0.16667 (1) obj. -22.8752 iterations 13
Cbc0038I Pass  17: suminf.    0.39132 (1) obj. -22.4443 iterations 2
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -22.8752 iterations 2
Cbc0038I Pass  19: suminf.    0.51227 (2) obj. -22.4443 iterations 18
Cbc0038I Pass  20: suminf.    0.33333 (2) obj. -22.5548 iterations 10
Cbc0038I Pass  21: suminf.    0.44766 (2) obj. -22.4443 iterations 4
Cbc0038I Pass  22: suminf.    0.48450 (2) obj. -22.4443 iterations 9
Cbc0038I Pass  23: suminf.    0.41842 (2) obj. -22.4443 iterations 2
Cbc0038I Solution found of -22.5555
Cbc0038I Cleaned solution of -22.5555
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 24 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -22.5555 to -22.608 (0.03 seconds)
Cbc0038I Round again with cutoff of -23.1254
Cbc0038I Pass  24: suminf.    0.83333 (5) obj. -25.1718 iterations 0
Cbc0038I Pass  25: suminf.    0.59939 (2) obj. -23.1254 iterations 8
Cbc0038I Pass  26: suminf.    0.52718 (2) obj. -23.1254 iterations 1
Cbc0038I Pass  27: suminf.    0.24588 (2) obj. -23.1254 iterations 9
Cbc0038I Pass  28: suminf.    0.16667 (1) obj. -23.1638 iterations 7
Cbc0038I Pass  29: suminf.    0.27070 (1) obj. -23.1254 iterations 2
Cbc0038I Pass  30: suminf.    0.16667 (1) obj. -23.1549 iterations 8
Cbc0038I Pass  31: suminf.    0.19697 (1) obj. -23.1254 iterations 1
Cbc0038I Pass  32: suminf.    0.27070 (1) obj. -23.1254 iterations 4
Cbc0038I Pass  33: suminf.    0.76848 (3) obj. -23.1254 iterations 21
Cbc0038I Pass  34: suminf.    0.50000 (2) obj. -23.3937 iterations 9
Cbc0038I Pass  35: suminf.    0.32500 (2) obj. -23.1254 iterations 5
Cbc0038I Pass  36: suminf.    0.22928 (2) obj. -23.1254 iterations 1
Cbc0038I Pass  37: suminf.    0.16667 (1) obj. -23.1549 iterations 8
Cbc0038I Pass  38: suminf.    0.19697 (1) obj. -23.1254 iterations 1
Cbc0038I Pass  39: suminf.    0.22942 (2) obj. -23.1254 iterations 4
Cbc0038I Pass  40: suminf.    0.28026 (2) obj. -23.1254 iterations 11
Cbc0038I Pass  41: suminf.    0.22124 (2) obj. -23.1254 iterations 2
Cbc0038I Pass  42: suminf.    0.63310 (2) obj. -23.1254 iterations 3
Cbc0038I Pass  43: suminf.    0.42157 (1) obj. -23.1254 iterations 2
Cbc0038I Pass  44: suminf.    0.16667 (1) obj. -23.2523 iterations 10
Cbc0038I Pass  45: suminf.    0.29800 (1) obj. -23.1254 iterations 3
Cbc0038I Pass  46: suminf.    0.42157 (1) obj. -23.1254 iterations 2
Cbc0038I Pass  47: suminf.    0.42157 (1) obj. -23.1254 iterations 0
Cbc0038I Pass  48: suminf.    0.40926 (1) obj. -23.1254 iterations 5
Cbc0038I Pass  49: suminf.    0.24586 (2) obj. -23.1254 iterations 13
Cbc0038I Pass  50: suminf.    0.21220 (2) obj. -23.1254 iterations 1
Cbc0038I Pass  51: suminf.    0.63310 (2) obj. -23.1254 iterations 10
Cbc0038I Pass  52: suminf.    0.42157 (1) obj. -23.1254 iterations 1
Cbc0038I Pass  53: suminf.    0.16667 (1) obj. -23.2523 iterations 9
Cbc0038I Rounding solution of -22.7303 is better than previous of -22.608

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -23.7462
Cbc0038I Pass  53: suminf.    0.83333 (5) obj. -25.1718 iterations 0
Cbc0038I Pass  54: suminf.    0.70733 (3) obj. -23.7462 iterations 11
Cbc0038I Pass  55: suminf.    0.60197 (3) obj. -23.7462 iterations 4
Cbc0038I Pass  56: suminf.    0.34575 (2) obj. -23.7462 iterations 9
Cbc0038I Pass  57: suminf.    1.68787 (6) obj. -23.7462 iterations 8
Cbc0038I Pass  58: suminf.    0.49693 (2) obj. -23.7462 iterations 9
Cbc0038I Pass  59: suminf.    0.33333 (2) obj. -23.8081 iterations 6
Cbc0038I Pass  60: suminf.    0.42616 (2) obj. -23.7462 iterations 4
Cbc0038I Pass  61: suminf.    0.44224 (2) obj. -23.7462 iterations 1
Cbc0038I Pass  62: suminf.    0.43522 (3) obj. -23.7462 iterations 14
Cbc0038I Pass  63: suminf.    0.47730 (6) obj. -23.7462 iterations 8
Cbc0038I Pass  64: suminf.    0.46249 (2) obj. -23.7462 iterations 3
Cbc0038I Pass  65: suminf.    0.39824 (3) obj. -23.7462 iterations 10
Cbc0038I Pass  66: suminf.    0.40994 (2) obj. -23.7462 iterations 6
Cbc0038I Pass  67: suminf.    0.62904 (3) obj. -23.7462 iterations 7
Cbc0038I Pass  68: suminf.    0.40415 (2) obj. -23.7462 iterations 6
Cbc0038I Pass  69: suminf.    0.44895 (2) obj. -23.7462 iterations 12
Cbc0038I Pass  70: suminf.    0.48528 (2) obj. -23.7462 iterations 6
Cbc0038I Pass  71: suminf.    0.63766 (3) obj. -23.7462 iterations 10
Cbc0038I Pass  72: suminf.    2.16201 (8) obj. -23.7462 iterations 7
Cbc0038I Pass  73: suminf.    0.41594 (3) obj. -23.7462 iterations 9
Cbc0038I Pass  74: suminf.    0.87627 (4) obj. -23.7462 iterations 10
Cbc0038I Pass  75: suminf.    0.71832 (4) obj. -23.7462 iterations 9
Cbc0038I Pass  76: suminf.    0.49693 (2) obj. -23.7462 iterations 4
Cbc0038I Pass  77: suminf.    0.33333 (2) obj. -23.8081 iterations 5
Cbc0038I Pass  78: suminf.    0.42616 (2) obj. -23.7462 iterations 4
Cbc0038I Pass  79: suminf.    0.38846 (2) obj. -23.7462 iterations 8
Cbc0038I Pass  80: suminf.    0.38407 (3) obj. -23.7462 iterations 12
Cbc0038I Pass  81: suminf.    1.68787 (6) obj. -23.7462 iterations 9
Cbc0038I Pass  82: suminf.    0.49693 (2) obj. -23.7462 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -22.7303 - took 0.06 seconds
Cbc0012I Integer solution of -22.730287 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 6 rows 9 columns
Cbc0031I 14 added rows had average density of 45.785714
Cbc0013I At root node, 14 cuts changed objective from -25.194729 to -24.21981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 768 row cuts average 58.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 9 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 66 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 109 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.730287 best solution, best possible -24.21981 (0.21 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 14 rows 18 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 19 columns
Cbc0001I Search completed - best objective -22.73028668761254, took 38723 iterations and 6446 nodes (1.00 seconds)
Cbc0032I Strong branching done 6886 times (38921 iterations), fathomed 238 nodes and fixed 461 variables
Cbc0041I Maximum depth 18, 1415 variables fixed on reduced cost (complete fathoming 50 times, 5664 nodes taking 24385 iterations)
Cuts at root node changed objective from -25.1947 to -24.2198
Probing was tried 100 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 528 times and created 1702 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 528 times and created 140 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ZeroHalf was tried 528 times and created 418 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)

Result - Optimal solution found

Objective value:                22.73028669
Enumerated nodes:               6446
Total iterations:               38723
Time (CPU seconds):             0.97
Time (Wallclock seconds):       1.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1cf77789637947f78b14b06e6605b2cd-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/1cf77789637947f78b14b06e6605b2cd-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 9.39053 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -9.39053 iterations 6
Cbc0038I Solution found of -7.77745
Cbc0038I Cleaned solution of -7.77745
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -7.93876
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -9.39053 iterations 0
Cbc0038I Pass   3: suminf.    0.19932 (1) obj. -7.93876 iterations 3
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -8.35021 iterations 6
Cbc0038I Pass   5: suminf.    0.31523 (1) obj. -7.93876 iterations 1
Cbc0038I Pass   6: suminf.    0.41621 (1) obj. -7.93876 iterations 8
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -8.09605 iterations 1
Cbc0038I Pass   8: suminf.    0.41621 (1) obj. -7.93876 iterations 1
Cbc0038I Pass   9: suminf.    0.45253 (1) obj. -7.93876 iterations 4
Cbc0038I Pass  10: suminf.    0.25000 (1) obj. -8.22027 iterations 1
Cbc0038I Pass  11: suminf.    0.45253 (1) obj. -7.93876 iterations 1
Cbc0038I Pass  12: suminf.    0.45029 (1) obj. -7.93876 iterations 5
Cbc0038I Pass  13: suminf.    0.25000 (1) obj. -8.1283 iterations 1
Cbc0038I Pass  14: suminf.    0.45029 (1) obj. -7.93876 iterations 1
Cbc0038I Pass  15: suminf.    0.42518 (1) obj. -7.93876 iterations 4
Cbc0038I Pass  16: suminf.    0.42518 (1) obj. -7.93876 iterations 1
Cbc0038I Pass  17: suminf.    0.25000 (1) obj. -8.22027 iterations 4
Cbc0038I Pass  18: suminf.    0.45253 (1) obj. -7.93876 iterations 1
Cbc0038I Pass  19: suminf.    0.56900 (2) obj. -7.93876 iterations 1
Cbc0038I Pass  20: suminf.    0.06181 (1) obj. -7.93876 iterations 3
Cbc0038I Solution found of -7.99331
Cbc0038I Cleaned solution of -7.99331
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -8.27276
Cbc0038I Pass  21: suminf.    0.75000 (3) obj. -9.39053 iterations 0
Cbc0038I Pass  22: suminf.    0.38800 (1) obj. -8.27276 iterations 3
Cbc0038I Pass  23: suminf.    0.25000 (1) obj. -8.35021 iterations 6
Cbc0038I Pass  24: suminf.    0.33183 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  25: suminf.    0.02407 (1) obj. -8.27276 iterations 9
Cbc0038I Pass  26: suminf.    0.02407 (1) obj. -8.27276 iterations 0
Cbc0038I Pass  27: suminf.    0.25000 (1) obj. -8.31185 iterations 3
Cbc0038I Pass  28: suminf.    0.20171 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  29: suminf.    1.15527 (3) obj. -8.27276 iterations 4
Cbc0038I Pass  30: suminf.    0.20171 (1) obj. -8.27276 iterations 5
Cbc0038I Pass  31: suminf.    0.32612 (2) obj. -8.27276 iterations 6
Cbc0038I Pass  32: suminf.    0.17519 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  33: suminf.    0.17519 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  34: suminf.    0.17519 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  35: suminf.    0.25000 (1) obj. -8.31185 iterations 4
Cbc0038I Pass  36: suminf.    0.44753 (2) obj. -8.27276 iterations 3
Cbc0038I Pass  37: suminf.    0.25000 (1) obj. -8.33647 iterations 2
Cbc0038I Pass  38: suminf.    0.31732 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  39: suminf.    0.63001 (5) obj. -8.27276 iterations 5
Cbc0038I Pass  40: suminf.    0.25000 (1) obj. -8.36249 iterations 3
Cbc0038I Pass  41: suminf.    0.34482 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  42: suminf.    0.25477 (1) obj. -8.27276 iterations 13
Cbc0038I Pass  43: suminf.    0.58847 (5) obj. -8.27276 iterations 4
Cbc0038I Pass  44: suminf.    0.25477 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  45: suminf.    0.65290 (2) obj. -8.27276 iterations 2
Cbc0038I Pass  46: suminf.    0.25000 (1) obj. -8.54869 iterations 2
Cbc0038I Pass  47: suminf.    0.45843 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  48: suminf.    0.47699 (1) obj. -8.27276 iterations 1
Cbc0038I Pass  49: suminf.    0.47699 (1) obj. -8.27276 iterations 0
Cbc0038I Pass  50: suminf.    1.24272 (5) obj. -8.27276 iterations 7
Cbc0038I Rounding solution of -8.25683 is better than previous of -7.99331

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8.60809
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  50: suminf.    0.75000 (3) obj. -9.39053 iterations 0
Cbc0038I Pass  51: suminf.    0.57917 (2) obj. -8.60809 iterations 6
Cbc0038I Pass  52: suminf.    0.48220 (2) obj. -8.60809 iterations 1
Cbc0038I Pass  53: suminf.    0.25544 (2) obj. -8.60809 iterations 7
Cbc0038I Pass  54: suminf.    0.59032 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  55: suminf.    0.59032 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  56: suminf.    0.75000 (2) obj. -8.92264 iterations 5
Cbc0038I Pass  57: suminf.    1.77755 (6) obj. -8.60809 iterations 5
Cbc0038I Pass  58: suminf.    0.61421 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  59: suminf.    0.61421 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  60: suminf.    0.59032 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  61: suminf.    0.59032 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  62: suminf.    0.75000 (2) obj. -8.92264 iterations 7
Cbc0038I Pass  63: suminf.    1.77755 (6) obj. -8.60809 iterations 5
Cbc0038I Pass  64: suminf.    0.61421 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  65: suminf.    0.61421 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  66: suminf.    0.59032 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  67: suminf.    0.59032 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  68: suminf.    0.75000 (2) obj. -8.92264 iterations 7
Cbc0038I Pass  69: suminf.    1.77755 (6) obj. -8.60809 iterations 5
Cbc0038I Pass  70: suminf.    0.61421 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  71: suminf.    0.61421 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  72: suminf.    0.61421 (2) obj. -8.60809 iterations 1
Cbc0038I Pass  73: suminf.    0.61421 (2) obj. -8.60809 iterations 1
Cbc0038I Pass  74: suminf.    0.75000 (2) obj. -8.92264 iterations 5
Cbc0038I Pass  75: suminf.    1.77755 (6) obj. -8.60809 iterations 5
Cbc0038I Pass  76: suminf.    0.61421 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  77: suminf.    0.59032 (2) obj. -8.60809 iterations 2
Cbc0038I Pass  78: suminf.    0.59032 (2) obj. -8.60809 iterations 0
Cbc0038I Pass  79: suminf.    0.59032 (2) obj. -8.60809 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -8.25683 - took 0.00 seconds
Cbc0012I Integer solution of -8.2568308 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 4 rows 6 columns
Cbc0031I 10 added rows had average density of 16.5
Cbc0013I At root node, 10 cuts changed objective from -9.3905306 to -8.3553003 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 76 row cuts average 2.4 elements, 5 column cuts (5 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 425 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 20 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 50 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 55 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.2568308 best solution, best possible -8.3553003 (0.06 seconds)
Cbc0001I Search completed - best objective -8.25683077424778, took 1205 iterations and 6 nodes (0.07 seconds)
Cbc0032I Strong branching done 62 times (254 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Cuts at root node changed objective from -9.39053 to -8.3553
Probing was tried 113 times and created 111 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 110 times and created 445 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 110 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 110 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 110 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 110 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                8.25683077
Enumerated nodes:               6
Total iterations:               1205
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.07

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/114768ac00914ed7a7a326db2aa5a177-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/114768ac00914ed7a7a326db2aa5a177-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 23.7447 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -23.6123 iterations 12
Cbc0038I Solution found of -20.6011
Cbc0038I Cleaned solution of -20.6011
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -20.6011 to -21.3953 (0.00 seconds)
Cbc0038I Round again with cutoff of -21.6302
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -23.6123 iterations 0
Cbc0038I Pass   3: suminf.    0.48519 (2) obj. -21.6302 iterations 7
Cbc0038I Pass   4: suminf.    0.32633 (2) obj. -21.6302 iterations 2
Cbc0038I Pass   5: suminf.    0.16667 (1) obj. -21.9993 iterations 9
Cbc0038I Pass   6: suminf.    0.44960 (1) obj. -21.6302 iterations 3
Cbc0038I Pass   7: suminf.    0.35611 (1) obj. -21.6302 iterations 10
Cbc0038I Pass   8: suminf.    0.16667 (1) obj. -21.9215 iterations 9
Cbc0038I Solution found of -21.712
Cbc0038I Cleaned solution of -21.712
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 11 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -21.712 to -22.0274 (0.01 seconds)
Cbc0038I Round again with cutoff of -22.3709
Cbc0038I Pass   9: suminf.    0.83333 (5) obj. -23.6123 iterations 0
Cbc0038I Pass  10: suminf.    0.79504 (3) obj. -22.3709 iterations 8
Cbc0038I Pass  11: suminf.    0.56530 (3) obj. -22.3709 iterations 6
Cbc0038I Pass  12: suminf.    0.34922 (2) obj. -22.3709 iterations 9
Cbc0038I Pass  13: suminf.    0.16667 (1) obj. -22.5113 iterations 12
Cbc0038I Pass  14: suminf.    0.31907 (1) obj. -22.3709 iterations 5
Cbc0038I Pass  15: suminf.    0.26513 (2) obj. -22.3709 iterations 9
Cbc0038I Pass  16: suminf.    0.16667 (1) obj. -22.5119 iterations 4
Cbc0038I Pass  17: suminf.    0.12341 (1) obj. -22.3709 iterations 5
Cbc0038I Pass  18: suminf.    0.16667 (1) obj. -22.3949 iterations 5
Cbc0038I Pass  19: suminf.    1.59662 (6) obj. -22.3709 iterations 11
Cbc0038I Pass  20: suminf.    0.17029 (2) obj. -22.3709 iterations 3
Cbc0038I Pass  21: suminf.    0.60393 (3) obj. -22.3709 iterations 14
Cbc0038I Pass  22: suminf.    0.33333 (3) obj. -22.3709 iterations 11
Cbc0038I Pass  23: suminf.    0.44886 (3) obj. -22.3709 iterations 9
Cbc0038I Pass  24: suminf.    0.76471 (3) obj. -22.3709 iterations 17
Cbc0038I Pass  25: suminf.    0.58639 (3) obj. -22.3709 iterations 3
Cbc0038I Pass  26: suminf.    0.50000 (2) obj. -22.7473 iterations 12
Cbc0038I Pass  27: suminf.    0.16667 (1) obj. -22.5113 iterations 4
Cbc0038I Pass  28: suminf.    0.31907 (1) obj. -22.3709 iterations 5
Cbc0038I Pass  29: suminf.    0.59256 (2) obj. -22.3709 iterations 17
Cbc0038I Pass  30: suminf.    0.59256 (2) obj. -22.3709 iterations 3
Cbc0038I Pass  31: suminf.    0.17826 (2) obj. -22.3709 iterations 9
Cbc0038I Pass  32: suminf.    1.27299 (5) obj. -22.3709 iterations 5
Cbc0038I Pass  33: suminf.    0.10284 (1) obj. -22.3709 iterations 4
Cbc0038I Pass  34: suminf.    0.10284 (1) obj. -22.3709 iterations 1
Cbc0038I Pass  35: suminf.    0.16667 (1) obj. -22.7221 iterations 12
Cbc0038I Pass  36: suminf.    0.45223 (1) obj. -22.3709 iterations 6
Cbc0038I Pass  37: suminf.    0.09514 (1) obj. -22.3709 iterations 7
Cbc0038I Solution found of -22.4383
Cbc0038I Cleaned solution of -22.4383
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 22 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -22.4383 to -22.5132 (0.02 seconds)
Cbc0038I Round again with cutoff of -22.8826
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.83333 (5) obj. -23.6123 iterations 0
Cbc0038I Pass  39: suminf.    0.89970 (4) obj. -22.8826 iterations 9
Cbc0038I Pass  40: suminf.    0.50799 (4) obj. -22.8826 iterations 10
Cbc0038I Pass  41: suminf.    0.65686 (3) obj. -22.8826 iterations 12
Cbc0038I Pass  42: suminf.    0.50000 (2) obj. -22.9281 iterations 10
Cbc0038I Pass  43: suminf.    0.71583 (6) obj. -22.8826 iterations 7
Cbc0038I Pass  44: suminf.    2.88751 (8) obj. -22.8826 iterations 13
Cbc0038I Pass  45: suminf.    2.50349 (8) obj. -22.8826 iterations 1
Cbc0038I Pass  46: suminf.    1.15225 (7) obj. -22.8826 iterations 13
Cbc0038I Pass  47: suminf.    0.53735 (3) obj. -22.8826 iterations 4
Cbc0038I Pass  48: suminf.    1.15225 (7) obj. -22.8826 iterations 3
Cbc0038I Pass  49: suminf.    0.48329 (3) obj. -22.8826 iterations 6
Cbc0038I Pass  50: suminf.    2.31557 (7) obj. -22.8826 iterations 6
Cbc0038I Pass  51: suminf.    2.38866 (7) obj. -22.8826 iterations 3
Cbc0038I Pass  52: suminf.    1.26969 (4) obj. -22.8826 iterations 13
Cbc0038I Pass  53: suminf.    0.50284 (3) obj. -22.8826 iterations 8
Cbc0038I Pass  54: suminf.    0.33333 (2) obj. -22.932 iterations 9
Cbc0038I Pass  55: suminf.    0.51994 (3) obj. -22.8826 iterations 10
Cbc0038I Pass  56: suminf.    0.71583 (6) obj. -22.8826 iterations 2
Cbc0038I Pass  57: suminf.    2.88751 (8) obj. -22.8826 iterations 16
Cbc0038I Pass  58: suminf.    2.50349 (8) obj. -22.8826 iterations 1
Cbc0038I Pass  59: suminf.    1.15225 (7) obj. -22.8826 iterations 12
Cbc0038I Pass  60: suminf.    0.80823 (3) obj. -22.8826 iterations 9
Cbc0038I Pass  61: suminf.    0.70843 (3) obj. -22.8826 iterations 3
Cbc0038I Pass  62: suminf.    0.99181 (6) obj. -22.8826 iterations 10
Cbc0038I Pass  63: suminf.    0.28407 (2) obj. -22.8826 iterations 5
Cbc0038I Pass  64: suminf.    0.16667 (1) obj. -22.9332 iterations 8
Cbc0038I Pass  65: suminf.    0.22157 (1) obj. -22.8826 iterations 5
Cbc0038I Pass  66: suminf.    0.33980 (2) obj. -22.8826 iterations 3
Cbc0038I Pass  67: suminf.    1.43774 (6) obj. -22.8826 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.5132 - took 0.03 seconds
Cbc0012I Integer solution of -22.513153 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 13 columns
Cbc0031I 11 added rows had average density of 31.818182
Cbc0013I At root node, 11 cuts changed objective from -23.744702 to -22.94268 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 8.7 elements, 5 column cuts (5 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 957 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 12 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 69 row cuts average 34.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 74 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.513153 best solution, best possible -22.94268 (0.15 seconds)
Cbc0001I Search completed - best objective -22.51315335184347, took 2007 iterations and 12 nodes (0.17 seconds)
Cbc0032I Strong branching done 164 times (894 iterations), fathomed 3 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 45 variables fixed on reduced cost
Cuts at root node changed objective from -23.7447 to -22.9427
Probing was tried 100 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 126 times and created 983 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 126 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 126 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Optimal solution found

Objective value:                22.51315335
Enumerated nodes:               12
Total iterations:               2007
Time (CPU seconds):             0.16
Time (Wallclock seconds):       0.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6f6c824a50734b5aaa5107b9c178f982-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/6f6c824a50734b5aaa5107b9c178f982-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 191 COLUMNS
At line 1125 RHS
At line 1312 BOUNDS
At line 1490 ENDATA
Problem MODEL has 186 rows, 177 columns and 467 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 48.585 - 0.00 seconds
Cgl0004I processed model has 64 rows, 112 columns (112 integer (56 of which binary)) and 280 elements
Cbc0038I Initial state - 7 integers unsatisfied sum - 0.875
Cbc0038I Pass   1: suminf.    0.87500 (7) obj. -48.4904 iterations 26
Cbc0038I Solution found of -43.519
Cbc0038I Cleaned solution of -43.519
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -43.519 to -44.2761 (0.00 seconds)
Cbc0038I Round again with cutoff of -44.707
Cbc0038I Pass   2: suminf.    0.87500 (7) obj. -48.4904 iterations 0
Cbc0038I Pass   3: suminf.    0.50072 (2) obj. -44.707 iterations 19
Cbc0038I Pass   4: suminf.    0.48349 (2) obj. -44.707 iterations 2
Cbc0038I Pass   5: suminf.    0.28302 (2) obj. -44.707 iterations 8
Cbc0038I Pass   6: suminf.    0.12500 (1) obj. -44.8621 iterations 9
Cbc0038I Pass   7: suminf.    0.28928 (1) obj. -44.707 iterations 4
Cbc0038I Pass   8: suminf.    0.45992 (3) obj. -44.707 iterations 19
Cbc0038I Pass   9: suminf.    0.37873 (3) obj. -44.707 iterations 7
Cbc0038I Pass  10: suminf.    0.52207 (2) obj. -44.707 iterations 11
Cbc0038I Pass  11: suminf.    0.25000 (2) obj. -44.9238 iterations 7
Cbc0038I Pass  12: suminf.    0.50751 (2) obj. -44.707 iterations 6
Cbc0038I Pass  13: suminf.    0.28988 (3) obj. -44.707 iterations 14
Cbc0038I Pass  14: suminf.    0.28332 (3) obj. -44.707 iterations 4
Cbc0038I Pass  15: suminf.    0.14483 (1) obj. -44.707 iterations 2
Cbc0038I Pass  16: suminf.    0.12500 (1) obj. -44.7129 iterations 9
Cbc0038I Pass  17: suminf.    0.13169 (1) obj. -44.707 iterations 5
Cbc0038I Pass  18: suminf.    0.32116 (3) obj. -44.707 iterations 9
Cbc0038I Pass  19: suminf.    0.32033 (3) obj. -44.707 iterations 5
Cbc0038I Pass  20: suminf.    0.53783 (2) obj. -44.707 iterations 22
Cbc0038I Pass  21: suminf.    0.53536 (2) obj. -44.707 iterations 7
Cbc0038I Pass  22: suminf.    0.53977 (2) obj. -44.707 iterations 5
Cbc0038I Pass  23: suminf.    0.52404 (2) obj. -44.707 iterations 2
Cbc0038I Pass  24: suminf.    0.71726 (3) obj. -44.707 iterations 5
Cbc0038I Pass  25: suminf.    0.70311 (3) obj. -44.707 iterations 3
Cbc0038I Pass  26: suminf.    0.47228 (2) obj. -44.707 iterations 5
Cbc0038I Pass  27: suminf.    0.47228 (2) obj. -44.707 iterations 0
Cbc0038I Pass  28: suminf.    0.48972 (2) obj. -44.707 iterations 2
Cbc0038I Pass  29: suminf.    0.59630 (3) obj. -44.707 iterations 26
Cbc0038I Pass  30: suminf.    0.45963 (3) obj. -44.707 iterations 7
Cbc0038I Pass  31: suminf.    0.53850 (2) obj. -44.707 iterations 6
Cbc0038I Rounding solution of -44.5389 is better than previous of -44.2761

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 36 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -44.5389 to -44.674 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.4826
Cbc0038I Pass  31: suminf.    0.87500 (7) obj. -48.4904 iterations 0
Cbc0038I Pass  32: suminf.    0.56413 (3) obj. -45.4826 iterations 21
Cbc0038I Pass  33: suminf.    0.48893 (3) obj. -45.4826 iterations 4
Cbc0038I Pass  34: suminf.    0.51665 (3) obj. -45.4826 iterations 9
Cbc0038I Pass  35: suminf.    1.61836 (6) obj. -45.4826 iterations 16
Cbc0038I Pass  36: suminf.    0.38422 (2) obj. -45.4826 iterations 14
Cbc0038I Pass  37: suminf.    0.38422 (2) obj. -45.4826 iterations 0
Cbc0038I Pass  38: suminf.    0.83526 (2) obj. -45.4826 iterations 15
Cbc0038I Pass  39: suminf.    0.20897 (2) obj. -45.4826 iterations 8
Cbc0038I Pass  40: suminf.    0.23511 (2) obj. -45.4826 iterations 3
Cbc0038I Pass  41: suminf.    0.35946 (3) obj. -45.4826 iterations 4
Cbc0038I Pass  42: suminf.    0.34561 (3) obj. -45.4826 iterations 4
Cbc0038I Pass  43: suminf.    0.19182 (2) obj. -45.4826 iterations 4
Cbc0038I Pass  44: suminf.    0.19182 (2) obj. -45.4826 iterations 0
Cbc0038I Pass  45: suminf.    0.20897 (2) obj. -45.4826 iterations 4
Cbc0038I Pass  46: suminf.    0.23511 (2) obj. -45.4826 iterations 3
Cbc0038I Pass  47: suminf.    0.61123 (3) obj. -45.4826 iterations 10
Cbc0038I Pass  48: suminf.    0.60458 (3) obj. -45.4826 iterations 7
Cbc0038I Pass  49: suminf.    0.53970 (3) obj. -45.4826 iterations 11
Cbc0038I Pass  50: suminf.    0.53970 (3) obj. -45.4826 iterations 2
Cbc0038I Pass  51: suminf.    0.38376 (3) obj. -45.4826 iterations 5
Cbc0038I Pass  52: suminf.    0.37720 (3) obj. -45.4826 iterations 3
Cbc0038I Pass  53: suminf.    0.19182 (2) obj. -45.4826 iterations 3
Cbc0038I Pass  54: suminf.    0.19182 (2) obj. -45.4826 iterations 0
Cbc0038I Pass  55: suminf.    0.20897 (2) obj. -45.4826 iterations 4
Cbc0038I Pass  56: suminf.    0.23511 (2) obj. -45.4826 iterations 3
Cbc0038I Pass  57: suminf.    0.25088 (2) obj. -45.4826 iterations 5
Cbc0038I Pass  58: suminf.    0.25088 (2) obj. -45.4826 iterations 1
Cbc0038I Pass  59: suminf.    0.70874 (3) obj. -45.4826 iterations 13
Cbc0038I Pass  60: suminf.    0.66101 (3) obj. -45.4826 iterations 6
Cbc0038I Rounding solution of -44.7279 is better than previous of -44.674

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -46.4133
Cbc0038I Pass  60: suminf.    0.87500 (7) obj. -48.4904 iterations 0
Cbc0038I Pass  61: suminf.    0.84836 (4) obj. -46.4133 iterations 19
Cbc0038I Pass  62: suminf.    0.71517 (4) obj. -46.4133 iterations 7
Cbc0038I Pass  63: suminf.    0.76849 (3) obj. -46.4133 iterations 13
Cbc0038I Pass  64: suminf.    0.50000 (3) obj. -46.5219 iterations 21
Cbc0038I Pass  65: suminf.    0.62892 (3) obj. -46.4133 iterations 13
Cbc0038I Pass  66: suminf.    0.72539 (3) obj. -46.4133 iterations 12
Cbc0038I Pass  67: suminf.    0.73209 (3) obj. -46.4133 iterations 10
Cbc0038I Pass  68: suminf.    0.73120 (3) obj. -46.4133 iterations 6
Cbc0038I Pass  69: suminf.    0.79756 (3) obj. -46.4133 iterations 4
Cbc0038I Pass  70: suminf.    0.69284 (3) obj. -46.4133 iterations 3
Cbc0038I Pass  71: suminf.    0.72545 (3) obj. -46.4133 iterations 5
Cbc0038I Pass  72: suminf.    0.50000 (3) obj. -46.5219 iterations 21
Cbc0038I Pass  73: suminf.    0.62892 (3) obj. -46.4133 iterations 15
Cbc0038I Pass  74: suminf.    0.56849 (4) obj. -46.4133 iterations 22
Cbc0038I Pass  75: suminf.    0.37500 (3) obj. -46.4504 iterations 15
Cbc0038I Pass  76: suminf.    0.41969 (3) obj. -46.4133 iterations 12
Cbc0038I Pass  77: suminf.    0.96066 (4) obj. -46.4133 iterations 14
Cbc0038I Pass  78: suminf.    0.95029 (4) obj. -46.4133 iterations 8
Cbc0038I Pass  79: suminf.    0.81430 (4) obj. -46.4133 iterations 9
Cbc0038I Pass  80: suminf.    0.81430 (4) obj. -46.4133 iterations 5
Cbc0038I Pass  81: suminf.    0.73801 (3) obj. -46.4133 iterations 4
Cbc0038I Pass  82: suminf.    0.73120 (3) obj. -46.4133 iterations 2
Cbc0038I Pass  83: suminf.    0.79756 (3) obj. -46.4133 iterations 3
Cbc0038I Pass  84: suminf.    0.69284 (3) obj. -46.4133 iterations 2
Cbc0038I Pass  85: suminf.    0.71189 (4) obj. -46.4133 iterations 11
Cbc0038I Pass  86: suminf.    1.99840 (9) obj. -46.4133 iterations 9
Cbc0038I Pass  87: suminf.    0.72717 (3) obj. -46.4133 iterations 7
Cbc0038I Pass  88: suminf.    1.15824 (5) obj. -46.4133 iterations 41
Cbc0038I Pass  89: suminf.    1.09622 (5) obj. -46.4133 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 64 rows 112 columns, reduced to 35 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -44.7279 - took 0.07 seconds
Cbc0012I Integer solution of -44.727927 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 11 rows 14 columns
Cbc0031I 22 added rows had average density of 92.545455
Cbc0013I At root node, 22 cuts changed objective from -48.585026 to -47.093164 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 10.1 elements, 0 column cuts (10 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2047 row cuts average 110.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 58 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 88 row cuts average 60.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 110 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -44.727927 best solution, best possible -47.093164 (0.51 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 32 rows 43 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 30 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 32 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 29 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 28 rows 39 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 32 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 30 rows 38 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 33 columns
Cbc0010I After 1000 nodes, 364 on tree, -44.727927 best solution, best possible -47.093164 (10.61 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 29 rows 37 columns
Cbc0010I After 2000 nodes, 314 on tree, -44.727927 best solution, best possible -47.093164 (12.80 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 35 columns
Cbc0010I After 3000 nodes, 267 on tree, -44.727927 best solution, best possible -47.093164 (14.37 seconds)
Cbc0010I After 4000 nodes, 228 on tree, -44.727927 best solution, best possible -47.093164 (15.96 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 26 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 27 rows 39 columns
Cbc0010I After 5000 nodes, 212 on tree, -44.727927 best solution, best possible -47.093164 (17.51 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 29 columns
Cbc0010I After 6000 nodes, 207 on tree, -44.727927 best solution, best possible -47.093164 (18.34 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 17 rows 23 columns
Cbc0010I After 7000 nodes, 191 on tree, -44.727927 best solution, best possible -47.093164 (19.25 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 33 columns
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0010I After 8000 nodes, 186 on tree, -44.727927 best solution, best possible -47.093164 (20.23 seconds)
Cbc0010I After 9000 nodes, 173 on tree, -44.727927 best solution, best possible -47.093164 (21.00 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 31 rows 43 columns
Cbc0010I After 10000 nodes, 180 on tree, -44.727927 best solution, best possible -47.093164 (22.05 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 23 rows 31 columns
Cbc0010I After 11000 nodes, 165 on tree, -44.727927 best solution, best possible -47.093164 (23.03 seconds)
Cbc0010I After 12000 nodes, 662 on tree, -44.727927 best solution, best possible -46.136597 (24.97 seconds)
Cbc0010I After 13000 nodes, 1156 on tree, -44.727927 best solution, best possible -45.996485 (26.57 seconds)
Cbc0010I After 14000 nodes, 1108 on tree, -44.727927 best solution, best possible -45.996485 (27.87 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 35 columns
Cbc0010I After 15000 nodes, 1607 on tree, -44.727927 best solution, best possible -45.910986 (29.27 seconds)
Cbc0010I After 16000 nodes, 2098 on tree, -44.727927 best solution, best possible -45.848092 (30.61 seconds)
Cbc0010I After 17000 nodes, 2591 on tree, -44.727927 best solution, best possible -45.800566 (31.74 seconds)
Cbc0010I After 18000 nodes, 2482 on tree, -44.727927 best solution, best possible -45.800309 (33.15 seconds)
Cbc0010I After 19000 nodes, 2975 on tree, -44.727927 best solution, best possible -45.75877 (34.43 seconds)
Cbc0010I After 20000 nodes, 3468 on tree, -44.727927 best solution, best possible -45.72451 (35.56 seconds)
Cbc0010I After 21000 nodes, 3946 on tree, -44.727927 best solution, best possible -45.694977 (36.76 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 25 columns
Cbc0010I After 22000 nodes, 3788 on tree, -44.727927 best solution, best possible -45.694977 (38.06 seconds)
Cbc0010I After 23000 nodes, 4276 on tree, -44.727927 best solution, best possible -45.669152 (39.20 seconds)
Cbc0010I After 24000 nodes, 4767 on tree, -44.727927 best solution, best possible -45.646001 (40.17 seconds)
Cbc0010I After 25000 nodes, 5245 on tree, -44.727927 best solution, best possible -45.627224 (41.20 seconds)
Cbc0010I After 26000 nodes, 5075 on tree, -44.727927 best solution, best possible -45.627186 (42.45 seconds)
Cbc0010I After 27000 nodes, 5561 on tree, -44.727927 best solution, best possible -45.605775 (43.56 seconds)
Cbc0010I After 28000 nodes, 6041 on tree, -44.727927 best solution, best possible -45.587371 (44.62 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 35 columns
Cbc0010I After 29000 nodes, 6510 on tree, -44.727927 best solution, best possible -45.56941 (45.66 seconds)
Cbc0010I After 30000 nodes, 6316 on tree, -44.727927 best solution, best possible -45.56941 (46.73 seconds)
Cbc0010I After 31000 nodes, 6794 on tree, -44.727927 best solution, best possible -45.552744 (47.77 seconds)
Cbc0010I After 32000 nodes, 7264 on tree, -44.727927 best solution, best possible -45.537533 (48.77 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 16 rows 21 columns
Cbc0010I After 33000 nodes, 7734 on tree, -44.727927 best solution, best possible -45.523513 (49.73 seconds)
Cbc0010I After 34000 nodes, 7538 on tree, -44.727927 best solution, best possible -45.523513 (50.66 seconds)
Cbc0010I After 35000 nodes, 8010 on tree, -44.727927 best solution, best possible -45.509633 (51.67 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0010I After 36000 nodes, 8483 on tree, -44.727927 best solution, best possible -45.495276 (52.62 seconds)
Cbc0010I After 37000 nodes, 8931 on tree, -44.727927 best solution, best possible -45.482443 (53.58 seconds)
Cbc0010I After 38000 nodes, 8723 on tree, -44.727927 best solution, best possible -45.482432 (54.40 seconds)
Cbc0010I After 39000 nodes, 9197 on tree, -44.727927 best solution, best possible -45.467909 (55.36 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 28 columns
Cbc0010I After 40000 nodes, 9649 on tree, -44.727927 best solution, best possible -45.456474 (56.29 seconds)
Cbc0010I After 41000 nodes, 10090 on tree, -44.727927 best solution, best possible -45.444473 (57.18 seconds)
Cbc0010I After 42000 nodes, 9916 on tree, -44.727927 best solution, best possible -45.444473 (57.97 seconds)
Cbc0010I After 43000 nodes, 9755 on tree, -44.727927 best solution, best possible -45.444473 (58.60 seconds)
Cbc0010I After 44000 nodes, 9487 on tree, -44.727927 best solution, best possible -45.444473 (59.14 seconds)
Cbc0010I After 45000 nodes, 9398 on tree, -44.727927 best solution, best possible -45.444473 (59.88 seconds)
Cbc0010I After 46000 nodes, 9272 on tree, -44.727927 best solution, best possible -45.444473 (60.45 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 26 rows 34 columns
Cbc0010I After 47000 nodes, 9698 on tree, -44.727927 best solution, best possible -45.430732 (61.50 seconds)
Cbc0010I After 48000 nodes, 10109 on tree, -44.727927 best solution, best possible -45.416377 (62.46 seconds)
Cbc0010I After 49000 nodes, 9939 on tree, -44.727927 best solution, best possible -45.416377 (62.85 seconds)
Cbc0010I After 50000 nodes, 9788 on tree, -44.727927 best solution, best possible -45.416377 (63.48 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 24 rows 31 columns
Cbc0010I After 51000 nodes, 10178 on tree, -44.727927 best solution, best possible -45.401385 (64.47 seconds)
Cbc0010I After 52000 nodes, 10466 on tree, -44.727927 best solution, best possible -45.401385 (65.18 seconds)
Cbc0010I After 53000 nodes, 10239 on tree, -44.727927 best solution, best possible -45.401385 (65.58 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 19 rows 25 columns
Cbc0010I After 54000 nodes, 10114 on tree, -44.727927 best solution, best possible -45.401362 (66.32 seconds)
Cbc0010I After 55000 nodes, 10354 on tree, -44.727927 best solution, best possible -45.401362 (67.11 seconds)
Cbc0010I After 56000 nodes, 10553 on tree, -44.727927 best solution, best possible -45.401362 (67.87 seconds)
Cbc0010I After 57000 nodes, 10258 on tree, -44.727927 best solution, best possible -45.401362 (68.22 seconds)
Cbc0010I After 58000 nodes, 10102 on tree, -44.727927 best solution, best possible -45.401362 (68.82 seconds)
Cbc0010I After 59000 nodes, 10303 on tree, -44.727927 best solution, best possible -45.401362 (69.62 seconds)
Cbc0010I After 60000 nodes, 10429 on tree, -44.727927 best solution, best possible -45.401362 (70.35 seconds)
Cbc0010I After 61000 nodes, 10112 on tree, -44.727927 best solution, best possible -45.401362 (70.68 seconds)
Cbc0010I After 62000 nodes, 9931 on tree, -44.727927 best solution, best possible -45.401342 (71.26 seconds)
Cbc0010I After 63000 nodes, 9664 on tree, -44.727927 best solution, best possible -45.401342 (71.79 seconds)
Cbc0010I After 64000 nodes, 9447 on tree, -44.727927 best solution, best possible -45.401342 (72.32 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 22 rows 29 columns
Cbc0010I After 65000 nodes, 9366 on tree, -44.727927 best solution, best possible -45.401342 (72.98 seconds)
Cbc0010I After 66000 nodes, 9238 on tree, -44.727927 best solution, best possible -45.401342 (73.55 seconds)
Cbc0010I After 67000 nodes, 9607 on tree, -44.727927 best solution, best possible -45.377929 (74.65 seconds)
Cbc0010I After 68000 nodes, 9961 on tree, -44.727927 best solution, best possible -45.358562 (75.73 seconds)
Cbc0010I After 69000 nodes, 10291 on tree, -44.727927 best solution, best possible -45.340779 (76.75 seconds)
Cbc0010I After 70000 nodes, 10135 on tree, -44.727927 best solution, best possible -45.340779 (77.39 seconds)
Cbc0010I After 71000 nodes, 10240 on tree, -44.727927 best solution, best possible -45.340779 (78.09 seconds)
Cbc0010I After 72000 nodes, 10317 on tree, -44.727927 best solution, best possible -45.340779 (78.77 seconds)
Cbc0010I After 73000 nodes, 9964 on tree, -44.727927 best solution, best possible -45.340779 (79.10 seconds)
Cbc0010I After 74000 nodes, 9812 on tree, -44.727927 best solution, best possible -45.340779 (79.64 seconds)
Cbc0010I After 75000 nodes, 10131 on tree, -44.727927 best solution, best possible -45.31897 (80.68 seconds)
Cbc0010I After 76000 nodes, 10213 on tree, -44.727927 best solution, best possible -45.31897 (81.42 seconds)
Cbc0010I After 77000 nodes, 9924 on tree, -44.727927 best solution, best possible -45.31897 (81.79 seconds)
Cbc0010I After 78000 nodes, 9781 on tree, -44.727927 best solution, best possible -45.31897 (82.45 seconds)
Cbc0010I After 79000 nodes, 10061 on tree, -44.727927 best solution, best possible -45.298241 (83.46 seconds)
Cbc0010I After 80000 nodes, 10087 on tree, -44.727927 best solution, best possible -45.298241 (84.14 seconds)
Cbc0010I After 81000 nodes, 9797 on tree, -44.727927 best solution, best possible -45.298241 (84.53 seconds)
Cbc0010I After 82000 nodes, 9614 on tree, -44.727927 best solution, best possible -45.298241 (85.10 seconds)
Cbc0010I After 83000 nodes, 9889 on tree, -44.727927 best solution, best possible -45.276299 (86.10 seconds)
Cbc0010I After 84000 nodes, 10162 on tree, -44.727927 best solution, best possible -45.256398 (87.06 seconds)
Cbc0010I After 85000 nodes, 9907 on tree, -44.727927 best solution, best possible -45.256398 (87.48 seconds)
Cbc0010I After 86000 nodes, 9731 on tree, -44.727927 best solution, best possible -45.256398 (88.05 seconds)
Cbc0010I After 87000 nodes, 9940 on tree, -44.727927 best solution, best possible -45.237052 (88.96 seconds)
Cbc0010I After 88000 nodes, 10146 on tree, -44.727927 best solution, best possible -45.220372 (89.80 seconds)
Cbc0010I After 89000 nodes, 9915 on tree, -44.727927 best solution, best possible -45.220372 (90.24 seconds)
Cbc0010I After 90000 nodes, 9685 on tree, -44.727927 best solution, best possible -45.220372 (90.78 seconds)
Cbc0010I After 91000 nodes, 9868 on tree, -44.727927 best solution, best possible -45.202276 (91.69 seconds)
Cbc0010I After 92000 nodes, 9991 on tree, -44.727927 best solution, best possible -45.186027 (92.49 seconds)
Cbc0010I After 93000 nodes, 10137 on tree, -44.727927 best solution, best possible -45.170373 (93.29 seconds)
Cbc0010I After 94000 nodes, 9933 on tree, -44.727927 best solution, best possible -45.170344 (93.82 seconds)
Cbc0010I After 95000 nodes, 9762 on tree, -44.727927 best solution, best possible -45.170344 (94.33 seconds)
Cbc0010I After 96000 nodes, 9496 on tree, -44.727927 best solution, best possible -45.170344 (94.81 seconds)
Cbc0010I After 97000 nodes, 9125 on tree, -44.727927 best solution, best possible -45.170344 (95.19 seconds)
Cbc0010I After 98000 nodes, 8878 on tree, -44.727927 best solution, best possible -45.170344 (95.62 seconds)
Cbc0010I After 99000 nodes, 8971 on tree, -44.727927 best solution, best possible -45.154776 (96.48 seconds)
Cbc0010I After 100000 nodes, 9058 on tree, -44.727927 best solution, best possible -45.138683 (97.32 seconds)
Cbc0010I After 101000 nodes, 9139 on tree, -44.727927 best solution, best possible -45.123829 (98.13 seconds)
Cbc0010I After 102000 nodes, 8963 on tree, -44.727927 best solution, best possible -45.123829 (98.68 seconds)
Cbc0010I After 103000 nodes, 9019 on tree, -44.727927 best solution, best possible -45.106087 (99.51 seconds)
Cbc0010I After 104000 nodes, 9030 on tree, -44.727927 best solution, best possible -45.091101 (100.30 seconds)
Cbc0010I After 105000 nodes, 9027 on tree, -44.727927 best solution, best possible -45.076023 (101.10 seconds)
Cbc0010I After 106000 nodes, 8805 on tree, -44.727927 best solution, best possible -45.076023 (101.59 seconds)
Cbc0010I After 107000 nodes, 8759 on tree, -44.727927 best solution, best possible -45.06042 (102.34 seconds)
Cbc0010I After 108000 nodes, 8689 on tree, -44.727927 best solution, best possible -45.046523 (103.07 seconds)
Cbc0038I Full problem 64 rows 112 columns, reduced to 21 rows 27 columns
Cbc0010I After 109000 nodes, 8608 on tree, -44.727927 best solution, best possible -45.032914 (103.81 seconds)
Cbc0010I After 110000 nodes, 8313 on tree, -44.727927 best solution, best possible -45.032914 (104.25 seconds)
Cbc0010I After 111000 nodes, 8226 on tree, -44.727927 best solution, best possible -45.01953 (104.96 seconds)
Cbc0010I After 112000 nodes, 8122 on tree, -44.727927 best solution, best possible -45.006122 (105.65 seconds)
Cbc0010I After 113000 nodes, 7980 on tree, -44.727927 best solution, best possible -44.993358 (106.29 seconds)
Cbc0010I After 114000 nodes, 7681 on tree, -44.727927 best solution, best possible -44.993358 (106.71 seconds)
Cbc0010I After 115000 nodes, 7508 on tree, -44.727927 best solution, best possible -44.979752 (107.35 seconds)
Cbc0010I After 116000 nodes, 7339 on tree, -44.727927 best solution, best possible -44.966581 (107.98 seconds)
Cbc0010I After 117000 nodes, 7135 on tree, -44.727927 best solution, best possible -44.954131 (108.58 seconds)
Cbc0010I After 118000 nodes, 6803 on tree, -44.727927 best solution, best possible -44.954131 (108.98 seconds)
Cbc0010I After 119000 nodes, 6574 on tree, -44.727927 best solution, best possible -44.940443 (109.56 seconds)
Cbc0010I After 120000 nodes, 6378 on tree, -44.727927 best solution, best possible -44.927483 (110.16 seconds)
Cbc0010I After 121000 nodes, 6127 on tree, -44.727927 best solution, best possible -44.916378 (110.73 seconds)
Cbc0010I After 122000 nodes, 5785 on tree, -44.727927 best solution, best possible -44.916378 (111.07 seconds)
Cbc0010I After 123000 nodes, 5523 on tree, -44.727927 best solution, best possible -44.902112 (111.62 seconds)
Cbc0010I After 124000 nodes, 5224 on tree, -44.727927 best solution, best possible -44.888584 (112.15 seconds)
Cbc0010I After 125000 nodes, 4937 on tree, -44.727927 best solution, best possible -44.877149 (112.66 seconds)
Cbc0010I After 126000 nodes, 4549 on tree, -44.727927 best solution, best possible -44.877044 (112.99 seconds)
Cbc0010I After 127000 nodes, 4215 on tree, -44.727927 best solution, best possible -44.862612 (113.45 seconds)
Cbc0010I After 128000 nodes, 3863 on tree, -44.727927 best solution, best possible -44.848413 (113.93 seconds)
Cbc0010I After 129000 nodes, 3523 on tree, -44.727927 best solution, best possible -44.834779 (114.36 seconds)
Cbc0010I After 130000 nodes, 3107 on tree, -44.727927 best solution, best possible -44.834779 (114.62 seconds)
Cbc0010I After 131000 nodes, 2722 on tree, -44.727927 best solution, best possible -44.819104 (115.01 seconds)
Cbc0010I After 132000 nodes, 2338 on tree, -44.727927 best solution, best possible -44.803622 (115.38 seconds)
Cbc0010I After 133000 nodes, 1947 on tree, -44.727927 best solution, best possible -44.789967 (115.72 seconds)
Cbc0010I After 134000 nodes, 1497 on tree, -44.727927 best solution, best possible -44.789967 (115.92 seconds)
Cbc0010I After 135000 nodes, 1070 on tree, -44.727927 best solution, best possible -44.771351 (116.22 seconds)
Cbc0010I After 136000 nodes, 619 on tree, -44.727927 best solution, best possible -44.752278 (116.46 seconds)
Cbc0010I After 137000 nodes, 171 on tree, -44.727927 best solution, best possible -44.734304 (116.65 seconds)
Cbc0001I Search completed - best objective -44.72792748175571, took 5551160 iterations and 597021 nodes (116.70 seconds)
Cbc0032I Strong branching done 627190 times (5203992 iterations), fathomed 30109 nodes and fixed 116895 variables
Cbc0041I Maximum depth 27, 384504 variables fixed on reduced cost (complete fathoming 8584 times, 459653 nodes taking 3634926 iterations)
Cuts at root node changed objective from -48.585 to -47.0932
Probing was tried 100 times and created 26 cuts of which 10 were active after adding rounds of cuts (0.019 seconds)
Gomory was tried 48534 times and created 87947 cuts of which 0 were active after adding rounds of cuts (3.324 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
TwoMirCuts was tried 100 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ZeroHalf was tried 100 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)

Result - Optimal solution found

Objective value:                44.72792748
Enumerated nodes:               597021
Total iterations:               5551160
Time (CPU seconds):             116.45
Time (Wallclock seconds):       116.71

Option for printingOptions changed from normal to all
Total time (CPU seconds):       116.45   (Wallclock seconds):       116.71

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cbcbb78d4d154fbdb4e4e981c9b4deb5-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/cbcbb78d4d154fbdb4e4e981c9b4deb5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 26.4871 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -26.4822 iterations 5
Cbc0038I Solution found of -23.0169
Cbc0038I Cleaned solution of -23.0169
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -23.0169 to -23.0465 (0.00 seconds)
Cbc0038I Round again with cutoff of -23.3906
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -26.4822 iterations 0
Cbc0038I Pass   3: suminf.    0.38482 (1) obj. -23.3906 iterations 5
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -23.8303 iterations 7
Cbc0038I Pass   5: suminf.    0.36812 (1) obj. -23.3906 iterations 1
Cbc0038I Pass   6: suminf.    0.65844 (2) obj. -23.3906 iterations 3
Cbc0038I Pass   7: suminf.    0.26821 (2) obj. -23.3906 iterations 17
Cbc0038I Pass   8: suminf.    0.24373 (2) obj. -23.3906 iterations 1
Cbc0038I Pass   9: suminf.    0.17293 (2) obj. -23.3906 iterations 7
Cbc0038I Pass  10: suminf.    0.17473 (2) obj. -23.3906 iterations 3
Cbc0038I Pass  11: suminf.    0.18936 (2) obj. -23.3906 iterations 6
Cbc0038I Pass  12: suminf.    0.18936 (2) obj. -23.3906 iterations 2
Cbc0038I Pass  13: suminf.    0.12628 (1) obj. -23.3906 iterations 14
Cbc0038I Pass  14: suminf.    0.12628 (1) obj. -23.3906 iterations 0
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -24.0781 iterations 8
Cbc0038I Solution found of -23.4333
Cbc0038I Cleaned solution of -23.4333
Cbc0038I Rounding solution of -23.4905 is better than previous of -23.4333

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -24.0899
Cbc0038I Pass  16: suminf.    0.83333 (5) obj. -26.4822 iterations 0
Cbc0038I Pass  17: suminf.    0.47106 (2) obj. -24.0899 iterations 9
Cbc0038I Pass  18: suminf.    0.43212 (2) obj. -24.0899 iterations 1
Cbc0038I Pass  19: suminf.    0.31972 (2) obj. -24.0899 iterations 5
Cbc0038I Pass  20: suminf.    0.21874 (2) obj. -24.0899 iterations 6
Cbc0038I Pass  21: suminf.    0.21704 (2) obj. -24.0899 iterations 3
Cbc0038I Pass  22: suminf.    0.23044 (2) obj. -24.0899 iterations 3
Cbc0038I Pass  23: suminf.    0.21704 (2) obj. -24.0899 iterations 2
Cbc0038I Pass  24: suminf.    0.20125 (6) obj. -24.0899 iterations 6
Cbc0038I Pass  25: suminf.    0.16667 (1) obj. -24.0911 iterations 2
Cbc0038I Pass  26: suminf.    0.16821 (1) obj. -24.0899 iterations 1
Cbc0038I Pass  27: suminf.    0.39896 (2) obj. -24.0899 iterations 12
Cbc0038I Pass  28: suminf.    0.37098 (2) obj. -24.0899 iterations 2
Cbc0038I Pass  29: suminf.    0.75362 (2) obj. -24.0899 iterations 4
Cbc0038I Pass  30: suminf.    0.21704 (2) obj. -24.0899 iterations 6
Cbc0038I Pass  31: suminf.    0.21874 (2) obj. -24.0899 iterations 3
Cbc0038I Pass  32: suminf.    0.73106 (3) obj. -24.0899 iterations 24
Cbc0038I Pass  33: suminf.    0.66055 (3) obj. -24.0899 iterations 5
Cbc0038I Pass  34: suminf.    0.20862 (1) obj. -24.0899 iterations 3
Cbc0038I Pass  35: suminf.    0.16667 (1) obj. -24.1223 iterations 5
Cbc0038I Pass  36: suminf.    0.19410 (1) obj. -24.0899 iterations 7
Cbc0038I Pass  37: suminf.    0.16667 (1) obj. -24.1223 iterations 4
Cbc0038I Pass  38: suminf.    0.17925 (2) obj. -24.0899 iterations 3
Cbc0038I Pass  39: suminf.    0.20416 (2) obj. -24.0899 iterations 2
Cbc0038I Pass  40: suminf.    0.18859 (2) obj. -24.0899 iterations 3
Cbc0038I Pass  41: suminf.    0.20971 (1) obj. -24.0899 iterations 6
Cbc0038I Pass  42: suminf.    0.16667 (1) obj. -24.1353 iterations 5
Cbc0038I Pass  43: suminf.    0.22539 (1) obj. -24.0899 iterations 1
Cbc0038I Pass  44: suminf.    0.18838 (2) obj. -24.0899 iterations 6
Cbc0038I Pass  45: suminf.    0.68806 (3) obj. -24.0899 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -23.4905 - took 0.03 seconds
Cbc0012I Integer solution of -23.490543 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 12 columns
Cbc0031I 15 added rows had average density of 46.466667
Cbc0013I At root node, 15 cuts changed objective from -26.487133 to -25.04003 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1071 row cuts average 57.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 39 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 35.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 52 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -23.490543 best solution, best possible -25.04003 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 7 rows 9 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 21 rows 28 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 25 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 27 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 21 rows 27 columns
Cbc0010I After 1000 nodes, 7 on tree, -23.490543 best solution, best possible -25.04003 (1.22 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 18 rows 22 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 10 rows 14 columns
Cbc0001I Search completed - best objective -23.49054316431284, took 105549 iterations and 19140 nodes (1.53 seconds)
Cbc0032I Strong branching done 9104 times (51644 iterations), fathomed 252 nodes and fixed 579 variables
Cbc0041I Maximum depth 20, 1833 variables fixed on reduced cost (complete fathoming 269 times, 17784 nodes taking 85971 iterations)
Cuts at root node changed objective from -26.4871 to -25.04
Probing was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 705 times and created 2483 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 705 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
ZeroHalf was tried 100 times and created 52 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Optimal solution found

Objective value:                23.49054316
Enumerated nodes:               19140
Total iterations:               105549
Time (CPU seconds):             1.50
Time (Wallclock seconds):       1.53

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.53

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e046b954cb86477db83ee317d4026e12-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/e046b954cb86477db83ee317d4026e12-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.0055 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -15.9932 iterations 7
Cbc0038I Solution found of -13.5094
Cbc0038I Cleaned solution of -13.5094
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -13.5094 to -13.5707 (0.00 seconds)
Cbc0038I Round again with cutoff of -13.8142
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -15.9932 iterations 0
Cbc0038I Pass   3: suminf.    0.34658 (1) obj. -13.8142 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.2279 iterations 6
Cbc0038I Pass   5: suminf.    0.28195 (1) obj. -13.8142 iterations 3
Cbc0038I Pass   6: suminf.    0.20000 (1) obj. -14.2285 iterations 7
Cbc0038I Pass   7: suminf.    0.32063 (1) obj. -13.8142 iterations 2
Cbc0038I Pass   8: suminf.    0.35338 (2) obj. -13.8142 iterations 12
Cbc0038I Pass   9: suminf.    0.30542 (2) obj. -13.8142 iterations 1
Cbc0038I Pass  10: suminf.    0.20000 (1) obj. -13.9589 iterations 6
Cbc0038I Pass  11: suminf.    0.36745 (1) obj. -13.8142 iterations 2
Cbc0038I Pass  12: suminf.    0.94074 (5) obj. -13.8142 iterations 2
Cbc0038I Pass  13: suminf.    0.38837 (1) obj. -13.8142 iterations 5
Cbc0038I Pass  14: suminf.    0.23769 (1) obj. -13.8142 iterations 9
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -14.0086 iterations 5
Cbc0038I Solution found of -14.0086
Cbc0038I Cleaned solution of -14.0086
Cbc0038I Rounding solution of -14.1194 is better than previous of -14.0086

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -14.1194 to -14.5946 (0.01 seconds)
Cbc0038I Round again with cutoff of -14.8768
Cbc0038I Pass  16: suminf.    0.80000 (4) obj. -15.9932 iterations 0
Cbc0038I Pass  17: suminf.    0.41175 (3) obj. -14.8768 iterations 8
Cbc0038I Pass  18: suminf.    0.40000 (3) obj. -14.8768 iterations 5
Cbc0038I Pass  19: suminf.    0.85141 (3) obj. -14.8768 iterations 8
Cbc0038I Pass  20: suminf.    0.40000 (2) obj. -15.2827 iterations 5
Cbc0038I Pass  21: suminf.    0.41315 (2) obj. -14.8768 iterations 3
Cbc0038I Pass  22: suminf.    0.37097 (2) obj. -14.8768 iterations 1
Cbc0038I Pass  23: suminf.    0.21276 (2) obj. -14.8768 iterations 3
Cbc0038I Pass  24: suminf.    0.20000 (1) obj. -15.0632 iterations 6
Cbc0038I Pass  25: suminf.    0.41578 (1) obj. -14.8768 iterations 3
Cbc0038I Pass  26: suminf.    0.46956 (2) obj. -14.8768 iterations 1
Cbc0038I Pass  27: suminf.    0.43989 (1) obj. -14.8768 iterations 2
Cbc0038I Pass  28: suminf.    0.43989 (1) obj. -14.8768 iterations 0
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -14.8779 iterations 8
Cbc0038I Pass  30: suminf.    0.20136 (1) obj. -14.8768 iterations 2
Cbc0038I Pass  31: suminf.    0.20000 (1) obj. -14.8779 iterations 2
Cbc0038I Pass  32: suminf.    0.82882 (3) obj. -14.8768 iterations 18
Cbc0038I Pass  33: suminf.    0.69337 (3) obj. -14.8768 iterations 4
Cbc0038I Pass  34: suminf.    0.62377 (2) obj. -14.8768 iterations 6
Cbc0038I Pass  35: suminf.    0.40000 (2) obj. -15.0557 iterations 6
Cbc0038I Pass  36: suminf.    0.70476 (3) obj. -14.8768 iterations 4
Cbc0038I Pass  37: suminf.    0.66258 (3) obj. -14.8768 iterations 1
Cbc0038I Pass  38: suminf.    0.60000 (2) obj. -15.0101 iterations 10
Cbc0038I Pass  39: suminf.    0.21276 (2) obj. -14.8768 iterations 6
Cbc0038I Pass  40: suminf.    0.20000 (1) obj. -15.0632 iterations 7
Cbc0038I Pass  41: suminf.    0.41578 (1) obj. -14.8768 iterations 4
Cbc0038I Pass  42: suminf.    0.58478 (2) obj. -14.8768 iterations 8
Cbc0038I Pass  43: suminf.    0.26525 (2) obj. -14.8768 iterations 3
Cbc0038I Pass  44: suminf.    0.45556 (2) obj. -14.8768 iterations 4
Cbc0038I Pass  45: suminf.    0.43989 (1) obj. -14.8768 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -14.5946 - took 0.01 seconds
Cbc0012I Integer solution of -14.594576 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 6 rows 9 columns
Cbc0031I 11 added rows had average density of 31.454545
Cbc0013I At root node, 11 cuts changed objective from -16.005483 to -14.800919 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 301 row cuts average 35.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 52 row cuts average 28.3 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.594576 best solution, best possible -14.800919 (0.09 seconds)
Cbc0001I Search completed - best objective -14.59457632154238, took 1853 iterations and 18 nodes (0.12 seconds)
Cbc0032I Strong branching done 320 times (1987 iterations), fathomed 6 nodes and fixed 8 variables
Cbc0035I Maximum depth 6, 32 variables fixed on reduced cost
Cuts at root node changed objective from -16.0055 to -14.8009
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Gomory was tried 155 times and created 438 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 155 times and created 132 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.59457632
Enumerated nodes:               18
Total iterations:               1853
Time (CPU seconds):             0.12
Time (Wallclock seconds):       0.12

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e6d53da7d7c74f32a01d8fbd799fc92d-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/e6d53da7d7c74f32a01d8fbd799fc92d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 109 COLUMNS
At line 619 RHS
At line 724 BOUNDS
At line 822 ENDATA
Problem MODEL has 104 rows, 97 columns and 255 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 24.8952 - 0.00 seconds
Cgl0004I processed model has 36 rows, 60 columns (60 integer (30 of which binary)) and 150 elements
Cbc0038I Initial state - 5 integers unsatisfied sum - 0.833333
Cbc0038I Pass   1: suminf.    0.83333 (5) obj. -24.8472 iterations 5
Cbc0038I Solution found of -21.9707
Cbc0038I Cleaned solution of -21.9707
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -21.9707 to -22.2587 (0.00 seconds)
Cbc0038I Round again with cutoff of -22.5224
Cbc0038I Pass   2: suminf.    0.83333 (5) obj. -24.8472 iterations 0
Cbc0038I Pass   3: suminf.    0.42571 (1) obj. -22.5224 iterations 6
Cbc0038I Pass   4: suminf.    0.16667 (1) obj. -22.7717 iterations 8
Cbc0038I Pass   5: suminf.    0.42710 (1) obj. -22.5224 iterations 2
Cbc0038I Pass   6: suminf.    0.33352 (1) obj. -22.5224 iterations 2
Cbc0038I Pass   7: suminf.    0.33352 (1) obj. -22.5224 iterations 0
Cbc0038I Pass   8: suminf.    0.16667 (1) obj. -22.9277 iterations 7
Cbc0038I Pass   9: suminf.    0.40791 (1) obj. -22.5224 iterations 2
Cbc0038I Pass  10: suminf.    0.42430 (2) obj. -22.5224 iterations 5
Cbc0038I Pass  11: suminf.    0.40258 (2) obj. -22.5224 iterations 2
Cbc0038I Pass  12: suminf.    0.41296 (2) obj. -22.5224 iterations 5
Cbc0038I Pass  13: suminf.    0.26135 (2) obj. -22.5224 iterations 3
Cbc0038I Pass  14: suminf.    0.30655 (2) obj. -22.5224 iterations 6
Cbc0038I Pass  15: suminf.    1.36898 (5) obj. -22.5224 iterations 7
Cbc0038I Pass  16: suminf.    0.19254 (1) obj. -22.5224 iterations 1
Cbc0038I Pass  17: suminf.    0.18685 (2) obj. -22.5224 iterations 4
Cbc0038I Pass  18: suminf.    0.28371 (2) obj. -22.5224 iterations 4
Cbc0038I Pass  19: suminf.    0.23562 (2) obj. -22.5224 iterations 2
Cbc0038I Pass  20: suminf.    0.00579 (1) obj. -22.5224 iterations 1
Cbc0038I Pass  21: suminf.    0.16667 (1) obj. -23.1159 iterations 5
Cbc0038I Pass  22: suminf.    0.21037 (1) obj. -22.5224 iterations 4
Cbc0038I Pass  23: suminf.    0.40792 (1) obj. -22.5224 iterations 23
Cbc0038I Pass  24: suminf.    0.40792 (1) obj. -22.5224 iterations 1
Cbc0038I Pass  25: suminf.    0.16667 (1) obj. -22.8437 iterations 8
Cbc0038I Pass  26: suminf.    0.49765 (1) obj. -22.5224 iterations 3
Cbc0038I Pass  27: suminf.    0.18994 (2) obj. -22.5224 iterations 12
Cbc0038I Pass  28: suminf.    0.17298 (2) obj. -22.5224 iterations 3
Cbc0038I Pass  29: suminf.    0.26668 (2) obj. -22.5224 iterations 2
Cbc0038I Pass  30: suminf.    0.16550 (1) obj. -22.5224 iterations 1
Cbc0038I Pass  31: suminf.    0.16667 (1) obj. -22.995 iterations 5
Cbc0038I Rounding solution of -22.5441 is better than previous of -22.2587

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 20 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -23.0143
Cbc0038I Pass  31: suminf.    0.83333 (5) obj. -24.8472 iterations 0
Cbc0038I Pass  32: suminf.    0.45397 (2) obj. -23.0143 iterations 11
Cbc0038I Pass  33: suminf.    0.38419 (2) obj. -23.0143 iterations 2
Cbc0038I Pass  34: suminf.    0.36869 (6) obj. -23.0143 iterations 8
Cbc0038I Pass  35: suminf.    0.20767 (1) obj. -23.0143 iterations 1
Cbc0038I Pass  36: suminf.    0.84879 (3) obj. -23.0143 iterations 12
Cbc0038I Pass  37: suminf.    0.80120 (3) obj. -23.0143 iterations 3
Cbc0038I Pass  38: suminf.    0.66667 (2) obj. -23.2645 iterations 14
Cbc0038I Pass  39: suminf.    0.16667 (1) obj. -23.1159 iterations 6
Cbc0038I Pass  40: suminf.    0.27323 (1) obj. -23.0143 iterations 2
Cbc0038I Pass  41: suminf.    0.35242 (2) obj. -23.0143 iterations 5
Cbc0038I Pass  42: suminf.    0.98726 (3) obj. -23.0143 iterations 12
Cbc0038I Pass  43: suminf.    1.62371 (6) obj. -23.0143 iterations 10
Cbc0038I Pass  44: suminf.    0.76533 (3) obj. -23.0143 iterations 6
Cbc0038I Pass  45: suminf.    0.73732 (3) obj. -23.0143 iterations 1
Cbc0038I Pass  46: suminf.    0.66667 (2) obj. -23.0509 iterations 22
Cbc0038I Pass  47: suminf.    0.29912 (2) obj. -23.0143 iterations 10
Cbc0038I Pass  48: suminf.    0.23612 (2) obj. -23.0143 iterations 1
Cbc0038I Pass  49: suminf.    0.16667 (1) obj. -23.1159 iterations 11
Cbc0038I Pass  50: suminf.    0.27323 (1) obj. -23.0143 iterations 4
Cbc0038I Pass  51: suminf.    0.34221 (2) obj. -23.0143 iterations 9
Cbc0038I Pass  52: suminf.    0.33333 (3) obj. -23.0143 iterations 9
Cbc0038I Pass  53: suminf.    0.36845 (2) obj. -23.0143 iterations 7
Cbc0038I Pass  54: suminf.    0.16667 (1) obj. -23.142 iterations 4
Cbc0038I Pass  55: suminf.    0.30068 (1) obj. -23.0143 iterations 3
Cbc0038I Pass  56: suminf.    1.92362 (6) obj. -23.0143 iterations 10
Cbc0038I Pass  57: suminf.    0.16667 (1) obj. -23.0756 iterations 5
Cbc0038I Pass  58: suminf.    0.23100 (1) obj. -23.0143 iterations 3
Cbc0038I Pass  59: suminf.    0.23874 (1) obj. -23.0143 iterations 9
Cbc0038I Pass  60: suminf.    0.16667 (1) obj. -23.0495 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 60 columns, reduced to 21 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -22.5441 - took 0.03 seconds
Cbc0012I Integer solution of -22.544119 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 8 rows 12 columns
Cbc0031I 13 added rows had average density of 49.846154
Cbc0013I At root node, 13 cuts changed objective from -24.895228 to -23.643561 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 877 row cuts average 57.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 13 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 3 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 60 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 82 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.544119 best solution, best possible -23.643561 (0.18 seconds)
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 20 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 16 rows 19 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 19 rows 23 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 13 rows 17 columns
Cbc0038I Full problem 36 rows 60 columns, reduced to 15 rows 19 columns
Cbc0001I Search completed - best objective -22.54411914199595, took 10716 iterations and 532 nodes (0.67 seconds)
Cbc0032I Strong branching done 4870 times (28470 iterations), fathomed 165 nodes and fixed 289 variables
Cbc0035I Maximum depth 15, 1366 variables fixed on reduced cost
Cuts at root node changed objective from -24.8952 to -23.6436
Probing was tried 100 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 480 times and created 1350 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Knapsack was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 480 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ZeroHalf was tried 480 times and created 317 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)

Result - Optimal solution found

Objective value:                22.54411914
Enumerated nodes:               532
Total iterations:               10716
Time (CPU seconds):             0.65
Time (Wallclock seconds):       0.68

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.68

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a4858047b34446cfb9811ae1e6019268-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/a4858047b34446cfb9811ae1e6019268-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 34.0032 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -33.9333 iterations 16
Cbc0038I Solution found of -30.0256
Cbc0038I Cleaned solution of -30.0256
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -30.0256 to -30.5152 (0.00 seconds)
Cbc0038I Round again with cutoff of -30.864
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -33.9333 iterations 0
Cbc0038I Pass   3: suminf.    0.14519 (1) obj. -30.864 iterations 8
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -30.887 iterations 8
Cbc0038I Pass   5: suminf.    0.31436 (2) obj. -30.864 iterations 5
Cbc0038I Pass   6: suminf.    0.80193 (7) obj. -30.864 iterations 3
Cbc0038I Pass   7: suminf.    0.39850 (1) obj. -30.864 iterations 4
Cbc0038I Pass   8: suminf.    0.39850 (1) obj. -30.864 iterations 1
Cbc0038I Pass   9: suminf.    0.14286 (1) obj. -31.2331 iterations 5
Cbc0038I Pass  10: suminf.    0.46301 (1) obj. -30.864 iterations 4
Cbc0038I Pass  11: suminf.    0.42406 (2) obj. -30.864 iterations 13
Cbc0038I Pass  12: suminf.    0.38105 (2) obj. -30.864 iterations 3
Cbc0038I Solution found of -30.884
Cbc0038I Cleaned solution of -30.884
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -30.884 to -30.9728 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.5789
Cbc0038I Pass  13: suminf.    0.85714 (6) obj. -33.9333 iterations 0
Cbc0038I Pass  14: suminf.    0.38267 (2) obj. -31.5789 iterations 12
Cbc0038I Pass  15: suminf.    0.28571 (2) obj. -31.7277 iterations 5
Cbc0038I Pass  16: suminf.    0.59251 (2) obj. -31.5789 iterations 6
Cbc0038I Pass  17: suminf.    0.54018 (2) obj. -31.5789 iterations 2
Cbc0038I Pass  18: suminf.    0.37567 (2) obj. -31.5789 iterations 11
Cbc0038I Pass  19: suminf.    1.20805 (7) obj. -31.5789 iterations 11
Cbc0038I Pass  20: suminf.    0.15184 (1) obj. -31.5789 iterations 3
Cbc0038I Pass  21: suminf.    0.32083 (2) obj. -31.5789 iterations 9
Cbc0038I Pass  22: suminf.    0.27662 (2) obj. -31.5789 iterations 2
Cbc0038I Pass  23: suminf.    0.28376 (2) obj. -31.5789 iterations 6
Cbc0038I Pass  24: suminf.    0.26946 (2) obj. -31.5789 iterations 3
Cbc0038I Pass  25: suminf.    0.17969 (2) obj. -31.5789 iterations 6
Cbc0038I Pass  26: suminf.    0.14286 (1) obj. -31.5956 iterations 15
Cbc0038I Pass  27: suminf.    0.16068 (1) obj. -31.5789 iterations 7
Cbc0038I Pass  28: suminf.    1.29184 (6) obj. -31.5789 iterations 8
Cbc0038I Pass  29: suminf.    0.85923 (4) obj. -31.5789 iterations 22
Cbc0038I Pass  30: suminf.    0.30614 (4) obj. -31.5789 iterations 4
Cbc0038I Pass  31: suminf.    0.25923 (2) obj. -31.5789 iterations 6
Cbc0038I Pass  32: suminf.    0.20415 (2) obj. -31.5789 iterations 4
Cbc0038I Pass  33: suminf.    0.74938 (2) obj. -31.5789 iterations 7
Cbc0038I Pass  34: suminf.    0.14286 (1) obj. -31.5956 iterations 12
Cbc0038I Pass  35: suminf.    0.16068 (1) obj. -31.5789 iterations 7
Cbc0038I Pass  36: suminf.    0.43068 (2) obj. -31.5789 iterations 14
Cbc0038I Pass  37: suminf.    0.39866 (2) obj. -31.5789 iterations 5
Cbc0038I Pass  38: suminf.    0.20275 (2) obj. -31.5789 iterations 9
Cbc0038I Pass  39: suminf.    0.14286 (1) obj. -31.5805 iterations 14
Cbc0038I Pass  40: suminf.    0.14456 (1) obj. -31.5789 iterations 8
Cbc0038I Pass  41: suminf.    0.39158 (3) obj. -31.5789 iterations 14
Cbc0038I Pass  42: suminf.    0.33473 (3) obj. -31.5789 iterations 3
Cbc0038I Rounding solution of -31.0747 is better than previous of -30.9728

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -32.3062
Cbc0038I Pass  42: suminf.    0.85714 (6) obj. -33.9333 iterations 0
Cbc0038I Pass  43: suminf.    0.45829 (3) obj. -32.3062 iterations 13
Cbc0038I Pass  44: suminf.    0.42857 (3) obj. -32.3912 iterations 12
Cbc0038I Pass  45: suminf.    0.74880 (3) obj. -32.3062 iterations 8
Cbc0038I Pass  46: suminf.    0.42857 (3) obj. -32.5314 iterations 13
Cbc0038I Pass  47: suminf.    0.73324 (3) obj. -32.3062 iterations 8
Cbc0038I Pass  48: suminf.    0.61121 (3) obj. -32.3062 iterations 22
Cbc0038I Pass  49: suminf.    0.58165 (3) obj. -32.3062 iterations 4
Cbc0038I Pass  50: suminf.    0.81648 (3) obj. -32.3062 iterations 12
Cbc0038I Pass  51: suminf.    0.81648 (3) obj. -32.3062 iterations 3
Cbc0038I Pass  52: suminf.    0.44631 (3) obj. -32.3062 iterations 8
Cbc0038I Pass  53: suminf.    0.44631 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  54: suminf.    0.40731 (3) obj. -32.3062 iterations 10
Cbc0038I Pass  55: suminf.    0.40731 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  56: suminf.    0.78878 (4) obj. -32.3062 iterations 5
Cbc0038I Pass  57: suminf.    0.71403 (4) obj. -32.3062 iterations 2
Cbc0038I Pass  58: suminf.    0.44631 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  59: suminf.    0.44631 (3) obj. -32.3062 iterations 0
Cbc0038I Pass  60: suminf.    0.40731 (3) obj. -32.3062 iterations 5
Cbc0038I Pass  61: suminf.    0.40731 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  62: suminf.    0.44631 (3) obj. -32.3062 iterations 4
Cbc0038I Pass  63: suminf.    0.51988 (3) obj. -32.3062 iterations 6
Cbc0038I Pass  64: suminf.    0.50693 (3) obj. -32.3062 iterations 12
Cbc0038I Pass  65: suminf.    0.49454 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  66: suminf.    0.44631 (3) obj. -32.3062 iterations 6
Cbc0038I Pass  67: suminf.    0.44631 (3) obj. -32.3062 iterations 0
Cbc0038I Pass  68: suminf.    0.40731 (3) obj. -32.3062 iterations 5
Cbc0038I Pass  69: suminf.    0.40731 (3) obj. -32.3062 iterations 2
Cbc0038I Pass  70: suminf.    0.44631 (3) obj. -32.3062 iterations 4
Cbc0038I Pass  71: suminf.    0.45383 (3) obj. -32.3062 iterations 3
Cbc0038I Rounding solution of -31.1527 is better than previous of -31.0747

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -32.8153
Cbc0038I Pass  71: suminf.    0.85714 (6) obj. -33.9333 iterations 0
Cbc0038I Pass  72: suminf.    0.79113 (4) obj. -32.8153 iterations 16
Cbc0038I Pass  73: suminf.    0.57143 (4) obj. -33.0241 iterations 15
Cbc0038I Pass  74: suminf.    0.92394 (4) obj. -32.8153 iterations 10
Cbc0038I Pass  75: suminf.    0.73552 (4) obj. -32.8153 iterations 6
Cbc0038I Pass  76: suminf.    0.99914 (4) obj. -32.8153 iterations 13
Cbc0038I Pass  77: suminf.    0.96260 (4) obj. -32.8153 iterations 3
Cbc0038I Pass  78: suminf.    0.57977 (4) obj. -32.8153 iterations 9
Cbc0038I Pass  79: suminf.    0.57977 (4) obj. -32.8153 iterations 2
Cbc0038I Pass  80: suminf.    0.63682 (4) obj. -32.8153 iterations 9
Cbc0038I Pass  81: suminf.    0.63682 (4) obj. -32.8153 iterations 2
Cbc0038I Pass  82: suminf.    1.05857 (4) obj. -32.8153 iterations 11
Cbc0038I Pass  83: suminf.    0.63682 (4) obj. -32.8153 iterations 5
Cbc0038I Pass  84: suminf.    0.57977 (4) obj. -32.8153 iterations 7
Cbc0038I Pass  85: suminf.    0.57977 (4) obj. -32.8153 iterations 2
Cbc0038I Pass  86: suminf.    0.63682 (4) obj. -32.8153 iterations 7
Cbc0038I Pass  87: suminf.    0.69803 (4) obj. -32.8153 iterations 13
Cbc0038I Pass  88: suminf.    0.60048 (4) obj. -32.8153 iterations 6
Cbc0038I Pass  89: suminf.    0.57977 (4) obj. -32.8153 iterations 6
Cbc0038I Pass  90: suminf.    0.86130 (5) obj. -32.8153 iterations 15
Cbc0038I Pass  91: suminf.    0.57143 (4) obj. -33.0206 iterations 20
Cbc0038I Pass  92: suminf.    0.92722 (4) obj. -32.8153 iterations 10
Cbc0038I Pass  93: suminf.    0.92825 (4) obj. -32.8153 iterations 14
Cbc0038I Pass  94: suminf.    0.95096 (4) obj. -32.8153 iterations 26
Cbc0038I Pass  95: suminf.    0.71429 (4) obj. -32.8929 iterations 14
Cbc0038I Pass  96: suminf.    0.92572 (4) obj. -32.8153 iterations 16
Cbc0038I Pass  97: suminf.    0.57143 (4) obj. -33.0241 iterations 14
Cbc0038I Pass  98: suminf.    0.92394 (4) obj. -32.8153 iterations 12
Cbc0038I Pass  99: suminf.    0.73552 (4) obj. -32.8153 iterations 6
Cbc0038I Pass 100: suminf.    0.99914 (4) obj. -32.8153 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -31.1527 - took 0.07 seconds
Cbc0012I Integer solution of -31.152666 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0031I 17 added rows had average density of 48.117647
Cbc0013I At root node, 17 cuts changed objective from -34.003227 to -32.335982 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 572 row cuts average 77.6 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 74 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.152666 best solution, best possible -32.335982 (0.23 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 23 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 22 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 11 rows 14 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 22 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 25 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0010I After 1000 nodes, 7 on tree, -31.152666 best solution, best possible -32.328337 (1.90 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 33 columns
Cbc0001I Search completed - best objective -31.15266573056607, took 235935 iterations and 27462 nodes (2.78 seconds)
Cbc0032I Strong branching done 12152 times (83277 iterations), fathomed 349 nodes and fixed 682 variables
Cbc0041I Maximum depth 20, 4294 variables fixed on reduced cost (complete fathoming 270 times, 26002 nodes taking 212493 iterations)
Cuts at root node changed objective from -34.0032 to -32.336
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Gomory was tried 493 times and created 1030 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 493 times and created 139 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                31.15266573
Enumerated nodes:               27462
Total iterations:               235935
Time (CPU seconds):             2.69
Time (Wallclock seconds):       2.79

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.69   (Wallclock seconds):       2.79

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/f3ae1b283c344f50bf74d2a8f846d540-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/f3ae1b283c344f50bf74d2a8f846d540-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.025 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.025 iterations 4
Cbc0038I Solution found of -14.3584
Cbc0038I Cleaned solution of -14.3584
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.525
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.025 iterations 0
Cbc0038I Pass   3: suminf.    0.24420 (1) obj. -14.525 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.8625 iterations 4
Cbc0038I Pass   5: suminf.    0.42156 (1) obj. -14.525 iterations 1
Cbc0038I Pass   6: suminf.    0.57380 (2) obj. -14.525 iterations 1
Cbc0038I Pass   7: suminf.    0.79361 (4) obj. -14.525 iterations 3
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -14.5578 iterations 2
Cbc0038I Solution found of -14.5578
Cbc0038I Cleaned solution of -14.5578
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 8 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.8512
Cbc0038I Pass   9: suminf.    0.80000 (4) obj. -16.025 iterations 0
Cbc0038I Pass  10: suminf.    0.27787 (1) obj. -14.8512 iterations 4
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -14.8625 iterations 4
Cbc0038I Pass  12: suminf.    0.21266 (1) obj. -14.8512 iterations 1
Cbc0038I Pass  13: suminf.    0.46343 (1) obj. -14.8512 iterations 5
Cbc0038I Pass  14: suminf.    0.46343 (1) obj. -14.8512 iterations 1
Cbc0038I Pass  15: suminf.    0.20000 (1) obj. -15.0126 iterations 4
Cbc0038I Pass  16: suminf.    0.38099 (1) obj. -14.8512 iterations 1
Cbc0038I Pass  17: suminf.    0.30318 (2) obj. -14.8512 iterations 8
Cbc0038I Pass  18: suminf.    1.36627 (5) obj. -14.8512 iterations 2
Cbc0038I Pass  19: suminf.    0.41415 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  20: suminf.    0.41415 (1) obj. -14.8512 iterations 1
Cbc0038I Pass  21: suminf.    0.20000 (1) obj. -15.0126 iterations 6
Cbc0038I Pass  22: suminf.    0.38099 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  23: suminf.    0.49543 (1) obj. -14.8512 iterations 4
Cbc0038I Pass  24: suminf.    0.49543 (1) obj. -14.8512 iterations 1
Cbc0038I Pass  25: suminf.    0.46343 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  26: suminf.    0.46343 (1) obj. -14.8512 iterations 0
Cbc0038I Pass  27: suminf.    0.46343 (1) obj. -14.8512 iterations 0
Cbc0038I Pass  28: suminf.    0.46343 (1) obj. -14.8512 iterations 0
Cbc0038I Pass  29: suminf.    0.20000 (1) obj. -15.0126 iterations 6
Cbc0038I Pass  30: suminf.    0.38099 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  31: suminf.    0.46343 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  32: suminf.    0.37949 (2) obj. -14.8512 iterations 3
Cbc0038I Pass  33: suminf.    0.49543 (1) obj. -14.8512 iterations 5
Cbc0038I Pass  34: suminf.    0.49543 (1) obj. -14.8512 iterations 2
Cbc0038I Pass  35: suminf.    0.51230 (2) obj. -14.8512 iterations 11
Cbc0038I Pass  36: suminf.    0.45687 (2) obj. -14.8512 iterations 2
Cbc0038I Pass  37: suminf.    0.47743 (2) obj. -14.8512 iterations 5
Cbc0038I Pass  38: suminf.    0.20000 (1) obj. -15.0126 iterations 7
Cbc0038I Rounding solution of -14.611 is better than previous of -14.5578

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15.2033
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  38: suminf.    0.80000 (4) obj. -16.025 iterations 0
Cbc0038I Pass  39: suminf.    0.67217 (2) obj. -15.2033 iterations 5
Cbc0038I Pass  40: suminf.    0.60919 (2) obj. -15.2033 iterations 1
Cbc0038I Pass  41: suminf.    0.46570 (2) obj. -15.2033 iterations 4
Cbc0038I Pass  42: suminf.    0.55492 (2) obj. -15.2033 iterations 3
Cbc0038I Pass  43: suminf.    0.93832 (3) obj. -15.2033 iterations 9
Cbc0038I Pass  44: suminf.    0.60222 (3) obj. -15.2033 iterations 5
Cbc0038I Pass  45: suminf.    0.68024 (2) obj. -15.2033 iterations 4
Cbc0038I Pass  46: suminf.    0.51181 (3) obj. -15.2033 iterations 14
Cbc0038I Pass  47: suminf.    0.40000 (3) obj. -15.2033 iterations 4
Cbc0038I Pass  48: suminf.    0.48775 (2) obj. -15.2033 iterations 6
Cbc0038I Pass  49: suminf.    0.46570 (2) obj. -15.2033 iterations 1
Cbc0038I Pass  50: suminf.    0.55492 (2) obj. -15.2033 iterations 3
Cbc0038I Pass  51: suminf.    0.55492 (2) obj. -15.2033 iterations 0
Cbc0038I Pass  52: suminf.    0.55492 (2) obj. -15.2033 iterations 0
Cbc0038I Pass  53: suminf.    0.55492 (2) obj. -15.2033 iterations 0
Cbc0038I Pass  54: suminf.    0.46570 (2) obj. -15.2033 iterations 3
Cbc0038I Pass  55: suminf.    0.84328 (4) obj. -15.2033 iterations 7
Cbc0038I Pass  56: suminf.    1.16091 (7) obj. -15.2033 iterations 2
Cbc0038I Pass  57: suminf.    1.24898 (3) obj. -15.2033 iterations 10
Cbc0038I Pass  58: suminf.    0.76647 (2) obj. -15.2033 iterations 2
Cbc0038I Pass  59: suminf.    0.60000 (2) obj. -15.3088 iterations 5
Cbc0038I Pass  60: suminf.    0.48775 (2) obj. -15.2033 iterations 3
Cbc0038I Pass  61: suminf.    0.46570 (2) obj. -15.2033 iterations 1
Cbc0038I Pass  62: suminf.    0.55492 (2) obj. -15.2033 iterations 3
Cbc0038I Pass  63: suminf.    0.62368 (2) obj. -15.2033 iterations 2
Cbc0038I Pass  64: suminf.    0.55492 (2) obj. -15.2033 iterations 2
Cbc0038I Pass  65: suminf.    0.67086 (2) obj. -15.2033 iterations 2
Cbc0038I Pass  66: suminf.    0.40000 (2) obj. -15.4241 iterations 4
Cbc0038I Pass  67: suminf.    0.61927 (2) obj. -15.2033 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -14.611 - took 0.01 seconds
Cbc0012I Integer solution of -14.611036 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 4 rows 6 columns
Cbc0031I 10 added rows had average density of 26.4
Cbc0013I At root node, 10 cuts changed objective from -16.024986 to -14.824203 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 447 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.611036 best solution, best possible -14.824203 (0.08 seconds)
Cbc0001I Search completed - best objective -14.61103645712117, took 1625 iterations and 10 nodes (0.10 seconds)
Cbc0032I Strong branching done 182 times (1206 iterations), fathomed 5 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 26 variables fixed on reduced cost
Cuts at root node changed objective from -16.025 to -14.8242
Probing was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 142 times and created 690 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 142 times and created 106 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                14.61103646
Enumerated nodes:               10
Total iterations:               1625
Time (CPU seconds):             0.10
Time (Wallclock seconds):       0.10

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/219c48984462409c880eff2bcb89f0ba-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/219c48984462409c880eff2bcb89f0ba-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 31 COLUMNS
At line 145 RHS
At line 172 BOUNDS
At line 195 ENDATA
Problem MODEL has 26 rows, 22 columns and 57 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 4.47333 - 0.00 seconds
Cgl0004I processed model has 9 rows, 12 columns (12 integer (6 of which binary)) and 30 elements
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.666667
Cbc0038I Pass   1: suminf.    0.66667 (2) obj. -4.47333 iterations 0
Cbc0038I Solution found of -3.63717
Cbc0038I Cleaned solution of -3.63717
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -3.72079
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.66667 (2) obj. -4.47333 iterations 0
Cbc0038I Pass   3: suminf.    0.11745 (1) obj. -3.72079 iterations 3
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. -4.13545 iterations 2
Cbc0038I Pass   5: suminf.    0.01989 (1) obj. -3.72079 iterations 1
Cbc0038I Pass   6: suminf.    0.01989 (1) obj. -3.72079 iterations 0
Cbc0038I Pass   7: suminf.    0.01989 (1) obj. -3.72079 iterations 0
Cbc0038I Pass   8: suminf.    0.01989 (1) obj. -3.72079 iterations 0
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -3.88879 iterations 2
Cbc0038I Pass  10: suminf.    0.33333 (1) obj. -3.77832 iterations 4
Cbc0038I Pass  11: suminf.    0.44267 (2) obj. -3.72079 iterations 2
Cbc0038I Pass  12: suminf.    0.66667 (2) obj. -4.47333 iterations 3
Cbc0038I Pass  13: suminf.    0.11745 (1) obj. -3.72079 iterations 3
Cbc0038I Pass  14: suminf.    0.33333 (1) obj. -4.13545 iterations 2
Cbc0038I Pass  15: suminf.    0.01989 (1) obj. -3.72079 iterations 1
Cbc0038I Pass  16: suminf.    0.01989 (1) obj. -3.72079 iterations 0
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. -3.88879 iterations 2
Cbc0038I Pass  18: suminf.    0.01989 (1) obj. -3.72079 iterations 2
Cbc0038I Pass  19: suminf.    0.01989 (1) obj. -3.72079 iterations 0
Cbc0038I Pass  20: suminf.    0.33333 (1) obj. -3.88879 iterations 2
Cbc0038I Pass  21: suminf.    0.66667 (2) obj. -4.47333 iterations 2
Cbc0038I Pass  22: suminf.    0.66667 (2) obj. -4.47333 iterations 0
Cbc0038I Pass  23: suminf.    0.33333 (1) obj. -3.77832 iterations 3
Cbc0038I Pass  24: suminf.    0.44267 (2) obj. -3.72079 iterations 2
Cbc0038I Pass  25: suminf.    0.66667 (2) obj. -4.47333 iterations 3
Cbc0038I Pass  26: suminf.    0.11745 (1) obj. -3.72079 iterations 3
Cbc0038I Pass  27: suminf.    0.33333 (1) obj. -4.13545 iterations 2
Cbc0038I Pass  28: suminf.    0.01989 (1) obj. -3.72079 iterations 1
Cbc0038I Pass  29: suminf.    0.52245 (2) obj. -3.72079 iterations 6
Cbc0038I Pass  30: suminf.    0.01989 (1) obj. -3.72079 iterations 4
Cbc0038I Pass  31: suminf.    0.01989 (1) obj. -3.72079 iterations 1
Cbc0038I Rounding solution of -3.70804 is better than previous of -3.63717

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 12 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -3.8713
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66667 (2) obj. -4.47333 iterations 0
Cbc0038I Pass  32: suminf.    0.32884 (1) obj. -3.8713 iterations 3
Cbc0038I Pass  33: suminf.    0.33333 (1) obj. -4.13545 iterations 2
Cbc0038I Pass  34: suminf.    0.25465 (1) obj. -3.8713 iterations 1
Cbc0038I Pass  35: suminf.    0.33333 (1) obj. -3.88879 iterations 2
Cbc0038I Pass  36: suminf.    0.25465 (1) obj. -3.8713 iterations 2
Cbc0038I Pass  37: suminf.    0.67742 (2) obj. -3.8713 iterations 3
Cbc0038I Pass  38: suminf.    0.66667 (2) obj. -4.47333 iterations 3
Cbc0038I Pass  39: suminf.    0.32884 (1) obj. -3.8713 iterations 3
Cbc0038I Pass  40: suminf.    0.33333 (1) obj. -4.13545 iterations 2
Cbc0038I Pass  41: suminf.    0.33333 (1) obj. -4.13545 iterations 0
Cbc0038I Pass  42: suminf.    0.62704 (2) obj. -3.8713 iterations 1
Cbc0038I Pass  43: suminf.    0.33333 (1) obj. -4.13545 iterations 1
Cbc0038I Pass  44: suminf.    0.25465 (1) obj. -3.8713 iterations 1
Cbc0038I Pass  45: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  46: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  47: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  48: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  49: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  50: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  51: suminf.    0.25465 (1) obj. -3.8713 iterations 0
Cbc0038I Pass  52: suminf.    0.75721 (2) obj. -3.8713 iterations 5
Cbc0038I Pass  53: suminf.    0.66667 (2) obj. -4.47333 iterations 4
Cbc0038I Pass  54: suminf.    0.32884 (1) obj. -3.8713 iterations 3
Cbc0038I Pass  55: suminf.    0.33333 (1) obj. -3.9657 iterations 4
Cbc0038I Pass  56: suminf.    0.48257 (2) obj. -3.8713 iterations 2
Cbc0038I Pass  57: suminf.    0.48257 (2) obj. -3.8713 iterations 0
Cbc0038I Pass  58: suminf.    0.48257 (2) obj. -3.8713 iterations 0
Cbc0038I Pass  59: suminf.    0.48257 (2) obj. -3.8713 iterations 0
Cbc0038I Pass  60: suminf.    0.48257 (2) obj. -3.8713 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 12 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -3.70804 - took 0.00 seconds
Cbc0012I Integer solution of -3.7080377 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0038I Full problem 9 rows 12 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -4.4733281 to -4.4733281 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -3.708037741482221, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -4.47333 to -4.47333
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                3.70803774
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e2f6a23b0128444792949c0567b3a551-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/e2f6a23b0128444792949c0567b3a551-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 35.3263 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -35.2068 iterations 10
Cbc0038I Solution found of -30.6804
Cbc0038I Cleaned solution of -30.6804
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -30.6804 to -31.5164 (0.00 seconds)
Cbc0038I Round again with cutoff of -31.8974
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -35.2068 iterations 0
Cbc0038I Pass   3: suminf.    0.53061 (2) obj. -31.8974 iterations 14
Cbc0038I Pass   4: suminf.    0.48694 (2) obj. -31.8974 iterations 2
Cbc0038I Pass   5: suminf.    0.17789 (2) obj. -31.8974 iterations 11
Cbc0038I Pass   6: suminf.    0.14286 (1) obj. -32.1625 iterations 8
Cbc0038I Pass   7: suminf.    0.43335 (1) obj. -31.8974 iterations 3
Cbc0038I Pass   8: suminf.    0.69232 (3) obj. -31.8974 iterations 18
Cbc0038I Pass   9: suminf.    0.28571 (2) obj. -32.1896 iterations 7
Cbc0038I Pass  10: suminf.    0.61963 (2) obj. -31.8974 iterations 4
Cbc0038I Pass  11: suminf.    0.32738 (1) obj. -31.8974 iterations 13
Cbc0038I Pass  12: suminf.    0.28571 (1) obj. -31.9288 iterations 11
Cbc0038I Pass  13: suminf.    0.32159 (1) obj. -31.8974 iterations 5
Cbc0038I Pass  14: suminf.    0.43973 (2) obj. -31.8974 iterations 16
Cbc0038I Pass  15: suminf.    0.14286 (1) obj. -32.1157 iterations 9
Cbc0038I Pass  16: suminf.    0.38208 (1) obj. -31.8974 iterations 5
Cbc0038I Pass  17: suminf.    0.57940 (2) obj. -31.8974 iterations 15
Cbc0038I Pass  18: suminf.    0.14286 (1) obj. -32.2134 iterations 9
Cbc0038I Pass  19: suminf.    0.49594 (1) obj. -31.8974 iterations 5
Cbc0038I Pass  20: suminf.    0.61791 (2) obj. -31.8974 iterations 27
Cbc0038I Pass  21: suminf.    0.59956 (2) obj. -31.8974 iterations 6
Cbc0038I Pass  22: suminf.    0.32596 (1) obj. -31.8974 iterations 4
Cbc0038I Pass  23: suminf.    0.14286 (1) obj. -32.2817 iterations 6
Cbc0038I Pass  24: suminf.    0.41797 (1) obj. -31.8974 iterations 4
Cbc0038I Pass  25: suminf.    1.37909 (4) obj. -31.8974 iterations 13
Cbc0038I Pass  26: suminf.    1.37304 (4) obj. -31.8974 iterations 5
Cbc0038I Pass  27: suminf.    0.19935 (1) obj. -31.8974 iterations 3
Cbc0038I Pass  28: suminf.    0.14286 (1) obj. -32.3773 iterations 6
Cbc0038I Pass  29: suminf.    0.30864 (1) obj. -31.8974 iterations 4
Cbc0038I Pass  30: suminf.    0.59981 (5) obj. -31.8974 iterations 25
Cbc0038I Pass  31: suminf.    0.59981 (5) obj. -31.8974 iterations 2
Cbc0038I Rounding solution of -31.7468 is better than previous of -31.5164

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 32 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -31.7468 to -31.7678 (0.02 seconds)
Cbc0038I Round again with cutoff of -32.5832
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -35.2068 iterations 0
Cbc0038I Pass  32: suminf.    0.53444 (3) obj. -32.5832 iterations 21
Cbc0038I Pass  33: suminf.    0.42829 (3) obj. -32.5832 iterations 3
Cbc0038I Pass  34: suminf.    0.59042 (2) obj. -32.5832 iterations 9
Cbc0038I Pass  35: suminf.    0.43506 (2) obj. -32.5832 iterations 9
Cbc0038I Pass  36: suminf.    0.36517 (2) obj. -32.5832 iterations 11
Cbc0038I Pass  37: suminf.    0.35069 (2) obj. -32.5832 iterations 3
Cbc0038I Pass  38: suminf.    0.53153 (2) obj. -32.5832 iterations 25
Cbc0038I Pass  39: suminf.    0.53153 (2) obj. -32.5832 iterations 1
Cbc0038I Pass  40: suminf.    0.40255 (2) obj. -32.5832 iterations 9
Cbc0038I Pass  41: suminf.    0.89913 (2) obj. -32.5832 iterations 10
Cbc0038I Pass  42: suminf.    0.57143 (2) obj. -32.8137 iterations 4
Cbc0038I Pass  43: suminf.    0.37160 (2) obj. -32.5832 iterations 10
Cbc0038I Pass  44: suminf.    0.34843 (2) obj. -32.5832 iterations 1
Cbc0038I Pass  45: suminf.    0.36517 (2) obj. -32.5832 iterations 8
Cbc0038I Pass  46: suminf.    0.35069 (2) obj. -32.5832 iterations 2
Cbc0038I Pass  47: suminf.    0.35249 (2) obj. -32.5832 iterations 2
Cbc0038I Pass  48: suminf.    0.35069 (2) obj. -32.5832 iterations 2
Cbc0038I Pass  49: suminf.    0.58721 (3) obj. -32.5832 iterations 13
Cbc0038I Pass  50: suminf.    0.56938 (2) obj. -32.5832 iterations 4
Cbc0038I Pass  51: suminf.    0.88562 (2) obj. -32.5832 iterations 8
Cbc0038I Pass  52: suminf.    0.57143 (2) obj. -32.8206 iterations 3
Cbc0038I Pass  53: suminf.    0.35069 (2) obj. -32.5832 iterations 7
Cbc0038I Pass  54: suminf.    0.35069 (2) obj. -32.5832 iterations 0
Cbc0038I Pass  55: suminf.    0.36517 (2) obj. -32.5832 iterations 2
Cbc0038I Pass  56: suminf.    0.52155 (2) obj. -32.5832 iterations 11
Cbc0038I Pass  57: suminf.    0.51314 (2) obj. -32.5832 iterations 2
Cbc0038I Pass  58: suminf.    0.88562 (2) obj. -32.5832 iterations 7
Cbc0038I Pass  59: suminf.    0.57143 (2) obj. -32.8206 iterations 3
Cbc0038I Pass  60: suminf.    0.35069 (2) obj. -32.5832 iterations 7
Cbc0038I Rounding solution of -31.7843 is better than previous of -31.7678

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -33.4061
Cbc0038I Pass  60: suminf.    0.85714 (6) obj. -35.2068 iterations 0
Cbc0038I Pass  61: suminf.    0.72433 (4) obj. -33.4061 iterations 20
Cbc0038I Pass  62: suminf.    0.59021 (4) obj. -33.4061 iterations 9
Cbc0038I Pass  63: suminf.    0.74464 (3) obj. -33.4061 iterations 17
Cbc0038I Pass  64: suminf.    0.42857 (3) obj. -33.6538 iterations 13
Cbc0038I Pass  65: suminf.    0.76393 (3) obj. -33.4061 iterations 6
Cbc0038I Pass  66: suminf.    0.57498 (3) obj. -33.4061 iterations 13
Cbc0038I Pass  67: suminf.    0.42857 (3) obj. -33.4742 iterations 8
Cbc0038I Pass  68: suminf.    0.51632 (3) obj. -33.4061 iterations 6
Cbc0038I Pass  69: suminf.    0.96923 (4) obj. -33.4061 iterations 20
Cbc0038I Pass  70: suminf.    0.83460 (4) obj. -33.4061 iterations 9
Cbc0038I Pass  71: suminf.    0.71027 (3) obj. -33.4061 iterations 7
Cbc0038I Pass  72: suminf.    0.42857 (3) obj. -33.6113 iterations 10
Cbc0038I Pass  73: suminf.    0.76829 (3) obj. -33.4061 iterations 9
Cbc0038I Pass  74: suminf.    0.42857 (3) obj. -33.6538 iterations 15
Cbc0038I Pass  75: suminf.    0.76393 (3) obj. -33.4061 iterations 6
Cbc0038I Pass  76: suminf.    0.75752 (3) obj. -33.4061 iterations 8
Cbc0038I Pass  77: suminf.    0.42857 (3) obj. -33.6374 iterations 10
Cbc0038I Pass  78: suminf.    0.74168 (3) obj. -33.4061 iterations 5
Cbc0038I Pass  79: suminf.    0.80706 (4) obj. -33.4061 iterations 10
Cbc0038I Pass  80: suminf.    0.42857 (3) obj. -33.6516 iterations 13
Cbc0038I Pass  81: suminf.    0.76089 (3) obj. -33.4061 iterations 5
Cbc0038I Pass  82: suminf.    0.77424 (3) obj. -33.4061 iterations 10
Cbc0038I Pass  83: suminf.    0.50239 (4) obj. -33.4061 iterations 15
Cbc0038I Pass  84: suminf.    0.67028 (9) obj. -33.4061 iterations 8
Cbc0038I Pass  85: suminf.    0.87430 (4) obj. -33.4061 iterations 12
Cbc0038I Pass  86: suminf.    0.85282 (4) obj. -33.4061 iterations 2
Cbc0038I Pass  87: suminf.    0.78831 (3) obj. -33.4061 iterations 9
Cbc0038I Pass  88: suminf.    0.71429 (3) obj. -33.462 iterations 4
Cbc0038I Pass  89: suminf.    0.77705 (3) obj. -33.4061 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -31.7843 - took 0.06 seconds
Cbc0012I Integer solution of -31.784277 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0031I 20 added rows had average density of 56.25
Cbc0013I At root node, 20 cuts changed objective from -35.326269 to -33.52887 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 918 row cuts average 81.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 13 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 63 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -31.784277 best solution, best possible -33.52887 (0.26 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 25 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 18 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 20 columns
Cbc0016I Integer solution of -31.795313 found by strong branching after 8500 iterations and 516 nodes (0.73 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 8 rows 9 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 12 columns
Cbc0010I After 1000 nodes, 69 on tree, -31.795313 best solution, best possible -33.52887 (2.91 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 15 rows 19 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 31 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 26 columns
Cbc0016I Integer solution of -31.804608 found by strong branching after 16651 iterations and 1876 nodes (3.57 seconds)
Cbc0010I After 2000 nodes, 26 on tree, -31.804608 best solution, best possible -33.52887 (3.66 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 28 columns
Cbc0010I After 3000 nodes, 46 on tree, -31.804608 best solution, best possible -33.52887 (4.51 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 25 columns
Cbc0010I After 4000 nodes, 28 on tree, -31.804608 best solution, best possible -33.52887 (5.24 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 19 rows 23 columns
Cbc0016I Integer solution of -31.806705 found by strong branching after 42715 iterations and 4569 nodes (5.52 seconds)
Cbc0010I After 5000 nodes, 29 on tree, -31.806705 best solution, best possible -33.500547 (5.82 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 20 columns
Cbc0010I After 6000 nodes, 10 on tree, -31.806705 best solution, best possible -33.500547 (7.92 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 31 columns
Cbc0010I After 7000 nodes, 11 on tree, -31.806705 best solution, best possible -33.500547 (8.74 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 29 columns
Cbc0010I After 8000 nodes, 5 on tree, -31.806705 best solution, best possible -33.500547 (9.54 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 26 rows 32 columns
Cbc0010I After 9000 nodes, 9 on tree, -31.806705 best solution, best possible -33.500547 (10.67 seconds)
Cbc0010I After 10000 nodes, 8 on tree, -31.806705 best solution, best possible -33.500547 (11.34 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0010I After 11000 nodes, 6 on tree, -31.806705 best solution, best possible -33.205688 (12.06 seconds)
Cbc0010I After 12000 nodes, 90 on tree, -31.806705 best solution, best possible -31.890027 (12.81 seconds)
Cbc0001I Search completed - best objective -31.80670541897426, took 1174736 iterations and 199991 nodes (12.87 seconds)
Cbc0032I Strong branching done 46376 times (309836 iterations), fathomed 1902 nodes and fixed 3603 variables
Cbc0041I Maximum depth 30, 23685 variables fixed on reduced cost (complete fathoming 2734 times, 187747 nodes taking 1064625 iterations)
Cuts at root node changed objective from -35.3263 to -33.5289
Probing was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 2266 times and created 4085 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 100 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                31.80670542
Enumerated nodes:               199991
Total iterations:               1174736
Time (CPU seconds):             12.45
Time (Wallclock seconds):       12.87

Option for printingOptions changed from normal to all
Total time (CPU seconds):       12.45   (Wallclock seconds):       12.87

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/db1cffced76041a296f392edd025847f-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/db1cffced76041a296f392edd025847f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.1267 - 0.00 seconds
Cgl0004I processed model has 25 rows, 40 columns (40 integer (20 of which binary)) and 100 elements
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (4) obj. -16.1267 iterations 12
Cbc0038I Solution found of -13.824
Cbc0038I Cleaned solution of -13.824
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.0543
Cbc0038I Pass   2: suminf.    0.80000 (4) obj. -16.1267 iterations 0
Cbc0038I Pass   3: suminf.    0.30291 (1) obj. -14.0543 iterations 4
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -14.5341 iterations 8
Cbc0038I Solution found of -14.3337
Cbc0038I Cleaned solution of -14.3337
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.6923
Cbc0038I Pass   5: suminf.    0.80000 (4) obj. -16.1267 iterations 0
Cbc0038I Pass   6: suminf.    0.55562 (2) obj. -14.6923 iterations 9
Cbc0038I Pass   7: suminf.    0.36362 (2) obj. -14.6923 iterations 1
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -15.0651 iterations 9
Cbc0038I Pass   9: suminf.    0.41289 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  10: suminf.    0.01255 (1) obj. -14.6923 iterations 2
Cbc0038I Pass  11: suminf.    0.01255 (1) obj. -14.6923 iterations 0
Cbc0038I Pass  12: suminf.    0.40000 (1) obj. -14.815 iterations 7
Cbc0038I Pass  13: suminf.    0.27363 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  14: suminf.    0.47194 (1) obj. -14.6923 iterations 3
Cbc0038I Pass  15: suminf.    0.20000 (1) obj. -15.0108 iterations 5
Cbc0038I Pass  16: suminf.    0.47194 (1) obj. -14.6923 iterations 2
Cbc0038I Pass  17: suminf.    0.46648 (2) obj. -14.6923 iterations 8
Cbc0038I Pass  18: suminf.    0.25163 (2) obj. -14.6923 iterations 2
Cbc0038I Pass  19: suminf.    0.40000 (1) obj. -14.815 iterations 5
Cbc0038I Pass  20: suminf.    0.27363 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  21: suminf.    0.55562 (2) obj. -14.6923 iterations 10
Cbc0038I Pass  22: suminf.    0.36362 (2) obj. -14.6923 iterations 1
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -15.0651 iterations 7
Cbc0038I Pass  24: suminf.    0.41289 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  25: suminf.    0.01255 (1) obj. -14.6923 iterations 2
Cbc0038I Pass  26: suminf.    0.01255 (1) obj. -14.6923 iterations 0
Cbc0038I Pass  27: suminf.    0.40000 (1) obj. -14.815 iterations 6
Cbc0038I Pass  28: suminf.    0.27363 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  29: suminf.    0.03595 (1) obj. -14.6923 iterations 6
Cbc0038I Pass  30: suminf.    0.03595 (1) obj. -14.6923 iterations 0
Cbc0038I Pass  31: suminf.    0.03595 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  32: suminf.    0.03595 (1) obj. -14.6923 iterations 1
Cbc0038I Pass  33: suminf.    0.22704 (1) obj. -14.6923 iterations 6
Cbc0038I Pass  34: suminf.    0.22704 (1) obj. -14.6923 iterations 0
Cbc0038I Rounding solution of -14.6833 is better than previous of -14.3337

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -14.6833 to -15.147 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.4409
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.80000 (4) obj. -16.1267 iterations 0
Cbc0038I Pass  35: suminf.    0.80695 (3) obj. -15.4409 iterations 12
Cbc0038I Pass  36: suminf.    0.60000 (3) obj. -15.6906 iterations 10
Cbc0038I Pass  37: suminf.    0.46905 (2) obj. -15.4409 iterations 4
Cbc0038I Pass  38: suminf.    0.40000 (2) obj. -15.4902 iterations 3
Cbc0038I Pass  39: suminf.    1.03977 (3) obj. -15.4409 iterations 12
Cbc0038I Pass  40: suminf.    0.27338 (2) obj. -15.4409 iterations 2
Cbc0038I Pass  41: suminf.    0.47756 (2) obj. -15.4409 iterations 7
Cbc0038I Pass  42: suminf.    0.47756 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  43: suminf.    0.60000 (2) obj. -15.7914 iterations 4
Cbc0038I Pass  44: suminf.    0.20000 (1) obj. -15.4873 iterations 1
Cbc0038I Pass  45: suminf.    0.72079 (2) obj. -15.4409 iterations 7
Cbc0038I Pass  46: suminf.    0.55971 (2) obj. -15.4409 iterations 2
Cbc0038I Pass  47: suminf.    0.55971 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  48: suminf.    0.55971 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  49: suminf.    0.55971 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  50: suminf.    0.60000 (2) obj. -15.7914 iterations 7
Cbc0038I Pass  51: suminf.    0.20000 (1) obj. -15.4873 iterations 1
Cbc0038I Pass  52: suminf.    0.72079 (2) obj. -15.4409 iterations 7
Cbc0038I Pass  53: suminf.    0.58571 (2) obj. -15.4409 iterations 9
Cbc0038I Pass  54: suminf.    0.38924 (2) obj. -15.4409 iterations 1
Cbc0038I Pass  55: suminf.    0.47756 (2) obj. -15.4409 iterations 7
Cbc0038I Pass  56: suminf.    0.47756 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  57: suminf.    0.60000 (2) obj. -15.7914 iterations 8
Cbc0038I Pass  58: suminf.    0.20000 (1) obj. -15.4873 iterations 1
Cbc0038I Pass  59: suminf.    0.72079 (2) obj. -15.4409 iterations 7
Cbc0038I Pass  60: suminf.    0.55971 (2) obj. -15.4409 iterations 2
Cbc0038I Pass  61: suminf.    0.55971 (2) obj. -15.4409 iterations 0
Cbc0038I Pass  62: suminf.    0.47756 (2) obj. -15.4409 iterations 5
Cbc0038I Pass  63: suminf.    0.47756 (2) obj. -15.4409 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 40 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.147 - took 0.01 seconds
Cbc0012I Integer solution of -15.146968 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 40 columns, reduced to 12 rows 14 columns
Cbc0031I 7 added rows had average density of 8
Cbc0013I At root node, 7 cuts changed objective from -16.126705 to -15.231582 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 11 row cuts average 2.5 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 32 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -15.146968 best solution, best possible -15.231582 (0.01 seconds)
Cbc0001I Search completed - best objective -15.14696770161401, took 78 iterations and 2 nodes (0.02 seconds)
Cbc0032I Strong branching done 6 times (20 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Cuts at root node changed objective from -16.1267 to -15.2316
Probing was tried 10 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 8 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 8 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 8 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.14696770
Enumerated nodes:               2
Total iterations:               78
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/9a8d9c972a5a4751a51f84a8e13e228f-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/9a8d9c972a5a4751a51f84a8e13e228f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 77 COLUMNS
At line 423 RHS
At line 496 BOUNDS
At line 563 ENDATA
Problem MODEL has 72 rows, 66 columns and 173 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 16.7868 - 0.00 seconds
Cgl0004I processed model has 25 rows, 39 columns (39 integer (19 of which binary)) and 98 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.8
Cbc0038I Pass   1: suminf.    0.80000 (3) obj. -16.6025 iterations 13
Cbc0038I Solution found of -14.5716
Cbc0038I Cleaned solution of -14.5716
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 3 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -14.5716 to -15.1263 (0.00 seconds)
Cbc0038I Round again with cutoff of -15.2924
Cbc0038I Pass   2: suminf.    0.80000 (3) obj. -16.6025 iterations 0
Cbc0038I Pass   3: suminf.    0.25070 (1) obj. -15.2924 iterations 3
Cbc0038I Pass   4: suminf.    0.20000 (1) obj. -15.3468 iterations 9
Cbc0038I Pass   5: suminf.    0.72634 (2) obj. -15.2924 iterations 3
Cbc0038I Pass   6: suminf.    0.60000 (2) obj. -16.0367 iterations 7
Cbc0038I Pass   7: suminf.    0.45322 (1) obj. -15.2924 iterations 3
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -15.6316 iterations 7
Cbc0038I Pass   9: suminf.    0.43658 (1) obj. -15.2924 iterations 3
Cbc0038I Pass  10: suminf.    0.20623 (1) obj. -15.2924 iterations 6
Cbc0038I Pass  11: suminf.    0.20623 (1) obj. -15.2924 iterations 0
Cbc0038I Pass  12: suminf.    0.40000 (1) obj. -15.4849 iterations 8
Cbc0038I Pass  13: suminf.    0.19985 (1) obj. -15.2924 iterations 2
Cbc0038I Pass  14: suminf.    0.12798 (1) obj. -15.2924 iterations 4
Cbc0038I Pass  15: suminf.    0.12798 (1) obj. -15.2924 iterations 1
Cbc0038I Pass  16: suminf.    1.53009 (5) obj. -15.2924 iterations 5
Cbc0038I Pass  17: suminf.    0.23254 (2) obj. -15.2924 iterations 3
Cbc0038I Pass  18: suminf.    0.60000 (2) obj. -16.1647 iterations 8
Cbc0038I Pass  19: suminf.    0.20000 (1) obj. -15.8129 iterations 2
Cbc0038I Pass  20: suminf.    0.02812 (1) obj. -15.2924 iterations 5
Cbc0038I Pass  21: suminf.    0.20000 (1) obj. -15.4577 iterations 4
Cbc0038I Pass  22: suminf.    0.38871 (2) obj. -15.2924 iterations 7
Cbc0038I Pass  23: suminf.    0.03554 (1) obj. -15.2924 iterations 2
Cbc0038I Pass  24: suminf.    0.21839 (1) obj. -15.2924 iterations 6
Cbc0038I Solution found of -15.4848
Cbc0038I Cleaned solution of -15.4848
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -15.4848 to -15.6248 (0.01 seconds)
Cbc0038I Round again with cutoff of -15.8572
Cbc0038I Pass  25: suminf.    0.80000 (3) obj. -16.6025 iterations 0
Cbc0038I Pass  26: suminf.    0.66759 (2) obj. -15.8572 iterations 9
Cbc0038I Pass  27: suminf.    0.60000 (2) obj. -16.0367 iterations 6
Cbc0038I Pass  28: suminf.    0.47217 (2) obj. -15.8572 iterations 8
Cbc0038I Pass  29: suminf.    0.34950 (2) obj. -15.8572 iterations 2
Cbc0038I Pass  30: suminf.    0.36351 (2) obj. -15.8572 iterations 6
Cbc0038I Pass  31: suminf.    0.33953 (1) obj. -15.8572 iterations 1
Cbc0038I Pass  32: suminf.    0.20000 (1) obj. -16.1724 iterations 6
Cbc0038I Pass  33: suminf.    0.47004 (2) obj. -15.8572 iterations 4
Cbc0038I Pass  34: suminf.    0.20000 (1) obj. -16.1724 iterations 4
Cbc0038I Pass  35: suminf.    0.39102 (1) obj. -15.8572 iterations 8
Cbc0038I Pass  36: suminf.    0.39102 (1) obj. -15.8572 iterations 0
Cbc0038I Pass  37: suminf.    0.94426 (3) obj. -15.8572 iterations 2
Cbc0038I Pass  38: suminf.    1.11484 (6) obj. -15.8572 iterations 15
Cbc0038I Pass  39: suminf.    0.60000 (2) obj. -16.144 iterations 8
Cbc0038I Pass  40: suminf.    0.36696 (2) obj. -15.8572 iterations 8
Cbc0038I Pass  41: suminf.    0.22657 (2) obj. -15.8572 iterations 2
Cbc0038I Pass  42: suminf.    0.36351 (2) obj. -15.8572 iterations 5
Cbc0038I Pass  43: suminf.    0.33953 (1) obj. -15.8572 iterations 1
Cbc0038I Pass  44: suminf.    0.20000 (1) obj. -16.1724 iterations 6
Cbc0038I Pass  45: suminf.    0.46495 (2) obj. -15.8572 iterations 5
Cbc0038I Pass  46: suminf.    0.20000 (1) obj. -16.1724 iterations 5
Cbc0038I Pass  47: suminf.    0.48533 (1) obj. -15.8572 iterations 8
Cbc0038I Pass  48: suminf.    0.48533 (1) obj. -15.8572 iterations 1
Cbc0038I Pass  49: suminf.    1.04666 (3) obj. -15.8572 iterations 6
Cbc0038I Pass  50: suminf.    0.40000 (2) obj. -16.4265 iterations 9
Cbc0038I Pass  51: suminf.    0.22322 (1) obj. -15.8572 iterations 6
Cbc0038I Pass  52: suminf.    0.20000 (1) obj. -15.8789 iterations 6
Cbc0038I Pass  53: suminf.    0.33953 (1) obj. -15.8572 iterations 7
Cbc0038I Pass  54: suminf.    0.33953 (1) obj. -15.8572 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25 rows 39 columns, reduced to 18 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.6248 - took 0.01 seconds
Cbc0012I Integer solution of -15.624797 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 25 rows 39 columns, reduced to 4 rows 6 columns
Cbc0031I 6 added rows had average density of 28.166667
Cbc0013I At root node, 6 cuts changed objective from -16.786832 to -15.951831 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 2.1 elements, 6 column cuts (6 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 604 row cuts average 29.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 8 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 7 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.624797 best solution, best possible -15.951831 (0.08 seconds)
Cbc0001I Search completed - best objective -15.62479735538364, took 1421 iterations and 12 nodes (0.09 seconds)
Cbc0032I Strong branching done 100 times (489 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Cuts at root node changed objective from -16.7868 to -15.9518
Probing was tried 132 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Gomory was tried 127 times and created 677 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
TwoMirCuts was tried 127 times and created 57 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 100 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 27 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                15.62479736
Enumerated nodes:               12
Total iterations:               1421
Time (CPU seconds):             0.09
Time (Wallclock seconds):       0.09

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4a15da0f7b4b49b7b487cec9fcf67aaf-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/4a15da0f7b4b49b7b487cec9fcf67aaf-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 147 COLUMNS
At line 853 RHS
At line 996 BOUNDS
At line 1131 ENDATA
Problem MODEL has 142 rows, 134 columns and 353 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 36.6955 - 0.00 seconds
Cgl0004I processed model has 49 rows, 84 columns (84 integer (42 of which binary)) and 210 elements
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.857143
Cbc0038I Pass   1: suminf.    0.85714 (6) obj. -36.6331 iterations 16
Cbc0038I Solution found of -32.0995
Cbc0038I Cleaned solution of -32.0995
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 4 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -32.0995 to -32.5363 (0.00 seconds)
Cbc0038I Round again with cutoff of -32.9522
Cbc0038I Pass   2: suminf.    0.85714 (6) obj. -36.6331 iterations 0
Cbc0038I Pass   3: suminf.    0.14875 (2) obj. -32.9522 iterations 13
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. -32.9575 iterations 3
Cbc0038I Pass   5: suminf.    0.37417 (2) obj. -32.9522 iterations 5
Cbc0038I Pass   6: suminf.    0.29137 (2) obj. -32.9522 iterations 2
Cbc0038I Pass   7: suminf.    0.14286 (1) obj. -33.2215 iterations 4
Cbc0038I Pass   8: suminf.    0.43844 (1) obj. -32.9522 iterations 3
Cbc0038I Pass   9: suminf.    1.19685 (4) obj. -32.9522 iterations 25
Cbc0038I Pass  10: suminf.    0.99216 (4) obj. -32.9522 iterations 7
Cbc0038I Pass  11: suminf.    0.65494 (4) obj. -32.9522 iterations 7
Cbc0038I Pass  12: suminf.    0.11928 (1) obj. -32.9522 iterations 6
Cbc0038I Pass  13: suminf.    0.11928 (1) obj. -32.9522 iterations 1
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -33.5894 iterations 6
Cbc0038I Pass  15: suminf.    0.15784 (1) obj. -32.9522 iterations 5
Cbc0038I Pass  16: suminf.    0.40465 (2) obj. -32.9522 iterations 5
Cbc0038I Pass  17: suminf.    0.38879 (2) obj. -32.9522 iterations 3
Cbc0038I Pass  18: suminf.    0.07841 (1) obj. -32.9522 iterations 3
Cbc0038I Pass  19: suminf.    0.53538 (2) obj. -32.9522 iterations 20
Cbc0038I Pass  20: suminf.    0.53538 (2) obj. -32.9522 iterations 1
Cbc0038I Pass  21: suminf.    0.51637 (2) obj. -32.9522 iterations 8
Cbc0038I Pass  22: suminf.    0.39506 (2) obj. -32.9522 iterations 3
Cbc0038I Pass  23: suminf.    0.10370 (1) obj. -32.9522 iterations 8
Cbc0038I Pass  24: suminf.    0.14286 (1) obj. -33.5684 iterations 10
Cbc0038I Pass  25: suminf.    0.18095 (1) obj. -32.9522 iterations 6
Cbc0038I Pass  26: suminf.    0.27657 (1) obj. -32.9522 iterations 11
Cbc0038I Pass  27: suminf.    0.27657 (1) obj. -32.9522 iterations 1
Cbc0038I Pass  28: suminf.    0.14286 (1) obj. -33.4597 iterations 7
Cbc0038I Pass  29: suminf.    0.26698 (1) obj. -32.9522 iterations 6
Cbc0038I Pass  30: suminf.    0.33572 (2) obj. -32.9522 iterations 22
Cbc0038I Pass  31: suminf.    0.32874 (2) obj. -32.9522 iterations 5
Cbc0038I Rounding solution of -32.8869 is better than previous of -32.5363

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 30 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.7009
Cbc0038I Pass  31: suminf.    0.85714 (6) obj. -36.6331 iterations 0
Cbc0038I Pass  32: suminf.    0.36772 (2) obj. -33.7009 iterations 13
Cbc0038I Pass  33: suminf.    0.28571 (2) obj. -33.8191 iterations 6
Cbc0038I Pass  34: suminf.    0.54010 (2) obj. -33.7009 iterations 14
Cbc0038I Pass  35: suminf.    0.28571 (2) obj. -33.95 iterations 12
Cbc0038I Pass  36: suminf.    0.59314 (2) obj. -33.7009 iterations 8
Cbc0038I Pass  37: suminf.    0.55029 (2) obj. -33.7009 iterations 2
Cbc0038I Pass  38: suminf.    0.39031 (2) obj. -33.7009 iterations 8
Cbc0038I Pass  39: suminf.    0.26336 (2) obj. -33.7009 iterations 8
Cbc0038I Pass  40: suminf.    0.91122 (2) obj. -33.7009 iterations 11
Cbc0038I Pass  41: suminf.    0.14655 (2) obj. -33.7009 iterations 10
Cbc0038I Pass  42: suminf.    0.14655 (2) obj. -33.7009 iterations 0
Cbc0038I Pass  43: suminf.    0.23908 (2) obj. -33.7009 iterations 7
Cbc0038I Pass  44: suminf.    0.58600 (3) obj. -33.7009 iterations 18
Cbc0038I Pass  45: suminf.    0.56017 (3) obj. -33.7009 iterations 5
Cbc0038I Pass  46: suminf.    0.14665 (2) obj. -33.7009 iterations 7
Cbc0038I Pass  47: suminf.    0.14665 (2) obj. -33.7009 iterations 0
Cbc0038I Pass  48: suminf.    0.78534 (2) obj. -33.7009 iterations 11
Cbc0038I Pass  49: suminf.    0.94366 (4) obj. -33.7009 iterations 10
Cbc0038I Pass  50: suminf.    0.57143 (3) obj. -33.9819 iterations 15
Cbc0038I Pass  51: suminf.    0.90895 (3) obj. -33.7009 iterations 15
Cbc0038I Pass  52: suminf.    0.55786 (2) obj. -33.7009 iterations 30
Cbc0038I Pass  53: suminf.    0.55917 (2) obj. -33.7009 iterations 3
Cbc0038I Pass  54: suminf.    0.77662 (2) obj. -33.7009 iterations 10
Cbc0038I Pass  55: suminf.    0.42857 (2) obj. -33.9364 iterations 13
Cbc0038I Pass  56: suminf.    0.58325 (2) obj. -33.7009 iterations 7
Cbc0038I Pass  57: suminf.    0.57020 (2) obj. -33.7009 iterations 1
Cbc0038I Pass  58: suminf.    0.36757 (2) obj. -33.7009 iterations 9
Cbc0038I Pass  59: suminf.    0.34244 (2) obj. -33.7009 iterations 2
Cbc0038I Pass  60: suminf.    0.34894 (2) obj. -33.7009 iterations 6
Cbc0038I Rounding solution of -32.9844 is better than previous of -32.8869

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 31 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -34.5993
Cbc0038I Pass  60: suminf.    0.85714 (6) obj. -36.6331 iterations 0
Cbc0038I Pass  61: suminf.    0.47120 (4) obj. -34.5993 iterations 20
Cbc0038I Pass  62: suminf.    0.42857 (3) obj. -34.6038 iterations 9
Cbc0038I Pass  63: suminf.    0.51853 (3) obj. -34.5993 iterations 15
Cbc0038I Pass  64: suminf.    0.42857 (3) obj. -34.7017 iterations 7
Cbc0038I Pass  65: suminf.    0.64447 (3) obj. -34.5993 iterations 10
Cbc0038I Pass  66: suminf.    0.42857 (3) obj. -34.779 iterations 11
Cbc0038I Pass  67: suminf.    1.03052 (4) obj. -34.5993 iterations 20
Cbc0038I Pass  68: suminf.    1.00163 (4) obj. -34.5993 iterations 3
Cbc0038I Pass  69: suminf.    0.89998 (3) obj. -34.5993 iterations 15
Cbc0038I Pass  70: suminf.    0.71429 (3) obj. -34.627 iterations 15
Cbc0038I Pass  71: suminf.    0.74762 (3) obj. -34.5993 iterations 16
Cbc0038I Pass  72: suminf.    0.69029 (4) obj. -34.5993 iterations 22
Cbc0038I Pass  73: suminf.    0.67346 (4) obj. -34.5993 iterations 7
Cbc0038I Pass  74: suminf.    0.73025 (4) obj. -34.5993 iterations 16
Cbc0038I Pass  75: suminf.    0.87084 (7) obj. -34.5993 iterations 4
Cbc0038I Pass  76: suminf.    0.89422 (3) obj. -34.5993 iterations 13
Cbc0038I Pass  77: suminf.    0.57143 (3) obj. -34.7651 iterations 13
Cbc0038I Pass  78: suminf.    0.79481 (3) obj. -34.5993 iterations 11
Cbc0038I Pass  79: suminf.    0.57143 (3) obj. -34.6634 iterations 21
Cbc0038I Pass  80: suminf.    1.12213 (4) obj. -34.5993 iterations 16
Cbc0038I Pass  81: suminf.    1.89881 (8) obj. -34.5993 iterations 10
Cbc0038I Pass  82: suminf.    0.71429 (3) obj. -34.6209 iterations 19
Cbc0038I Pass  83: suminf.    0.74028 (3) obj. -34.5993 iterations 16
Cbc0038I Pass  84: suminf.    0.76849 (3) obj. -34.5993 iterations 23
Cbc0038I Pass  85: suminf.    0.42857 (3) obj. -34.8876 iterations 16
Cbc0038I Pass  86: suminf.    0.77039 (3) obj. -34.5993 iterations 10
Cbc0038I Pass  87: suminf.    0.72947 (3) obj. -34.5993 iterations 2
Cbc0038I Pass  88: suminf.    0.66748 (3) obj. -34.5993 iterations 6
Cbc0038I Pass  89: suminf.    0.66748 (3) obj. -34.5993 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 84 columns, reduced to 28 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -32.9844 - took 0.06 seconds
Cbc0012I Integer solution of -32.984406 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 10 rows 13 columns
Cbc0031I 13 added rows had average density of 61.307692
Cbc0013I At root node, 13 cuts changed objective from -36.695537 to -35.049318 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1172 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 49.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32.984406 best solution, best possible -35.049318 (0.26 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 21 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 28 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 27 rows 35 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 21 rows 28 columns
Cbc0010I After 1000 nodes, 223 on tree, -32.984406 best solution, best possible -35.049318 (3.57 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 32 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 27 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 12 rows 17 columns
Cbc0010I After 2000 nodes, 15 on tree, -32.984406 best solution, best possible -35.049318 (5.61 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 22 rows 28 columns
Cbc0010I After 3000 nodes, 11 on tree, -32.984406 best solution, best possible -35.049318 (6.62 seconds)
Cbc0010I After 4000 nodes, 13 on tree, -32.984406 best solution, best possible -35.049318 (7.67 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 24 rows 30 columns
Cbc0010I After 5000 nodes, 10 on tree, -32.984406 best solution, best possible -35.049318 (8.79 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 11 rows 13 columns
Cbc0010I After 6000 nodes, 10 on tree, -32.984406 best solution, best possible -35.049318 (9.91 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 25 rows 32 columns
Cbc0010I After 7000 nodes, 13 on tree, -32.984406 best solution, best possible -35.049318 (10.81 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 23 rows 29 columns
Cbc0010I After 8000 nodes, 10 on tree, -32.984406 best solution, best possible -35.049318 (11.55 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 23 columns
Cbc0010I After 9000 nodes, 13 on tree, -32.984406 best solution, best possible -35.049318 (12.51 seconds)
Cbc0010I After 10000 nodes, 7 on tree, -32.984406 best solution, best possible -35.049318 (13.21 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 20 rows 26 columns
Cbc0038I Full problem 49 rows 84 columns, reduced to 13 rows 18 columns
Cbc0010I After 11000 nodes, 7 on tree, -32.984406 best solution, best possible -35.049318 (13.84 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 17 rows 21 columns
Cbc0016I Integer solution of -32.992137 found by strong branching after 113327 iterations and 11527 nodes (14.87 seconds)
Cbc0010I After 12000 nodes, 353 on tree, -32.992137 best solution, best possible -33.873002 (15.23 seconds)
Cbc0010I After 13000 nodes, 673 on tree, -32.992137 best solution, best possible -33.551497 (16.32 seconds)
Cbc0010I After 14000 nodes, 386 on tree, -32.992137 best solution, best possible -33.551497 (16.81 seconds)
Cbc0038I Full problem 49 rows 84 columns, reduced to 16 rows 20 columns
Cbc0010I After 15000 nodes, 603 on tree, -32.992137 best solution, best possible -33.315894 (17.34 seconds)
Cbc0010I After 16000 nodes, 530 on tree, -32.992137 best solution, best possible -33.169414 (17.77 seconds)
Cbc0010I After 17000 nodes, 279 on tree, -32.992137 best solution, best possible -33.06841 (18.07 seconds)
Cbc0001I Search completed - best objective -32.99213731661453, took 1830007 iterations and 303642 nodes (18.16 seconds)
Cbc0032I Strong branching done 62002 times (421272 iterations), fathomed 2365 nodes and fixed 5889 variables
Cbc0041I Maximum depth 30, 36697 variables fixed on reduced cost (complete fathoming 3705 times, 285984 nodes taking 1667137 iterations)
Cuts at root node changed objective from -36.6955 to -35.0493
Probing was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 7350 times and created 10585 cuts of which 0 were active after adding rounds of cuts (0.397 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 100 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                32.99213732
Enumerated nodes:               303642
Total iterations:               1830007
Time (CPU seconds):             17.75
Time (Wallclock seconds):       18.17

Option for printingOptions changed from normal to all
Total time (CPU seconds):       17.75   (Wallclock seconds):       18.17

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b700b1f2cca3470cbc39b2ceb65e4548-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/b700b1f2cca3470cbc39b2ceb65e4548-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 51 COLUMNS
At line 265 RHS
At line 312 BOUNDS
At line 354 ENDATA
Problem MODEL has 46 rows, 41 columns and 107 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 8.75637 - 0.00 seconds
Cgl0004I processed model has 16 rows, 24 columns (24 integer (12 of which binary)) and 60 elements
Cbc0038I Initial state - 3 integers unsatisfied sum - 0.75
Cbc0038I Pass   1: suminf.    0.75000 (3) obj. -8.69463 iterations 3
Cbc0038I Solution found of -7.11277
Cbc0038I Cleaned solution of -7.11277
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -7.11277 to -7.35972 (0.00 seconds)
Cbc0038I Round again with cutoff of -7.49939
Cbc0038I Pass   2: suminf.    0.75000 (3) obj. -8.69463 iterations 0
Cbc0038I Pass   3: suminf.    0.41973 (1) obj. -7.49939 iterations 4
Cbc0038I Pass   4: suminf.    0.25000 (1) obj. -7.93843 iterations 2
Cbc0038I Solution found of -7.65204
Cbc0038I Cleaned solution of -7.65204
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -7.87291
Cbc0038I Pass   5: suminf.    0.75000 (3) obj. -8.69463 iterations 0
Cbc0038I Pass   6: suminf.    0.35984 (2) obj. -7.87291 iterations 3
Cbc0038I Pass   7: suminf.    0.25000 (1) obj. -7.93843 iterations 2
Cbc0038I Pass   8: suminf.    0.35009 (1) obj. -7.87291 iterations 3
Cbc0038I Pass   9: suminf.    0.25000 (1) obj. -8.04918 iterations 7
Cbc0038I Pass  10: suminf.    0.43851 (1) obj. -7.87291 iterations 2
Cbc0038I Pass  11: suminf.    0.45987 (1) obj. -7.87291 iterations 4
Cbc0038I Pass  12: suminf.    0.45987 (1) obj. -7.87291 iterations 1
Cbc0038I Pass  13: suminf.    0.42177 (1) obj. -7.87291 iterations 2
Cbc0038I Pass  14: suminf.    0.42177 (1) obj. -7.87291 iterations 1
Cbc0038I Pass  15: suminf.    0.59524 (2) obj. -7.87291 iterations 3
Cbc0038I Pass  16: suminf.    0.45740 (2) obj. -7.87291 iterations 4
Cbc0038I Pass  17: suminf.    0.75000 (2) obj. -8.40378 iterations 8
Cbc0038I Pass  18: suminf.    0.35009 (1) obj. -7.87291 iterations 4
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -8.04918 iterations 6
Cbc0038I Pass  20: suminf.    0.43851 (1) obj. -7.87291 iterations 3
Cbc0038I Pass  21: suminf.    0.62614 (2) obj. -7.87291 iterations 5
Cbc0038I Pass  22: suminf.    0.68901 (2) obj. -7.87291 iterations 11
Cbc0038I Pass  23: suminf.    0.68901 (2) obj. -7.87291 iterations 0
Cbc0038I Pass  24: suminf.    0.75000 (2) obj. -8.40378 iterations 6
Cbc0038I Pass  25: suminf.    0.39842 (2) obj. -7.87291 iterations 9
Cbc0038I Pass  26: suminf.    0.39842 (2) obj. -7.87291 iterations 2
Cbc0038I Pass  27: suminf.    0.39842 (2) obj. -7.87291 iterations 0
Cbc0038I Pass  28: suminf.    0.39842 (2) obj. -7.87291 iterations 0
Cbc0038I Pass  29: suminf.    1.17347 (5) obj. -7.87291 iterations 4
Cbc0038I Pass  30: suminf.    0.39842 (2) obj. -7.87291 iterations 3
Cbc0038I Pass  31: suminf.    0.39842 (2) obj. -7.87291 iterations 1
Cbc0038I Pass  32: suminf.    0.30302 (2) obj. -7.87291 iterations 5
Cbc0038I Pass  33: suminf.    0.30302 (2) obj. -7.87291 iterations 0
Cbc0038I Pass  34: suminf.    0.75000 (2) obj. -8.40378 iterations 6
Cbc0038I Rounding solution of -7.70288 is better than previous of -7.65204

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 13 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -8.13795
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  34: suminf.    0.75000 (3) obj. -8.69463 iterations 0
Cbc0038I Pass  35: suminf.    0.72007 (2) obj. -8.13795 iterations 3
Cbc0038I Pass  36: suminf.    0.50000 (2) obj. -8.41161 iterations 4
Cbc0038I Pass  37: suminf.    0.27285 (2) obj. -8.13795 iterations 6
Cbc0038I Pass  38: suminf.    0.25004 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  39: suminf.    0.74007 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  40: suminf.    0.74007 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  41: suminf.    0.94551 (2) obj. -8.13795 iterations 7
Cbc0038I Pass  42: suminf.    0.75000 (2) obj. -8.40378 iterations 3
Cbc0038I Pass  43: suminf.    0.50000 (2) obj. -8.41161 iterations 7
Cbc0038I Pass  44: suminf.    0.74996 (2) obj. -8.13795 iterations 5
Cbc0038I Pass  45: suminf.    0.50000 (2) obj. -8.41161 iterations 5
Cbc0038I Pass  46: suminf.    0.27285 (2) obj. -8.13795 iterations 5
Cbc0038I Pass  47: suminf.    0.25004 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  48: suminf.    0.74007 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  49: suminf.    0.75000 (2) obj. -8.40378 iterations 6
Cbc0038I Pass  50: suminf.    0.88286 (2) obj. -8.13795 iterations 4
Cbc0038I Pass  51: suminf.    0.65900 (2) obj. -8.13795 iterations 4
Cbc0038I Pass  52: suminf.    0.82866 (2) obj. -8.13795 iterations 9
Cbc0038I Pass  53: suminf.    0.27285 (2) obj. -8.13795 iterations 4
Cbc0038I Pass  54: suminf.    0.25004 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  55: suminf.    0.74007 (2) obj. -8.13795 iterations 1
Cbc0038I Pass  56: suminf.    2.22967 (6) obj. -8.13795 iterations 6
Cbc0038I Pass  57: suminf.    0.91000 (3) obj. -8.13795 iterations 2
Cbc0038I Pass  58: suminf.    0.91000 (3) obj. -8.13795 iterations 1
Cbc0038I Pass  59: suminf.    0.75000 (3) obj. -8.69463 iterations 5
Cbc0038I Pass  60: suminf.    0.72007 (2) obj. -8.13795 iterations 3
Cbc0038I Pass  61: suminf.    0.50000 (2) obj. -8.41161 iterations 4
Cbc0038I Pass  62: suminf.    0.27285 (2) obj. -8.13795 iterations 5
Cbc0038I Pass  63: suminf.    0.25004 (2) obj. -8.13795 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 24 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -7.70288 - took 0.01 seconds
Cbc0012I Integer solution of -7.7028767 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 16 rows 24 columns, reduced to 6 rows 7 columns
Cbc0031I 7 added rows had average density of 14.857143
Cbc0013I At root node, 7 cuts changed objective from -8.7563651 to -7.8721084 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 37 row cuts average 3.6 elements, 7 column cuts (7 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 461 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 16 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 49 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 58 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.7028767 best solution, best possible -7.8721084 (0.06 seconds)
Cbc0001I Search completed - best objective -7.70287669077505, took 1296 iterations and 6 nodes (0.06 seconds)
Cbc0032I Strong branching done 48 times (144 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 3 variables fixed on reduced cost
Cuts at root node changed objective from -8.75637 to -7.87211
Probing was tried 123 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 120 times and created 549 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Knapsack was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 100 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
TwoMirCuts was tried 120 times and created 110 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 120 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                7.70287669
Enumerated nodes:               6
Total iterations:               1296
Time (CPU seconds):             0.06
Time (Wallclock seconds):       0.06

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /cluster/raid/home/zhivar.sourati/anaconda3/envs/explagraph/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/20e92cb58e224a6397af732d7c38133b-pulp.mps max timeMode elapsed branch printingOptions all solution /tmp/20e92cb58e224a6397af732d7c38133b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 297 COLUMNS
At line 1783 RHS
At line 2076 BOUNDS
At line 2358 ENDATA
Problem MODEL has 292 rows, 281 columns and 743 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 77.7073 - 0.00 seconds
Cgl0004I processed model has 100 rows, 180 columns (180 integer (90 of which binary)) and 450 elements
Cbc0038I Initial state - 9 integers unsatisfied sum - 0.9
Cbc0038I Pass   1: suminf.    0.90000 (9) obj. -77.6087 iterations 51
Cbc0038I Solution found of -71.166
Cbc0038I Cleaned solution of -71.166
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Full problem 100 rows 180 columns, reduced to 5 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -71.166 to -72.1523 (0.00 seconds)
Cbc0038I Round again with cutoff of -72.7078
Cbc0038I Pass   2: suminf.    0.90000 (9) obj. -77.6087 iterations 0
Cbc0038I Pass   3: suminf.    0.38517 (2) obj. -72.7078 iterations 23
Cbc0038I Pass   4: suminf.    0.20000 (2) obj. -72.9055 iterations 4
Cbc0038I Pass   5: suminf.    0.51602 (2) obj. -72.7078 iterations 4
Cbc0038I Pass   6: suminf.    0.20000 (2) obj. -72.9919 iterations 13
Cbc0038I Pass   7: suminf.    0.59162 (2) obj. -72.7078 iterations 5
Cbc0038I Pass   8: suminf.    0.20000 (2) obj. -73.0602 iterations 11
Cbc0038I Pass   9: suminf.    0.58357 (2) obj. -72.7078 iterations 7
Cbc0038I Pass  10: suminf.    0.55338 (2) obj. -72.7078 iterations 1
Cbc0038I Pass  11: suminf.    0.35832 (2) obj. -72.7078 iterations 5
Cbc0038I Pass  12: suminf.    0.10000 (1) obj. -72.7166 iterations 19
Cbc0038I Pass  13: suminf.    0.11058 (1) obj. -72.7078 iterations 4
Cbc0038I Pass  14: suminf.    1.52966 (12) obj. -72.7078 iterations 48
Cbc0038I Pass  15: suminf.    0.30000 (3) obj. -72.7522 iterations 13
Cbc0038I Pass  16: suminf.    0.35618 (3) obj. -72.7078 iterations 7
Cbc0038I Pass  17: suminf.    0.68493 (3) obj. -72.7078 iterations 32
Cbc0038I Pass  18: suminf.    0.66431 (3) obj. -72.7078 iterations 4
Cbc0038I Pass  19: suminf.    0.16203 (1) obj. -72.7078 iterations 14
Cbc0038I Pass  20: suminf.    0.16203 (1) obj. -72.7078 iterations 0
Cbc0038I Pass  21: suminf.    0.10000 (1) obj. -73.2034 iterations 13
Cbc0038I Pass  22: suminf.    0.31552 (1) obj. -72.7078 iterations 6
Cbc0038I Pass  23: suminf.    0.47043 (2) obj. -72.7078 iterations 18
Cbc0038I Pass  24: suminf.    0.45484 (2) obj. -72.7078 iterations 3
Cbc0038I Pass  25: suminf.    0.32735 (2) obj. -72.7078 iterations 5
Cbc0038I Pass  26: suminf.    0.33694 (2) obj. -72.7078 iterations 4
Cbc0038I Pass  27: suminf.    0.17341 (1) obj. -72.7078 iterations 1
Cbc0038I Pass  28: suminf.    0.10000 (1) obj. -73.1927 iterations 7
Cbc0038I Pass  29: suminf.    0.32814 (1) obj. -72.7078 iterations 6
Cbc0038I Pass  30: suminf.    0.47748 (3) obj. -72.7078 iterations 44
Cbc0038I Pass  31: suminf.    0.42002 (3) obj. -72.7078 iterations 1
Cbc0038I Rounding solution of -72.5956 is better than previous of -72.1523

Cbc0038I Before mini branch and bound, 114 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 180 columns, reduced to 41 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -73.7077
Cbc0038I Pass  31: suminf.    0.90000 (9) obj. -77.6087 iterations 0
Cbc0038I Pass  32: suminf.    0.33235 (4) obj. -73.7077 iterations 29
Cbc0038I Pass  33: suminf.    1.77035 (7) obj. -73.7077 iterations 9
Cbc0038I Pass  34: suminf.    0.42261 (3) obj. -73.7077 iterations 12
Cbc0038I Pass  35: suminf.    0.30000 (3) obj. -73.8044 iterations 18
Cbc0038I Pass  36: suminf.    0.41694 (3) obj. -73.7077 iterations 7
Cbc0038I Pass  37: suminf.    0.88437 (4) obj. -73.7077 iterations 25
Cbc0038I Pass  38: suminf.    0.60410 (4) obj. -73.7077 iterations 5
Cbc0038I Pass  39: suminf.    0.45813 (2) obj. -73.7077 iterations 23
Cbc0038I Pass  40: suminf.    0.20000 (2) obj. -73.8703 iterations 17
Cbc0038I Pass  41: suminf.    0.41296 (2) obj. -73.7077 iterations 5
Cbc0038I Pass  42: suminf.    0.88050 (4) obj. -73.7077 iterations 59
Cbc0038I Pass  43: suminf.    0.84525 (4) obj. -73.7077 iterations 5
Cbc0038I Pass  44: suminf.    0.89527 (3) obj. -73.7077 iterations 34
Cbc0038I Pass  45: suminf.    0.42405 (2) obj. -73.7077 iterations 2
Cbc0038I Pass  46: suminf.    0.20000 (2) obj. -73.8551 iterations 11
Cbc0038I Pass  47: suminf.    0.39310 (2) obj. -73.7077 iterations 4
Cbc0038I Pass  48: suminf.    0.33903 (3) obj. -73.7077 iterations 26
Cbc0038I Pass  49: suminf.    0.30000 (3) obj. -73.7306 iterations 18
Cbc0038I Pass  50: suminf.    0.33002 (3) obj. -73.7077 iterations 5
Cbc0038I Pass  51: suminf.    0.61412 (3) obj. -73.7077 iterations 33
Cbc0038I Pass  52: suminf.    0.49574 (3) obj. -73.7077 iterations 8
Cbc0038I Pass  53: suminf.    0.35433 (2) obj. -73.7077 iterations 12
Cbc0038I Pass  54: suminf.    0.20000 (2) obj. -73.7672 iterations 15
Cbc0038I Pass  55: suminf.    0.27011 (2) obj. -73.7077 iterations 4
Cbc0038I Pass  56: suminf.    0.95238 (4) obj. -73.7077 iterations 26
Cbc0038I Pass  57: suminf.    0.30000 (3) obj. -74.19 iterations 18
Cbc0038I Pass  58: suminf.    0.46815 (3) obj. -73.7077 iterations 7
Cbc0038I Pass  59: suminf.    0.42464 (3) obj. -73.7077 iterations 2
Cbc0038I Pass  60: suminf.    0.22151 (2) obj. -73.7077 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 180 columns, reduced to 46 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -72.5956 - took 0.06 seconds
Cbc0012I Integer solution of -72.595615 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 8 rows 12 columns
Cbc0031I 26 added rows had average density of 134.26923
Cbc0013I At root node, 26 cuts changed objective from -77.707333 to -76.344315 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 78 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2227 row cuts average 174.8 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 46 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 85 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 278 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -72.595615 best solution, best possible -76.344315 (0.78 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 25 rows 33 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 19 rows 24 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 33 rows 47 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 36 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 41 rows 54 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 19 rows 23 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 37 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 36 columns
Cbc0010I After 1000 nodes, 458 on tree, -72.595615 best solution, best possible -76.344315 (10.93 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 38 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 32 rows 44 columns
Cbc0010I After 2000 nodes, 500 on tree, -72.595615 best solution, best possible -76.344315 (20.74 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 21 rows 27 columns
Cbc0010I After 3000 nodes, 500 on tree, -72.595615 best solution, best possible -76.344315 (23.11 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 27 rows 34 columns
Cbc0010I After 4000 nodes, 501 on tree, -72.595615 best solution, best possible -76.344315 (24.63 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 29 rows 38 columns
Cbc0010I After 5000 nodes, 495 on tree, -72.595615 best solution, best possible -76.344315 (26.49 seconds)
Cbc0010I After 6000 nodes, 525 on tree, -72.595615 best solution, best possible -76.344315 (27.24 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 29 rows 37 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 24 rows 32 columns
Cbc0010I After 7000 nodes, 527 on tree, -72.595615 best solution, best possible -76.344315 (27.96 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 18 rows 25 columns
Cbc0038I Full problem 100 rows 180 columns, reduced to 23 rows 30 columns
Cbc0010I After 8000 nodes, 525 on tree, -72.595615 best solution, best possible -76.344315 (28.73 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 26 rows 32 columns
Cbc0010I After 9000 nodes, 520 on tree, -72.595615 best solution, best possible -76.344315 (29.38 seconds)
Cbc0010I After 10000 nodes, 552 on tree, -72.595615 best solution, best possible -76.344315 (30.60 seconds)
Cbc0010I After 11000 nodes, 549 on tree, -72.595615 best solution, best possible -76.344315 (31.69 seconds)
Cbc0010I After 12000 nodes, 1023 on tree, -72.595615 best solution, best possible -75.39204 (35.58 seconds)
Cbc0010I After 13000 nodes, 1520 on tree, -72.595615 best solution, best possible -75.26672 (38.50 seconds)
Cbc0010I After 14000 nodes, 1546 on tree, -72.595615 best solution, best possible -75.26672 (39.35 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 42 rows 55 columns
Cbc0010I After 15000 nodes, 2044 on tree, -72.595615 best solution, best possible -75.188879 (41.86 seconds)
Cbc0010I After 16000 nodes, 2543 on tree, -72.595615 best solution, best possible -75.132898 (43.85 seconds)
Cbc0010I After 17000 nodes, 3042 on tree, -72.595615 best solution, best possible -75.089043 (45.71 seconds)
Cbc0010I After 18000 nodes, 3075 on tree, -72.595615 best solution, best possible -75.089043 (46.39 seconds)
Cbc0010I After 19000 nodes, 3574 on tree, -72.595615 best solution, best possible -75.047015 (48.12 seconds)
Cbc0010I After 20000 nodes, 4073 on tree, -72.595615 best solution, best possible -75.013969 (49.73 seconds)
Cbc0010I After 21000 nodes, 4572 on tree, -72.595615 best solution, best possible -74.984468 (51.19 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 29 rows 35 columns
Cbc0010I After 22000 nodes, 4598 on tree, -72.595615 best solution, best possible -74.984468 (51.71 seconds)
Cbc0010I After 23000 nodes, 5097 on tree, -72.595615 best solution, best possible -74.962234 (53.11 seconds)
Cbc0010I After 24000 nodes, 5596 on tree, -72.595615 best solution, best possible -74.941336 (54.47 seconds)
Cbc0010I After 25000 nodes, 6095 on tree, -72.595615 best solution, best possible -74.922067 (55.73 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 32 rows 40 columns
Cbc0010I After 26000 nodes, 6113 on tree, -72.595615 best solution, best possible -74.922067 (56.17 seconds)
Cbc0010I After 27000 nodes, 6613 on tree, -72.595615 best solution, best possible -74.904123 (57.42 seconds)
Cbc0010I After 28000 nodes, 7113 on tree, -72.595615 best solution, best possible -74.888269 (58.64 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 35 rows 47 columns
Cbc0010I After 29000 nodes, 7611 on tree, -72.595615 best solution, best possible -74.873774 (60.53 seconds)
Cbc0010I After 30000 nodes, 7619 on tree, -72.595615 best solution, best possible -74.873774 (61.11 seconds)
Cbc0010I After 31000 nodes, 8119 on tree, -72.595615 best solution, best possible -74.859867 (62.49 seconds)
Cbc0010I After 32000 nodes, 8618 on tree, -72.595615 best solution, best possible -74.8469 (63.66 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 26 rows 36 columns
Cbc0010I After 33000 nodes, 9118 on tree, -72.595615 best solution, best possible -74.835352 (64.84 seconds)
Cbc0010I After 34000 nodes, 9148 on tree, -72.595615 best solution, best possible -74.835352 (65.23 seconds)
Cbc0010I After 35000 nodes, 9647 on tree, -72.595615 best solution, best possible -74.823609 (66.37 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 35 rows 44 columns
Cbc0010I After 36000 nodes, 10147 on tree, -72.595615 best solution, best possible -74.812765 (67.54 seconds)
Cbc0010I After 37000 nodes, 10149 on tree, -72.595615 best solution, best possible -74.812765 (67.88 seconds)
Cbc0010I After 38000 nodes, 10158 on tree, -72.595615 best solution, best possible -74.812765 (68.37 seconds)
Cbc0010I After 39000 nodes, 10655 on tree, -72.595615 best solution, best possible -74.812765 (69.57 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 33 rows 44 columns
Cbc0010I After 40000 nodes, 11154 on tree, -72.595615 best solution, best possible -74.812765 (70.69 seconds)
Cbc0010I After 41000 nodes, 11238 on tree, -72.595615 best solution, best possible -74.812765 (71.15 seconds)
Cbc0010I After 42000 nodes, 11242 on tree, -72.595615 best solution, best possible -74.812742 (71.70 seconds)
Cbc0010I After 43000 nodes, 11742 on tree, -72.595615 best solution, best possible -74.812742 (72.81 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 35 rows 46 columns
Cbc0010I After 44000 nodes, 12242 on tree, -72.595615 best solution, best possible -74.812742 (73.84 seconds)
Cbc0010I After 45000 nodes, 12266 on tree, -72.595615 best solution, best possible -74.812742 (74.23 seconds)
Cbc0010I After 46000 nodes, 12298 on tree, -72.595615 best solution, best possible -74.812742 (74.75 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 25 rows 32 columns
Cbc0010I After 47000 nodes, 12796 on tree, -72.595615 best solution, best possible -74.812742 (75.80 seconds)
Cbc0010I After 48000 nodes, 13296 on tree, -72.595615 best solution, best possible -74.812742 (76.78 seconds)
Cbc0010I After 49000 nodes, 13357 on tree, -72.595615 best solution, best possible -74.812742 (77.22 seconds)
Cbc0010I After 50000 nodes, 13366 on tree, -72.595615 best solution, best possible -74.8127 (77.77 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 20 rows 24 columns
Cbc0010I After 51000 nodes, 13865 on tree, -72.595615 best solution, best possible -74.8127 (78.93 seconds)
Cbc0010I After 52000 nodes, 14365 on tree, -72.595615 best solution, best possible -74.8127 (79.84 seconds)
Cbc0010I After 53000 nodes, 14374 on tree, -72.595615 best solution, best possible -74.8127 (80.22 seconds)
Cbc0010I After 54000 nodes, 14387 on tree, -72.595615 best solution, best possible -74.8127 (80.79 seconds)
Cbc0010I After 55000 nodes, 14885 on tree, -72.595615 best solution, best possible -74.8127 (81.85 seconds)
Cbc0010I After 56000 nodes, 15384 on tree, -72.595615 best solution, best possible -74.8127 (82.76 seconds)
Cbc0010I After 57000 nodes, 15399 on tree, -72.595615 best solution, best possible -74.8127 (83.20 seconds)
Cbc0010I After 58000 nodes, 15406 on tree, -72.595615 best solution, best possible -74.812654 (83.83 seconds)
Cbc0010I After 59000 nodes, 15902 on tree, -72.595615 best solution, best possible -74.812654 (84.79 seconds)
Cbc0010I After 60000 nodes, 16400 on tree, -72.595615 best solution, best possible -74.812654 (85.66 seconds)
Cbc0010I After 61000 nodes, 16399 on tree, -72.595615 best solution, best possible -74.812654 (86.07 seconds)
Cbc0010I After 62000 nodes, 16379 on tree, -72.595615 best solution, best possible -74.812654 (89.62 seconds)
Cbc0010I After 63000 nodes, 16879 on tree, -72.595615 best solution, best possible -74.812654 (90.97 seconds)
Cbc0010I After 64000 nodes, 17377 on tree, -72.595615 best solution, best possible -74.812654 (92.23 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 29 rows 38 columns
Cbc0010I After 65000 nodes, 17393 on tree, -72.595615 best solution, best possible -74.812654 (92.80 seconds)
Cbc0010I After 66000 nodes, 17413 on tree, -72.595615 best solution, best possible -74.812633 (93.38 seconds)
Cbc0010I After 67000 nodes, 17912 on tree, -72.595615 best solution, best possible -74.812633 (94.63 seconds)
Cbc0010I After 68000 nodes, 18411 on tree, -72.595615 best solution, best possible -74.812633 (95.76 seconds)
Cbc0010I After 69000 nodes, 18401 on tree, -72.595615 best solution, best possible -74.812633 (96.30 seconds)
Cbc0010I After 70000 nodes, 18413 on tree, -72.595615 best solution, best possible -74.812633 (97.22 seconds)
Cbc0010I After 71000 nodes, 18912 on tree, -72.595615 best solution, best possible -74.812633 (98.44 seconds)
Cbc0010I After 72000 nodes, 19412 on tree, -72.595615 best solution, best possible -74.812633 (99.54 seconds)
Cbc0010I After 73000 nodes, 19410 on tree, -72.595615 best solution, best possible -74.812633 (100.11 seconds)
Cbc0010I After 74000 nodes, 19425 on tree, -72.595615 best solution, best possible -74.812585 (100.94 seconds)
Cbc0010I After 75000 nodes, 19924 on tree, -72.595615 best solution, best possible -74.812585 (102.14 seconds)
Cbc0010I After 76000 nodes, 20423 on tree, -72.595615 best solution, best possible -74.812585 (103.19 seconds)
Cbc0010I After 77000 nodes, 20405 on tree, -72.595615 best solution, best possible -74.812585 (103.69 seconds)
Cbc0010I After 78000 nodes, 20422 on tree, -72.595615 best solution, best possible -74.812585 (104.38 seconds)
Cbc0010I After 79000 nodes, 20919 on tree, -72.595615 best solution, best possible -74.812585 (105.51 seconds)
Cbc0010I After 80000 nodes, 21419 on tree, -72.595615 best solution, best possible -74.812585 (106.61 seconds)
Cbc0010I After 81000 nodes, 21402 on tree, -72.595615 best solution, best possible -74.812585 (107.14 seconds)
Cbc0010I After 82000 nodes, 21417 on tree, -72.595615 best solution, best possible -74.812577 (108.10 seconds)
Cbc0010I After 83000 nodes, 21914 on tree, -72.595615 best solution, best possible -74.812577 (109.16 seconds)
Cbc0010I After 84000 nodes, 22408 on tree, -72.595615 best solution, best possible -74.812577 (110.14 seconds)
Cbc0010I After 85000 nodes, 22391 on tree, -72.595615 best solution, best possible -74.812577 (110.53 seconds)
Cbc0010I After 86000 nodes, 22395 on tree, -72.595615 best solution, best possible -74.812577 (111.31 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 28 rows 36 columns
Cbc0010I After 87000 nodes, 22893 on tree, -72.595615 best solution, best possible -74.812577 (112.36 seconds)
Cbc0010I After 88000 nodes, 23393 on tree, -72.595615 best solution, best possible -74.812577 (113.34 seconds)
Cbc0010I After 89000 nodes, 23366 on tree, -72.595615 best solution, best possible -74.812577 (113.74 seconds)
Cbc0010I After 90000 nodes, 23384 on tree, -72.595615 best solution, best possible -74.812567 (114.49 seconds)
Cbc0010I After 91000 nodes, 23881 on tree, -72.595615 best solution, best possible -74.812567 (115.55 seconds)
Cbc0010I After 92000 nodes, 24379 on tree, -72.595615 best solution, best possible -74.812567 (116.44 seconds)
Cbc0010I After 93000 nodes, 24381 on tree, -72.595615 best solution, best possible -74.812567 (116.85 seconds)
Cbc0010I After 94000 nodes, 24405 on tree, -72.595615 best solution, best possible -74.812567 (117.56 seconds)
Cbc0010I After 95000 nodes, 24904 on tree, -72.595615 best solution, best possible -74.812567 (118.50 seconds)
Cbc0010I After 96000 nodes, 25404 on tree, -72.595615 best solution, best possible -74.812567 (119.43 seconds)
Cbc0010I After 97000 nodes, 25374 on tree, -72.595615 best solution, best possible -74.812567 (119.81 seconds)
Cbc0010I After 98000 nodes, 25385 on tree, -72.595615 best solution, best possible -74.812521 (120.38 seconds)
Cbc0010I After 99000 nodes, 25881 on tree, -72.595615 best solution, best possible -74.812521 (121.31 seconds)
Cbc0010I After 100000 nodes, 26380 on tree, -72.595615 best solution, best possible -74.812521 (122.09 seconds)
Cbc0010I After 101000 nodes, 26367 on tree, -72.595615 best solution, best possible -74.812521 (122.43 seconds)
Cbc0010I After 102000 nodes, 26867 on tree, -72.595615 best solution, best possible -74.796936 (123.68 seconds)
Cbc0010I After 103000 nodes, 27362 on tree, -72.595615 best solution, best possible -74.796936 (124.55 seconds)
Cbc0010I After 104000 nodes, 27860 on tree, -72.595615 best solution, best possible -74.796936 (125.32 seconds)
Cbc0010I After 105000 nodes, 27848 on tree, -72.595615 best solution, best possible -74.796936 (125.66 seconds)
Cbc0010I After 106000 nodes, 28347 on tree, -72.595615 best solution, best possible -74.781333 (126.78 seconds)
Cbc0010I After 107000 nodes, 28847 on tree, -72.595615 best solution, best possible -74.781333 (127.76 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 31 rows 39 columns
Cbc0010I After 108000 nodes, 29345 on tree, -72.595615 best solution, best possible -74.781333 (128.63 seconds)
Cbc0010I After 109000 nodes, 29329 on tree, -72.595615 best solution, best possible -74.781333 (129.04 seconds)
Cbc0010I After 110000 nodes, 29827 on tree, -72.595615 best solution, best possible -74.766893 (130.23 seconds)
Cbc0010I After 111000 nodes, 30325 on tree, -72.595615 best solution, best possible -74.766893 (131.25 seconds)
Cbc0010I After 112000 nodes, 30822 on tree, -72.595615 best solution, best possible -74.766893 (132.04 seconds)
Cbc0010I After 113000 nodes, 30819 on tree, -72.595615 best solution, best possible -74.766893 (132.36 seconds)
Cbc0010I After 114000 nodes, 31318 on tree, -72.595615 best solution, best possible -74.754075 (133.46 seconds)
Cbc0010I After 115000 nodes, 31819 on tree, -72.595615 best solution, best possible -74.754075 (134.33 seconds)
Cbc0010I After 116000 nodes, 32317 on tree, -72.595615 best solution, best possible -74.754075 (135.13 seconds)
Cbc0010I After 117000 nodes, 32290 on tree, -72.595615 best solution, best possible -74.754075 (135.48 seconds)
Cbc0010I After 118000 nodes, 32789 on tree, -72.595615 best solution, best possible -74.740778 (136.62 seconds)
Cbc0010I After 119000 nodes, 33288 on tree, -72.595615 best solution, best possible -74.740778 (137.51 seconds)
Cbc0010I After 120000 nodes, 33785 on tree, -72.595615 best solution, best possible -74.740778 (138.37 seconds)
Cbc0010I After 121000 nodes, 33762 on tree, -72.595615 best solution, best possible -74.740778 (138.67 seconds)
Cbc0010I After 122000 nodes, 34261 on tree, -72.595615 best solution, best possible -74.728 (139.77 seconds)
Cbc0010I After 123000 nodes, 34759 on tree, -72.595615 best solution, best possible -74.728 (140.68 seconds)
Cbc0010I After 124000 nodes, 35258 on tree, -72.595615 best solution, best possible -74.728 (141.49 seconds)
Cbc0010I After 125000 nodes, 35240 on tree, -72.595615 best solution, best possible -74.728 (141.87 seconds)
Cbc0010I After 126000 nodes, 35740 on tree, -72.595615 best solution, best possible -74.716132 (142.99 seconds)
Cbc0010I After 127000 nodes, 36240 on tree, -72.595615 best solution, best possible -74.716132 (143.87 seconds)
Cbc0010I After 128000 nodes, 36737 on tree, -72.595615 best solution, best possible -74.716132 (144.66 seconds)
Cbc0010I After 129000 nodes, 36709 on tree, -72.595615 best solution, best possible -74.716132 (144.97 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 36 rows 47 columns
Cbc0010I After 130000 nodes, 37209 on tree, -72.595615 best solution, best possible -74.704979 (146.06 seconds)
Cbc0010I After 131000 nodes, 37709 on tree, -72.595615 best solution, best possible -74.704979 (147.01 seconds)
Cbc0010I After 132000 nodes, 38207 on tree, -72.595615 best solution, best possible -74.704979 (147.77 seconds)
Cbc0010I After 133000 nodes, 38188 on tree, -72.595615 best solution, best possible -74.704979 (148.08 seconds)
Cbc0010I After 134000 nodes, 38685 on tree, -72.595615 best solution, best possible -74.694455 (149.22 seconds)
Cbc0010I After 135000 nodes, 39177 on tree, -72.595615 best solution, best possible -74.694455 (150.24 seconds)
Cbc0010I After 136000 nodes, 39670 on tree, -72.595615 best solution, best possible -74.694455 (151.04 seconds)
Cbc0010I After 137000 nodes, 39613 on tree, -72.595615 best solution, best possible -74.694455 (151.38 seconds)
Cbc0010I After 138000 nodes, 40112 on tree, -72.595615 best solution, best possible -74.685588 (152.50 seconds)
Cbc0010I After 139000 nodes, 40607 on tree, -72.595615 best solution, best possible -74.685588 (153.52 seconds)
Cbc0010I After 140000 nodes, 41105 on tree, -72.595615 best solution, best possible -74.685588 (154.29 seconds)
Cbc0010I After 141000 nodes, 41103 on tree, -72.595615 best solution, best possible -74.685588 (154.62 seconds)
Cbc0010I After 142000 nodes, 41602 on tree, -72.595615 best solution, best possible -74.677345 (155.68 seconds)
Cbc0010I After 143000 nodes, 42102 on tree, -72.595615 best solution, best possible -74.677345 (156.46 seconds)
Cbc0010I After 144000 nodes, 42598 on tree, -72.595615 best solution, best possible -74.677345 (157.23 seconds)
Cbc0010I After 145000 nodes, 42587 on tree, -72.595615 best solution, best possible -74.677345 (157.55 seconds)
Cbc0010I After 146000 nodes, 43086 on tree, -72.595615 best solution, best possible -74.6682 (158.57 seconds)
Cbc0010I After 147000 nodes, 43582 on tree, -72.595615 best solution, best possible -74.6682 (159.37 seconds)
Cbc0010I After 148000 nodes, 44079 on tree, -72.595615 best solution, best possible -74.6682 (160.04 seconds)
Cbc0010I After 149000 nodes, 44049 on tree, -72.595615 best solution, best possible -74.6682 (160.36 seconds)
Cbc0010I After 150000 nodes, 44548 on tree, -72.595615 best solution, best possible -74.660068 (161.35 seconds)
Cbc0010I After 151000 nodes, 45047 on tree, -72.595615 best solution, best possible -74.660068 (162.16 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 34 rows 47 columns
Cbc0010I After 152000 nodes, 45544 on tree, -72.595615 best solution, best possible -74.660068 (162.87 seconds)
Cbc0010I After 153000 nodes, 45519 on tree, -72.595615 best solution, best possible -74.660068 (163.19 seconds)
Cbc0010I After 154000 nodes, 46018 on tree, -72.595615 best solution, best possible -74.6516 (164.19 seconds)
Cbc0010I After 155000 nodes, 46519 on tree, -72.595615 best solution, best possible -74.6516 (165.03 seconds)
Cbc0010I After 156000 nodes, 47015 on tree, -72.595615 best solution, best possible -74.6516 (165.79 seconds)
Cbc0010I After 157000 nodes, 47002 on tree, -72.595615 best solution, best possible -74.6516 (166.10 seconds)
Cbc0010I After 158000 nodes, 47501 on tree, -72.595615 best solution, best possible -74.643906 (167.08 seconds)
Cbc0010I After 159000 nodes, 47991 on tree, -72.595615 best solution, best possible -74.643906 (168.09 seconds)
Cbc0010I After 160000 nodes, 48488 on tree, -72.595615 best solution, best possible -74.643906 (168.89 seconds)
Cbc0010I After 161000 nodes, 48443 on tree, -72.595615 best solution, best possible -74.643906 (169.21 seconds)
Cbc0010I After 162000 nodes, 48940 on tree, -72.595615 best solution, best possible -74.63669 (170.47 seconds)
Cbc0010I After 163000 nodes, 49440 on tree, -72.595615 best solution, best possible -74.63669 (171.26 seconds)
Cbc0010I After 164000 nodes, 49939 on tree, -72.595615 best solution, best possible -74.63669 (172.03 seconds)
Cbc0010I After 165000 nodes, 49920 on tree, -72.595615 best solution, best possible -74.63669 (172.35 seconds)
Cbc0010I After 166000 nodes, 50420 on tree, -72.595615 best solution, best possible -74.629085 (173.43 seconds)
Cbc0010I After 167000 nodes, 50914 on tree, -72.595615 best solution, best possible -74.629085 (174.27 seconds)
Cbc0010I After 168000 nodes, 51410 on tree, -72.595615 best solution, best possible -74.629085 (175.00 seconds)
Cbc0010I After 169000 nodes, 51375 on tree, -72.595615 best solution, best possible -74.629085 (175.31 seconds)
Cbc0010I After 170000 nodes, 51873 on tree, -72.595615 best solution, best possible -74.621827 (176.28 seconds)
Cbc0010I After 171000 nodes, 52371 on tree, -72.595615 best solution, best possible -74.621827 (177.03 seconds)
Cbc0010I After 172000 nodes, 52870 on tree, -72.595615 best solution, best possible -74.621827 (177.76 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 28 rows 36 columns
Cbc0010I After 173000 nodes, 52865 on tree, -72.595615 best solution, best possible -74.621827 (178.05 seconds)
Cbc0010I After 174000 nodes, 53362 on tree, -72.595615 best solution, best possible -74.614927 (179.11 seconds)
Cbc0010I After 175000 nodes, 53859 on tree, -72.595615 best solution, best possible -74.614927 (179.91 seconds)
Cbc0010I After 176000 nodes, 54352 on tree, -72.595615 best solution, best possible -74.614927 (180.67 seconds)
Cbc0010I After 177000 nodes, 54314 on tree, -72.595615 best solution, best possible -74.614927 (181.00 seconds)
Cbc0010I After 178000 nodes, 54814 on tree, -72.595615 best solution, best possible -74.608245 (182.00 seconds)
Cbc0010I After 179000 nodes, 55310 on tree, -72.595615 best solution, best possible -74.608245 (182.79 seconds)
Cbc0010I After 180000 nodes, 55806 on tree, -72.595615 best solution, best possible -74.608245 (183.50 seconds)
Cbc0010I After 181000 nodes, 55782 on tree, -72.595615 best solution, best possible -74.608245 (183.82 seconds)
Cbc0010I After 182000 nodes, 56281 on tree, -72.595615 best solution, best possible -74.602132 (184.82 seconds)
Cbc0010I After 183000 nodes, 56768 on tree, -72.595615 best solution, best possible -74.602132 (185.79 seconds)
Cbc0010I After 184000 nodes, 57264 on tree, -72.595615 best solution, best possible -74.602132 (186.49 seconds)
Cbc0010I After 185000 nodes, 57225 on tree, -72.595615 best solution, best possible -74.602132 (186.86 seconds)
Cbc0010I After 186000 nodes, 57725 on tree, -72.595615 best solution, best possible -74.595914 (187.93 seconds)
Cbc0010I After 187000 nodes, 58223 on tree, -72.595615 best solution, best possible -74.595914 (188.70 seconds)
Cbc0010I After 188000 nodes, 58719 on tree, -72.595615 best solution, best possible -74.595914 (189.39 seconds)
Cbc0010I After 189000 nodes, 58678 on tree, -72.595615 best solution, best possible -74.595914 (189.71 seconds)
Cbc0010I After 190000 nodes, 59178 on tree, -72.595615 best solution, best possible -74.589698 (190.71 seconds)
Cbc0010I After 191000 nodes, 59676 on tree, -72.595615 best solution, best possible -74.589698 (191.46 seconds)
Cbc0010I After 192000 nodes, 60172 on tree, -72.595615 best solution, best possible -74.589698 (192.22 seconds)
Cbc0010I After 193000 nodes, 60146 on tree, -72.595615 best solution, best possible -74.589698 (192.55 seconds)
Cbc0010I After 194000 nodes, 60645 on tree, -72.595615 best solution, best possible -74.583746 (193.54 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 35 rows 47 columns
Cbc0010I After 195000 nodes, 61141 on tree, -72.595615 best solution, best possible -74.583746 (194.29 seconds)
Cbc0010I After 196000 nodes, 61637 on tree, -72.595615 best solution, best possible -74.583746 (195.01 seconds)
Cbc0010I After 197000 nodes, 61622 on tree, -72.595615 best solution, best possible -74.583746 (195.36 seconds)
Cbc0010I After 198000 nodes, 62121 on tree, -72.595615 best solution, best possible -74.577897 (196.35 seconds)
Cbc0010I After 199000 nodes, 62617 on tree, -72.595615 best solution, best possible -74.577897 (197.20 seconds)
Cbc0010I After 200000 nodes, 63112 on tree, -72.595615 best solution, best possible -74.577897 (197.85 seconds)
Cbc0010I After 201000 nodes, 63074 on tree, -72.595615 best solution, best possible -74.577897 (198.17 seconds)
Cbc0010I After 202000 nodes, 63572 on tree, -72.595615 best solution, best possible -74.57204 (199.14 seconds)
Cbc0010I After 203000 nodes, 64069 on tree, -72.595615 best solution, best possible -74.57204 (199.93 seconds)
Cbc0010I After 204000 nodes, 64562 on tree, -72.595615 best solution, best possible -74.57204 (200.60 seconds)
Cbc0010I After 205000 nodes, 64560 on tree, -72.595615 best solution, best possible -74.57204 (200.92 seconds)
Cbc0010I After 206000 nodes, 65059 on tree, -72.595615 best solution, best possible -74.566268 (201.90 seconds)
Cbc0010I After 207000 nodes, 65556 on tree, -72.595615 best solution, best possible -74.566268 (202.67 seconds)
Cbc0010I After 208000 nodes, 66051 on tree, -72.595615 best solution, best possible -74.566268 (203.36 seconds)
Cbc0010I After 209000 nodes, 66008 on tree, -72.595615 best solution, best possible -74.566268 (203.68 seconds)
Cbc0010I After 210000 nodes, 66506 on tree, -72.595615 best solution, best possible -74.560591 (204.69 seconds)
Cbc0010I After 211000 nodes, 67005 on tree, -72.595615 best solution, best possible -74.560591 (205.56 seconds)
Cbc0010I After 212000 nodes, 67496 on tree, -72.595615 best solution, best possible -74.560591 (206.31 seconds)
Cbc0010I After 213000 nodes, 67487 on tree, -72.595615 best solution, best possible -74.560591 (206.62 seconds)
Cbc0010I After 214000 nodes, 67987 on tree, -72.595615 best solution, best possible -74.555083 (207.63 seconds)
Cbc0010I After 215000 nodes, 68485 on tree, -72.595615 best solution, best possible -74.555083 (208.41 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 31 rows 40 columns
Cbc0010I After 216000 nodes, 68983 on tree, -72.595615 best solution, best possible -74.555083 (209.20 seconds)
Cbc0010I After 217000 nodes, 68939 on tree, -72.595615 best solution, best possible -74.555083 (209.52 seconds)
Cbc0010I After 218000 nodes, 69438 on tree, -72.595615 best solution, best possible -74.549732 (210.57 seconds)
Cbc0010I After 219000 nodes, 69932 on tree, -72.595615 best solution, best possible -74.549732 (211.35 seconds)
Cbc0010I After 220000 nodes, 70420 on tree, -72.595615 best solution, best possible -74.549732 (212.06 seconds)
Cbc0010I After 221000 nodes, 70384 on tree, -72.595615 best solution, best possible -74.549732 (212.40 seconds)
Cbc0010I After 222000 nodes, 70882 on tree, -72.595615 best solution, best possible -74.544444 (213.35 seconds)
Cbc0010I After 223000 nodes, 71382 on tree, -72.595615 best solution, best possible -74.544444 (214.17 seconds)
Cbc0010I After 224000 nodes, 71878 on tree, -72.595615 best solution, best possible -74.544444 (215.00 seconds)
Cbc0010I After 225000 nodes, 71858 on tree, -72.595615 best solution, best possible -74.544444 (215.32 seconds)
Cbc0010I After 226000 nodes, 72358 on tree, -72.595615 best solution, best possible -74.539603 (216.26 seconds)
Cbc0010I After 227000 nodes, 72857 on tree, -72.595615 best solution, best possible -74.539603 (217.09 seconds)
Cbc0010I After 228000 nodes, 73351 on tree, -72.595615 best solution, best possible -74.539603 (217.78 seconds)
Cbc0010I After 229000 nodes, 73303 on tree, -72.595615 best solution, best possible -74.539603 (218.09 seconds)
Cbc0010I After 230000 nodes, 73802 on tree, -72.595615 best solution, best possible -74.534767 (219.02 seconds)
Cbc0010I After 231000 nodes, 74301 on tree, -72.595615 best solution, best possible -74.534767 (219.73 seconds)
Cbc0010I After 232000 nodes, 74797 on tree, -72.595615 best solution, best possible -74.534767 (220.41 seconds)
Cbc0010I After 233000 nodes, 74748 on tree, -72.595615 best solution, best possible -74.534767 (220.70 seconds)
Cbc0010I After 234000 nodes, 75243 on tree, -72.595615 best solution, best possible -74.530006 (221.78 seconds)
Cbc0010I After 235000 nodes, 75741 on tree, -72.595615 best solution, best possible -74.530006 (222.48 seconds)
Cbc0010I After 236000 nodes, 76239 on tree, -72.595615 best solution, best possible -74.530006 (223.23 seconds)
Cbc0010I After 237000 nodes, 76187 on tree, -72.595615 best solution, best possible -74.530006 (223.56 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 34 rows 48 columns
Cbc0010I After 238000 nodes, 76687 on tree, -72.595615 best solution, best possible -74.525076 (224.53 seconds)
Cbc0010I After 239000 nodes, 77180 on tree, -72.595615 best solution, best possible -74.525076 (225.28 seconds)
Cbc0010I After 240000 nodes, 77674 on tree, -72.595615 best solution, best possible -74.525076 (225.94 seconds)
Cbc0010I After 241000 nodes, 77636 on tree, -72.595615 best solution, best possible -74.525076 (226.25 seconds)
Cbc0010I After 242000 nodes, 78133 on tree, -72.595615 best solution, best possible -74.520149 (227.37 seconds)
Cbc0010I After 243000 nodes, 78629 on tree, -72.595615 best solution, best possible -74.520149 (228.12 seconds)
Cbc0010I After 244000 nodes, 79124 on tree, -72.595615 best solution, best possible -74.520149 (228.80 seconds)
Cbc0010I After 245000 nodes, 79096 on tree, -72.595615 best solution, best possible -74.520149 (229.11 seconds)
Cbc0010I After 246000 nodes, 79592 on tree, -72.595615 best solution, best possible -74.515426 (230.04 seconds)
Cbc0010I After 247000 nodes, 80090 on tree, -72.595615 best solution, best possible -74.515426 (230.80 seconds)
Cbc0010I After 248000 nodes, 80580 on tree, -72.595615 best solution, best possible -74.515426 (231.48 seconds)
Cbc0010I After 249000 nodes, 80553 on tree, -72.595615 best solution, best possible -74.515426 (231.79 seconds)
Cbc0010I After 250000 nodes, 81051 on tree, -72.595615 best solution, best possible -74.510846 (232.74 seconds)
Cbc0010I After 251000 nodes, 81548 on tree, -72.595615 best solution, best possible -74.510846 (233.55 seconds)
Cbc0010I After 252000 nodes, 82040 on tree, -72.595615 best solution, best possible -74.510846 (234.32 seconds)
Cbc0010I After 253000 nodes, 82005 on tree, -72.595615 best solution, best possible -74.510846 (234.66 seconds)
Cbc0010I After 254000 nodes, 82505 on tree, -72.595615 best solution, best possible -74.506448 (235.65 seconds)
Cbc0010I After 255000 nodes, 83002 on tree, -72.595615 best solution, best possible -74.506448 (236.38 seconds)
Cbc0010I After 256000 nodes, 83485 on tree, -72.595615 best solution, best possible -74.506448 (237.09 seconds)
Cbc0010I After 257000 nodes, 83438 on tree, -72.595615 best solution, best possible -74.506448 (237.40 seconds)
Cbc0010I After 258000 nodes, 83938 on tree, -72.595615 best solution, best possible -74.502276 (238.33 seconds)
Cbc0010I After 259000 nodes, 84427 on tree, -72.595615 best solution, best possible -74.502276 (239.07 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 26 rows 31 columns
Cbc0010I After 260000 nodes, 84920 on tree, -72.595615 best solution, best possible -74.502276 (239.77 seconds)
Cbc0010I After 261000 nodes, 84898 on tree, -72.595615 best solution, best possible -74.502276 (240.09 seconds)
Cbc0010I After 262000 nodes, 85396 on tree, -72.595615 best solution, best possible -74.49815 (240.99 seconds)
Cbc0010I After 263000 nodes, 85892 on tree, -72.595615 best solution, best possible -74.49815 (241.76 seconds)
Cbc0010I After 264000 nodes, 86385 on tree, -72.595615 best solution, best possible -74.49815 (242.46 seconds)
Cbc0010I After 265000 nodes, 86367 on tree, -72.595615 best solution, best possible -74.49815 (242.79 seconds)
Cbc0010I After 266000 nodes, 86867 on tree, -72.595615 best solution, best possible -74.494339 (243.70 seconds)
Cbc0010I After 267000 nodes, 87362 on tree, -72.595615 best solution, best possible -74.494339 (244.45 seconds)
Cbc0010I After 268000 nodes, 87845 on tree, -72.595615 best solution, best possible -74.494339 (245.16 seconds)
Cbc0010I After 269000 nodes, 87833 on tree, -72.595615 best solution, best possible -74.494339 (245.48 seconds)
Cbc0010I After 270000 nodes, 88331 on tree, -72.595615 best solution, best possible -74.490337 (246.39 seconds)
Cbc0010I After 271000 nodes, 88817 on tree, -72.595615 best solution, best possible -74.490337 (247.48 seconds)
Cbc0010I After 272000 nodes, 89311 on tree, -72.595615 best solution, best possible -74.490337 (248.27 seconds)
Cbc0010I After 273000 nodes, 89290 on tree, -72.595615 best solution, best possible -74.490337 (248.62 seconds)
Cbc0010I After 274000 nodes, 89790 on tree, -72.595615 best solution, best possible -74.486508 (249.57 seconds)
Cbc0010I After 275000 nodes, 90288 on tree, -72.595615 best solution, best possible -74.486508 (250.31 seconds)
Cbc0010I After 276000 nodes, 90774 on tree, -72.595615 best solution, best possible -74.486508 (250.96 seconds)
Cbc0010I After 277000 nodes, 90724 on tree, -72.595615 best solution, best possible -74.486508 (251.26 seconds)
Cbc0010I After 278000 nodes, 91222 on tree, -72.595615 best solution, best possible -74.48254 (252.20 seconds)
Cbc0010I After 279000 nodes, 91721 on tree, -72.595615 best solution, best possible -74.48254 (252.97 seconds)
Cbc0010I After 280000 nodes, 92217 on tree, -72.595615 best solution, best possible -74.48254 (253.63 seconds)
Cbc0010I After 281000 nodes, 92174 on tree, -72.595615 best solution, best possible -74.48254 (253.94 seconds)
Cbc0010I After 282000 nodes, 92672 on tree, -72.595615 best solution, best possible -74.478932 (254.90 seconds)
Cbc0010I After 283000 nodes, 93158 on tree, -72.595615 best solution, best possible -74.478932 (255.66 seconds)
Cbc0010I After 284000 nodes, 93652 on tree, -72.595615 best solution, best possible -74.478932 (256.33 seconds)
Cbc0010I After 285000 nodes, 93611 on tree, -72.595615 best solution, best possible -74.478932 (256.62 seconds)
Cbc0010I After 286000 nodes, 94111 on tree, -72.595615 best solution, best possible -74.475336 (257.55 seconds)
Cbc0010I After 287000 nodes, 94608 on tree, -72.595615 best solution, best possible -74.475336 (258.28 seconds)
Cbc0010I After 288000 nodes, 95104 on tree, -72.595615 best solution, best possible -74.475336 (258.97 seconds)
Cbc0010I After 289000 nodes, 95056 on tree, -72.595615 best solution, best possible -74.475336 (259.27 seconds)
Cbc0010I After 290000 nodes, 95553 on tree, -72.595615 best solution, best possible -74.471495 (260.16 seconds)
Cbc0010I After 291000 nodes, 96049 on tree, -72.595615 best solution, best possible -74.471495 (260.97 seconds)
Cbc0010I After 292000 nodes, 96535 on tree, -72.595615 best solution, best possible -74.471495 (261.62 seconds)
Cbc0010I After 293000 nodes, 96506 on tree, -72.595615 best solution, best possible -74.471495 (261.96 seconds)
Cbc0010I After 294000 nodes, 97006 on tree, -72.595615 best solution, best possible -74.46779 (262.91 seconds)
Cbc0010I After 295000 nodes, 97501 on tree, -72.595615 best solution, best possible -74.46779 (263.69 seconds)
Cbc0010I After 296000 nodes, 97986 on tree, -72.595615 best solution, best possible -74.46779 (264.33 seconds)
Cbc0010I After 297000 nodes, 97955 on tree, -72.595615 best solution, best possible -74.46779 (264.62 seconds)
Cbc0010I After 298000 nodes, 98455 on tree, -72.595615 best solution, best possible -74.464214 (265.48 seconds)
Cbc0010I After 299000 nodes, 98950 on tree, -72.595615 best solution, best possible -74.464214 (266.19 seconds)
Cbc0010I After 300000 nodes, 99445 on tree, -72.595615 best solution, best possible -74.464214 (266.79 seconds)
Cbc0010I After 301000 nodes, 99394 on tree, -72.595615 best solution, best possible -74.464214 (267.08 seconds)
Cbc0010I After 302000 nodes, 99891 on tree, -72.595615 best solution, best possible -74.460852 (268.09 seconds)
Cbc0010I After 303000 nodes, 100385 on tree, -72.595615 best solution, best possible -74.460852 (268.87 seconds)
Cbc0010I After 304000 nodes, 100879 on tree, -72.595615 best solution, best possible -74.460852 (269.43 seconds)
Cbc0010I After 305000 nodes, 100842 on tree, -72.595615 best solution, best possible -74.460852 (269.72 seconds)
Cbc0010I After 306000 nodes, 101342 on tree, -72.595615 best solution, best possible -74.457561 (270.67 seconds)
Cbc0010I After 307000 nodes, 101836 on tree, -72.595615 best solution, best possible -74.457561 (271.37 seconds)
Cbc0010I After 308000 nodes, 102319 on tree, -72.595615 best solution, best possible -74.457561 (272.05 seconds)
Cbc0010I After 309000 nodes, 102268 on tree, -72.595615 best solution, best possible -74.457561 (272.37 seconds)
Cbc0010I After 310000 nodes, 102767 on tree, -72.595615 best solution, best possible -74.454106 (273.30 seconds)
Cbc0010I After 311000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.454106 (279.08 seconds)
Cbc0010I After 312000 nodes, 102500 on tree, -72.595615 best solution, best possible -74.454106 (281.87 seconds)
Cbc0010I After 313000 nodes, 102499 on tree, -72.595615 best solution, best possible -74.454106 (284.06 seconds)
Cbc0010I After 314000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.454106 (286.24 seconds)
Cbc0010I After 315000 nodes, 102499 on tree, -72.595615 best solution, best possible -74.454106 (287.82 seconds)
Cbc0010I After 316000 nodes, 102456 on tree, -72.595615 best solution, best possible -74.454106 (289.15 seconds)
Cbc0010I After 317000 nodes, 102388 on tree, -72.595615 best solution, best possible -74.454106 (289.66 seconds)
Cbc0010I After 318000 nodes, 102888 on tree, -72.595615 best solution, best possible -74.45092 (291.60 seconds)
Cbc0010I After 319000 nodes, 102769 on tree, -72.595615 best solution, best possible -74.45092 (292.74 seconds)
Cbc0010I After 320000 nodes, 102631 on tree, -72.595615 best solution, best possible -74.45092 (293.67 seconds)
Cbc0010I After 321000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.45092 (295.36 seconds)
Cbc0010I After 322000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.45092 (296.81 seconds)
Cbc0010I After 323000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.45092 (299.06 seconds)
Cbc0010I After 324000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.45092 (300.59 seconds)
Cbc0010I After 325000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.45092 (301.97 seconds)
Cbc0010I After 326000 nodes, 102571 on tree, -72.595615 best solution, best possible -74.45092 (303.29 seconds)
Cbc0010I After 327000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.45092 (304.29 seconds)
Cbc0010I After 328000 nodes, 102410 on tree, -72.595615 best solution, best possible -74.45092 (305.62 seconds)
Cbc0010I After 329000 nodes, 102299 on tree, -72.595615 best solution, best possible -74.45092 (306.19 seconds)
Cbc0010I After 330000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.447451 (308.26 seconds)
Cbc0010I After 331000 nodes, 102733 on tree, -72.595615 best solution, best possible -74.447451 (309.66 seconds)
Cbc0010I After 332000 nodes, 102729 on tree, -72.595615 best solution, best possible -74.447451 (310.97 seconds)
Cbc0010I After 333000 nodes, 102729 on tree, -72.595615 best solution, best possible -74.447451 (312.11 seconds)
Cbc0010I After 334000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.447451 (313.25 seconds)
Cbc0010I After 335000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.447451 (314.76 seconds)
Cbc0010I After 336000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.447451 (315.79 seconds)
Cbc0010I After 337000 nodes, 102731 on tree, -72.595615 best solution, best possible -74.447451 (316.89 seconds)
Cbc0010I After 338000 nodes, 102731 on tree, -72.595615 best solution, best possible -74.447451 (318.06 seconds)
Cbc0010I After 339000 nodes, 102679 on tree, -72.595615 best solution, best possible -74.447451 (319.03 seconds)
Cbc0010I After 340000 nodes, 102623 on tree, -72.595615 best solution, best possible -74.447451 (319.87 seconds)
Cbc0010I After 341000 nodes, 102567 on tree, -72.595615 best solution, best possible -74.447451 (321.00 seconds)
Cbc0010I After 342000 nodes, 102488 on tree, -72.595615 best solution, best possible -74.447451 (321.90 seconds)
Cbc0010I After 343000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.447451 (322.88 seconds)
Cbc0010I After 344000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.447451 (324.27 seconds)
Cbc0010I After 345000 nodes, 102486 on tree, -72.595615 best solution, best possible -74.447451 (325.45 seconds)
Cbc0010I After 346000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.447451 (326.70 seconds)
Cbc0010I After 347000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.447451 (327.76 seconds)
Cbc0010I After 348000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.447451 (328.89 seconds)
Cbc0010I After 349000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.447451 (329.98 seconds)
Cbc0010I After 350000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.447451 (332.00 seconds)
Cbc0010I After 351000 nodes, 102482 on tree, -72.595615 best solution, best possible -74.447451 (332.95 seconds)
Cbc0010I After 352000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.447451 (334.14 seconds)
Cbc0010I After 353000 nodes, 102487 on tree, -72.595615 best solution, best possible -74.447451 (335.29 seconds)
Cbc0010I After 354000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.447451 (336.57 seconds)
Cbc0010I After 355000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.447451 (337.89 seconds)
Cbc0010I After 356000 nodes, 102447 on tree, -72.595615 best solution, best possible -74.447451 (338.93 seconds)
Cbc0010I After 357000 nodes, 102354 on tree, -72.595615 best solution, best possible -74.447451 (339.56 seconds)
Cbc0010I After 358000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.444322 (341.66 seconds)
Cbc0010I After 359000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.444322 (342.56 seconds)
Cbc0010I After 360000 nodes, 102769 on tree, -72.595615 best solution, best possible -74.444322 (343.69 seconds)
Cbc0010I After 361000 nodes, 102721 on tree, -72.595615 best solution, best possible -74.444322 (344.56 seconds)
Cbc0010I After 362000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.444322 (345.61 seconds)
Cbc0010I After 363000 nodes, 102641 on tree, -72.595615 best solution, best possible -74.444322 (346.52 seconds)
Cbc0010I After 364000 nodes, 102609 on tree, -72.595615 best solution, best possible -74.444322 (347.64 seconds)
Cbc0010I After 365000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.444322 (348.84 seconds)
Cbc0010I After 366000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.444322 (349.79 seconds)
Cbc0010I After 367000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.444322 (350.75 seconds)
Cbc0010I After 368000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.444322 (351.88 seconds)
Cbc0010I After 369000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.444322 (352.84 seconds)
Cbc0010I After 370000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.444322 (353.98 seconds)
Cbc0010I After 371000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.444322 (355.10 seconds)
Cbc0010I After 372000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.444322 (356.27 seconds)
Cbc0010I After 373000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.444322 (357.22 seconds)
Cbc0010I After 374000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (358.38 seconds)
Cbc0010I After 375000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.444322 (359.55 seconds)
Cbc0010I After 376000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.444322 (360.67 seconds)
Cbc0010I After 377000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.444322 (361.77 seconds)
Cbc0010I After 378000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.444322 (363.51 seconds)
Cbc0010I After 379000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.444322 (364.62 seconds)
Cbc0010I After 380000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (365.53 seconds)
Cbc0010I After 381000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (366.75 seconds)
Cbc0010I After 382000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (367.98 seconds)
Cbc0010I After 383000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.444322 (368.97 seconds)
Cbc0010I After 384000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.444322 (370.11 seconds)
Cbc0010I After 385000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (371.07 seconds)
Cbc0010I After 386000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.444322 (372.29 seconds)
Cbc0010I After 387000 nodes, 102581 on tree, -72.595615 best solution, best possible -74.444322 (373.26 seconds)
Cbc0010I After 388000 nodes, 102552 on tree, -72.595615 best solution, best possible -74.444322 (374.11 seconds)
Cbc0010I After 389000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.444322 (375.02 seconds)
Cbc0010I After 390000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.444322 (376.06 seconds)
Cbc0010I After 391000 nodes, 102460 on tree, -72.595615 best solution, best possible -74.444322 (377.05 seconds)
Cbc0010I After 392000 nodes, 102429 on tree, -72.595615 best solution, best possible -74.444322 (378.01 seconds)
Cbc0010I After 393000 nodes, 102255 on tree, -72.595615 best solution, best possible -74.444322 (378.65 seconds)
Cbc0010I After 394000 nodes, 102753 on tree, -72.595615 best solution, best possible -74.440943 (380.78 seconds)
Cbc0010I After 395000 nodes, 102733 on tree, -72.595615 best solution, best possible -74.440943 (382.03 seconds)
Cbc0010I After 396000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.440943 (382.89 seconds)
Cbc0010I After 397000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.440943 (383.87 seconds)
Cbc0010I After 398000 nodes, 102645 on tree, -72.595615 best solution, best possible -74.440943 (384.85 seconds)
Cbc0010I After 399000 nodes, 102620 on tree, -72.595615 best solution, best possible -74.440943 (385.79 seconds)
Cbc0010I After 400000 nodes, 102611 on tree, -72.595615 best solution, best possible -74.440943 (386.92 seconds)
Cbc0010I After 401000 nodes, 102608 on tree, -72.595615 best solution, best possible -74.440943 (387.92 seconds)
Cbc0010I After 402000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (389.11 seconds)
Cbc0010I After 403000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (390.18 seconds)
Cbc0010I After 404000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (391.28 seconds)
Cbc0010I After 405000 nodes, 102606 on tree, -72.595615 best solution, best possible -74.440943 (392.48 seconds)
Cbc0010I After 406000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (393.43 seconds)
Cbc0010I After 407000 nodes, 102607 on tree, -72.595615 best solution, best possible -74.440943 (394.38 seconds)
Cbc0010I After 408000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (395.50 seconds)
Cbc0010I After 409000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (396.32 seconds)
Cbc0010I After 410000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (397.22 seconds)
Cbc0010I After 411000 nodes, 102606 on tree, -72.595615 best solution, best possible -74.440943 (398.16 seconds)
Cbc0010I After 412000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.440943 (399.14 seconds)
Cbc0010I After 413000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (400.08 seconds)
Cbc0010I After 414000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.440943 (401.25 seconds)
Cbc0010I After 415000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (402.38 seconds)
Cbc0010I After 416000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (403.62 seconds)
Cbc0010I After 417000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (404.71 seconds)
Cbc0010I After 418000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (405.78 seconds)
Cbc0010I After 419000 nodes, 102606 on tree, -72.595615 best solution, best possible -74.440943 (406.92 seconds)
Cbc0010I After 420000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (407.88 seconds)
Cbc0010I After 421000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (408.80 seconds)
Cbc0010I After 422000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (409.68 seconds)
Cbc0010I After 423000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (410.63 seconds)
Cbc0010I After 424000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (411.53 seconds)
Cbc0010I After 425000 nodes, 102598 on tree, -72.595615 best solution, best possible -74.440943 (412.49 seconds)
Cbc0010I After 426000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (414.68 seconds)
Cbc0010I After 427000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (415.55 seconds)
Cbc0010I After 428000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (416.61 seconds)
Cbc0010I After 429000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (417.56 seconds)
Cbc0010I After 430000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (418.42 seconds)
Cbc0010I After 431000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (419.49 seconds)
Cbc0010I After 432000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (420.54 seconds)
Cbc0010I After 433000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (421.56 seconds)
Cbc0010I After 434000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (422.56 seconds)
Cbc0010I After 435000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (423.64 seconds)
Cbc0010I After 436000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (424.62 seconds)
Cbc0010I After 437000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (425.64 seconds)
Cbc0010I After 438000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (426.54 seconds)
Cbc0010I After 439000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (427.49 seconds)
Cbc0010I After 440000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (428.49 seconds)
Cbc0010I After 441000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (429.35 seconds)
Cbc0010I After 442000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (430.46 seconds)
Cbc0010I After 443000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (431.56 seconds)
Cbc0010I After 444000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (432.42 seconds)
Cbc0010I After 445000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.440943 (433.25 seconds)
Cbc0010I After 446000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (434.20 seconds)
Cbc0010I After 447000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (435.39 seconds)
Cbc0010I After 448000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (436.27 seconds)
Cbc0010I After 449000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (437.12 seconds)
Cbc0010I After 450000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (438.15 seconds)
Cbc0010I After 451000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (439.28 seconds)
Cbc0010I After 452000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (440.51 seconds)
Cbc0010I After 453000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (441.64 seconds)
Cbc0010I After 454000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (442.65 seconds)
Cbc0010I After 455000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (443.57 seconds)
Cbc0010I After 456000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (444.51 seconds)
Cbc0010I After 457000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (445.41 seconds)
Cbc0010I After 458000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (446.61 seconds)
Cbc0010I After 459000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (447.71 seconds)
Cbc0010I After 460000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (448.63 seconds)
Cbc0010I After 461000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (449.61 seconds)
Cbc0010I After 462000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (450.50 seconds)
Cbc0010I After 463000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (451.46 seconds)
Cbc0010I After 464000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.440943 (452.34 seconds)
Cbc0010I After 465000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.440943 (453.50 seconds)
Cbc0010I After 466000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (454.44 seconds)
Cbc0010I After 467000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.440943 (455.38 seconds)
Cbc0010I After 468000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.440943 (456.20 seconds)
Cbc0010I After 469000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.440943 (457.30 seconds)
Cbc0010I After 470000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (458.34 seconds)
Cbc0010I After 471000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (459.29 seconds)
Cbc0010I After 472000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (460.30 seconds)
Cbc0010I After 473000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (461.08 seconds)
Cbc0010I After 474000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (461.94 seconds)
Cbc0010I After 475000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (462.89 seconds)
Cbc0010I After 476000 nodes, 102598 on tree, -72.595615 best solution, best possible -74.440943 (463.76 seconds)
Cbc0010I After 477000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.440943 (464.80 seconds)
Cbc0010I After 478000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (465.67 seconds)
Cbc0010I After 479000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (466.56 seconds)
Cbc0010I After 480000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.440943 (467.33 seconds)
Cbc0010I After 481000 nodes, 102607 on tree, -72.595615 best solution, best possible -74.440943 (468.16 seconds)
Cbc0010I After 482000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (468.93 seconds)
Cbc0010I After 483000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.440943 (469.79 seconds)
Cbc0010I After 484000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.440943 (470.56 seconds)
Cbc0010I After 485000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.440943 (471.44 seconds)
Cbc0010I After 486000 nodes, 102592 on tree, -72.595615 best solution, best possible -74.440943 (472.24 seconds)
Cbc0010I After 487000 nodes, 102562 on tree, -72.595615 best solution, best possible -74.440943 (473.04 seconds)
Cbc0010I After 488000 nodes, 102521 on tree, -72.595615 best solution, best possible -74.440943 (473.89 seconds)
Cbc0010I After 489000 nodes, 102482 on tree, -72.595615 best solution, best possible -74.440943 (474.66 seconds)
Cbc0010I After 490000 nodes, 102457 on tree, -72.595615 best solution, best possible -74.440943 (475.48 seconds)
Cbc0010I After 491000 nodes, 102957 on tree, -72.595615 best solution, best possible -74.440943 (477.02 seconds)
Cbc0010I After 492000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.440943 (477.80 seconds)
Cbc0010I After 493000 nodes, 102893 on tree, -72.595615 best solution, best possible -74.440943 (478.55 seconds)
Cbc0010I After 494000 nodes, 102878 on tree, -72.595615 best solution, best possible -74.440943 (479.22 seconds)
Cbc0010I After 495000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.440943 (480.01 seconds)
Cbc0010I After 496000 nodes, 102841 on tree, -72.595615 best solution, best possible -74.440943 (480.81 seconds)
Cbc0010I After 497000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.440943 (481.62 seconds)
Cbc0010I After 498000 nodes, 102749 on tree, -72.595615 best solution, best possible -74.440943 (482.40 seconds)
Cbc0010I After 499000 nodes, 102729 on tree, -72.595615 best solution, best possible -74.440943 (483.25 seconds)
Cbc0010I After 500000 nodes, 102696 on tree, -72.595615 best solution, best possible -74.440943 (484.15 seconds)
Cbc0010I After 501000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.440943 (484.96 seconds)
Cbc0010I After 502000 nodes, 102626 on tree, -72.595615 best solution, best possible -74.440943 (485.80 seconds)
Cbc0010I After 503000 nodes, 102595 on tree, -72.595615 best solution, best possible -74.440943 (486.58 seconds)
Cbc0010I After 504000 nodes, 102568 on tree, -72.595615 best solution, best possible -74.440943 (487.40 seconds)
Cbc0010I After 505000 nodes, 102551 on tree, -72.595615 best solution, best possible -74.440943 (488.20 seconds)
Cbc0010I After 506000 nodes, 102523 on tree, -72.595615 best solution, best possible -74.440943 (489.01 seconds)
Cbc0010I After 507000 nodes, 102486 on tree, -72.595615 best solution, best possible -74.440943 (489.82 seconds)
Cbc0010I After 508000 nodes, 102447 on tree, -72.595615 best solution, best possible -74.440943 (490.58 seconds)
Cbc0010I After 509000 nodes, 102481 on tree, -72.595615 best solution, best possible -74.440943 (491.35 seconds)
Cbc0010I After 510000 nodes, 102434 on tree, -72.595615 best solution, best possible -74.440943 (492.24 seconds)
Cbc0010I After 511000 nodes, 102932 on tree, -72.595615 best solution, best possible -74.440943 (493.83 seconds)
Cbc0010I After 512000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.440943 (494.67 seconds)
Cbc0010I After 513000 nodes, 102871 on tree, -72.595615 best solution, best possible -74.440943 (495.51 seconds)
Cbc0010I After 514000 nodes, 102848 on tree, -72.595615 best solution, best possible -74.440943 (496.36 seconds)
Cbc0010I After 515000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.440943 (497.16 seconds)
Cbc0010I After 516000 nodes, 102756 on tree, -72.595615 best solution, best possible -74.440943 (498.02 seconds)
Cbc0010I After 517000 nodes, 102697 on tree, -72.595615 best solution, best possible -74.440943 (498.80 seconds)
Cbc0010I After 518000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.440943 (499.54 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 21 rows 28 columns
Cbc0010I After 519000 nodes, 102635 on tree, -72.595615 best solution, best possible -74.440943 (500.33 seconds)
Cbc0010I After 520000 nodes, 102586 on tree, -72.595615 best solution, best possible -74.440943 (501.03 seconds)
Cbc0010I After 521000 nodes, 102563 on tree, -72.595615 best solution, best possible -74.440943 (501.85 seconds)
Cbc0010I After 522000 nodes, 102527 on tree, -72.595615 best solution, best possible -74.440943 (502.76 seconds)
Cbc0010I After 523000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.440943 (503.59 seconds)
Cbc0010I After 524000 nodes, 102475 on tree, -72.595615 best solution, best possible -74.440943 (504.45 seconds)
Cbc0010I After 525000 nodes, 102457 on tree, -72.595615 best solution, best possible -74.440943 (505.26 seconds)
Cbc0010I After 526000 nodes, 102956 on tree, -72.595615 best solution, best possible -74.437609 (507.21 seconds)
Cbc0010I After 527000 nodes, 102948 on tree, -72.595615 best solution, best possible -74.437609 (507.85 seconds)
Cbc0010I After 528000 nodes, 102939 on tree, -72.595615 best solution, best possible -74.437609 (508.58 seconds)
Cbc0010I After 529000 nodes, 102935 on tree, -72.595615 best solution, best possible -74.437609 (509.36 seconds)
Cbc0010I After 530000 nodes, 102912 on tree, -72.595615 best solution, best possible -74.437609 (510.24 seconds)
Cbc0010I After 531000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (511.08 seconds)
Cbc0010I After 532000 nodes, 102906 on tree, -72.595615 best solution, best possible -74.437609 (511.92 seconds)
Cbc0010I After 533000 nodes, 102906 on tree, -72.595615 best solution, best possible -74.437609 (512.86 seconds)
Cbc0010I After 534000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (513.77 seconds)
Cbc0010I After 535000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (514.55 seconds)
Cbc0010I After 536000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (515.34 seconds)
Cbc0010I After 537000 nodes, 102906 on tree, -72.595615 best solution, best possible -74.437609 (516.08 seconds)
Cbc0010I After 538000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (516.90 seconds)
Cbc0010I After 539000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (517.72 seconds)
Cbc0010I After 540000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (518.61 seconds)
Cbc0010I After 541000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (519.39 seconds)
Cbc0010I After 542000 nodes, 102897 on tree, -72.595615 best solution, best possible -74.437609 (520.24 seconds)
Cbc0010I After 543000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (521.09 seconds)
Cbc0010I After 544000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (521.89 seconds)
Cbc0010I After 545000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (522.89 seconds)
Cbc0010I After 546000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (523.70 seconds)
Cbc0010I After 547000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (524.48 seconds)
Cbc0010I After 548000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.437609 (525.48 seconds)
Cbc0010I After 549000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (526.37 seconds)
Cbc0010I After 550000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (527.30 seconds)
Cbc0010I After 551000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.437609 (528.14 seconds)
Cbc0010I After 552000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (529.03 seconds)
Cbc0010I After 553000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (529.87 seconds)
Cbc0010I After 554000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (530.69 seconds)
Cbc0010I After 555000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (531.63 seconds)
Cbc0010I After 556000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (532.43 seconds)
Cbc0010I After 557000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (533.24 seconds)
Cbc0010I After 558000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (534.09 seconds)
Cbc0010I After 559000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (534.94 seconds)
Cbc0010I After 560000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (535.72 seconds)
Cbc0010I After 561000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (536.60 seconds)
Cbc0010I After 562000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (537.54 seconds)
Cbc0010I After 563000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (538.35 seconds)
Cbc0010I After 564000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (539.19 seconds)
Cbc0010I After 565000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (540.04 seconds)
Cbc0010I After 566000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (540.95 seconds)
Cbc0010I After 567000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (541.82 seconds)
Cbc0010I After 568000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (542.62 seconds)
Cbc0010I After 569000 nodes, 102897 on tree, -72.595615 best solution, best possible -74.437609 (543.41 seconds)
Cbc0010I After 570000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.437609 (544.30 seconds)
Cbc0010I After 571000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (545.13 seconds)
Cbc0010I After 572000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (546.02 seconds)
Cbc0010I After 573000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (546.86 seconds)
Cbc0010I After 574000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (547.73 seconds)
Cbc0010I After 575000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (548.47 seconds)
Cbc0010I After 576000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (549.17 seconds)
Cbc0010I After 577000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (549.90 seconds)
Cbc0010I After 578000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (550.80 seconds)
Cbc0010I After 579000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (551.65 seconds)
Cbc0010I After 580000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (552.56 seconds)
Cbc0010I After 581000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (553.37 seconds)
Cbc0010I After 582000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (554.35 seconds)
Cbc0010I After 583000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (555.22 seconds)
Cbc0010I After 584000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (555.99 seconds)
Cbc0010I After 585000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.437609 (556.76 seconds)
Cbc0010I After 586000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (557.50 seconds)
Cbc0010I After 587000 nodes, 102897 on tree, -72.595615 best solution, best possible -74.437609 (558.37 seconds)
Cbc0010I After 588000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.437609 (559.18 seconds)
Cbc0010I After 589000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (559.89 seconds)
Cbc0010I After 590000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (560.61 seconds)
Cbc0010I After 591000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (561.42 seconds)
Cbc0010I After 592000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (562.31 seconds)
Cbc0010I After 593000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.437609 (563.00 seconds)
Cbc0010I After 594000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (563.90 seconds)
Cbc0010I After 595000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (564.73 seconds)
Cbc0010I After 596000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (565.62 seconds)
Cbc0010I After 597000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (566.42 seconds)
Cbc0010I After 598000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (567.17 seconds)
Cbc0010I After 599000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (568.03 seconds)
Cbc0010I After 600000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (568.82 seconds)
Cbc0010I After 601000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (569.69 seconds)
Cbc0010I After 602000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (570.38 seconds)
Cbc0010I After 603000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (571.13 seconds)
Cbc0010I After 604000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (571.89 seconds)
Cbc0010I After 605000 nodes, 102898 on tree, -72.595615 best solution, best possible -74.437609 (572.75 seconds)
Cbc0010I After 606000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.437609 (573.44 seconds)
Cbc0010I After 607000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (574.25 seconds)
Cbc0010I After 608000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.437609 (575.10 seconds)
Cbc0010I After 609000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.437609 (575.93 seconds)
Cbc0010I After 610000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (576.68 seconds)
Cbc0010I After 611000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.437609 (577.52 seconds)
Cbc0010I After 612000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.437609 (578.37 seconds)
Cbc0010I After 613000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.437609 (579.21 seconds)
Cbc0010I After 614000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.437609 (579.96 seconds)
Cbc0010I After 615000 nodes, 102841 on tree, -72.595615 best solution, best possible -74.437609 (580.76 seconds)
Cbc0010I After 616000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.437609 (581.53 seconds)
Cbc0010I After 617000 nodes, 102797 on tree, -72.595615 best solution, best possible -74.437609 (582.35 seconds)
Cbc0010I After 618000 nodes, 102767 on tree, -72.595615 best solution, best possible -74.437609 (583.14 seconds)
Cbc0010I After 619000 nodes, 102749 on tree, -72.595615 best solution, best possible -74.437609 (583.97 seconds)
Cbc0010I After 620000 nodes, 102711 on tree, -72.595615 best solution, best possible -74.437609 (584.83 seconds)
Cbc0010I After 621000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.437609 (585.62 seconds)
Cbc0010I After 622000 nodes, 102642 on tree, -72.595615 best solution, best possible -74.437609 (586.45 seconds)
Cbc0010I After 623000 nodes, 102630 on tree, -72.595615 best solution, best possible -74.437609 (587.32 seconds)
Cbc0010I After 624000 nodes, 102579 on tree, -72.595615 best solution, best possible -74.437609 (588.16 seconds)
Cbc0010I After 625000 nodes, 102542 on tree, -72.595615 best solution, best possible -74.437609 (588.99 seconds)
Cbc0010I After 626000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.437609 (589.77 seconds)
Cbc0010I After 627000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.437609 (590.62 seconds)
Cbc0010I After 628000 nodes, 102474 on tree, -72.595615 best solution, best possible -74.437609 (591.34 seconds)
Cbc0010I After 629000 nodes, 102451 on tree, -72.595615 best solution, best possible -74.437609 (592.22 seconds)
Cbc0010I After 630000 nodes, 102951 on tree, -72.595615 best solution, best possible -74.434252 (594.02 seconds)
Cbc0010I After 631000 nodes, 102937 on tree, -72.595615 best solution, best possible -74.434252 (594.91 seconds)
Cbc0010I After 632000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.434252 (595.70 seconds)
Cbc0010I After 633000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.434252 (596.50 seconds)
Cbc0010I After 634000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.434252 (597.23 seconds)
Cbc0010I After 635000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.434252 (598.00 seconds)
Cbc0010I After 636000 nodes, 102805 on tree, -72.595615 best solution, best possible -74.434252 (598.81 seconds)
Cbc0010I After 637000 nodes, 102768 on tree, -72.595615 best solution, best possible -74.434252 (599.67 seconds)
Cbc0010I After 638000 nodes, 102752 on tree, -72.595615 best solution, best possible -74.434252 (600.50 seconds)
Cbc0010I After 639000 nodes, 102738 on tree, -72.595615 best solution, best possible -74.434252 (601.31 seconds)
Cbc0010I After 640000 nodes, 102738 on tree, -72.595615 best solution, best possible -74.434252 (601.94 seconds)
Cbc0010I After 641000 nodes, 102721 on tree, -72.595615 best solution, best possible -74.434252 (602.82 seconds)
Cbc0010I After 642000 nodes, 102704 on tree, -72.595615 best solution, best possible -74.434252 (603.61 seconds)
Cbc0010I After 643000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.434252 (604.39 seconds)
Cbc0010I After 644000 nodes, 102679 on tree, -72.595615 best solution, best possible -74.434252 (605.17 seconds)
Cbc0010I After 645000 nodes, 102676 on tree, -72.595615 best solution, best possible -74.434252 (605.94 seconds)
Cbc0010I After 646000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.434252 (606.73 seconds)
Cbc0010I After 647000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.434252 (607.50 seconds)
Cbc0010I After 648000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.434252 (608.29 seconds)
Cbc0010I After 649000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.434252 (609.14 seconds)
Cbc0010I After 650000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.434252 (610.06 seconds)
Cbc0010I After 651000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (611.05 seconds)
Cbc0010I After 652000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.434252 (611.92 seconds)
Cbc0010I After 653000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (612.86 seconds)
Cbc0010I After 654000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (613.66 seconds)
Cbc0010I After 655000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (614.52 seconds)
Cbc0010I After 656000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (615.23 seconds)
Cbc0010I After 657000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (616.14 seconds)
Cbc0010I After 658000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (617.02 seconds)
Cbc0010I After 659000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (617.91 seconds)
Cbc0010I After 660000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (618.74 seconds)
Cbc0010I After 661000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (619.59 seconds)
Cbc0010I After 662000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (620.38 seconds)
Cbc0010I After 663000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (621.17 seconds)
Cbc0010I After 664000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (621.91 seconds)
Cbc0010I After 665000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (622.73 seconds)
Cbc0010I After 666000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (623.58 seconds)
Cbc0010I After 667000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (624.36 seconds)
Cbc0010I After 668000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (625.14 seconds)
Cbc0010I After 669000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (625.94 seconds)
Cbc0010I After 670000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (626.81 seconds)
Cbc0010I After 671000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (627.66 seconds)
Cbc0010I After 672000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (628.53 seconds)
Cbc0010I After 673000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (629.59 seconds)
Cbc0010I After 674000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (630.42 seconds)
Cbc0010I After 675000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (631.23 seconds)
Cbc0010I After 676000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (632.07 seconds)
Cbc0010I After 677000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (632.96 seconds)
Cbc0010I After 678000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (633.88 seconds)
Cbc0010I After 679000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (634.74 seconds)
Cbc0010I After 680000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (635.60 seconds)
Cbc0010I After 681000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (636.50 seconds)
Cbc0010I After 682000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (637.45 seconds)
Cbc0010I After 683000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (638.28 seconds)
Cbc0010I After 684000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (639.07 seconds)
Cbc0010I After 685000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (639.84 seconds)
Cbc0010I After 686000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (640.68 seconds)
Cbc0010I After 687000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (641.53 seconds)
Cbc0010I After 688000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (642.38 seconds)
Cbc0010I After 689000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (643.22 seconds)
Cbc0010I After 690000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (644.03 seconds)
Cbc0010I After 691000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (644.89 seconds)
Cbc0010I After 692000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (645.78 seconds)
Cbc0010I After 693000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (646.58 seconds)
Cbc0010I After 694000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (647.44 seconds)
Cbc0010I After 695000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (648.26 seconds)
Cbc0010I After 696000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (649.06 seconds)
Cbc0010I After 697000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (649.84 seconds)
Cbc0010I After 698000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (650.60 seconds)
Cbc0010I After 699000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (651.41 seconds)
Cbc0010I After 700000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (652.19 seconds)
Cbc0010I After 701000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (652.95 seconds)
Cbc0010I After 702000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (653.83 seconds)
Cbc0010I After 703000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (654.55 seconds)
Cbc0010I After 704000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (655.29 seconds)
Cbc0010I After 705000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (656.06 seconds)
Cbc0010I After 706000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (656.95 seconds)
Cbc0010I After 707000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (657.79 seconds)
Cbc0010I After 708000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (658.62 seconds)
Cbc0010I After 709000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (659.36 seconds)
Cbc0010I After 710000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (660.12 seconds)
Cbc0010I After 711000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (661.00 seconds)
Cbc0010I After 712000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (661.83 seconds)
Cbc0010I After 713000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.434252 (662.66 seconds)
Cbc0010I After 714000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (663.56 seconds)
Cbc0010I After 715000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (664.41 seconds)
Cbc0010I After 716000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (665.28 seconds)
Cbc0010I After 717000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (666.18 seconds)
Cbc0010I After 718000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (666.99 seconds)
Cbc0010I After 719000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (667.82 seconds)
Cbc0010I After 720000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (668.76 seconds)
Cbc0010I After 721000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (669.65 seconds)
Cbc0010I After 722000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.434252 (670.35 seconds)
Cbc0010I After 723000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (671.12 seconds)
Cbc0010I After 724000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (672.01 seconds)
Cbc0010I After 725000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.434252 (672.85 seconds)
Cbc0010I After 726000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (673.59 seconds)
Cbc0010I After 727000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (674.45 seconds)
Cbc0010I After 728000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (675.31 seconds)
Cbc0010I After 729000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (676.04 seconds)
Cbc0010I After 730000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (676.79 seconds)
Cbc0010I After 731000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (677.52 seconds)
Cbc0010I After 732000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (678.17 seconds)
Cbc0010I After 733000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (679.05 seconds)
Cbc0010I After 734000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (679.92 seconds)
Cbc0010I After 735000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (680.67 seconds)
Cbc0010I After 736000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (681.48 seconds)
Cbc0010I After 737000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (682.27 seconds)
Cbc0010I After 738000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (683.03 seconds)
Cbc0010I After 739000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (683.79 seconds)
Cbc0010I After 740000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (684.52 seconds)
Cbc0010I After 741000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (685.16 seconds)
Cbc0010I After 742000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (685.93 seconds)
Cbc0010I After 743000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (686.70 seconds)
Cbc0010I After 744000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (687.49 seconds)
Cbc0010I After 745000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (688.37 seconds)
Cbc0010I After 746000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (689.15 seconds)
Cbc0010I After 747000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (689.97 seconds)
Cbc0010I After 748000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (690.75 seconds)
Cbc0010I After 749000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (691.53 seconds)
Cbc0010I After 750000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (692.34 seconds)
Cbc0010I After 751000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (693.16 seconds)
Cbc0010I After 752000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (693.73 seconds)
Cbc0010I After 753000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (694.40 seconds)
Cbc0010I After 754000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (695.25 seconds)
Cbc0010I After 755000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (696.02 seconds)
Cbc0010I After 756000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (696.85 seconds)
Cbc0010I After 757000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (697.71 seconds)
Cbc0010I After 758000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (698.51 seconds)
Cbc0010I After 759000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (699.27 seconds)
Cbc0010I After 760000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (700.21 seconds)
Cbc0010I After 761000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (701.01 seconds)
Cbc0010I After 762000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.434252 (701.91 seconds)
Cbc0010I After 763000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (702.75 seconds)
Cbc0010I After 764000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.434252 (703.62 seconds)
Cbc0010I After 765000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (704.50 seconds)
Cbc0010I After 766000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (705.26 seconds)
Cbc0010I After 767000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.434252 (706.02 seconds)
Cbc0010I After 768000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.434252 (706.88 seconds)
Cbc0010I After 769000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.434252 (707.62 seconds)
Cbc0010I After 770000 nodes, 102656 on tree, -72.595615 best solution, best possible -74.434252 (708.38 seconds)
Cbc0010I After 771000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.434252 (709.32 seconds)
Cbc0010I After 772000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (710.25 seconds)
Cbc0010I After 773000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.434252 (710.99 seconds)
Cbc0010I After 774000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.434252 (711.77 seconds)
Cbc0010I After 775000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.434252 (712.77 seconds)
Cbc0010I After 776000 nodes, 102637 on tree, -72.595615 best solution, best possible -74.434252 (713.65 seconds)
Cbc0010I After 777000 nodes, 102617 on tree, -72.595615 best solution, best possible -74.434252 (714.48 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 39 columns
Cbc0010I After 778000 nodes, 102578 on tree, -72.595615 best solution, best possible -74.434252 (715.36 seconds)
Cbc0010I After 779000 nodes, 102546 on tree, -72.595615 best solution, best possible -74.434252 (716.17 seconds)
Cbc0010I After 780000 nodes, 102532 on tree, -72.595615 best solution, best possible -74.434252 (717.01 seconds)
Cbc0010I After 781000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.434252 (717.84 seconds)
Cbc0010I After 782000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.434252 (718.59 seconds)
Cbc0010I After 783000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.434252 (719.39 seconds)
Cbc0010I After 784000 nodes, 102478 on tree, -72.595615 best solution, best possible -74.434252 (720.17 seconds)
Cbc0010I After 785000 nodes, 102464 on tree, -72.595615 best solution, best possible -74.434252 (720.98 seconds)
Cbc0010I After 786000 nodes, 102451 on tree, -72.595615 best solution, best possible -74.434252 (721.78 seconds)
Cbc0010I After 787000 nodes, 102949 on tree, -72.595615 best solution, best possible -74.434252 (723.00 seconds)
Cbc0010I After 788000 nodes, 102945 on tree, -72.595615 best solution, best possible -74.434252 (723.66 seconds)
Cbc0010I After 789000 nodes, 102945 on tree, -72.595615 best solution, best possible -74.434252 (724.39 seconds)
Cbc0010I After 790000 nodes, 102941 on tree, -72.595615 best solution, best possible -74.434252 (725.09 seconds)
Cbc0010I After 791000 nodes, 102936 on tree, -72.595615 best solution, best possible -74.434252 (725.83 seconds)
Cbc0010I After 792000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.434252 (726.59 seconds)
Cbc0010I After 793000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.434252 (727.39 seconds)
Cbc0010I After 794000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.434252 (728.19 seconds)
Cbc0010I After 795000 nodes, 102848 on tree, -72.595615 best solution, best possible -74.434252 (728.94 seconds)
Cbc0010I After 796000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.434252 (729.65 seconds)
Cbc0010I After 797000 nodes, 102804 on tree, -72.595615 best solution, best possible -74.434252 (730.41 seconds)
Cbc0010I After 798000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.434252 (731.13 seconds)
Cbc0010I After 799000 nodes, 102764 on tree, -72.595615 best solution, best possible -74.434252 (732.00 seconds)
Cbc0010I After 800000 nodes, 102747 on tree, -72.595615 best solution, best possible -74.434252 (732.90 seconds)
Cbc0010I After 801000 nodes, 102725 on tree, -72.595615 best solution, best possible -74.434252 (733.78 seconds)
Cbc0010I After 802000 nodes, 102718 on tree, -72.595615 best solution, best possible -74.434252 (734.54 seconds)
Cbc0010I After 803000 nodes, 102700 on tree, -72.595615 best solution, best possible -74.434252 (735.35 seconds)
Cbc0010I After 804000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.434252 (736.26 seconds)
Cbc0010I After 805000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.434252 (737.02 seconds)
Cbc0010I After 806000 nodes, 102636 on tree, -72.595615 best solution, best possible -74.434252 (737.78 seconds)
Cbc0010I After 807000 nodes, 102634 on tree, -72.595615 best solution, best possible -74.434252 (738.41 seconds)
Cbc0010I After 808000 nodes, 102621 on tree, -72.595615 best solution, best possible -74.434252 (739.22 seconds)
Cbc0010I After 809000 nodes, 102594 on tree, -72.595615 best solution, best possible -74.434252 (739.93 seconds)
Cbc0010I After 810000 nodes, 102553 on tree, -72.595615 best solution, best possible -74.434252 (740.68 seconds)
Cbc0010I After 811000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.434252 (741.48 seconds)
Cbc0010I After 812000 nodes, 102476 on tree, -72.595615 best solution, best possible -74.434252 (742.35 seconds)
Cbc0010I After 813000 nodes, 102457 on tree, -72.595615 best solution, best possible -74.434252 (743.22 seconds)
Cbc0010I After 814000 nodes, 102956 on tree, -72.595615 best solution, best possible -74.431037 (744.70 seconds)
Cbc0010I After 815000 nodes, 102952 on tree, -72.595615 best solution, best possible -74.431037 (745.29 seconds)
Cbc0010I After 816000 nodes, 102940 on tree, -72.595615 best solution, best possible -74.431037 (745.93 seconds)
Cbc0010I After 817000 nodes, 102926 on tree, -72.595615 best solution, best possible -74.431037 (746.71 seconds)
Cbc0010I After 818000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.431037 (747.46 seconds)
Cbc0010I After 819000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.431037 (748.25 seconds)
Cbc0010I After 820000 nodes, 102880 on tree, -72.595615 best solution, best possible -74.431037 (749.01 seconds)
Cbc0010I After 821000 nodes, 102867 on tree, -72.595615 best solution, best possible -74.431037 (749.80 seconds)
Cbc0010I After 822000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.431037 (750.59 seconds)
Cbc0010I After 823000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.431037 (751.32 seconds)
Cbc0010I After 824000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.431037 (752.06 seconds)
Cbc0010I After 825000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.431037 (752.85 seconds)
Cbc0010I After 826000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.431037 (753.74 seconds)
Cbc0010I After 827000 nodes, 102851 on tree, -72.595615 best solution, best possible -74.431037 (754.63 seconds)
Cbc0010I After 828000 nodes, 102839 on tree, -72.595615 best solution, best possible -74.431037 (755.41 seconds)
Cbc0010I After 829000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (756.26 seconds)
Cbc0010I After 830000 nodes, 102837 on tree, -72.595615 best solution, best possible -74.431037 (757.20 seconds)
Cbc0010I After 831000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (757.99 seconds)
Cbc0010I After 832000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (758.84 seconds)
Cbc0010I After 833000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (759.68 seconds)
Cbc0010I After 834000 nodes, 102840 on tree, -72.595615 best solution, best possible -74.431037 (760.51 seconds)
Cbc0010I After 835000 nodes, 102838 on tree, -72.595615 best solution, best possible -74.431037 (761.28 seconds)
Cbc0010I After 836000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (762.06 seconds)
Cbc0010I After 837000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (762.87 seconds)
Cbc0010I After 838000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (763.65 seconds)
Cbc0010I After 839000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (764.51 seconds)
Cbc0010I After 840000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (765.34 seconds)
Cbc0010I After 841000 nodes, 102838 on tree, -72.595615 best solution, best possible -74.431037 (766.22 seconds)
Cbc0010I After 842000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (767.08 seconds)
Cbc0010I After 843000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (767.91 seconds)
Cbc0010I After 844000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (768.76 seconds)
Cbc0010I After 845000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (769.58 seconds)
Cbc0010I After 846000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (770.34 seconds)
Cbc0010I After 847000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (771.15 seconds)
Cbc0010I After 848000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (771.92 seconds)
Cbc0010I After 849000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (772.59 seconds)
Cbc0010I After 850000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (773.31 seconds)
Cbc0010I After 851000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (774.26 seconds)
Cbc0010I After 852000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (774.99 seconds)
Cbc0010I After 853000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (775.70 seconds)
Cbc0010I After 854000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (776.42 seconds)
Cbc0010I After 855000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (777.25 seconds)
Cbc0010I After 856000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (778.18 seconds)
Cbc0010I After 857000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (779.01 seconds)
Cbc0010I After 858000 nodes, 102836 on tree, -72.595615 best solution, best possible -74.431037 (779.83 seconds)
Cbc0010I After 859000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (780.61 seconds)
Cbc0010I After 860000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (781.52 seconds)
Cbc0010I After 861000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (782.41 seconds)
Cbc0010I After 862000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (783.17 seconds)
Cbc0010I After 863000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (784.00 seconds)
Cbc0010I After 864000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (784.91 seconds)
Cbc0010I After 865000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (785.60 seconds)
Cbc0010I After 866000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (786.28 seconds)
Cbc0010I After 867000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (787.08 seconds)
Cbc0010I After 868000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (787.96 seconds)
Cbc0010I After 869000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (788.80 seconds)
Cbc0010I After 870000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (789.68 seconds)
Cbc0010I After 871000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (790.51 seconds)
Cbc0010I After 872000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (791.30 seconds)
Cbc0010I After 873000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (792.10 seconds)
Cbc0010I After 874000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (792.93 seconds)
Cbc0010I After 875000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (793.67 seconds)
Cbc0010I After 876000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (794.47 seconds)
Cbc0010I After 877000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.431037 (795.38 seconds)
Cbc0010I After 878000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (796.19 seconds)
Cbc0010I After 879000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (797.10 seconds)
Cbc0010I After 880000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (798.09 seconds)
Cbc0010I After 881000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (798.94 seconds)
Cbc0010I After 882000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (799.88 seconds)
Cbc0010I After 883000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (800.75 seconds)
Cbc0010I After 884000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (801.65 seconds)
Cbc0010I After 885000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (802.55 seconds)
Cbc0010I After 886000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (803.42 seconds)
Cbc0010I After 887000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (804.23 seconds)
Cbc0010I After 888000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (805.07 seconds)
Cbc0010I After 889000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (805.96 seconds)
Cbc0010I After 890000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (806.73 seconds)
Cbc0010I After 891000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (807.51 seconds)
Cbc0010I After 892000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (808.26 seconds)
Cbc0010I After 893000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (808.98 seconds)
Cbc0010I After 894000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (809.80 seconds)
Cbc0010I After 895000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (810.69 seconds)
Cbc0010I After 896000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (811.46 seconds)
Cbc0010I After 897000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (812.23 seconds)
Cbc0010I After 898000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (813.19 seconds)
Cbc0010I After 899000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (814.15 seconds)
Cbc0010I After 900000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (814.89 seconds)
Cbc0010I After 901000 nodes, 102836 on tree, -72.595615 best solution, best possible -74.431037 (815.64 seconds)
Cbc0010I After 902000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (816.63 seconds)
Cbc0010I After 903000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (817.42 seconds)
Cbc0010I After 904000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (818.20 seconds)
Cbc0010I After 905000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (819.00 seconds)
Cbc0010I After 906000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (819.82 seconds)
Cbc0010I After 907000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (820.67 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 25 rows 33 columns
Cbc0010I After 908000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (821.36 seconds)
Cbc0010I After 909000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (822.28 seconds)
Cbc0010I After 910000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (823.03 seconds)
Cbc0010I After 911000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (823.82 seconds)
Cbc0010I After 912000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (824.52 seconds)
Cbc0010I After 913000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (825.39 seconds)
Cbc0010I After 914000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (826.09 seconds)
Cbc0010I After 915000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (826.92 seconds)
Cbc0010I After 916000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (827.81 seconds)
Cbc0010I After 917000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (828.67 seconds)
Cbc0010I After 918000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (829.49 seconds)
Cbc0010I After 919000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (830.32 seconds)
Cbc0010I After 920000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (831.07 seconds)
Cbc0010I After 921000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (831.84 seconds)
Cbc0010I After 922000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (832.59 seconds)
Cbc0010I After 923000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (833.43 seconds)
Cbc0010I After 924000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (834.10 seconds)
Cbc0010I After 925000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (834.79 seconds)
Cbc0010I After 926000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (835.55 seconds)
Cbc0010I After 927000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (836.30 seconds)
Cbc0010I After 928000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (837.01 seconds)
Cbc0010I After 929000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.431037 (837.78 seconds)
Cbc0010I After 930000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (838.62 seconds)
Cbc0010I After 931000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (839.43 seconds)
Cbc0010I After 932000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.431037 (840.20 seconds)
Cbc0010I After 933000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (840.91 seconds)
Cbc0010I After 934000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (841.69 seconds)
Cbc0010I After 935000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (842.42 seconds)
Cbc0010I After 936000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (843.16 seconds)
Cbc0010I After 937000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (843.97 seconds)
Cbc0010I After 938000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (844.79 seconds)
Cbc0010I After 939000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (845.59 seconds)
Cbc0010I After 940000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (846.47 seconds)
Cbc0010I After 941000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (847.21 seconds)
Cbc0010I After 942000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (847.94 seconds)
Cbc0010I After 943000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (848.77 seconds)
Cbc0010I After 944000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (849.45 seconds)
Cbc0010I After 945000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (850.24 seconds)
Cbc0010I After 946000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (850.98 seconds)
Cbc0010I After 947000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (851.81 seconds)
Cbc0010I After 948000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (852.67 seconds)
Cbc0010I After 949000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (853.44 seconds)
Cbc0010I After 950000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.431037 (854.20 seconds)
Cbc0010I After 951000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.431037 (855.00 seconds)
Cbc0010I After 952000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (855.86 seconds)
Cbc0010I After 953000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (856.64 seconds)
Cbc0010I After 954000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (857.35 seconds)
Cbc0010I After 955000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (858.14 seconds)
Cbc0010I After 956000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.431037 (858.97 seconds)
Cbc0010I After 957000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (859.85 seconds)
Cbc0010I After 958000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (860.64 seconds)
Cbc0010I After 959000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (861.43 seconds)
Cbc0010I After 960000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (862.33 seconds)
Cbc0010I After 961000 nodes, 102836 on tree, -72.595615 best solution, best possible -74.431037 (863.25 seconds)
Cbc0010I After 962000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (864.19 seconds)
Cbc0010I After 963000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (864.99 seconds)
Cbc0010I After 964000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (865.81 seconds)
Cbc0010I After 965000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (866.54 seconds)
Cbc0010I After 966000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (867.42 seconds)
Cbc0010I After 967000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (868.38 seconds)
Cbc0010I After 968000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (869.19 seconds)
Cbc0010I After 969000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (870.00 seconds)
Cbc0010I After 970000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (870.76 seconds)
Cbc0010I After 971000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (871.52 seconds)
Cbc0010I After 972000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (872.36 seconds)
Cbc0010I After 973000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (873.12 seconds)
Cbc0010I After 974000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (873.86 seconds)
Cbc0010I After 975000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (874.70 seconds)
Cbc0010I After 976000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (875.48 seconds)
Cbc0010I After 977000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (876.26 seconds)
Cbc0010I After 978000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (877.08 seconds)
Cbc0010I After 979000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (877.95 seconds)
Cbc0010I After 980000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (878.80 seconds)
Cbc0010I After 981000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (879.62 seconds)
Cbc0010I After 982000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (880.41 seconds)
Cbc0010I After 983000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (881.27 seconds)
Cbc0010I After 984000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (881.99 seconds)
Cbc0010I After 985000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (882.73 seconds)
Cbc0010I After 986000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (883.53 seconds)
Cbc0010I After 987000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (884.37 seconds)
Cbc0010I After 988000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.431037 (885.22 seconds)
Cbc0010I After 989000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (885.95 seconds)
Cbc0010I After 990000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.431037 (886.70 seconds)
Cbc0010I After 991000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (887.48 seconds)
Cbc0010I After 992000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (888.24 seconds)
Cbc0010I After 993000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.431037 (889.07 seconds)
Cbc0010I After 994000 nodes, 102835 on tree, -72.595615 best solution, best possible -74.431037 (889.75 seconds)
Cbc0010I After 995000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (890.56 seconds)
Cbc0010I After 996000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.431037 (891.52 seconds)
Cbc0010I After 997000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (892.49 seconds)
Cbc0010I After 998000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.431037 (893.33 seconds)
Cbc0010I After 999000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.431037 (894.09 seconds)
Cbc0010I After 1000000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.431037 (894.87 seconds)
Cbc0010I After 1001000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.431037 (895.74 seconds)
Cbc0010I After 1002000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.431037 (896.64 seconds)
Cbc0010I After 1003000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.431037 (897.34 seconds)
Cbc0010I After 1004000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.431037 (898.16 seconds)
Cbc0010I After 1005000 nodes, 102769 on tree, -72.595615 best solution, best possible -74.431037 (899.13 seconds)
Cbc0010I After 1006000 nodes, 102748 on tree, -72.595615 best solution, best possible -74.431037 (899.95 seconds)
Cbc0010I After 1007000 nodes, 102721 on tree, -72.595615 best solution, best possible -74.431037 (900.78 seconds)
Cbc0010I After 1008000 nodes, 102697 on tree, -72.595615 best solution, best possible -74.431037 (901.64 seconds)
Cbc0010I After 1009000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.431037 (902.44 seconds)
Cbc0010I After 1010000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.431037 (903.20 seconds)
Cbc0010I After 1011000 nodes, 102652 on tree, -72.595615 best solution, best possible -74.431037 (903.96 seconds)
Cbc0010I After 1012000 nodes, 102641 on tree, -72.595615 best solution, best possible -74.431037 (904.79 seconds)
Cbc0010I After 1013000 nodes, 102625 on tree, -72.595615 best solution, best possible -74.431037 (905.63 seconds)
Cbc0010I After 1014000 nodes, 102594 on tree, -72.595615 best solution, best possible -74.431037 (906.46 seconds)
Cbc0010I After 1015000 nodes, 102580 on tree, -72.595615 best solution, best possible -74.431037 (907.32 seconds)
Cbc0010I After 1016000 nodes, 102575 on tree, -72.595615 best solution, best possible -74.431037 (908.19 seconds)
Cbc0010I After 1017000 nodes, 102549 on tree, -72.595615 best solution, best possible -74.431037 (909.11 seconds)
Cbc0010I After 1018000 nodes, 102525 on tree, -72.595615 best solution, best possible -74.431037 (910.01 seconds)
Cbc0010I After 1019000 nodes, 102499 on tree, -72.595615 best solution, best possible -74.431037 (910.85 seconds)
Cbc0010I After 1020000 nodes, 102472 on tree, -72.595615 best solution, best possible -74.431037 (911.61 seconds)
Cbc0010I After 1021000 nodes, 102454 on tree, -72.595615 best solution, best possible -74.431037 (912.54 seconds)
Cbc0010I After 1022000 nodes, 102952 on tree, -72.595615 best solution, best possible -74.427878 (914.08 seconds)
Cbc0010I After 1023000 nodes, 102952 on tree, -72.595615 best solution, best possible -74.427878 (914.88 seconds)
Cbc0010I After 1024000 nodes, 102937 on tree, -72.595615 best solution, best possible -74.427878 (915.60 seconds)
Cbc0010I After 1025000 nodes, 102919 on tree, -72.595615 best solution, best possible -74.427878 (916.39 seconds)
Cbc0010I After 1026000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.427878 (917.21 seconds)
Cbc0010I After 1027000 nodes, 102903 on tree, -72.595615 best solution, best possible -74.427878 (918.02 seconds)
Cbc0010I After 1028000 nodes, 102893 on tree, -72.595615 best solution, best possible -74.427878 (918.84 seconds)
Cbc0010I After 1029000 nodes, 102878 on tree, -72.595615 best solution, best possible -74.427878 (919.69 seconds)
Cbc0010I After 1030000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.427878 (920.61 seconds)
Cbc0010I After 1031000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.427878 (921.45 seconds)
Cbc0010I After 1032000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.427878 (922.35 seconds)
Cbc0010I After 1033000 nodes, 102776 on tree, -72.595615 best solution, best possible -74.427878 (923.12 seconds)
Cbc0010I After 1034000 nodes, 102765 on tree, -72.595615 best solution, best possible -74.427878 (923.86 seconds)
Cbc0010I After 1035000 nodes, 102748 on tree, -72.595615 best solution, best possible -74.427878 (924.65 seconds)
Cbc0010I After 1036000 nodes, 102743 on tree, -72.595615 best solution, best possible -74.427878 (925.42 seconds)
Cbc0010I After 1037000 nodes, 102700 on tree, -72.595615 best solution, best possible -74.427878 (926.24 seconds)
Cbc0010I After 1038000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.427878 (927.09 seconds)
Cbc0010I After 1039000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.427878 (927.88 seconds)
Cbc0010I After 1040000 nodes, 102648 on tree, -72.595615 best solution, best possible -74.427878 (928.57 seconds)
Cbc0010I After 1041000 nodes, 102633 on tree, -72.595615 best solution, best possible -74.427878 (929.34 seconds)
Cbc0010I After 1042000 nodes, 102613 on tree, -72.595615 best solution, best possible -74.427878 (930.13 seconds)
Cbc0010I After 1043000 nodes, 102603 on tree, -72.595615 best solution, best possible -74.427878 (930.95 seconds)
Cbc0010I After 1044000 nodes, 102571 on tree, -72.595615 best solution, best possible -74.427878 (931.84 seconds)
Cbc0010I After 1045000 nodes, 102562 on tree, -72.595615 best solution, best possible -74.427878 (932.70 seconds)
Cbc0010I After 1046000 nodes, 102539 on tree, -72.595615 best solution, best possible -74.427878 (933.48 seconds)
Cbc0010I After 1047000 nodes, 102528 on tree, -72.595615 best solution, best possible -74.427878 (934.33 seconds)
Cbc0010I After 1048000 nodes, 102520 on tree, -72.595615 best solution, best possible -74.427878 (935.14 seconds)
Cbc0010I After 1049000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.427878 (935.91 seconds)
Cbc0010I After 1050000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.427878 (936.71 seconds)
Cbc0010I After 1051000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.427878 (937.60 seconds)
Cbc0010I After 1052000 nodes, 102494 on tree, -72.595615 best solution, best possible -74.427878 (938.46 seconds)
Cbc0010I After 1053000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.427878 (939.30 seconds)
Cbc0010I After 1054000 nodes, 102477 on tree, -72.595615 best solution, best possible -74.427878 (940.11 seconds)
Cbc0010I After 1055000 nodes, 102464 on tree, -72.595615 best solution, best possible -74.427878 (940.92 seconds)
Cbc0010I After 1056000 nodes, 102454 on tree, -72.595615 best solution, best possible -74.427878 (941.68 seconds)
Cbc0010I After 1057000 nodes, 102234 on tree, -72.595615 best solution, best possible -74.427878 (942.39 seconds)
Cbc0010I After 1058000 nodes, 102732 on tree, -72.595615 best solution, best possible -74.424557 (944.24 seconds)
Cbc0010I After 1059000 nodes, 102723 on tree, -72.595615 best solution, best possible -74.424557 (944.92 seconds)
Cbc0010I After 1060000 nodes, 102722 on tree, -72.595615 best solution, best possible -74.424557 (945.64 seconds)
Cbc0010I After 1061000 nodes, 102723 on tree, -72.595615 best solution, best possible -74.424557 (946.32 seconds)
Cbc0010I After 1062000 nodes, 102714 on tree, -72.595615 best solution, best possible -74.424557 (947.04 seconds)
Cbc0010I After 1063000 nodes, 102720 on tree, -72.595615 best solution, best possible -74.424557 (947.83 seconds)
Cbc0010I After 1064000 nodes, 102716 on tree, -72.595615 best solution, best possible -74.424557 (948.49 seconds)
Cbc0010I After 1065000 nodes, 102722 on tree, -72.595615 best solution, best possible -74.424557 (949.33 seconds)
Cbc0010I After 1066000 nodes, 102719 on tree, -72.595615 best solution, best possible -74.424557 (950.52 seconds)
Cbc0010I After 1067000 nodes, 102716 on tree, -72.595615 best solution, best possible -74.424557 (951.36 seconds)
Cbc0010I After 1068000 nodes, 102721 on tree, -72.595615 best solution, best possible -74.424557 (952.27 seconds)
Cbc0010I After 1069000 nodes, 102713 on tree, -72.595615 best solution, best possible -74.424557 (953.08 seconds)
Cbc0010I After 1070000 nodes, 102712 on tree, -72.595615 best solution, best possible -74.424557 (953.90 seconds)
Cbc0010I After 1071000 nodes, 102695 on tree, -72.595615 best solution, best possible -74.424557 (954.77 seconds)
Cbc0010I After 1072000 nodes, 102697 on tree, -72.595615 best solution, best possible -74.424557 (955.63 seconds)
Cbc0010I After 1073000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (956.42 seconds)
Cbc0010I After 1074000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (957.17 seconds)
Cbc0010I After 1075000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (958.02 seconds)
Cbc0010I After 1076000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (958.79 seconds)
Cbc0010I After 1077000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (959.50 seconds)
Cbc0010I After 1078000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (960.20 seconds)
Cbc0010I After 1079000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (961.06 seconds)
Cbc0010I After 1080000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (961.93 seconds)
Cbc0010I After 1081000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (962.75 seconds)
Cbc0010I After 1082000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (963.41 seconds)
Cbc0010I After 1083000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (964.17 seconds)
Cbc0010I After 1084000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (964.99 seconds)
Cbc0010I After 1085000 nodes, 102695 on tree, -72.595615 best solution, best possible -74.424557 (965.67 seconds)
Cbc0010I After 1086000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (966.39 seconds)
Cbc0010I After 1087000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (967.15 seconds)
Cbc0010I After 1088000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (968.01 seconds)
Cbc0010I After 1089000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (969.04 seconds)
Cbc0010I After 1090000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (969.68 seconds)
Cbc0010I After 1091000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (970.59 seconds)
Cbc0010I After 1092000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (971.40 seconds)
Cbc0010I After 1093000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (972.23 seconds)
Cbc0010I After 1094000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (973.05 seconds)
Cbc0010I After 1095000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (973.83 seconds)
Cbc0010I After 1096000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (974.62 seconds)
Cbc0010I After 1097000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (975.42 seconds)
Cbc0010I After 1098000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (976.29 seconds)
Cbc0010I After 1099000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (977.08 seconds)
Cbc0010I After 1100000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (977.89 seconds)
Cbc0010I After 1101000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (978.77 seconds)
Cbc0010I After 1102000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (979.63 seconds)
Cbc0010I After 1103000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (980.55 seconds)
Cbc0010I After 1104000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (981.20 seconds)
Cbc0010I After 1105000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (982.00 seconds)
Cbc0010I After 1106000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (982.85 seconds)
Cbc0010I After 1107000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (983.73 seconds)
Cbc0010I After 1108000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (984.57 seconds)
Cbc0010I After 1109000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (985.45 seconds)
Cbc0010I After 1110000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (986.27 seconds)
Cbc0010I After 1111000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (987.07 seconds)
Cbc0010I After 1112000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (987.93 seconds)
Cbc0010I After 1113000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (988.76 seconds)
Cbc0010I After 1114000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (989.61 seconds)
Cbc0010I After 1115000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (990.40 seconds)
Cbc0010I After 1116000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (991.11 seconds)
Cbc0010I After 1117000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (991.98 seconds)
Cbc0010I After 1118000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (992.77 seconds)
Cbc0010I After 1119000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (993.53 seconds)
Cbc0010I After 1120000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (994.39 seconds)
Cbc0010I After 1121000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (995.19 seconds)
Cbc0010I After 1122000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (996.07 seconds)
Cbc0010I After 1123000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (996.94 seconds)
Cbc0010I After 1124000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (997.82 seconds)
Cbc0010I After 1125000 nodes, 102681 on tree, -72.595615 best solution, best possible -74.424557 (998.55 seconds)
Cbc0010I After 1126000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (999.40 seconds)
Cbc0010I After 1127000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1000.15 seconds)
Cbc0010I After 1128000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1000.88 seconds)
Cbc0010I After 1129000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1001.78 seconds)
Cbc0010I After 1130000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1002.61 seconds)
Cbc0010I After 1131000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1003.46 seconds)
Cbc0010I After 1132000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1004.33 seconds)
Cbc0010I After 1133000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1005.12 seconds)
Cbc0010I After 1134000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1005.99 seconds)
Cbc0010I After 1135000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1006.75 seconds)
Cbc0010I After 1136000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1007.70 seconds)
Cbc0010I After 1137000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1008.40 seconds)
Cbc0010I After 1138000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1009.19 seconds)
Cbc0010I After 1139000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1010.02 seconds)
Cbc0010I After 1140000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1010.87 seconds)
Cbc0010I After 1141000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1011.69 seconds)
Cbc0010I After 1142000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1012.50 seconds)
Cbc0010I After 1143000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1013.35 seconds)
Cbc0010I After 1144000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1014.26 seconds)
Cbc0010I After 1145000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1015.16 seconds)
Cbc0010I After 1146000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1015.91 seconds)
Cbc0010I After 1147000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1016.83 seconds)
Cbc0010I After 1148000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1017.60 seconds)
Cbc0010I After 1149000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1018.34 seconds)
Cbc0010I After 1150000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1019.12 seconds)
Cbc0010I After 1151000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1019.87 seconds)
Cbc0010I After 1152000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1020.74 seconds)
Cbc0010I After 1153000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1021.64 seconds)
Cbc0010I After 1154000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1022.50 seconds)
Cbc0010I After 1155000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1023.39 seconds)
Cbc0010I After 1156000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1024.20 seconds)
Cbc0010I After 1157000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1024.97 seconds)
Cbc0010I After 1158000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1025.77 seconds)
Cbc0010I After 1159000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1026.48 seconds)
Cbc0010I After 1160000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1027.29 seconds)
Cbc0010I After 1161000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1028.01 seconds)
Cbc0010I After 1162000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1028.77 seconds)
Cbc0010I After 1163000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1029.56 seconds)
Cbc0010I After 1164000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1030.39 seconds)
Cbc0010I After 1165000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1031.17 seconds)
Cbc0010I After 1166000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1031.91 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 37 columns
Cbc0010I After 1167000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1032.63 seconds)
Cbc0010I After 1168000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1033.29 seconds)
Cbc0010I After 1169000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1034.20 seconds)
Cbc0010I After 1170000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1034.96 seconds)
Cbc0010I After 1171000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1035.77 seconds)
Cbc0010I After 1172000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1036.59 seconds)
Cbc0010I After 1173000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1037.38 seconds)
Cbc0010I After 1174000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1038.15 seconds)
Cbc0010I After 1175000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1038.91 seconds)
Cbc0010I After 1176000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1039.73 seconds)
Cbc0010I After 1177000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1040.60 seconds)
Cbc0010I After 1178000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1041.40 seconds)
Cbc0010I After 1179000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1042.10 seconds)
Cbc0010I After 1180000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1042.89 seconds)
Cbc0010I After 1181000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1043.68 seconds)
Cbc0010I After 1182000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1044.54 seconds)
Cbc0010I After 1183000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1045.41 seconds)
Cbc0010I After 1184000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1046.18 seconds)
Cbc0010I After 1185000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1047.04 seconds)
Cbc0010I After 1186000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1047.88 seconds)
Cbc0010I After 1187000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1048.74 seconds)
Cbc0010I After 1188000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1049.55 seconds)
Cbc0010I After 1189000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1050.34 seconds)
Cbc0010I After 1190000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1051.17 seconds)
Cbc0010I After 1191000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1051.91 seconds)
Cbc0010I After 1192000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1052.69 seconds)
Cbc0010I After 1193000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1053.43 seconds)
Cbc0010I After 1194000 nodes, 102683 on tree, -72.595615 best solution, best possible -74.424557 (1054.28 seconds)
Cbc0010I After 1195000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1055.10 seconds)
Cbc0010I After 1196000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1055.99 seconds)
Cbc0010I After 1197000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1056.81 seconds)
Cbc0010I After 1198000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1057.57 seconds)
Cbc0010I After 1199000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1058.35 seconds)
Cbc0010I After 1200000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1059.17 seconds)
Cbc0010I After 1201000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1060.02 seconds)
Cbc0010I After 1202000 nodes, 102683 on tree, -72.595615 best solution, best possible -74.424557 (1060.90 seconds)
Cbc0010I After 1203000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1061.75 seconds)
Cbc0010I After 1204000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1062.58 seconds)
Cbc0010I After 1205000 nodes, 102683 on tree, -72.595615 best solution, best possible -74.424557 (1063.42 seconds)
Cbc0010I After 1206000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1064.26 seconds)
Cbc0010I After 1207000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1065.05 seconds)
Cbc0010I After 1208000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1065.90 seconds)
Cbc0010I After 1209000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1066.73 seconds)
Cbc0010I After 1210000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1067.49 seconds)
Cbc0010I After 1211000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1068.33 seconds)
Cbc0010I After 1212000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1069.20 seconds)
Cbc0010I After 1213000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1070.00 seconds)
Cbc0010I After 1214000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1070.81 seconds)
Cbc0010I After 1215000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1071.54 seconds)
Cbc0010I After 1216000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1072.42 seconds)
Cbc0010I After 1217000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1073.25 seconds)
Cbc0010I After 1218000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1074.05 seconds)
Cbc0010I After 1219000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1074.94 seconds)
Cbc0010I After 1220000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1075.82 seconds)
Cbc0010I After 1221000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1076.72 seconds)
Cbc0010I After 1222000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1077.54 seconds)
Cbc0010I After 1223000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1078.43 seconds)
Cbc0010I After 1224000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (1079.25 seconds)
Cbc0010I After 1225000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1080.08 seconds)
Cbc0010I After 1226000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1080.94 seconds)
Cbc0010I After 1227000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1081.69 seconds)
Cbc0010I After 1228000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1082.49 seconds)
Cbc0010I After 1229000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1083.36 seconds)
Cbc0010I After 1230000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1084.19 seconds)
Cbc0010I After 1231000 nodes, 102683 on tree, -72.595615 best solution, best possible -74.424557 (1084.91 seconds)
Cbc0010I After 1232000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1085.75 seconds)
Cbc0010I After 1233000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.424557 (1086.52 seconds)
Cbc0010I After 1234000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1087.26 seconds)
Cbc0010I After 1235000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1087.91 seconds)
Cbc0010I After 1236000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1088.59 seconds)
Cbc0010I After 1237000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1089.40 seconds)
Cbc0010I After 1238000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1090.13 seconds)
Cbc0010I After 1239000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1090.87 seconds)
Cbc0010I After 1240000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1091.63 seconds)
Cbc0010I After 1241000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1092.40 seconds)
Cbc0010I After 1242000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1093.08 seconds)
Cbc0010I After 1243000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1093.83 seconds)
Cbc0010I After 1244000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1094.49 seconds)
Cbc0010I After 1245000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1095.24 seconds)
Cbc0010I After 1246000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1096.03 seconds)
Cbc0010I After 1247000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1096.95 seconds)
Cbc0010I After 1248000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (1097.77 seconds)
Cbc0010I After 1249000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1098.55 seconds)
Cbc0010I After 1250000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1099.26 seconds)
Cbc0010I After 1251000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1100.01 seconds)
Cbc0010I After 1252000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1100.72 seconds)
Cbc0010I After 1253000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1101.58 seconds)
Cbc0010I After 1254000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1102.39 seconds)
Cbc0010I After 1255000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1103.12 seconds)
Cbc0010I After 1256000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.424557 (1103.85 seconds)
Cbc0010I After 1257000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1104.54 seconds)
Cbc0010I After 1258000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.424557 (1105.21 seconds)
Cbc0010I After 1259000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1105.82 seconds)
Cbc0010I After 1260000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.424557 (1106.48 seconds)
Cbc0010I After 1261000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1107.11 seconds)
Cbc0010I After 1262000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1107.95 seconds)
Cbc0010I After 1263000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1108.60 seconds)
Cbc0010I After 1264000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1109.23 seconds)
Cbc0010I After 1265000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1109.98 seconds)
Cbc0010I After 1266000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1110.76 seconds)
Cbc0010I After 1267000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.424557 (1111.46 seconds)
Cbc0010I After 1268000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1112.30 seconds)
Cbc0010I After 1269000 nodes, 102692 on tree, -72.595615 best solution, best possible -74.424557 (1113.17 seconds)
Cbc0010I After 1270000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.424557 (1113.89 seconds)
Cbc0010I After 1271000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1114.69 seconds)
Cbc0010I After 1272000 nodes, 102683 on tree, -72.595615 best solution, best possible -74.424557 (1115.53 seconds)
Cbc0010I After 1273000 nodes, 102685 on tree, -72.595615 best solution, best possible -74.424557 (1116.21 seconds)
Cbc0010I After 1274000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1117.02 seconds)
Cbc0010I After 1275000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.424557 (1117.75 seconds)
Cbc0010I After 1276000 nodes, 102690 on tree, -72.595615 best solution, best possible -74.424557 (1118.63 seconds)
Cbc0010I After 1277000 nodes, 102682 on tree, -72.595615 best solution, best possible -74.424557 (1119.47 seconds)
Cbc0010I After 1278000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1120.26 seconds)
Cbc0010I After 1279000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.424557 (1121.07 seconds)
Cbc0010I After 1280000 nodes, 102622 on tree, -72.595615 best solution, best possible -74.424557 (1121.88 seconds)
Cbc0010I After 1281000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.424557 (1122.70 seconds)
Cbc0010I After 1282000 nodes, 102578 on tree, -72.595615 best solution, best possible -74.424557 (1123.55 seconds)
Cbc0010I After 1283000 nodes, 102561 on tree, -72.595615 best solution, best possible -74.424557 (1124.40 seconds)
Cbc0010I After 1284000 nodes, 102553 on tree, -72.595615 best solution, best possible -74.424557 (1125.23 seconds)
Cbc0010I After 1285000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.424557 (1126.07 seconds)
Cbc0010I After 1286000 nodes, 102500 on tree, -72.595615 best solution, best possible -74.424557 (1127.02 seconds)
Cbc0010I After 1287000 nodes, 102482 on tree, -72.595615 best solution, best possible -74.424557 (1128.01 seconds)
Cbc0010I After 1288000 nodes, 102475 on tree, -72.595615 best solution, best possible -74.424557 (1128.83 seconds)
Cbc0010I After 1289000 nodes, 102467 on tree, -72.595615 best solution, best possible -74.424557 (1129.74 seconds)
Cbc0010I After 1290000 nodes, 102465 on tree, -72.595615 best solution, best possible -74.424557 (1130.61 seconds)
Cbc0010I After 1291000 nodes, 102448 on tree, -72.595615 best solution, best possible -74.424557 (1131.48 seconds)
Cbc0010I After 1292000 nodes, 102946 on tree, -72.595615 best solution, best possible -74.424557 (1132.60 seconds)
Cbc0010I After 1293000 nodes, 102929 on tree, -72.595615 best solution, best possible -74.424557 (1133.26 seconds)
Cbc0010I After 1294000 nodes, 102920 on tree, -72.595615 best solution, best possible -74.424557 (1133.92 seconds)
Cbc0010I After 1295000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.424557 (1134.72 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 27 rows 35 columns
Cbc0010I After 1296000 nodes, 102890 on tree, -72.595615 best solution, best possible -74.424557 (1135.51 seconds)
Cbc0010I After 1297000 nodes, 102870 on tree, -72.595615 best solution, best possible -74.424557 (1136.28 seconds)
Cbc0010I After 1298000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.424557 (1137.06 seconds)
Cbc0010I After 1299000 nodes, 102851 on tree, -72.595615 best solution, best possible -74.424557 (1137.85 seconds)
Cbc0010I After 1300000 nodes, 102841 on tree, -72.595615 best solution, best possible -74.424557 (1138.61 seconds)
Cbc0010I After 1301000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.424557 (1139.41 seconds)
Cbc0010I After 1302000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.424557 (1140.28 seconds)
Cbc0010I After 1303000 nodes, 102778 on tree, -72.595615 best solution, best possible -74.424557 (1141.08 seconds)
Cbc0010I After 1304000 nodes, 102769 on tree, -72.595615 best solution, best possible -74.424557 (1141.87 seconds)
Cbc0010I After 1305000 nodes, 102746 on tree, -72.595615 best solution, best possible -74.424557 (1142.69 seconds)
Cbc0010I After 1306000 nodes, 102725 on tree, -72.595615 best solution, best possible -74.424557 (1143.46 seconds)
Cbc0010I After 1307000 nodes, 102709 on tree, -72.595615 best solution, best possible -74.424557 (1144.22 seconds)
Cbc0010I After 1308000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1145.04 seconds)
Cbc0010I After 1309000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1145.81 seconds)
Cbc0010I After 1310000 nodes, 102651 on tree, -72.595615 best solution, best possible -74.424557 (1146.61 seconds)
Cbc0010I After 1311000 nodes, 102633 on tree, -72.595615 best solution, best possible -74.424557 (1147.45 seconds)
Cbc0010I After 1312000 nodes, 102613 on tree, -72.595615 best solution, best possible -74.424557 (1148.26 seconds)
Cbc0010I After 1313000 nodes, 102594 on tree, -72.595615 best solution, best possible -74.424557 (1149.08 seconds)
Cbc0010I After 1314000 nodes, 102580 on tree, -72.595615 best solution, best possible -74.424557 (1149.96 seconds)
Cbc0010I After 1315000 nodes, 102565 on tree, -72.595615 best solution, best possible -74.424557 (1150.79 seconds)
Cbc0010I After 1316000 nodes, 102549 on tree, -72.595615 best solution, best possible -74.424557 (1151.54 seconds)
Cbc0010I After 1317000 nodes, 102537 on tree, -72.595615 best solution, best possible -74.424557 (1152.40 seconds)
Cbc0010I After 1318000 nodes, 102518 on tree, -72.595615 best solution, best possible -74.424557 (1153.21 seconds)
Cbc0010I After 1319000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.424557 (1154.03 seconds)
Cbc0010I After 1320000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.424557 (1154.84 seconds)
Cbc0010I After 1321000 nodes, 102464 on tree, -72.595615 best solution, best possible -74.424557 (1155.64 seconds)
Cbc0010I After 1322000 nodes, 102435 on tree, -72.595615 best solution, best possible -74.424557 (1156.53 seconds)
Cbc0010I After 1323000 nodes, 102931 on tree, -72.595615 best solution, best possible -74.424557 (1157.62 seconds)
Cbc0010I After 1324000 nodes, 102911 on tree, -72.595615 best solution, best possible -74.424557 (1158.22 seconds)
Cbc0010I After 1325000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.424557 (1158.95 seconds)
Cbc0010I After 1326000 nodes, 102872 on tree, -72.595615 best solution, best possible -74.424557 (1159.81 seconds)
Cbc0010I After 1327000 nodes, 102850 on tree, -72.595615 best solution, best possible -74.424557 (1160.65 seconds)
Cbc0010I After 1328000 nodes, 102837 on tree, -72.595615 best solution, best possible -74.424557 (1161.42 seconds)
Cbc0010I After 1329000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.424557 (1162.27 seconds)
Cbc0010I After 1330000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.424557 (1163.07 seconds)
Cbc0010I After 1331000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.424557 (1163.81 seconds)
Cbc0010I After 1332000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.424557 (1164.57 seconds)
Cbc0010I After 1333000 nodes, 102767 on tree, -72.595615 best solution, best possible -74.424557 (1165.36 seconds)
Cbc0010I After 1334000 nodes, 102754 on tree, -72.595615 best solution, best possible -74.424557 (1166.20 seconds)
Cbc0010I After 1335000 nodes, 102741 on tree, -72.595615 best solution, best possible -74.424557 (1166.98 seconds)
Cbc0010I After 1336000 nodes, 102741 on tree, -72.595615 best solution, best possible -74.424557 (1167.68 seconds)
Cbc0010I After 1337000 nodes, 102731 on tree, -72.595615 best solution, best possible -74.424557 (1168.44 seconds)
Cbc0010I After 1338000 nodes, 102728 on tree, -72.595615 best solution, best possible -74.424557 (1169.25 seconds)
Cbc0010I After 1339000 nodes, 102716 on tree, -72.595615 best solution, best possible -74.424557 (1169.99 seconds)
Cbc0010I After 1340000 nodes, 102713 on tree, -72.595615 best solution, best possible -74.424557 (1170.68 seconds)
Cbc0010I After 1341000 nodes, 102709 on tree, -72.595615 best solution, best possible -74.424557 (1171.46 seconds)
Cbc0010I After 1342000 nodes, 102694 on tree, -72.595615 best solution, best possible -74.424557 (1172.32 seconds)
Cbc0010I After 1343000 nodes, 102680 on tree, -72.595615 best solution, best possible -74.424557 (1173.08 seconds)
Cbc0010I After 1344000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.424557 (1173.82 seconds)
Cbc0010I After 1345000 nodes, 102677 on tree, -72.595615 best solution, best possible -74.424557 (1174.59 seconds)
Cbc0010I After 1346000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1175.34 seconds)
Cbc0010I After 1347000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1176.16 seconds)
Cbc0010I After 1348000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1176.89 seconds)
Cbc0010I After 1349000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1177.72 seconds)
Cbc0010I After 1350000 nodes, 102679 on tree, -72.595615 best solution, best possible -74.424557 (1178.58 seconds)
Cbc0010I After 1351000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1179.46 seconds)
Cbc0010I After 1352000 nodes, 102676 on tree, -72.595615 best solution, best possible -74.424557 (1180.41 seconds)
Cbc0010I After 1353000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.424557 (1181.20 seconds)
Cbc0010I After 1354000 nodes, 102680 on tree, -72.595615 best solution, best possible -74.424557 (1181.99 seconds)
Cbc0010I After 1355000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1182.72 seconds)
Cbc0010I After 1356000 nodes, 102674 on tree, -72.595615 best solution, best possible -74.424557 (1183.55 seconds)
Cbc0010I After 1357000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.424557 (1184.24 seconds)
Cbc0010I After 1358000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1184.97 seconds)
Cbc0010I After 1359000 nodes, 102677 on tree, -72.595615 best solution, best possible -74.424557 (1185.84 seconds)
Cbc0010I After 1360000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1186.71 seconds)
Cbc0010I After 1361000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1187.58 seconds)
Cbc0010I After 1362000 nodes, 102676 on tree, -72.595615 best solution, best possible -74.424557 (1188.39 seconds)
Cbc0010I After 1363000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1189.23 seconds)
Cbc0010I After 1364000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1190.05 seconds)
Cbc0010I After 1365000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.424557 (1190.94 seconds)
Cbc0010I After 1366000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1191.82 seconds)
Cbc0010I After 1367000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1192.64 seconds)
Cbc0010I After 1368000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1193.46 seconds)
Cbc0010I After 1369000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1194.31 seconds)
Cbc0010I After 1370000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1195.02 seconds)
Cbc0010I After 1371000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1195.66 seconds)
Cbc0010I After 1372000 nodes, 102674 on tree, -72.595615 best solution, best possible -74.424557 (1196.35 seconds)
Cbc0010I After 1373000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1197.05 seconds)
Cbc0010I After 1374000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1197.97 seconds)
Cbc0010I After 1375000 nodes, 102677 on tree, -72.595615 best solution, best possible -74.424557 (1198.86 seconds)
Cbc0010I After 1376000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1199.71 seconds)
Cbc0010I After 1377000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1200.51 seconds)
Cbc0010I After 1378000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1201.28 seconds)
Cbc0010I After 1379000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1202.13 seconds)
Cbc0010I After 1380000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1202.85 seconds)
Cbc0010I After 1381000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1203.58 seconds)
Cbc0010I After 1382000 nodes, 102674 on tree, -72.595615 best solution, best possible -74.424557 (1204.32 seconds)
Cbc0010I After 1383000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1205.01 seconds)
Cbc0010I After 1384000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1205.91 seconds)
Cbc0010I After 1385000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1206.77 seconds)
Cbc0010I After 1386000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1207.58 seconds)
Cbc0010I After 1387000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1208.46 seconds)
Cbc0010I After 1388000 nodes, 102674 on tree, -72.595615 best solution, best possible -74.424557 (1209.33 seconds)
Cbc0010I After 1389000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1210.21 seconds)
Cbc0010I After 1390000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1211.10 seconds)
Cbc0010I After 1391000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1211.97 seconds)
Cbc0010I After 1392000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1212.79 seconds)
Cbc0010I After 1393000 nodes, 102675 on tree, -72.595615 best solution, best possible -74.424557 (1213.59 seconds)
Cbc0010I After 1394000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1214.42 seconds)
Cbc0010I After 1395000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1215.16 seconds)
Cbc0010I After 1396000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1215.98 seconds)
Cbc0010I After 1397000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1216.91 seconds)
Cbc0010I After 1398000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1217.69 seconds)
Cbc0010I After 1399000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1218.56 seconds)
Cbc0010I After 1400000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1219.43 seconds)
Cbc0010I After 1401000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1220.24 seconds)
Cbc0010I After 1402000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1221.08 seconds)
Cbc0010I After 1403000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1222.04 seconds)
Cbc0010I After 1404000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1222.89 seconds)
Cbc0010I After 1405000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1223.58 seconds)
Cbc0010I After 1406000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1224.36 seconds)
Cbc0010I After 1407000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1225.19 seconds)
Cbc0010I After 1408000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1226.15 seconds)
Cbc0010I After 1409000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1226.87 seconds)
Cbc0010I After 1410000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1227.65 seconds)
Cbc0010I After 1411000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1228.29 seconds)
Cbc0010I After 1412000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1229.06 seconds)
Cbc0010I After 1413000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1229.92 seconds)
Cbc0010I After 1414000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1230.63 seconds)
Cbc0010I After 1415000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1231.36 seconds)
Cbc0010I After 1416000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1232.11 seconds)
Cbc0010I After 1417000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1232.75 seconds)
Cbc0010I After 1418000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1233.39 seconds)
Cbc0010I After 1419000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1234.08 seconds)
Cbc0010I After 1420000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1234.96 seconds)
Cbc0010I After 1421000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1235.80 seconds)
Cbc0010I After 1422000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1236.68 seconds)
Cbc0010I After 1423000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1237.64 seconds)
Cbc0010I After 1424000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1238.51 seconds)
Cbc0010I After 1425000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1239.22 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 31 rows 38 columns
Cbc0010I After 1426000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1240.12 seconds)
Cbc0010I After 1427000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1240.96 seconds)
Cbc0010I After 1428000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1241.85 seconds)
Cbc0010I After 1429000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1242.74 seconds)
Cbc0010I After 1430000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1243.51 seconds)
Cbc0010I After 1431000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1244.37 seconds)
Cbc0010I After 1432000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1245.15 seconds)
Cbc0010I After 1433000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1246.01 seconds)
Cbc0010I After 1434000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1246.85 seconds)
Cbc0010I After 1435000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1247.53 seconds)
Cbc0010I After 1436000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1248.34 seconds)
Cbc0010I After 1437000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1249.02 seconds)
Cbc0010I After 1438000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1249.77 seconds)
Cbc0010I After 1439000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1250.50 seconds)
Cbc0010I After 1440000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1251.28 seconds)
Cbc0010I After 1441000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1252.15 seconds)
Cbc0010I After 1442000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1252.98 seconds)
Cbc0010I After 1443000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.424557 (1253.89 seconds)
Cbc0010I After 1444000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1254.67 seconds)
Cbc0010I After 1445000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1255.41 seconds)
Cbc0010I After 1446000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1256.05 seconds)
Cbc0010I After 1447000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1256.86 seconds)
Cbc0010I After 1448000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1257.74 seconds)
Cbc0010I After 1449000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1258.69 seconds)
Cbc0010I After 1450000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1259.49 seconds)
Cbc0010I After 1451000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1260.41 seconds)
Cbc0010I After 1452000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1261.29 seconds)
Cbc0010I After 1453000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1262.06 seconds)
Cbc0010I After 1454000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1262.85 seconds)
Cbc0010I After 1455000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1263.75 seconds)
Cbc0010I After 1456000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1264.41 seconds)
Cbc0010I After 1457000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1265.18 seconds)
Cbc0010I After 1458000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1266.11 seconds)
Cbc0010I After 1459000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1266.87 seconds)
Cbc0010I After 1460000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1267.65 seconds)
Cbc0010I After 1461000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1268.50 seconds)
Cbc0010I After 1462000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1269.33 seconds)
Cbc0010I After 1463000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1270.13 seconds)
Cbc0010I After 1464000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1270.98 seconds)
Cbc0010I After 1465000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1271.82 seconds)
Cbc0010I After 1466000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1272.53 seconds)
Cbc0010I After 1467000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1273.40 seconds)
Cbc0010I After 1468000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1274.21 seconds)
Cbc0010I After 1469000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1275.11 seconds)
Cbc0010I After 1470000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1276.01 seconds)
Cbc0010I After 1471000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.424557 (1276.91 seconds)
Cbc0010I After 1472000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1277.77 seconds)
Cbc0010I After 1473000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1278.65 seconds)
Cbc0010I After 1474000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1279.47 seconds)
Cbc0010I After 1475000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1280.30 seconds)
Cbc0010I After 1476000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1281.23 seconds)
Cbc0010I After 1477000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1282.01 seconds)
Cbc0010I After 1478000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1282.77 seconds)
Cbc0010I After 1479000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1283.58 seconds)
Cbc0010I After 1480000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1284.35 seconds)
Cbc0010I After 1481000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1285.19 seconds)
Cbc0010I After 1482000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1286.03 seconds)
Cbc0010I After 1483000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1286.75 seconds)
Cbc0010I After 1484000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1287.49 seconds)
Cbc0010I After 1485000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1288.39 seconds)
Cbc0010I After 1486000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1289.22 seconds)
Cbc0010I After 1487000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1290.08 seconds)
Cbc0010I After 1488000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1290.80 seconds)
Cbc0010I After 1489000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1291.46 seconds)
Cbc0010I After 1490000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1292.23 seconds)
Cbc0010I After 1491000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1293.10 seconds)
Cbc0010I After 1492000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1294.00 seconds)
Cbc0010I After 1493000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1294.89 seconds)
Cbc0010I After 1494000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1295.76 seconds)
Cbc0010I After 1495000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1296.50 seconds)
Cbc0010I After 1496000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1297.26 seconds)
Cbc0010I After 1497000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1297.99 seconds)
Cbc0010I After 1498000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1298.72 seconds)
Cbc0010I After 1499000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1299.50 seconds)
Cbc0010I After 1500000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1300.22 seconds)
Cbc0010I After 1501000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1301.00 seconds)
Cbc0010I After 1502000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1301.66 seconds)
Cbc0010I After 1503000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1302.44 seconds)
Cbc0010I After 1504000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1303.23 seconds)
Cbc0010I After 1505000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1304.08 seconds)
Cbc0010I After 1506000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1304.90 seconds)
Cbc0010I After 1507000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1305.61 seconds)
Cbc0010I After 1508000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1306.46 seconds)
Cbc0010I After 1509000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1307.42 seconds)
Cbc0010I After 1510000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1308.39 seconds)
Cbc0010I After 1511000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1309.32 seconds)
Cbc0010I After 1512000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1310.22 seconds)
Cbc0010I After 1513000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1311.08 seconds)
Cbc0010I After 1514000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1311.96 seconds)
Cbc0010I After 1515000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1312.85 seconds)
Cbc0010I After 1516000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1313.66 seconds)
Cbc0010I After 1517000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1314.55 seconds)
Cbc0010I After 1518000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1315.33 seconds)
Cbc0010I After 1519000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1316.12 seconds)
Cbc0010I After 1520000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1317.01 seconds)
Cbc0010I After 1521000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1317.92 seconds)
Cbc0010I After 1522000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1318.68 seconds)
Cbc0010I After 1523000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1319.45 seconds)
Cbc0010I After 1524000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1320.25 seconds)
Cbc0010I After 1525000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1321.10 seconds)
Cbc0010I After 1526000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1321.97 seconds)
Cbc0010I After 1527000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1322.81 seconds)
Cbc0010I After 1528000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1323.78 seconds)
Cbc0010I After 1529000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1324.72 seconds)
Cbc0010I After 1530000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1325.57 seconds)
Cbc0010I After 1531000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1326.44 seconds)
Cbc0010I After 1532000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1327.39 seconds)
Cbc0010I After 1533000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1328.33 seconds)
Cbc0010I After 1534000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1329.19 seconds)
Cbc0010I After 1535000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1330.10 seconds)
Cbc0010I After 1536000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1331.02 seconds)
Cbc0010I After 1537000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1332.03 seconds)
Cbc0010I After 1538000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1332.87 seconds)
Cbc0010I After 1539000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1333.74 seconds)
Cbc0010I After 1540000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1334.55 seconds)
Cbc0010I After 1541000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1335.35 seconds)
Cbc0010I After 1542000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1336.05 seconds)
Cbc0010I After 1543000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1336.74 seconds)
Cbc0010I After 1544000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1337.64 seconds)
Cbc0010I After 1545000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1338.56 seconds)
Cbc0010I After 1546000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1339.30 seconds)
Cbc0010I After 1547000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1340.10 seconds)
Cbc0010I After 1548000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1340.83 seconds)
Cbc0010I After 1549000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1341.62 seconds)
Cbc0010I After 1550000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1342.36 seconds)
Cbc0010I After 1551000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1343.05 seconds)
Cbc0010I After 1552000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1343.88 seconds)
Cbc0010I After 1553000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1344.69 seconds)
Cbc0010I After 1554000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1345.65 seconds)
Cbc0010I After 1555000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1346.54 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 27 rows 36 columns
Cbc0010I After 1556000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1347.45 seconds)
Cbc0010I After 1557000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1348.29 seconds)
Cbc0010I After 1558000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1349.26 seconds)
Cbc0010I After 1559000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1350.05 seconds)
Cbc0010I After 1560000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1350.87 seconds)
Cbc0010I After 1561000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1351.74 seconds)
Cbc0010I After 1562000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1352.48 seconds)
Cbc0010I After 1563000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1353.23 seconds)
Cbc0010I After 1564000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1354.05 seconds)
Cbc0010I After 1565000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1354.86 seconds)
Cbc0010I After 1566000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1355.61 seconds)
Cbc0010I After 1567000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1356.30 seconds)
Cbc0010I After 1568000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1357.03 seconds)
Cbc0010I After 1569000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1357.82 seconds)
Cbc0010I After 1570000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1358.70 seconds)
Cbc0010I After 1571000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.424557 (1359.61 seconds)
Cbc0010I After 1572000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1360.46 seconds)
Cbc0010I After 1573000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1361.37 seconds)
Cbc0010I After 1574000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1362.18 seconds)
Cbc0010I After 1575000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1363.02 seconds)
Cbc0010I After 1576000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1363.80 seconds)
Cbc0010I After 1577000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1364.67 seconds)
Cbc0010I After 1578000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1365.45 seconds)
Cbc0010I After 1579000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1366.24 seconds)
Cbc0010I After 1580000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1367.10 seconds)
Cbc0010I After 1581000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1367.93 seconds)
Cbc0010I After 1582000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1368.78 seconds)
Cbc0010I After 1583000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1369.62 seconds)
Cbc0010I After 1584000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1370.54 seconds)
Cbc0010I After 1585000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1371.47 seconds)
Cbc0010I After 1586000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1372.30 seconds)
Cbc0010I After 1587000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1373.03 seconds)
Cbc0010I After 1588000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1373.86 seconds)
Cbc0010I After 1589000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1374.74 seconds)
Cbc0010I After 1590000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1375.56 seconds)
Cbc0010I After 1591000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1376.44 seconds)
Cbc0010I After 1592000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1377.22 seconds)
Cbc0010I After 1593000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1378.04 seconds)
Cbc0010I After 1594000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1378.99 seconds)
Cbc0010I After 1595000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1379.88 seconds)
Cbc0010I After 1596000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1380.60 seconds)
Cbc0010I After 1597000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1381.43 seconds)
Cbc0010I After 1598000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1382.13 seconds)
Cbc0010I After 1599000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1383.07 seconds)
Cbc0010I After 1600000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1384.02 seconds)
Cbc0010I After 1601000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1384.85 seconds)
Cbc0010I After 1602000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1385.77 seconds)
Cbc0010I After 1603000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1386.50 seconds)
Cbc0010I After 1604000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1387.28 seconds)
Cbc0010I After 1605000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1388.06 seconds)
Cbc0010I After 1606000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1388.88 seconds)
Cbc0010I After 1607000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1389.71 seconds)
Cbc0010I After 1608000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1390.67 seconds)
Cbc0010I After 1609000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.424557 (1391.51 seconds)
Cbc0010I After 1610000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1392.34 seconds)
Cbc0010I After 1611000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1393.23 seconds)
Cbc0010I After 1612000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1394.05 seconds)
Cbc0010I After 1613000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1394.84 seconds)
Cbc0010I After 1614000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1395.66 seconds)
Cbc0010I After 1615000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1396.38 seconds)
Cbc0010I After 1616000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1397.15 seconds)
Cbc0010I After 1617000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1397.92 seconds)
Cbc0010I After 1618000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1398.78 seconds)
Cbc0010I After 1619000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1399.51 seconds)
Cbc0010I After 1620000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1400.39 seconds)
Cbc0010I After 1621000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1401.12 seconds)
Cbc0010I After 1622000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1401.95 seconds)
Cbc0010I After 1623000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1402.81 seconds)
Cbc0010I After 1624000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1403.60 seconds)
Cbc0010I After 1625000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1404.40 seconds)
Cbc0010I After 1626000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1405.10 seconds)
Cbc0010I After 1627000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1405.75 seconds)
Cbc0010I After 1628000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1406.55 seconds)
Cbc0010I After 1629000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1407.27 seconds)
Cbc0010I After 1630000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1408.01 seconds)
Cbc0010I After 1631000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1408.75 seconds)
Cbc0010I After 1632000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1409.49 seconds)
Cbc0010I After 1633000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1410.17 seconds)
Cbc0010I After 1634000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1411.02 seconds)
Cbc0010I After 1635000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1411.88 seconds)
Cbc0010I After 1636000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1412.74 seconds)
Cbc0010I After 1637000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1413.53 seconds)
Cbc0010I After 1638000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1414.32 seconds)
Cbc0010I After 1639000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1415.05 seconds)
Cbc0010I After 1640000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1415.89 seconds)
Cbc0010I After 1641000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1416.85 seconds)
Cbc0010I After 1642000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1417.73 seconds)
Cbc0010I After 1643000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1418.56 seconds)
Cbc0010I After 1644000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1419.30 seconds)
Cbc0010I After 1645000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1420.11 seconds)
Cbc0010I After 1646000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1420.91 seconds)
Cbc0010I After 1647000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1421.71 seconds)
Cbc0010I After 1648000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1422.64 seconds)
Cbc0010I After 1649000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1423.40 seconds)
Cbc0010I After 1650000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1424.39 seconds)
Cbc0010I After 1651000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1425.32 seconds)
Cbc0010I After 1652000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1426.16 seconds)
Cbc0010I After 1653000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1426.92 seconds)
Cbc0010I After 1654000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1427.76 seconds)
Cbc0010I After 1655000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1428.55 seconds)
Cbc0010I After 1656000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1429.42 seconds)
Cbc0010I After 1657000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1430.24 seconds)
Cbc0010I After 1658000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1430.98 seconds)
Cbc0010I After 1659000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1431.78 seconds)
Cbc0010I After 1660000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1432.61 seconds)
Cbc0010I After 1661000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1433.41 seconds)
Cbc0010I After 1662000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1434.17 seconds)
Cbc0010I After 1663000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1434.92 seconds)
Cbc0010I After 1664000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1435.72 seconds)
Cbc0010I After 1665000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1436.47 seconds)
Cbc0010I After 1666000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1437.18 seconds)
Cbc0010I After 1667000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1437.97 seconds)
Cbc0010I After 1668000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1438.74 seconds)
Cbc0010I After 1669000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1439.56 seconds)
Cbc0010I After 1670000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1440.38 seconds)
Cbc0010I After 1671000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1441.24 seconds)
Cbc0010I After 1672000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1442.07 seconds)
Cbc0010I After 1673000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1442.81 seconds)
Cbc0010I After 1674000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1443.59 seconds)
Cbc0010I After 1675000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1444.39 seconds)
Cbc0010I After 1676000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1445.25 seconds)
Cbc0010I After 1677000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1446.00 seconds)
Cbc0010I After 1678000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1446.88 seconds)
Cbc0010I After 1679000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1447.78 seconds)
Cbc0010I After 1680000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1448.53 seconds)
Cbc0010I After 1681000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1449.25 seconds)
Cbc0010I After 1682000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1450.03 seconds)
Cbc0010I After 1683000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1450.85 seconds)
Cbc0010I After 1684000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1451.62 seconds)
Cbc0010I After 1685000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1452.46 seconds)
Cbc0010I After 1686000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1453.31 seconds)
Cbc0010I After 1687000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1454.19 seconds)
Cbc0010I After 1688000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1455.06 seconds)
Cbc0010I After 1689000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1455.90 seconds)
Cbc0010I After 1690000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1456.73 seconds)
Cbc0010I After 1691000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1457.39 seconds)
Cbc0010I After 1692000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1458.16 seconds)
Cbc0010I After 1693000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1458.89 seconds)
Cbc0010I After 1694000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1459.61 seconds)
Cbc0010I After 1695000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1460.37 seconds)
Cbc0010I After 1696000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1461.13 seconds)
Cbc0010I After 1697000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1461.91 seconds)
Cbc0010I After 1698000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1462.80 seconds)
Cbc0010I After 1699000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1463.59 seconds)
Cbc0010I After 1700000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1464.43 seconds)
Cbc0010I After 1701000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1465.27 seconds)
Cbc0010I After 1702000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1466.11 seconds)
Cbc0010I After 1703000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1466.95 seconds)
Cbc0010I After 1704000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1467.71 seconds)
Cbc0010I After 1705000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1468.49 seconds)
Cbc0010I After 1706000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1469.22 seconds)
Cbc0010I After 1707000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1469.99 seconds)
Cbc0010I After 1708000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1470.79 seconds)
Cbc0010I After 1709000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1471.52 seconds)
Cbc0010I After 1710000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1472.22 seconds)
Cbc0010I After 1711000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1473.07 seconds)
Cbc0010I After 1712000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1473.85 seconds)
Cbc0010I After 1713000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1474.80 seconds)
Cbc0010I After 1714000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1475.63 seconds)
Cbc0010I After 1715000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1476.39 seconds)
Cbc0010I After 1716000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1477.17 seconds)
Cbc0010I After 1717000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1478.10 seconds)
Cbc0010I After 1718000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1478.82 seconds)
Cbc0010I After 1719000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1479.60 seconds)
Cbc0010I After 1720000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1480.36 seconds)
Cbc0010I After 1721000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1481.04 seconds)
Cbc0010I After 1722000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1481.76 seconds)
Cbc0010I After 1723000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1482.39 seconds)
Cbc0010I After 1724000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1483.04 seconds)
Cbc0010I After 1725000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1483.84 seconds)
Cbc0010I After 1726000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1484.73 seconds)
Cbc0010I After 1727000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1485.44 seconds)
Cbc0010I After 1728000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1486.17 seconds)
Cbc0010I After 1729000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1486.95 seconds)
Cbc0010I After 1730000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1487.80 seconds)
Cbc0010I After 1731000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1488.44 seconds)
Cbc0010I After 1732000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1489.17 seconds)
Cbc0010I After 1733000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1489.94 seconds)
Cbc0010I After 1734000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1490.64 seconds)
Cbc0010I After 1735000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1491.49 seconds)
Cbc0010I After 1736000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1492.35 seconds)
Cbc0010I After 1737000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1493.30 seconds)
Cbc0010I After 1738000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1494.15 seconds)
Cbc0010I After 1739000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1495.09 seconds)
Cbc0010I After 1740000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1496.05 seconds)
Cbc0010I After 1741000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1496.87 seconds)
Cbc0010I After 1742000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1497.62 seconds)
Cbc0010I After 1743000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1498.28 seconds)
Cbc0010I After 1744000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1499.14 seconds)
Cbc0010I After 1745000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1499.86 seconds)
Cbc0010I After 1746000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1500.77 seconds)
Cbc0010I After 1747000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1501.57 seconds)
Cbc0010I After 1748000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1502.42 seconds)
Cbc0010I After 1749000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1503.20 seconds)
Cbc0010I After 1750000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1503.97 seconds)
Cbc0010I After 1751000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1504.74 seconds)
Cbc0010I After 1752000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1505.59 seconds)
Cbc0010I After 1753000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1506.38 seconds)
Cbc0010I After 1754000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1507.16 seconds)
Cbc0010I After 1755000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1507.90 seconds)
Cbc0010I After 1756000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1508.54 seconds)
Cbc0010I After 1757000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1509.19 seconds)
Cbc0010I After 1758000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1509.84 seconds)
Cbc0010I After 1759000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1510.65 seconds)
Cbc0010I After 1760000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1511.35 seconds)
Cbc0010I After 1761000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1512.11 seconds)
Cbc0010I After 1762000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1512.84 seconds)
Cbc0010I After 1763000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1513.51 seconds)
Cbc0010I After 1764000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1514.37 seconds)
Cbc0010I After 1765000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1515.24 seconds)
Cbc0010I After 1766000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1516.06 seconds)
Cbc0010I After 1767000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1516.93 seconds)
Cbc0010I After 1768000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1517.73 seconds)
Cbc0010I After 1769000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1518.57 seconds)
Cbc0010I After 1770000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1519.54 seconds)
Cbc0010I After 1771000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1520.43 seconds)
Cbc0010I After 1772000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1521.20 seconds)
Cbc0010I After 1773000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1522.11 seconds)
Cbc0010I After 1774000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1522.83 seconds)
Cbc0010I After 1775000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1523.55 seconds)
Cbc0010I After 1776000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1524.26 seconds)
Cbc0010I After 1777000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1525.08 seconds)
Cbc0010I After 1778000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1526.02 seconds)
Cbc0010I After 1779000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1526.82 seconds)
Cbc0010I After 1780000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1527.73 seconds)
Cbc0010I After 1781000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1528.45 seconds)
Cbc0010I After 1782000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1529.24 seconds)
Cbc0010I After 1783000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1530.12 seconds)
Cbc0010I After 1784000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1530.94 seconds)
Cbc0010I After 1785000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.424557 (1531.66 seconds)
Cbc0010I After 1786000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1532.61 seconds)
Cbc0010I After 1787000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1533.41 seconds)
Cbc0010I After 1788000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1534.15 seconds)
Cbc0010I After 1789000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1534.98 seconds)
Cbc0010I After 1790000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1535.76 seconds)
Cbc0010I After 1791000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1536.58 seconds)
Cbc0010I After 1792000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1537.46 seconds)
Cbc0010I After 1793000 nodes, 102660 on tree, -72.595615 best solution, best possible -74.424557 (1538.36 seconds)
Cbc0010I After 1794000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1539.16 seconds)
Cbc0010I After 1795000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1540.01 seconds)
Cbc0010I After 1796000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1540.70 seconds)
Cbc0010I After 1797000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1541.60 seconds)
Cbc0010I After 1798000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1542.52 seconds)
Cbc0010I After 1799000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.424557 (1543.35 seconds)
Cbc0010I After 1800000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1544.30 seconds)
Cbc0010I After 1801000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1545.11 seconds)
Cbc0010I After 1802000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1546.03 seconds)
Cbc0010I After 1803000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1546.90 seconds)
Cbc0010I After 1804000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1547.71 seconds)
Cbc0010I After 1805000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1548.53 seconds)
Cbc0010I After 1806000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1549.36 seconds)
Cbc0010I After 1807000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1550.12 seconds)
Cbc0010I After 1808000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1550.78 seconds)
Cbc0010I After 1809000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1551.49 seconds)
Cbc0010I After 1810000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1552.31 seconds)
Cbc0010I After 1811000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1553.18 seconds)
Cbc0010I After 1812000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1553.94 seconds)
Cbc0010I After 1813000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1554.67 seconds)
Cbc0010I After 1814000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1555.43 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 33 rows 42 columns
Cbc0010I After 1815000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.424557 (1556.19 seconds)
Cbc0010I After 1816000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1556.86 seconds)
Cbc0010I After 1817000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1557.59 seconds)
Cbc0010I After 1818000 nodes, 102659 on tree, -72.595615 best solution, best possible -74.424557 (1558.56 seconds)
Cbc0010I After 1819000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1559.43 seconds)
Cbc0010I After 1820000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.424557 (1560.33 seconds)
Cbc0010I After 1821000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.424557 (1561.04 seconds)
Cbc0010I After 1822000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.424557 (1561.80 seconds)
Cbc0010I After 1823000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1562.62 seconds)
Cbc0010I After 1824000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1563.36 seconds)
Cbc0010I After 1825000 nodes, 102671 on tree, -72.595615 best solution, best possible -74.424557 (1564.12 seconds)
Cbc0010I After 1826000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1565.09 seconds)
Cbc0010I After 1827000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.424557 (1565.93 seconds)
Cbc0010I After 1828000 nodes, 102670 on tree, -72.595615 best solution, best possible -74.424557 (1566.77 seconds)
Cbc0010I After 1829000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1567.51 seconds)
Cbc0010I After 1830000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1568.30 seconds)
Cbc0010I After 1831000 nodes, 102663 on tree, -72.595615 best solution, best possible -74.424557 (1569.11 seconds)
Cbc0010I After 1832000 nodes, 102665 on tree, -72.595615 best solution, best possible -74.424557 (1569.86 seconds)
Cbc0010I After 1833000 nodes, 102661 on tree, -72.595615 best solution, best possible -74.424557 (1570.81 seconds)
Cbc0010I After 1834000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.424557 (1571.66 seconds)
Cbc0010I After 1835000 nodes, 102657 on tree, -72.595615 best solution, best possible -74.424557 (1572.51 seconds)
Cbc0010I After 1836000 nodes, 102651 on tree, -72.595615 best solution, best possible -74.424557 (1573.35 seconds)
Cbc0010I After 1837000 nodes, 102645 on tree, -72.595615 best solution, best possible -74.424557 (1574.16 seconds)
Cbc0010I After 1838000 nodes, 102636 on tree, -72.595615 best solution, best possible -74.424557 (1574.97 seconds)
Cbc0010I After 1839000 nodes, 102629 on tree, -72.595615 best solution, best possible -74.424557 (1575.79 seconds)
Cbc0010I After 1840000 nodes, 102622 on tree, -72.595615 best solution, best possible -74.424557 (1576.66 seconds)
Cbc0010I After 1841000 nodes, 102614 on tree, -72.595615 best solution, best possible -74.424557 (1577.48 seconds)
Cbc0010I After 1842000 nodes, 102607 on tree, -72.595615 best solution, best possible -74.424557 (1578.24 seconds)
Cbc0010I After 1843000 nodes, 102593 on tree, -72.595615 best solution, best possible -74.424557 (1579.03 seconds)
Cbc0010I After 1844000 nodes, 102577 on tree, -72.595615 best solution, best possible -74.424557 (1579.88 seconds)
Cbc0010I After 1845000 nodes, 102551 on tree, -72.595615 best solution, best possible -74.424557 (1580.74 seconds)
Cbc0010I After 1846000 nodes, 102536 on tree, -72.595615 best solution, best possible -74.424557 (1581.54 seconds)
Cbc0010I After 1847000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.424557 (1582.41 seconds)
Cbc0010I After 1848000 nodes, 102473 on tree, -72.595615 best solution, best possible -74.424557 (1583.30 seconds)
Cbc0010I After 1849000 nodes, 102439 on tree, -72.595615 best solution, best possible -74.424557 (1584.10 seconds)
Cbc0010I After 1850000 nodes, 102934 on tree, -72.595615 best solution, best possible -74.421034 (1585.51 seconds)
Cbc0010I After 1851000 nodes, 102929 on tree, -72.595615 best solution, best possible -74.421034 (1586.10 seconds)
Cbc0010I After 1852000 nodes, 102933 on tree, -72.595615 best solution, best possible -74.421034 (1586.88 seconds)
Cbc0010I After 1853000 nodes, 102921 on tree, -72.595615 best solution, best possible -74.421034 (1587.53 seconds)
Cbc0010I After 1854000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.421034 (1588.30 seconds)
Cbc0010I After 1855000 nodes, 102876 on tree, -72.595615 best solution, best possible -74.421034 (1589.22 seconds)
Cbc0010I After 1856000 nodes, 102846 on tree, -72.595615 best solution, best possible -74.421034 (1590.09 seconds)
Cbc0010I After 1857000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.421034 (1590.92 seconds)
Cbc0010I After 1858000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.421034 (1591.71 seconds)
Cbc0010I After 1859000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.421034 (1592.54 seconds)
Cbc0010I After 1860000 nodes, 102779 on tree, -72.595615 best solution, best possible -74.421034 (1593.27 seconds)
Cbc0010I After 1861000 nodes, 102756 on tree, -72.595615 best solution, best possible -74.421034 (1594.14 seconds)
Cbc0010I After 1862000 nodes, 102732 on tree, -72.595615 best solution, best possible -74.421034 (1594.97 seconds)
Cbc0010I After 1863000 nodes, 102681 on tree, -72.595615 best solution, best possible -74.421034 (1595.82 seconds)
Cbc0010I After 1864000 nodes, 102645 on tree, -72.595615 best solution, best possible -74.421034 (1596.63 seconds)
Cbc0010I After 1865000 nodes, 102624 on tree, -72.595615 best solution, best possible -74.421034 (1597.54 seconds)
Cbc0010I After 1866000 nodes, 102610 on tree, -72.595615 best solution, best possible -74.421034 (1598.43 seconds)
Cbc0010I After 1867000 nodes, 102598 on tree, -72.595615 best solution, best possible -74.421034 (1599.23 seconds)
Cbc0010I After 1868000 nodes, 102591 on tree, -72.595615 best solution, best possible -74.421034 (1599.98 seconds)
Cbc0010I After 1869000 nodes, 102568 on tree, -72.595615 best solution, best possible -74.421034 (1600.79 seconds)
Cbc0010I After 1870000 nodes, 102559 on tree, -72.595615 best solution, best possible -74.421034 (1601.58 seconds)
Cbc0010I After 1871000 nodes, 102534 on tree, -72.595615 best solution, best possible -74.421034 (1602.43 seconds)
Cbc0010I After 1872000 nodes, 102528 on tree, -72.595615 best solution, best possible -74.421034 (1603.17 seconds)
Cbc0010I After 1873000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.421034 (1604.03 seconds)
Cbc0010I After 1874000 nodes, 102490 on tree, -72.595615 best solution, best possible -74.421034 (1604.93 seconds)
Cbc0010I After 1875000 nodes, 102472 on tree, -72.595615 best solution, best possible -74.421034 (1605.87 seconds)
Cbc0010I After 1876000 nodes, 102428 on tree, -72.595615 best solution, best possible -74.421034 (1606.71 seconds)
Cbc0010I After 1877000 nodes, 102396 on tree, -72.595615 best solution, best possible -74.421034 (1607.59 seconds)
Cbc0010I After 1878000 nodes, 102894 on tree, -72.595615 best solution, best possible -74.417915 (1609.46 seconds)
Cbc0010I After 1879000 nodes, 102892 on tree, -72.595615 best solution, best possible -74.417915 (1610.13 seconds)
Cbc0010I After 1880000 nodes, 102893 on tree, -72.595615 best solution, best possible -74.417915 (1610.90 seconds)
Cbc0010I After 1881000 nodes, 102885 on tree, -72.595615 best solution, best possible -74.417915 (1611.62 seconds)
Cbc0010I After 1882000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.417915 (1612.42 seconds)
Cbc0010I After 1883000 nodes, 102846 on tree, -72.595615 best solution, best possible -74.417915 (1613.20 seconds)
Cbc0010I After 1884000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.417915 (1613.93 seconds)
Cbc0010I After 1885000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.417915 (1614.85 seconds)
Cbc0010I After 1886000 nodes, 102776 on tree, -72.595615 best solution, best possible -74.417915 (1615.68 seconds)
Cbc0010I After 1887000 nodes, 102750 on tree, -72.595615 best solution, best possible -74.417915 (1616.49 seconds)
Cbc0010I After 1888000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.417915 (1617.29 seconds)
Cbc0010I After 1889000 nodes, 102728 on tree, -72.595615 best solution, best possible -74.417915 (1618.24 seconds)
Cbc0010I After 1890000 nodes, 102698 on tree, -72.595615 best solution, best possible -74.417915 (1619.10 seconds)
Cbc0010I After 1891000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.417915 (1620.01 seconds)
Cbc0010I After 1892000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.417915 (1620.81 seconds)
Cbc0010I After 1893000 nodes, 102648 on tree, -72.595615 best solution, best possible -74.417915 (1621.70 seconds)
Cbc0010I After 1894000 nodes, 102630 on tree, -72.595615 best solution, best possible -74.417915 (1622.60 seconds)
Cbc0010I After 1895000 nodes, 102619 on tree, -72.595615 best solution, best possible -74.417915 (1623.47 seconds)
Cbc0010I After 1896000 nodes, 102622 on tree, -72.595615 best solution, best possible -74.417915 (1624.24 seconds)
Cbc0010I After 1897000 nodes, 102585 on tree, -72.595615 best solution, best possible -74.417915 (1625.06 seconds)
Cbc0010I After 1898000 nodes, 102561 on tree, -72.595615 best solution, best possible -74.417915 (1625.92 seconds)
Cbc0010I After 1899000 nodes, 102552 on tree, -72.595615 best solution, best possible -74.417915 (1626.69 seconds)
Cbc0010I After 1900000 nodes, 102521 on tree, -72.595615 best solution, best possible -74.417915 (1627.57 seconds)
Cbc0010I After 1901000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.417915 (1628.42 seconds)
Cbc0010I After 1902000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.417915 (1629.30 seconds)
Cbc0010I After 1903000 nodes, 102453 on tree, -72.595615 best solution, best possible -74.417915 (1630.11 seconds)
Cbc0010I After 1904000 nodes, 102953 on tree, -72.595615 best solution, best possible -74.417915 (1631.17 seconds)
Cbc0010I After 1905000 nodes, 102936 on tree, -72.595615 best solution, best possible -74.417915 (1631.71 seconds)
Cbc0010I After 1906000 nodes, 102908 on tree, -72.595615 best solution, best possible -74.417915 (1632.44 seconds)
Cbc0010I After 1907000 nodes, 102871 on tree, -72.595615 best solution, best possible -74.417915 (1633.25 seconds)
Cbc0010I After 1908000 nodes, 102839 on tree, -72.595615 best solution, best possible -74.417915 (1634.02 seconds)
Cbc0010I After 1909000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.417915 (1634.85 seconds)
Cbc0010I After 1910000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.417915 (1635.68 seconds)
Cbc0010I After 1911000 nodes, 102750 on tree, -72.595615 best solution, best possible -74.417915 (1636.54 seconds)
Cbc0010I After 1912000 nodes, 102729 on tree, -72.595615 best solution, best possible -74.417915 (1637.32 seconds)
Cbc0010I After 1913000 nodes, 102720 on tree, -72.595615 best solution, best possible -74.417915 (1638.16 seconds)
Cbc0010I After 1914000 nodes, 102687 on tree, -72.595615 best solution, best possible -74.417915 (1639.08 seconds)
Cbc0010I After 1915000 nodes, 102654 on tree, -72.595615 best solution, best possible -74.417915 (1639.92 seconds)
Cbc0010I After 1916000 nodes, 102620 on tree, -72.595615 best solution, best possible -74.417915 (1640.81 seconds)
Cbc0010I After 1917000 nodes, 102577 on tree, -72.595615 best solution, best possible -74.417915 (1641.60 seconds)
Cbc0010I After 1918000 nodes, 102557 on tree, -72.595615 best solution, best possible -74.417915 (1642.41 seconds)
Cbc0010I After 1919000 nodes, 102542 on tree, -72.595615 best solution, best possible -74.417915 (1643.15 seconds)
Cbc0010I After 1920000 nodes, 102526 on tree, -72.595615 best solution, best possible -74.417915 (1643.96 seconds)
Cbc0010I After 1921000 nodes, 102483 on tree, -72.595615 best solution, best possible -74.417915 (1644.74 seconds)
Cbc0010I After 1922000 nodes, 102464 on tree, -72.595615 best solution, best possible -74.417915 (1645.55 seconds)
Cbc0010I After 1923000 nodes, 102404 on tree, -72.595615 best solution, best possible -74.417915 (1646.43 seconds)
Cbc0010I After 1924000 nodes, 102902 on tree, -72.595615 best solution, best possible -74.417915 (1647.46 seconds)
Cbc0010I After 1925000 nodes, 102886 on tree, -72.595615 best solution, best possible -74.417915 (1648.08 seconds)
Cbc0010I After 1926000 nodes, 102877 on tree, -72.595615 best solution, best possible -74.417915 (1648.81 seconds)
Cbc0010I After 1927000 nodes, 102872 on tree, -72.595615 best solution, best possible -74.417915 (1649.44 seconds)
Cbc0010I After 1928000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.417915 (1650.23 seconds)
Cbc0010I After 1929000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.417915 (1651.03 seconds)
Cbc0010I After 1930000 nodes, 102841 on tree, -72.595615 best solution, best possible -74.417915 (1651.80 seconds)
Cbc0010I After 1931000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.417915 (1652.59 seconds)
Cbc0010I After 1932000 nodes, 102775 on tree, -72.595615 best solution, best possible -74.417915 (1653.36 seconds)
Cbc0010I After 1933000 nodes, 102768 on tree, -72.595615 best solution, best possible -74.417915 (1654.12 seconds)
Cbc0010I After 1934000 nodes, 102758 on tree, -72.595615 best solution, best possible -74.417915 (1654.93 seconds)
Cbc0010I After 1935000 nodes, 102711 on tree, -72.595615 best solution, best possible -74.417915 (1655.73 seconds)
Cbc0010I After 1936000 nodes, 102688 on tree, -72.595615 best solution, best possible -74.417915 (1656.53 seconds)
Cbc0010I After 1937000 nodes, 102632 on tree, -72.595615 best solution, best possible -74.417915 (1657.30 seconds)
Cbc0010I After 1938000 nodes, 102595 on tree, -72.595615 best solution, best possible -74.417915 (1658.19 seconds)
Cbc0010I After 1939000 nodes, 102580 on tree, -72.595615 best solution, best possible -74.417915 (1659.11 seconds)
Cbc0010I After 1940000 nodes, 102557 on tree, -72.595615 best solution, best possible -74.417915 (1659.85 seconds)
Cbc0010I After 1941000 nodes, 102542 on tree, -72.595615 best solution, best possible -74.417915 (1660.66 seconds)
Cbc0010I After 1942000 nodes, 102532 on tree, -72.595615 best solution, best possible -74.417915 (1661.56 seconds)
Cbc0010I After 1943000 nodes, 102480 on tree, -72.595615 best solution, best possible -74.417915 (1662.39 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 24 rows 32 columns
Cbc0010I After 1944000 nodes, 102435 on tree, -72.595615 best solution, best possible -74.417915 (1663.26 seconds)
Cbc0010I After 1945000 nodes, 102222 on tree, -72.595615 best solution, best possible -74.417915 (1663.98 seconds)
Cbc0010I After 1946000 nodes, 102719 on tree, -72.595615 best solution, best possible -74.414477 (1665.75 seconds)
Cbc0010I After 1947000 nodes, 102723 on tree, -72.595615 best solution, best possible -74.414477 (1666.40 seconds)
Cbc0010I After 1948000 nodes, 102720 on tree, -72.595615 best solution, best possible -74.414477 (1667.22 seconds)
Cbc0010I After 1949000 nodes, 102697 on tree, -72.595615 best solution, best possible -74.414477 (1667.97 seconds)
Cbc0010I After 1950000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.414477 (1668.82 seconds)
Cbc0010I After 1951000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.414477 (1669.59 seconds)
Cbc0010I After 1952000 nodes, 102560 on tree, -72.595615 best solution, best possible -74.414477 (1670.42 seconds)
Cbc0010I After 1953000 nodes, 102536 on tree, -72.595615 best solution, best possible -74.414477 (1671.26 seconds)
Cbc0010I After 1954000 nodes, 102535 on tree, -72.595615 best solution, best possible -74.414477 (1671.84 seconds)
Cbc0010I After 1955000 nodes, 102524 on tree, -72.595615 best solution, best possible -74.414477 (1672.56 seconds)
Cbc0010I After 1956000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.414477 (1673.36 seconds)
Cbc0010I After 1957000 nodes, 102433 on tree, -72.595615 best solution, best possible -74.414477 (1674.18 seconds)
Cbc0010I After 1958000 nodes, 102931 on tree, -72.595615 best solution, best possible -74.41131 (1675.55 seconds)
Cbc0010I After 1959000 nodes, 102927 on tree, -72.595615 best solution, best possible -74.41131 (1676.30 seconds)
Cbc0010I After 1960000 nodes, 102921 on tree, -72.595615 best solution, best possible -74.41131 (1677.03 seconds)
Cbc0010I After 1961000 nodes, 102909 on tree, -72.595615 best solution, best possible -74.41131 (1677.76 seconds)
Cbc0010I After 1962000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.41131 (1678.52 seconds)
Cbc0010I After 1963000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1679.33 seconds)
Cbc0010I After 1964000 nodes, 102831 on tree, -72.595615 best solution, best possible -74.41131 (1680.10 seconds)
Cbc0010I After 1965000 nodes, 102802 on tree, -72.595615 best solution, best possible -74.41131 (1680.82 seconds)
Cbc0010I After 1966000 nodes, 102776 on tree, -72.595615 best solution, best possible -74.41131 (1681.67 seconds)
Cbc0010I After 1967000 nodes, 102765 on tree, -72.595615 best solution, best possible -74.41131 (1682.41 seconds)
Cbc0010I After 1968000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.41131 (1683.29 seconds)
Cbc0010I After 1969000 nodes, 102727 on tree, -72.595615 best solution, best possible -74.41131 (1684.01 seconds)
Cbc0010I After 1970000 nodes, 102722 on tree, -72.595615 best solution, best possible -74.41131 (1684.93 seconds)
Cbc0010I After 1971000 nodes, 102709 on tree, -72.595615 best solution, best possible -74.41131 (1685.79 seconds)
Cbc0010I After 1972000 nodes, 102697 on tree, -72.595615 best solution, best possible -74.41131 (1686.59 seconds)
Cbc0010I After 1973000 nodes, 102681 on tree, -72.595615 best solution, best possible -74.41131 (1687.39 seconds)
Cbc0010I After 1974000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.41131 (1688.23 seconds)
Cbc0010I After 1975000 nodes, 102644 on tree, -72.595615 best solution, best possible -74.41131 (1689.08 seconds)
Cbc0010I After 1976000 nodes, 102613 on tree, -72.595615 best solution, best possible -74.41131 (1690.00 seconds)
Cbc0010I After 1977000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.41131 (1690.97 seconds)
Cbc0010I After 1978000 nodes, 102575 on tree, -72.595615 best solution, best possible -74.41131 (1691.85 seconds)
Cbc0010I After 1979000 nodes, 102561 on tree, -72.595615 best solution, best possible -74.41131 (1692.64 seconds)
Cbc0010I After 1980000 nodes, 102548 on tree, -72.595615 best solution, best possible -74.41131 (1693.47 seconds)
Cbc0010I After 1981000 nodes, 102545 on tree, -72.595615 best solution, best possible -74.41131 (1694.30 seconds)
Cbc0010I After 1982000 nodes, 102536 on tree, -72.595615 best solution, best possible -74.41131 (1695.13 seconds)
Cbc0010I After 1983000 nodes, 102527 on tree, -72.595615 best solution, best possible -74.41131 (1695.97 seconds)
Cbc0010I After 1984000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.41131 (1696.78 seconds)
Cbc0010I After 1985000 nodes, 102496 on tree, -72.595615 best solution, best possible -74.41131 (1697.60 seconds)
Cbc0010I After 1986000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.41131 (1698.36 seconds)
Cbc0010I After 1987000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.41131 (1699.16 seconds)
Cbc0010I After 1988000 nodes, 102496 on tree, -72.595615 best solution, best possible -74.41131 (1699.99 seconds)
Cbc0010I After 1989000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.41131 (1700.85 seconds)
Cbc0010I After 1990000 nodes, 102495 on tree, -72.595615 best solution, best possible -74.41131 (1701.57 seconds)
Cbc0010I After 1991000 nodes, 102495 on tree, -72.595615 best solution, best possible -74.41131 (1702.49 seconds)
Cbc0010I After 1992000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.41131 (1703.32 seconds)
Cbc0010I After 1993000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.41131 (1704.15 seconds)
Cbc0010I After 1994000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.41131 (1704.97 seconds)
Cbc0010I After 1995000 nodes, 102490 on tree, -72.595615 best solution, best possible -74.41131 (1705.85 seconds)
Cbc0010I After 1996000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.41131 (1706.69 seconds)
Cbc0010I After 1997000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.41131 (1707.60 seconds)
Cbc0010I After 1998000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.41131 (1708.41 seconds)
Cbc0010I After 1999000 nodes, 102496 on tree, -72.595615 best solution, best possible -74.41131 (1709.26 seconds)
Cbc0010I After 2000000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.41131 (1710.16 seconds)
Cbc0010I After 2001000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.41131 (1710.99 seconds)
Cbc0010I After 2002000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.41131 (1711.82 seconds)
Cbc0010I After 2003000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.41131 (1712.65 seconds)
Cbc0010I After 2004000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.41131 (1713.41 seconds)
Cbc0010I After 2005000 nodes, 102491 on tree, -72.595615 best solution, best possible -74.41131 (1714.23 seconds)
Cbc0010I After 2006000 nodes, 102495 on tree, -72.595615 best solution, best possible -74.41131 (1714.88 seconds)
Cbc0010I After 2007000 nodes, 102497 on tree, -72.595615 best solution, best possible -74.41131 (1715.56 seconds)
Cbc0010I After 2008000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.41131 (1716.34 seconds)
Cbc0010I After 2009000 nodes, 102478 on tree, -72.595615 best solution, best possible -74.41131 (1717.01 seconds)
Cbc0010I After 2010000 nodes, 102476 on tree, -72.595615 best solution, best possible -74.41131 (1717.94 seconds)
Cbc0010I After 2011000 nodes, 102455 on tree, -72.595615 best solution, best possible -74.41131 (1718.82 seconds)
Cbc0010I After 2012000 nodes, 102953 on tree, -72.595615 best solution, best possible -74.41131 (1720.01 seconds)
Cbc0010I After 2013000 nodes, 102939 on tree, -72.595615 best solution, best possible -74.41131 (1720.60 seconds)
Cbc0010I After 2014000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.41131 (1721.32 seconds)
Cbc0010I After 2015000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.41131 (1722.18 seconds)
Cbc0010I After 2016000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.41131 (1722.96 seconds)
Cbc0010I After 2017000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.41131 (1723.67 seconds)
Cbc0010I After 2018000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.41131 (1724.42 seconds)
Cbc0010I After 2019000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1725.28 seconds)
Cbc0010I After 2020000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1726.23 seconds)
Cbc0010I After 2021000 nodes, 102868 on tree, -72.595615 best solution, best possible -74.41131 (1727.17 seconds)
Cbc0010I After 2022000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1728.05 seconds)
Cbc0010I After 2023000 nodes, 102869 on tree, -72.595615 best solution, best possible -74.41131 (1729.01 seconds)
Cbc0010I After 2024000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1729.83 seconds)
Cbc0010I After 2025000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1730.66 seconds)
Cbc0010I After 2026000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1731.33 seconds)
Cbc0010I After 2027000 nodes, 102867 on tree, -72.595615 best solution, best possible -74.41131 (1732.09 seconds)
Cbc0010I After 2028000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1732.83 seconds)
Cbc0010I After 2029000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1733.60 seconds)
Cbc0010I After 2030000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1734.42 seconds)
Cbc0010I After 2031000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1735.18 seconds)
Cbc0010I After 2032000 nodes, 102868 on tree, -72.595615 best solution, best possible -74.41131 (1735.97 seconds)
Cbc0010I After 2033000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1736.71 seconds)
Cbc0010I After 2034000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1737.43 seconds)
Cbc0010I After 2035000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1738.20 seconds)
Cbc0010I After 2036000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1739.07 seconds)
Cbc0010I After 2037000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1739.95 seconds)
Cbc0010I After 2038000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1740.76 seconds)
Cbc0010I After 2039000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1741.62 seconds)
Cbc0010I After 2040000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1742.42 seconds)
Cbc0010I After 2041000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1743.23 seconds)
Cbc0010I After 2042000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1744.00 seconds)
Cbc0010I After 2043000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1744.79 seconds)
Cbc0010I After 2044000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1745.67 seconds)
Cbc0010I After 2045000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1746.53 seconds)
Cbc0010I After 2046000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1747.42 seconds)
Cbc0010I After 2047000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1748.29 seconds)
Cbc0010I After 2048000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1749.07 seconds)
Cbc0010I After 2049000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1749.82 seconds)
Cbc0010I After 2050000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1750.51 seconds)
Cbc0010I After 2051000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1751.35 seconds)
Cbc0010I After 2052000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1752.14 seconds)
Cbc0010I After 2053000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1752.93 seconds)
Cbc0010I After 2054000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1753.72 seconds)
Cbc0010I After 2055000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1754.49 seconds)
Cbc0010I After 2056000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1755.19 seconds)
Cbc0010I After 2057000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1755.88 seconds)
Cbc0010I After 2058000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1756.62 seconds)
Cbc0010I After 2059000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1757.43 seconds)
Cbc0010I After 2060000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1758.25 seconds)
Cbc0010I After 2061000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1759.13 seconds)
Cbc0010I After 2062000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1760.00 seconds)
Cbc0010I After 2063000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1760.82 seconds)
Cbc0010I After 2064000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1761.81 seconds)
Cbc0010I After 2065000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1762.66 seconds)
Cbc0010I After 2066000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1763.39 seconds)
Cbc0010I After 2067000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1764.25 seconds)
Cbc0010I After 2068000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1764.96 seconds)
Cbc0010I After 2069000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1765.81 seconds)
Cbc0010I After 2070000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1766.54 seconds)
Cbc0010I After 2071000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1767.31 seconds)
Cbc0010I After 2072000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1768.09 seconds)
Cbc0010I After 2073000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1768.97 seconds)
Cbc0010I After 2074000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1769.80 seconds)
Cbc0010I After 2075000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1770.57 seconds)
Cbc0010I After 2076000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1771.28 seconds)
Cbc0010I After 2077000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1772.20 seconds)
Cbc0010I After 2078000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1773.06 seconds)
Cbc0010I After 2079000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1773.77 seconds)
Cbc0010I After 2080000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1774.63 seconds)
Cbc0010I After 2081000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1775.43 seconds)
Cbc0010I After 2082000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1776.26 seconds)
Cbc0010I After 2083000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1777.07 seconds)
Cbc0010I After 2084000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1777.95 seconds)
Cbc0010I After 2085000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1778.84 seconds)
Cbc0010I After 2086000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1779.68 seconds)
Cbc0010I After 2087000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1780.55 seconds)
Cbc0010I After 2088000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1781.39 seconds)
Cbc0010I After 2089000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1782.16 seconds)
Cbc0010I After 2090000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1782.99 seconds)
Cbc0010I After 2091000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1783.78 seconds)
Cbc0010I After 2092000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1784.53 seconds)
Cbc0010I After 2093000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1785.36 seconds)
Cbc0010I After 2094000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1786.19 seconds)
Cbc0010I After 2095000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1787.07 seconds)
Cbc0010I After 2096000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1787.92 seconds)
Cbc0010I After 2097000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1788.75 seconds)
Cbc0010I After 2098000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1789.59 seconds)
Cbc0010I After 2099000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1790.50 seconds)
Cbc0010I After 2100000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1791.32 seconds)
Cbc0010I After 2101000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1792.07 seconds)
Cbc0010I After 2102000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1792.85 seconds)
Cbc0010I After 2103000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1793.70 seconds)
Cbc0010I After 2104000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1794.46 seconds)
Cbc0010I After 2105000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1795.13 seconds)
Cbc0010I After 2106000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1795.86 seconds)
Cbc0010I After 2107000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1796.68 seconds)
Cbc0010I After 2108000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1797.45 seconds)
Cbc0010I After 2109000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1798.28 seconds)
Cbc0010I After 2110000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1799.15 seconds)
Cbc0010I After 2111000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1799.93 seconds)
Cbc0010I After 2112000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1800.74 seconds)
Cbc0010I After 2113000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1801.60 seconds)
Cbc0010I After 2114000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1802.46 seconds)
Cbc0010I After 2115000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1803.24 seconds)
Cbc0010I After 2116000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1804.12 seconds)
Cbc0010I After 2117000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1804.80 seconds)
Cbc0010I After 2118000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1805.49 seconds)
Cbc0010I After 2119000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1806.30 seconds)
Cbc0010I After 2120000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1807.09 seconds)
Cbc0010I After 2121000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1807.96 seconds)
Cbc0010I After 2122000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1808.70 seconds)
Cbc0010I After 2123000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1809.42 seconds)
Cbc0010I After 2124000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1810.14 seconds)
Cbc0010I After 2125000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1810.83 seconds)
Cbc0010I After 2126000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1811.58 seconds)
Cbc0010I After 2127000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1812.33 seconds)
Cbc0010I After 2128000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1813.15 seconds)
Cbc0010I After 2129000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1813.94 seconds)
Cbc0010I After 2130000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1814.76 seconds)
Cbc0010I After 2131000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1815.60 seconds)
Cbc0010I After 2132000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1816.46 seconds)
Cbc0010I After 2133000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1817.25 seconds)
Cbc0010I After 2134000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1818.24 seconds)
Cbc0010I After 2135000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1819.12 seconds)
Cbc0010I After 2136000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1819.91 seconds)
Cbc0010I After 2137000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1820.73 seconds)
Cbc0010I After 2138000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1821.65 seconds)
Cbc0010I After 2139000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1822.54 seconds)
Cbc0010I After 2140000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1823.32 seconds)
Cbc0010I After 2141000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1824.22 seconds)
Cbc0010I After 2142000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1825.10 seconds)
Cbc0010I After 2143000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1825.92 seconds)
Cbc0010I After 2144000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1826.70 seconds)
Cbc0010I After 2145000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1827.42 seconds)
Cbc0010I After 2146000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1828.24 seconds)
Cbc0010I After 2147000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1829.02 seconds)
Cbc0010I After 2148000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1829.97 seconds)
Cbc0010I After 2149000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1830.76 seconds)
Cbc0010I After 2150000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1831.55 seconds)
Cbc0010I After 2151000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1832.36 seconds)
Cbc0010I After 2152000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1833.30 seconds)
Cbc0010I After 2153000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1834.23 seconds)
Cbc0010I After 2154000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1835.09 seconds)
Cbc0010I After 2155000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1835.87 seconds)
Cbc0010I After 2156000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1836.69 seconds)
Cbc0010I After 2157000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1837.56 seconds)
Cbc0010I After 2158000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1838.46 seconds)
Cbc0010I After 2159000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1839.22 seconds)
Cbc0010I After 2160000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1839.92 seconds)
Cbc0010I After 2161000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1840.52 seconds)
Cbc0010I After 2162000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1841.35 seconds)
Cbc0010I After 2163000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1842.26 seconds)
Cbc0010I After 2164000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1843.10 seconds)
Cbc0010I After 2165000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1843.85 seconds)
Cbc0010I After 2166000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1844.63 seconds)
Cbc0010I After 2167000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1845.37 seconds)
Cbc0010I After 2168000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1846.20 seconds)
Cbc0010I After 2169000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1847.05 seconds)
Cbc0010I After 2170000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1847.89 seconds)
Cbc0010I After 2171000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1848.80 seconds)
Cbc0010I After 2172000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1849.61 seconds)
Cbc0010I After 2173000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1850.37 seconds)
Cbc0010I After 2174000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1851.12 seconds)
Cbc0010I After 2175000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1851.87 seconds)
Cbc0010I After 2176000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1852.74 seconds)
Cbc0010I After 2177000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1853.65 seconds)
Cbc0010I After 2178000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1854.62 seconds)
Cbc0010I After 2179000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1855.37 seconds)
Cbc0010I After 2180000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1856.19 seconds)
Cbc0010I After 2181000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1856.98 seconds)
Cbc0010I After 2182000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1857.70 seconds)
Cbc0010I After 2183000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1858.53 seconds)
Cbc0010I After 2184000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1859.31 seconds)
Cbc0010I After 2185000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1860.13 seconds)
Cbc0010I After 2186000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1860.98 seconds)
Cbc0010I After 2187000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1861.85 seconds)
Cbc0010I After 2188000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1862.66 seconds)
Cbc0010I After 2189000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1863.46 seconds)
Cbc0010I After 2190000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1864.21 seconds)
Cbc0010I After 2191000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1864.98 seconds)
Cbc0010I After 2192000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1865.73 seconds)
Cbc0010I After 2193000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1866.49 seconds)
Cbc0010I After 2194000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1867.25 seconds)
Cbc0010I After 2195000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1868.12 seconds)
Cbc0010I After 2196000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1868.99 seconds)
Cbc0010I After 2197000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1869.85 seconds)
Cbc0010I After 2198000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1870.58 seconds)
Cbc0010I After 2199000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1871.32 seconds)
Cbc0010I After 2200000 nodes, 102851 on tree, -72.595615 best solution, best possible -74.41131 (1872.25 seconds)
Cbc0010I After 2201000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1873.01 seconds)
Cbc0010I After 2202000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1873.69 seconds)
Cbc0010I After 2203000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1874.44 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 30 rows 39 columns
Cbc0010I After 2204000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1875.27 seconds)
Cbc0010I After 2205000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1876.08 seconds)
Cbc0010I After 2206000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1876.82 seconds)
Cbc0010I After 2207000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1877.63 seconds)
Cbc0010I After 2208000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1878.47 seconds)
Cbc0010I After 2209000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1879.31 seconds)
Cbc0010I After 2210000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1880.13 seconds)
Cbc0010I After 2211000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1880.90 seconds)
Cbc0010I After 2212000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1881.67 seconds)
Cbc0010I After 2213000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1882.51 seconds)
Cbc0010I After 2214000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1883.36 seconds)
Cbc0010I After 2215000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1884.18 seconds)
Cbc0010I After 2216000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1885.05 seconds)
Cbc0010I After 2217000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1886.00 seconds)
Cbc0010I After 2218000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1886.81 seconds)
Cbc0010I After 2219000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1887.53 seconds)
Cbc0010I After 2220000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1888.37 seconds)
Cbc0010I After 2221000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1889.14 seconds)
Cbc0010I After 2222000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1889.76 seconds)
Cbc0010I After 2223000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1890.51 seconds)
Cbc0010I After 2224000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1891.35 seconds)
Cbc0010I After 2225000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1892.08 seconds)
Cbc0010I After 2226000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1892.81 seconds)
Cbc0010I After 2227000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1893.60 seconds)
Cbc0010I After 2228000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1894.41 seconds)
Cbc0010I After 2229000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1895.24 seconds)
Cbc0010I After 2230000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1896.13 seconds)
Cbc0010I After 2231000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1896.91 seconds)
Cbc0010I After 2232000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1897.76 seconds)
Cbc0010I After 2233000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1898.55 seconds)
Cbc0010I After 2234000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1899.38 seconds)
Cbc0010I After 2235000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1900.21 seconds)
Cbc0010I After 2236000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1900.87 seconds)
Cbc0010I After 2237000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1901.69 seconds)
Cbc0010I After 2238000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1902.41 seconds)
Cbc0010I After 2239000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1903.24 seconds)
Cbc0010I After 2240000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1904.03 seconds)
Cbc0010I After 2241000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1904.75 seconds)
Cbc0010I After 2242000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1905.49 seconds)
Cbc0010I After 2243000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1906.40 seconds)
Cbc0010I After 2244000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1907.17 seconds)
Cbc0010I After 2245000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1908.01 seconds)
Cbc0010I After 2246000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1908.87 seconds)
Cbc0010I After 2247000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1909.75 seconds)
Cbc0010I After 2248000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1910.64 seconds)
Cbc0010I After 2249000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1911.48 seconds)
Cbc0010I After 2250000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1912.33 seconds)
Cbc0010I After 2251000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1913.27 seconds)
Cbc0010I After 2252000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1914.16 seconds)
Cbc0010I After 2253000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1914.93 seconds)
Cbc0010I After 2254000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1915.57 seconds)
Cbc0010I After 2255000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1916.30 seconds)
Cbc0010I After 2256000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1917.14 seconds)
Cbc0010I After 2257000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1917.91 seconds)
Cbc0010I After 2258000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1918.62 seconds)
Cbc0010I After 2259000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1919.45 seconds)
Cbc0010I After 2260000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1920.16 seconds)
Cbc0010I After 2261000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1920.96 seconds)
Cbc0010I After 2262000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1921.73 seconds)
Cbc0010I After 2263000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1922.37 seconds)
Cbc0010I After 2264000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1923.01 seconds)
Cbc0010I After 2265000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1923.74 seconds)
Cbc0010I After 2266000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1924.68 seconds)
Cbc0010I After 2267000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1925.53 seconds)
Cbc0010I After 2268000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1926.22 seconds)
Cbc0010I After 2269000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1926.93 seconds)
Cbc0010I After 2270000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1927.66 seconds)
Cbc0010I After 2271000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1928.50 seconds)
Cbc0010I After 2272000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1929.26 seconds)
Cbc0010I After 2273000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1930.05 seconds)
Cbc0010I After 2274000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1930.74 seconds)
Cbc0010I After 2275000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1931.67 seconds)
Cbc0010I After 2276000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1932.63 seconds)
Cbc0010I After 2277000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1933.44 seconds)
Cbc0010I After 2278000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1934.28 seconds)
Cbc0010I After 2279000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1935.17 seconds)
Cbc0010I After 2280000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1935.96 seconds)
Cbc0010I After 2281000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1936.83 seconds)
Cbc0010I After 2282000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1937.61 seconds)
Cbc0010I After 2283000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1938.41 seconds)
Cbc0010I After 2284000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1939.28 seconds)
Cbc0010I After 2285000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1940.22 seconds)
Cbc0010I After 2286000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1941.09 seconds)
Cbc0010I After 2287000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1941.88 seconds)
Cbc0010I After 2288000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1942.81 seconds)
Cbc0010I After 2289000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1943.59 seconds)
Cbc0010I After 2290000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1944.37 seconds)
Cbc0010I After 2291000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1945.20 seconds)
Cbc0010I After 2292000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1946.07 seconds)
Cbc0010I After 2293000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1946.86 seconds)
Cbc0010I After 2294000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1947.77 seconds)
Cbc0010I After 2295000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1948.54 seconds)
Cbc0010I After 2296000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1949.23 seconds)
Cbc0010I After 2297000 nodes, 102866 on tree, -72.595615 best solution, best possible -74.41131 (1950.10 seconds)
Cbc0010I After 2298000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1950.86 seconds)
Cbc0010I After 2299000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1951.64 seconds)
Cbc0010I After 2300000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1952.48 seconds)
Cbc0010I After 2301000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1953.34 seconds)
Cbc0010I After 2302000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1954.24 seconds)
Cbc0010I After 2303000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1955.02 seconds)
Cbc0010I After 2304000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1955.83 seconds)
Cbc0010I After 2305000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1956.73 seconds)
Cbc0010I After 2306000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1957.63 seconds)
Cbc0010I After 2307000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1958.58 seconds)
Cbc0010I After 2308000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1959.47 seconds)
Cbc0010I After 2309000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (1960.33 seconds)
Cbc0010I After 2310000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1961.22 seconds)
Cbc0010I After 2311000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1962.05 seconds)
Cbc0010I After 2312000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1962.82 seconds)
Cbc0010I After 2313000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1963.73 seconds)
Cbc0010I After 2314000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1964.67 seconds)
Cbc0010I After 2315000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1965.51 seconds)
Cbc0010I After 2316000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1966.41 seconds)
Cbc0010I After 2317000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1967.31 seconds)
Cbc0010I After 2318000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1968.07 seconds)
Cbc0010I After 2319000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1968.93 seconds)
Cbc0010I After 2320000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1969.81 seconds)
Cbc0010I After 2321000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1970.71 seconds)
Cbc0010I After 2322000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1971.38 seconds)
Cbc0010I After 2323000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1972.15 seconds)
Cbc0010I After 2324000 nodes, 102852 on tree, -72.595615 best solution, best possible -74.41131 (1973.14 seconds)
Cbc0010I After 2325000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1973.86 seconds)
Cbc0010I After 2326000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1974.57 seconds)
Cbc0010I After 2327000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.41131 (1975.45 seconds)
Cbc0010I After 2328000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (1976.10 seconds)
Cbc0010I After 2329000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1976.79 seconds)
Cbc0010I After 2330000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1977.64 seconds)
Cbc0010I After 2331000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1978.38 seconds)
Cbc0010I After 2332000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1979.22 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 25 rows 33 columns
Cbc0010I After 2333000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1980.13 seconds)
Cbc0010I After 2334000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1980.95 seconds)
Cbc0010I After 2335000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1981.95 seconds)
Cbc0010I After 2336000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1982.78 seconds)
Cbc0010I After 2337000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1983.44 seconds)
Cbc0010I After 2338000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (1984.09 seconds)
Cbc0010I After 2339000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1984.86 seconds)
Cbc0010I After 2340000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1985.68 seconds)
Cbc0010I After 2341000 nodes, 102864 on tree, -72.595615 best solution, best possible -74.41131 (1986.49 seconds)
Cbc0010I After 2342000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1987.35 seconds)
Cbc0010I After 2343000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (1988.14 seconds)
Cbc0010I After 2344000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1989.01 seconds)
Cbc0010I After 2345000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1989.81 seconds)
Cbc0010I After 2346000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1990.65 seconds)
Cbc0010I After 2347000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1991.41 seconds)
Cbc0010I After 2348000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (1992.05 seconds)
Cbc0010I After 2349000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (1992.82 seconds)
Cbc0010I After 2350000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.41131 (1993.65 seconds)
Cbc0010I After 2351000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1994.42 seconds)
Cbc0010I After 2352000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (1995.22 seconds)
Cbc0010I After 2353000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (1995.99 seconds)
Cbc0010I After 2354000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1996.77 seconds)
Cbc0010I After 2355000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1997.55 seconds)
Cbc0010I After 2356000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (1998.33 seconds)
Cbc0010I After 2357000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (1999.22 seconds)
Cbc0010I After 2358000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (2000.14 seconds)
Cbc0010I After 2359000 nodes, 102860 on tree, -72.595615 best solution, best possible -74.41131 (2000.91 seconds)
Cbc0010I After 2360000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.41131 (2001.76 seconds)
Cbc0010I After 2361000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (2002.69 seconds)
Cbc0010I After 2362000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (2003.52 seconds)
Cbc0010I After 2363000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (2004.35 seconds)
Cbc0010I After 2364000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (2005.09 seconds)
Cbc0010I After 2365000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (2005.83 seconds)
Cbc0010I After 2366000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (2006.69 seconds)
Cbc0010I After 2367000 nodes, 102853 on tree, -72.595615 best solution, best possible -74.41131 (2007.55 seconds)
Cbc0010I After 2368000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (2008.38 seconds)
Cbc0010I After 2369000 nodes, 102859 on tree, -72.595615 best solution, best possible -74.41131 (2009.20 seconds)
Cbc0010I After 2370000 nodes, 102856 on tree, -72.595615 best solution, best possible -74.41131 (2010.12 seconds)
Cbc0010I After 2371000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (2010.91 seconds)
Cbc0010I After 2372000 nodes, 102857 on tree, -72.595615 best solution, best possible -74.41131 (2011.56 seconds)
Cbc0010I After 2373000 nodes, 102861 on tree, -72.595615 best solution, best possible -74.41131 (2012.28 seconds)
Cbc0010I After 2374000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (2013.13 seconds)
Cbc0010I After 2375000 nodes, 102854 on tree, -72.595615 best solution, best possible -74.41131 (2013.91 seconds)
Cbc0010I After 2376000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.41131 (2014.79 seconds)
Cbc0010I After 2377000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.41131 (2015.65 seconds)
Cbc0010I After 2378000 nodes, 102850 on tree, -72.595615 best solution, best possible -74.41131 (2016.43 seconds)
Cbc0010I After 2379000 nodes, 102839 on tree, -72.595615 best solution, best possible -74.41131 (2017.34 seconds)
Cbc0010I After 2380000 nodes, 102827 on tree, -72.595615 best solution, best possible -74.41131 (2018.09 seconds)
Cbc0010I After 2381000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.41131 (2018.93 seconds)
Cbc0010I After 2382000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.41131 (2019.72 seconds)
Cbc0010I After 2383000 nodes, 102754 on tree, -72.595615 best solution, best possible -74.41131 (2020.67 seconds)
Cbc0010I After 2384000 nodes, 102718 on tree, -72.595615 best solution, best possible -74.41131 (2021.52 seconds)
Cbc0010I After 2385000 nodes, 102703 on tree, -72.595615 best solution, best possible -74.41131 (2022.34 seconds)
Cbc0010I After 2386000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.41131 (2023.20 seconds)
Cbc0010I After 2387000 nodes, 102669 on tree, -72.595615 best solution, best possible -74.41131 (2024.06 seconds)
Cbc0010I After 2388000 nodes, 102638 on tree, -72.595615 best solution, best possible -74.41131 (2024.93 seconds)
Cbc0010I After 2389000 nodes, 102624 on tree, -72.595615 best solution, best possible -74.41131 (2025.82 seconds)
Cbc0010I After 2390000 nodes, 102600 on tree, -72.595615 best solution, best possible -74.41131 (2026.68 seconds)
Cbc0010I After 2391000 nodes, 102589 on tree, -72.595615 best solution, best possible -74.41131 (2027.47 seconds)
Cbc0010I After 2392000 nodes, 102574 on tree, -72.595615 best solution, best possible -74.41131 (2028.34 seconds)
Cbc0010I After 2393000 nodes, 102566 on tree, -72.595615 best solution, best possible -74.41131 (2029.24 seconds)
Cbc0010I After 2394000 nodes, 102555 on tree, -72.595615 best solution, best possible -74.41131 (2030.10 seconds)
Cbc0010I After 2395000 nodes, 102520 on tree, -72.595615 best solution, best possible -74.41131 (2030.94 seconds)
Cbc0010I After 2396000 nodes, 102523 on tree, -72.595615 best solution, best possible -74.41131 (2031.97 seconds)
Cbc0010I After 2397000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.41131 (2032.84 seconds)
Cbc0010I After 2398000 nodes, 102493 on tree, -72.595615 best solution, best possible -74.41131 (2033.76 seconds)
Cbc0010I After 2399000 nodes, 102473 on tree, -72.595615 best solution, best possible -74.41131 (2034.66 seconds)
Cbc0010I After 2400000 nodes, 102462 on tree, -72.595615 best solution, best possible -74.41131 (2035.52 seconds)
Cbc0010I After 2401000 nodes, 102445 on tree, -72.595615 best solution, best possible -74.41131 (2036.30 seconds)
Cbc0010I After 2402000 nodes, 102940 on tree, -72.595615 best solution, best possible -74.408064 (2037.70 seconds)
Cbc0010I After 2403000 nodes, 102944 on tree, -72.595615 best solution, best possible -74.408064 (2038.30 seconds)
Cbc0010I After 2404000 nodes, 102942 on tree, -72.595615 best solution, best possible -74.408064 (2038.89 seconds)
Cbc0010I After 2405000 nodes, 102942 on tree, -72.595615 best solution, best possible -74.408064 (2039.64 seconds)
Cbc0010I After 2406000 nodes, 102940 on tree, -72.595615 best solution, best possible -74.408064 (2040.42 seconds)
Cbc0010I After 2407000 nodes, 102922 on tree, -72.595615 best solution, best possible -74.408064 (2041.13 seconds)
Cbc0010I After 2408000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.408064 (2041.89 seconds)
Cbc0010I After 2409000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.408064 (2042.73 seconds)
Cbc0010I After 2410000 nodes, 102877 on tree, -72.595615 best solution, best possible -74.408064 (2043.39 seconds)
Cbc0010I After 2411000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.408064 (2044.18 seconds)
Cbc0010I After 2412000 nodes, 102833 on tree, -72.595615 best solution, best possible -74.408064 (2044.99 seconds)
Cbc0010I After 2413000 nodes, 102828 on tree, -72.595615 best solution, best possible -74.408064 (2045.70 seconds)
Cbc0010I After 2414000 nodes, 102798 on tree, -72.595615 best solution, best possible -74.408064 (2046.54 seconds)
Cbc0010I After 2415000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.408064 (2047.48 seconds)
Cbc0010I After 2416000 nodes, 102759 on tree, -72.595615 best solution, best possible -74.408064 (2048.37 seconds)
Cbc0010I After 2417000 nodes, 102729 on tree, -72.595615 best solution, best possible -74.408064 (2049.18 seconds)
Cbc0010I After 2418000 nodes, 102702 on tree, -72.595615 best solution, best possible -74.408064 (2050.01 seconds)
Cbc0010I After 2419000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.408064 (2050.91 seconds)
Cbc0010I After 2420000 nodes, 102649 on tree, -72.595615 best solution, best possible -74.408064 (2051.76 seconds)
Cbc0010I After 2421000 nodes, 102632 on tree, -72.595615 best solution, best possible -74.408064 (2052.53 seconds)
Cbc0010I After 2422000 nodes, 102607 on tree, -72.595615 best solution, best possible -74.408064 (2053.35 seconds)
Cbc0010I After 2423000 nodes, 102599 on tree, -72.595615 best solution, best possible -74.408064 (2054.22 seconds)
Cbc0010I After 2424000 nodes, 102570 on tree, -72.595615 best solution, best possible -74.408064 (2055.05 seconds)
Cbc0010I After 2425000 nodes, 102528 on tree, -72.595615 best solution, best possible -74.408064 (2055.99 seconds)
Cbc0010I After 2426000 nodes, 102490 on tree, -72.595615 best solution, best possible -74.408064 (2056.93 seconds)
Cbc0010I After 2427000 nodes, 102474 on tree, -72.595615 best solution, best possible -74.408064 (2057.87 seconds)
Cbc0010I After 2428000 nodes, 102463 on tree, -72.595615 best solution, best possible -74.408064 (2058.66 seconds)
Cbc0010I After 2429000 nodes, 102433 on tree, -72.595615 best solution, best possible -74.408064 (2059.45 seconds)
Cbc0010I After 2430000 nodes, 102928 on tree, -72.595615 best solution, best possible -74.40478 (2060.86 seconds)
Cbc0010I After 2431000 nodes, 102934 on tree, -72.595615 best solution, best possible -74.40478 (2061.46 seconds)
Cbc0010I After 2432000 nodes, 102929 on tree, -72.595615 best solution, best possible -74.40478 (2062.09 seconds)
Cbc0010I After 2433000 nodes, 102897 on tree, -72.595615 best solution, best possible -74.40478 (2062.84 seconds)
Cbc0010I After 2434000 nodes, 102897 on tree, -72.595615 best solution, best possible -74.40478 (2063.54 seconds)
Cbc0010I After 2435000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.40478 (2064.40 seconds)
Cbc0010I After 2436000 nodes, 102873 on tree, -72.595615 best solution, best possible -74.40478 (2065.18 seconds)
Cbc0010I After 2437000 nodes, 102847 on tree, -72.595615 best solution, best possible -74.40478 (2065.94 seconds)
Cbc0010I After 2438000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.40478 (2066.77 seconds)
Cbc0010I After 2439000 nodes, 102836 on tree, -72.595615 best solution, best possible -74.40478 (2067.56 seconds)
Cbc0010I After 2440000 nodes, 102804 on tree, -72.595615 best solution, best possible -74.40478 (2068.40 seconds)
Cbc0010I After 2441000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.40478 (2069.22 seconds)
Cbc0010I After 2442000 nodes, 102767 on tree, -72.595615 best solution, best possible -74.40478 (2070.01 seconds)
Cbc0010I After 2443000 nodes, 102761 on tree, -72.595615 best solution, best possible -74.40478 (2070.86 seconds)
Cbc0010I After 2444000 nodes, 102735 on tree, -72.595615 best solution, best possible -74.40478 (2071.73 seconds)
Cbc0010I After 2445000 nodes, 102704 on tree, -72.595615 best solution, best possible -74.40478 (2072.63 seconds)
Cbc0010I After 2446000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.40478 (2073.51 seconds)
Cbc0010I After 2447000 nodes, 102648 on tree, -72.595615 best solution, best possible -74.40478 (2074.37 seconds)
Cbc0010I After 2448000 nodes, 102614 on tree, -72.595615 best solution, best possible -74.40478 (2075.29 seconds)
Cbc0010I After 2449000 nodes, 102575 on tree, -72.595615 best solution, best possible -74.40478 (2076.17 seconds)
Cbc0010I After 2450000 nodes, 102567 on tree, -72.595615 best solution, best possible -74.40478 (2077.00 seconds)
Cbc0010I After 2451000 nodes, 102546 on tree, -72.595615 best solution, best possible -74.40478 (2077.84 seconds)
Cbc0010I After 2452000 nodes, 102524 on tree, -72.595615 best solution, best possible -74.40478 (2078.65 seconds)
Cbc0010I After 2453000 nodes, 102499 on tree, -72.595615 best solution, best possible -74.40478 (2079.39 seconds)
Cbc0010I After 2454000 nodes, 102477 on tree, -72.595615 best solution, best possible -74.40478 (2080.22 seconds)
Cbc0010I After 2455000 nodes, 102444 on tree, -72.595615 best solution, best possible -74.40478 (2081.17 seconds)
Cbc0010I After 2456000 nodes, 102942 on tree, -72.595615 best solution, best possible -74.40478 (2082.43 seconds)
Cbc0010I After 2457000 nodes, 102934 on tree, -72.595615 best solution, best possible -74.40478 (2083.05 seconds)
Cbc0010I After 2458000 nodes, 102938 on tree, -72.595615 best solution, best possible -74.40478 (2083.87 seconds)
Cbc0010I After 2459000 nodes, 102930 on tree, -72.595615 best solution, best possible -74.40478 (2084.65 seconds)
Cbc0010I After 2460000 nodes, 102929 on tree, -72.595615 best solution, best possible -74.40478 (2085.41 seconds)
Cbc0010I After 2461000 nodes, 102931 on tree, -72.595615 best solution, best possible -74.40478 (2086.13 seconds)
Cbc0010I After 2462000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.40478 (2086.85 seconds)
Cbc0010I After 2463000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.40478 (2087.66 seconds)
Cbc0010I After 2464000 nodes, 102848 on tree, -72.595615 best solution, best possible -74.40478 (2088.48 seconds)
Cbc0010I After 2465000 nodes, 102829 on tree, -72.595615 best solution, best possible -74.40478 (2089.29 seconds)
Cbc0010I After 2466000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2090.13 seconds)
Cbc0010I After 2467000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.40478 (2090.94 seconds)
Cbc0010I After 2468000 nodes, 102755 on tree, -72.595615 best solution, best possible -74.40478 (2091.72 seconds)
Cbc0010I After 2469000 nodes, 102737 on tree, -72.595615 best solution, best possible -74.40478 (2092.64 seconds)
Cbc0010I After 2470000 nodes, 102717 on tree, -72.595615 best solution, best possible -74.40478 (2093.41 seconds)
Cbc0010I After 2471000 nodes, 102714 on tree, -72.595615 best solution, best possible -74.40478 (2094.35 seconds)
Cbc0010I After 2472000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.40478 (2095.27 seconds)
Cbc0010I After 2473000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.40478 (2096.18 seconds)
Cbc0010I After 2474000 nodes, 102658 on tree, -72.595615 best solution, best possible -74.40478 (2096.99 seconds)
Cbc0010I After 2475000 nodes, 102650 on tree, -72.595615 best solution, best possible -74.40478 (2097.82 seconds)
Cbc0010I After 2476000 nodes, 102647 on tree, -72.595615 best solution, best possible -74.40478 (2098.71 seconds)
Cbc0010I After 2477000 nodes, 102629 on tree, -72.595615 best solution, best possible -74.40478 (2099.54 seconds)
Cbc0010I After 2478000 nodes, 102615 on tree, -72.595615 best solution, best possible -74.40478 (2100.45 seconds)
Cbc0010I After 2479000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.40478 (2101.41 seconds)
Cbc0010I After 2480000 nodes, 102595 on tree, -72.595615 best solution, best possible -74.40478 (2102.26 seconds)
Cbc0010I After 2481000 nodes, 102595 on tree, -72.595615 best solution, best possible -74.40478 (2103.01 seconds)
Cbc0010I After 2482000 nodes, 102583 on tree, -72.595615 best solution, best possible -74.40478 (2103.88 seconds)
Cbc0010I After 2483000 nodes, 102573 on tree, -72.595615 best solution, best possible -74.40478 (2104.76 seconds)
Cbc0010I After 2484000 nodes, 102545 on tree, -72.595615 best solution, best possible -74.40478 (2105.53 seconds)
Cbc0010I After 2485000 nodes, 102523 on tree, -72.595615 best solution, best possible -74.40478 (2106.37 seconds)
Cbc0010I After 2486000 nodes, 102519 on tree, -72.595615 best solution, best possible -74.40478 (2107.36 seconds)
Cbc0010I After 2487000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.40478 (2108.20 seconds)
Cbc0010I After 2488000 nodes, 102469 on tree, -72.595615 best solution, best possible -74.40478 (2109.07 seconds)
Cbc0010I After 2489000 nodes, 102470 on tree, -72.595615 best solution, best possible -74.40478 (2109.92 seconds)
Cbc0010I After 2490000 nodes, 102465 on tree, -72.595615 best solution, best possible -74.40478 (2110.76 seconds)
Cbc0010I After 2491000 nodes, 102451 on tree, -72.595615 best solution, best possible -74.40478 (2111.68 seconds)
Cbc0010I After 2492000 nodes, 102948 on tree, -72.595615 best solution, best possible -74.40478 (2112.72 seconds)
Cbc0010I After 2493000 nodes, 102945 on tree, -72.595615 best solution, best possible -74.40478 (2113.49 seconds)
Cbc0010I After 2494000 nodes, 102926 on tree, -72.595615 best solution, best possible -74.40478 (2114.29 seconds)
Cbc0010I After 2495000 nodes, 102926 on tree, -72.595615 best solution, best possible -74.40478 (2115.07 seconds)
Cbc0010I After 2496000 nodes, 102917 on tree, -72.595615 best solution, best possible -74.40478 (2115.90 seconds)
Cbc0010I After 2497000 nodes, 102920 on tree, -72.595615 best solution, best possible -74.40478 (2116.76 seconds)
Cbc0010I After 2498000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.40478 (2117.62 seconds)
Cbc0010I After 2499000 nodes, 102915 on tree, -72.595615 best solution, best possible -74.40478 (2118.42 seconds)
Cbc0010I After 2500000 nodes, 102914 on tree, -72.595615 best solution, best possible -74.40478 (2119.00 seconds)
Cbc0010I After 2501000 nodes, 102921 on tree, -72.595615 best solution, best possible -74.40478 (2119.71 seconds)
Cbc0010I After 2502000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.40478 (2120.43 seconds)
Cbc0010I After 2503000 nodes, 102914 on tree, -72.595615 best solution, best possible -74.40478 (2121.05 seconds)
Cbc0010I After 2504000 nodes, 102923 on tree, -72.595615 best solution, best possible -74.40478 (2121.82 seconds)
Cbc0010I After 2505000 nodes, 102910 on tree, -72.595615 best solution, best possible -74.40478 (2122.74 seconds)
Cbc0010I After 2506000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.40478 (2123.45 seconds)
Cbc0010I After 2507000 nodes, 102912 on tree, -72.595615 best solution, best possible -74.40478 (2124.13 seconds)
Cbc0010I After 2508000 nodes, 102923 on tree, -72.595615 best solution, best possible -74.40478 (2124.97 seconds)
Cbc0010I After 2509000 nodes, 102915 on tree, -72.595615 best solution, best possible -74.40478 (2125.88 seconds)
Cbc0010I After 2510000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.40478 (2126.68 seconds)
Cbc0010I After 2511000 nodes, 102922 on tree, -72.595615 best solution, best possible -74.40478 (2127.49 seconds)
Cbc0010I After 2512000 nodes, 102916 on tree, -72.595615 best solution, best possible -74.40478 (2128.25 seconds)
Cbc0010I After 2513000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.40478 (2129.11 seconds)
Cbc0010I After 2514000 nodes, 102920 on tree, -72.595615 best solution, best possible -74.40478 (2129.99 seconds)
Cbc0010I After 2515000 nodes, 102919 on tree, -72.595615 best solution, best possible -74.40478 (2130.79 seconds)
Cbc0010I After 2516000 nodes, 102919 on tree, -72.595615 best solution, best possible -74.40478 (2131.55 seconds)
Cbc0010I After 2517000 nodes, 102915 on tree, -72.595615 best solution, best possible -74.40478 (2132.37 seconds)
Cbc0010I After 2518000 nodes, 102914 on tree, -72.595615 best solution, best possible -74.40478 (2133.11 seconds)
Cbc0010I After 2519000 nodes, 102917 on tree, -72.595615 best solution, best possible -74.40478 (2133.87 seconds)
Cbc0010I After 2520000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.40478 (2134.67 seconds)
Cbc0010I After 2521000 nodes, 102911 on tree, -72.595615 best solution, best possible -74.40478 (2135.46 seconds)
Cbc0010I After 2522000 nodes, 102919 on tree, -72.595615 best solution, best possible -74.40478 (2136.34 seconds)
Cbc0010I After 2523000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.40478 (2137.09 seconds)
Cbc0010I After 2524000 nodes, 102907 on tree, -72.595615 best solution, best possible -74.40478 (2137.98 seconds)
Cbc0010I After 2525000 nodes, 102904 on tree, -72.595615 best solution, best possible -74.40478 (2138.64 seconds)
Cbc0010I After 2526000 nodes, 102894 on tree, -72.595615 best solution, best possible -74.40478 (2139.46 seconds)
Cbc0010I After 2527000 nodes, 102888 on tree, -72.595615 best solution, best possible -74.40478 (2140.29 seconds)
Cbc0010I After 2528000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.40478 (2141.00 seconds)
Cbc0010I After 2529000 nodes, 102870 on tree, -72.595615 best solution, best possible -74.40478 (2141.94 seconds)
Cbc0010I After 2530000 nodes, 102869 on tree, -72.595615 best solution, best possible -74.40478 (2142.79 seconds)
Cbc0010I After 2531000 nodes, 102867 on tree, -72.595615 best solution, best possible -74.40478 (2143.60 seconds)
Cbc0010I After 2532000 nodes, 102832 on tree, -72.595615 best solution, best possible -74.40478 (2144.53 seconds)
Cbc0010I After 2533000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2145.32 seconds)
Cbc0010I After 2534000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.40478 (2146.14 seconds)
Cbc0010I After 2535000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2147.06 seconds)
Cbc0010I After 2536000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2147.94 seconds)
Cbc0010I After 2537000 nodes, 102823 on tree, -72.595615 best solution, best possible -74.40478 (2148.81 seconds)
Cbc0010I After 2538000 nodes, 102825 on tree, -72.595615 best solution, best possible -74.40478 (2149.59 seconds)
Cbc0010I After 2539000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2150.46 seconds)
Cbc0010I After 2540000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2151.26 seconds)
Cbc0010I After 2541000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2152.08 seconds)
Cbc0010I After 2542000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2152.89 seconds)
Cbc0010I After 2543000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2153.76 seconds)
Cbc0010I After 2544000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2154.76 seconds)
Cbc0010I After 2545000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2155.64 seconds)
Cbc0010I After 2546000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2156.59 seconds)
Cbc0010I After 2547000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2157.48 seconds)
Cbc0010I After 2548000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2158.41 seconds)
Cbc0010I After 2549000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2159.24 seconds)
Cbc0010I After 2550000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2160.04 seconds)
Cbc0010I After 2551000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2160.81 seconds)
Cbc0010I After 2552000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.40478 (2161.65 seconds)
Cbc0010I After 2553000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2162.45 seconds)
Cbc0010I After 2554000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2163.27 seconds)
Cbc0010I After 2555000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.40478 (2164.24 seconds)
Cbc0010I After 2556000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2165.06 seconds)
Cbc0010I After 2557000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2165.91 seconds)
Cbc0010I After 2558000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2166.78 seconds)
Cbc0010I After 2559000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2167.70 seconds)
Cbc0010I After 2560000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2168.51 seconds)
Cbc0010I After 2561000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2169.28 seconds)
Cbc0010I After 2562000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2170.13 seconds)
Cbc0010I After 2563000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2170.99 seconds)
Cbc0010I After 2564000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2171.90 seconds)
Cbc0010I After 2565000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2172.69 seconds)
Cbc0010I After 2566000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2173.62 seconds)
Cbc0010I After 2567000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2174.37 seconds)
Cbc0010I After 2568000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2175.06 seconds)
Cbc0010I After 2569000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2175.76 seconds)
Cbc0010I After 2570000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2176.36 seconds)
Cbc0010I After 2571000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2176.95 seconds)
Cbc0010I After 2572000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2177.52 seconds)
Cbc0010I After 2573000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2178.31 seconds)
Cbc0010I After 2574000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2179.16 seconds)
Cbc0010I After 2575000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2179.92 seconds)
Cbc0010I After 2576000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2180.73 seconds)
Cbc0010I After 2577000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2181.60 seconds)
Cbc0010I After 2578000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2182.46 seconds)
Cbc0010I After 2579000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2183.45 seconds)
Cbc0010I After 2580000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2184.34 seconds)
Cbc0010I After 2581000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2185.13 seconds)
Cbc0010I After 2582000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2186.02 seconds)
Cbc0010I After 2583000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2186.92 seconds)
Cbc0010I After 2584000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2187.72 seconds)
Cbc0010I After 2585000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2188.52 seconds)
Cbc0010I After 2586000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2189.43 seconds)
Cbc0010I After 2587000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2190.26 seconds)
Cbc0010I After 2588000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2191.15 seconds)
Cbc0010I After 2589000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2192.00 seconds)
Cbc0010I After 2590000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2192.84 seconds)
Cbc0010I After 2591000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2193.73 seconds)
Cbc0010I After 2592000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2194.55 seconds)
Cbc0010I After 2593000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2195.30 seconds)
Cbc0010I After 2594000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2196.12 seconds)
Cbc0010I After 2595000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2196.98 seconds)
Cbc0010I After 2596000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2197.80 seconds)
Cbc0010I After 2597000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2198.61 seconds)
Cbc0010I After 2598000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2199.58 seconds)
Cbc0010I After 2599000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2200.45 seconds)
Cbc0010I After 2600000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2201.29 seconds)
Cbc0010I After 2601000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2202.15 seconds)
Cbc0010I After 2602000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2202.92 seconds)
Cbc0010I After 2603000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2203.70 seconds)
Cbc0010I After 2604000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2204.51 seconds)
Cbc0010I After 2605000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2205.28 seconds)
Cbc0010I After 2606000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2206.15 seconds)
Cbc0010I After 2607000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2206.94 seconds)
Cbc0010I After 2608000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2207.81 seconds)
Cbc0010I After 2609000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2208.67 seconds)
Cbc0010I After 2610000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2209.52 seconds)
Cbc0010I After 2611000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2210.49 seconds)
Cbc0010I After 2612000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2211.40 seconds)
Cbc0010I After 2613000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2212.31 seconds)
Cbc0010I After 2614000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2213.19 seconds)
Cbc0010I After 2615000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2213.97 seconds)
Cbc0010I After 2616000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2214.65 seconds)
Cbc0010I After 2617000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2215.42 seconds)
Cbc0010I After 2618000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2216.31 seconds)
Cbc0010I After 2619000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2217.28 seconds)
Cbc0010I After 2620000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2218.10 seconds)
Cbc0010I After 2621000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2219.12 seconds)
Cbc0010I After 2622000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2219.93 seconds)
Cbc0010I After 2623000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2220.79 seconds)
Cbc0010I After 2624000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2221.64 seconds)
Cbc0010I After 2625000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2222.54 seconds)
Cbc0010I After 2626000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2223.36 seconds)
Cbc0010I After 2627000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2224.14 seconds)
Cbc0010I After 2628000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2225.00 seconds)
Cbc0010I After 2629000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2225.93 seconds)
Cbc0010I After 2630000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2226.74 seconds)
Cbc0010I After 2631000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2227.58 seconds)
Cbc0010I After 2632000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2228.46 seconds)
Cbc0010I After 2633000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2229.30 seconds)
Cbc0010I After 2634000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2230.33 seconds)
Cbc0010I After 2635000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2231.17 seconds)
Cbc0010I After 2636000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2232.09 seconds)
Cbc0010I After 2637000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2232.80 seconds)
Cbc0010I After 2638000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2233.74 seconds)
Cbc0010I After 2639000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2234.70 seconds)
Cbc0010I After 2640000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2235.62 seconds)
Cbc0010I After 2641000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2236.37 seconds)
Cbc0010I After 2642000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2237.28 seconds)
Cbc0010I After 2643000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2238.09 seconds)
Cbc0010I After 2644000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2238.76 seconds)
Cbc0010I After 2645000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2239.62 seconds)
Cbc0010I After 2646000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.40478 (2240.51 seconds)
Cbc0010I After 2647000 nodes, 102807 on tree, -72.595615 best solution, best possible -74.40478 (2241.34 seconds)
Cbc0010I After 2648000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2242.08 seconds)
Cbc0010I After 2649000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2242.87 seconds)
Cbc0010I After 2650000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2243.82 seconds)
Cbc0010I After 2651000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2244.63 seconds)
Cbc0010I After 2652000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2245.34 seconds)
Cbc0010I After 2653000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2246.17 seconds)
Cbc0010I After 2654000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2246.94 seconds)
Cbc0010I After 2655000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2247.79 seconds)
Cbc0010I After 2656000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2248.59 seconds)
Cbc0010I After 2657000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2249.38 seconds)
Cbc0010I After 2658000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2250.13 seconds)
Cbc0010I After 2659000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2251.03 seconds)
Cbc0010I After 2660000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2251.90 seconds)
Cbc0010I After 2661000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2252.73 seconds)
Cbc0010I After 2662000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2253.53 seconds)
Cbc0010I After 2663000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2254.37 seconds)
Cbc0010I After 2664000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2255.30 seconds)
Cbc0010I After 2665000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2256.07 seconds)
Cbc0010I After 2666000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2257.07 seconds)
Cbc0010I After 2667000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2257.99 seconds)
Cbc0010I After 2668000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2258.88 seconds)
Cbc0010I After 2669000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2259.79 seconds)
Cbc0010I After 2670000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2260.63 seconds)
Cbc0010I After 2671000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2261.43 seconds)
Cbc0010I After 2672000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2262.35 seconds)
Cbc0010I After 2673000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2263.07 seconds)
Cbc0010I After 2674000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2263.86 seconds)
Cbc0010I After 2675000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2264.71 seconds)
Cbc0010I After 2676000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2265.63 seconds)
Cbc0010I After 2677000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2266.45 seconds)
Cbc0010I After 2678000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2267.37 seconds)
Cbc0010I After 2679000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2268.31 seconds)
Cbc0010I After 2680000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2269.15 seconds)
Cbc0010I After 2681000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2269.92 seconds)
Cbc0010I After 2682000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2270.84 seconds)
Cbc0010I After 2683000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2271.66 seconds)
Cbc0010I After 2684000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2272.36 seconds)
Cbc0010I After 2685000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2273.21 seconds)
Cbc0010I After 2686000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2274.06 seconds)
Cbc0010I After 2687000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2274.89 seconds)
Cbc0010I After 2688000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2275.72 seconds)
Cbc0010I After 2689000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2276.58 seconds)
Cbc0010I After 2690000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2277.51 seconds)
Cbc0010I After 2691000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2278.36 seconds)
Cbc0010I After 2692000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2279.10 seconds)
Cbc0010I After 2693000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2279.89 seconds)
Cbc0010I After 2694000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2280.56 seconds)
Cbc0010I After 2695000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2281.37 seconds)
Cbc0010I After 2696000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2282.22 seconds)
Cbc0010I After 2697000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2282.97 seconds)
Cbc0010I After 2698000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2283.73 seconds)
Cbc0010I After 2699000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2284.51 seconds)
Cbc0010I After 2700000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2285.38 seconds)
Cbc0010I After 2701000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2286.16 seconds)
Cbc0010I After 2702000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2286.86 seconds)
Cbc0010I After 2703000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2287.60 seconds)
Cbc0010I After 2704000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2288.45 seconds)
Cbc0010I After 2705000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2289.42 seconds)
Cbc0010I After 2706000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2290.16 seconds)
Cbc0010I After 2707000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2291.05 seconds)
Cbc0010I After 2708000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2291.99 seconds)
Cbc0010I After 2709000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2292.88 seconds)
Cbc0010I After 2710000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2293.88 seconds)
Cbc0010I After 2711000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2294.71 seconds)
Cbc0010I After 2712000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2295.60 seconds)
Cbc0010I After 2713000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2296.43 seconds)
Cbc0010I After 2714000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2297.26 seconds)
Cbc0010I After 2715000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2298.16 seconds)
Cbc0010I After 2716000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2299.04 seconds)
Cbc0010I After 2717000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2299.92 seconds)
Cbc0010I After 2718000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2300.76 seconds)
Cbc0010I After 2719000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2301.62 seconds)
Cbc0010I After 2720000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2302.39 seconds)
Cbc0010I After 2721000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2303.21 seconds)
Cbc0010I After 2722000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2304.10 seconds)
Cbc0010I After 2723000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2305.09 seconds)
Cbc0010I After 2724000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2305.97 seconds)
Cbc0010I After 2725000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2306.80 seconds)
Cbc0010I After 2726000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2307.74 seconds)
Cbc0010I After 2727000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2308.61 seconds)
Cbc0010I After 2728000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2309.50 seconds)
Cbc0010I After 2729000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2310.34 seconds)
Cbc0010I After 2730000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2311.09 seconds)
Cbc0010I After 2731000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2311.79 seconds)
Cbc0010I After 2732000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2312.57 seconds)
Cbc0010I After 2733000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2313.26 seconds)
Cbc0010I After 2734000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2314.03 seconds)
Cbc0010I After 2735000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2314.88 seconds)
Cbc0010I After 2736000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2315.76 seconds)
Cbc0010I After 2737000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2316.66 seconds)
Cbc0010I After 2738000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2317.50 seconds)
Cbc0010I After 2739000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2318.22 seconds)
Cbc0010I After 2740000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2319.03 seconds)
Cbc0010I After 2741000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2319.87 seconds)
Cbc0010I After 2742000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2320.70 seconds)
Cbc0010I After 2743000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2321.45 seconds)
Cbc0010I After 2744000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2322.42 seconds)
Cbc0010I After 2745000 nodes, 102824 on tree, -72.595615 best solution, best possible -74.40478 (2323.19 seconds)
Cbc0010I After 2746000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2323.88 seconds)
Cbc0010I After 2747000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2324.66 seconds)
Cbc0010I After 2748000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2325.46 seconds)
Cbc0010I After 2749000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2326.28 seconds)
Cbc0010I After 2750000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2327.14 seconds)
Cbc0010I After 2751000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2327.99 seconds)
Cbc0010I After 2752000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2328.82 seconds)
Cbc0010I After 2753000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2329.52 seconds)
Cbc0010I After 2754000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2330.36 seconds)
Cbc0010I After 2755000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2331.22 seconds)
Cbc0010I After 2756000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2332.14 seconds)
Cbc0010I After 2757000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2333.02 seconds)
Cbc0010I After 2758000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2333.95 seconds)
Cbc0010I After 2759000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2334.81 seconds)
Cbc0010I After 2760000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2335.67 seconds)
Cbc0010I After 2761000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2336.54 seconds)
Cbc0010I After 2762000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2337.38 seconds)
Cbc0010I After 2763000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2338.35 seconds)
Cbc0010I After 2764000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2339.22 seconds)
Cbc0010I After 2765000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2340.18 seconds)
Cbc0010I After 2766000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2340.98 seconds)
Cbc0010I After 2767000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2341.82 seconds)
Cbc0010I After 2768000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2342.66 seconds)
Cbc0010I After 2769000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2343.51 seconds)
Cbc0010I After 2770000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2344.44 seconds)
Cbc0010I After 2771000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2345.28 seconds)
Cbc0010I After 2772000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2346.05 seconds)
Cbc0010I After 2773000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2346.98 seconds)
Cbc0010I After 2774000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2347.75 seconds)
Cbc0010I After 2775000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2348.38 seconds)
Cbc0010I After 2776000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2348.98 seconds)
Cbc0010I After 2777000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2349.59 seconds)
Cbc0010I After 2778000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2350.16 seconds)
Cbc0010I After 2779000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2350.80 seconds)
Cbc0010I After 2780000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2351.59 seconds)
Cbc0010I After 2781000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2352.42 seconds)
Cbc0010I After 2782000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2353.29 seconds)
Cbc0010I After 2783000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2354.03 seconds)
Cbc0010I After 2784000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2354.84 seconds)
Cbc0010I After 2785000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2355.59 seconds)
Cbc0010I After 2786000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2356.34 seconds)
Cbc0010I After 2787000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2357.22 seconds)
Cbc0010I After 2788000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2358.08 seconds)
Cbc0010I After 2789000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2359.04 seconds)
Cbc0010I After 2790000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2359.94 seconds)
Cbc0010I After 2791000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2360.79 seconds)
Cbc0010I After 2792000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2361.47 seconds)
Cbc0010I After 2793000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2362.33 seconds)
Cbc0010I After 2794000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2363.15 seconds)
Cbc0010I After 2795000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2363.97 seconds)
Cbc0010I After 2796000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2364.64 seconds)
Cbc0010I After 2797000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2365.44 seconds)
Cbc0010I After 2798000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2366.26 seconds)
Cbc0010I After 2799000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2367.13 seconds)
Cbc0010I After 2800000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2367.96 seconds)
Cbc0010I After 2801000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2368.59 seconds)
Cbc0010I After 2802000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2369.29 seconds)
Cbc0010I After 2803000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2370.04 seconds)
Cbc0010I After 2804000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2370.77 seconds)
Cbc0010I After 2805000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2371.51 seconds)
Cbc0010I After 2806000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2372.33 seconds)
Cbc0010I After 2807000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2373.22 seconds)
Cbc0010I After 2808000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2374.04 seconds)
Cbc0010I After 2809000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2374.84 seconds)
Cbc0010I After 2810000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2375.69 seconds)
Cbc0010I After 2811000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2376.48 seconds)
Cbc0010I After 2812000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2377.17 seconds)
Cbc0010I After 2813000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2378.03 seconds)
Cbc0010I After 2814000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2378.89 seconds)
Cbc0010I After 2815000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2379.77 seconds)
Cbc0010I After 2816000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2380.53 seconds)
Cbc0010I After 2817000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2381.45 seconds)
Cbc0010I After 2818000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2382.30 seconds)
Cbc0010I After 2819000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2383.20 seconds)
Cbc0010I After 2820000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2384.06 seconds)
Cbc0010I After 2821000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2384.87 seconds)
Cbc0010I After 2822000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2385.78 seconds)
Cbc0010I After 2823000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2386.68 seconds)
Cbc0010I After 2824000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2387.54 seconds)
Cbc0010I After 2825000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2388.48 seconds)
Cbc0010I After 2826000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2389.33 seconds)
Cbc0010I After 2827000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2390.09 seconds)
Cbc0010I After 2828000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2390.88 seconds)
Cbc0010I After 2829000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2391.62 seconds)
Cbc0010I After 2830000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2392.48 seconds)
Cbc0010I After 2831000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2393.39 seconds)
Cbc0010I After 2832000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2394.27 seconds)
Cbc0010I After 2833000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2395.17 seconds)
Cbc0010I After 2834000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2395.97 seconds)
Cbc0010I After 2835000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2396.74 seconds)
Cbc0010I After 2836000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2397.57 seconds)
Cbc0010I After 2837000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2398.34 seconds)
Cbc0010I After 2838000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2399.18 seconds)
Cbc0010I After 2839000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2400.08 seconds)
Cbc0010I After 2840000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2400.96 seconds)
Cbc0010I After 2841000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2401.72 seconds)
Cbc0010I After 2842000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2402.51 seconds)
Cbc0010I After 2843000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2403.27 seconds)
Cbc0010I After 2844000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2404.19 seconds)
Cbc0010I After 2845000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2405.17 seconds)
Cbc0010I After 2846000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2406.03 seconds)
Cbc0010I After 2847000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2406.84 seconds)
Cbc0010I After 2848000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2407.65 seconds)
Cbc0010I After 2849000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2408.40 seconds)
Cbc0010I After 2850000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2409.25 seconds)
Cbc0010I After 2851000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2410.18 seconds)
Cbc0010I After 2852000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2410.84 seconds)
Cbc0010I After 2853000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2411.63 seconds)
Cbc0010I After 2854000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2412.45 seconds)
Cbc0010I After 2855000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2413.29 seconds)
Cbc0010I After 2856000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2414.14 seconds)
Cbc0010I After 2857000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2414.90 seconds)
Cbc0010I After 2858000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2415.70 seconds)
Cbc0010I After 2859000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2416.56 seconds)
Cbc0010I After 2860000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2417.45 seconds)
Cbc0010I After 2861000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2418.36 seconds)
Cbc0010I After 2862000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2419.23 seconds)
Cbc0010I After 2863000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2420.08 seconds)
Cbc0010I After 2864000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2421.01 seconds)
Cbc0010I After 2865000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2421.69 seconds)
Cbc0010I After 2866000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2422.60 seconds)
Cbc0010I After 2867000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2423.49 seconds)
Cbc0010I After 2868000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2424.34 seconds)
Cbc0010I After 2869000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2425.31 seconds)
Cbc0010I After 2870000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2426.28 seconds)
Cbc0010I After 2871000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2427.15 seconds)
Cbc0010I After 2872000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2427.96 seconds)
Cbc0010I After 2873000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2428.69 seconds)
Cbc0010I After 2874000 nodes, 102822 on tree, -72.595615 best solution, best possible -74.40478 (2429.54 seconds)
Cbc0010I After 2875000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2430.39 seconds)
Cbc0010I After 2876000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2431.18 seconds)
Cbc0010I After 2877000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2432.00 seconds)
Cbc0010I After 2878000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2432.84 seconds)
Cbc0010I After 2879000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2433.72 seconds)
Cbc0010I After 2880000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2434.61 seconds)
Cbc0010I After 2881000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2435.60 seconds)
Cbc0010I After 2882000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.40478 (2436.57 seconds)
Cbc0010I After 2883000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2437.41 seconds)
Cbc0010I After 2884000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2438.25 seconds)
Cbc0010I After 2885000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2439.09 seconds)
Cbc0010I After 2886000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2439.88 seconds)
Cbc0010I After 2887000 nodes, 102823 on tree, -72.595615 best solution, best possible -74.40478 (2440.73 seconds)
Cbc0010I After 2888000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2441.50 seconds)
Cbc0010I After 2889000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2442.28 seconds)
Cbc0010I After 2890000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2443.24 seconds)
Cbc0010I After 2891000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2444.04 seconds)
Cbc0010I After 2892000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2445.00 seconds)
Cbc0010I After 2893000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2445.89 seconds)
Cbc0010I After 2894000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2446.73 seconds)
Cbc0010I After 2895000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2447.68 seconds)
Cbc0010I After 2896000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2448.59 seconds)
Cbc0010I After 2897000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2449.38 seconds)
Cbc0010I After 2898000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2449.99 seconds)
Cbc0010I After 2899000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2450.83 seconds)
Cbc0010I After 2900000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2451.70 seconds)
Cbc0010I After 2901000 nodes, 102818 on tree, -72.595615 best solution, best possible -74.40478 (2452.53 seconds)
Cbc0010I After 2902000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2453.35 seconds)
Cbc0010I After 2903000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2454.08 seconds)
Cbc0010I After 2904000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2454.84 seconds)
Cbc0010I After 2905000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2455.61 seconds)
Cbc0010I After 2906000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.40478 (2456.36 seconds)
Cbc0010I After 2907000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2457.15 seconds)
Cbc0010I After 2908000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2457.94 seconds)
Cbc0010I After 2909000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2458.82 seconds)
Cbc0010I After 2910000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2459.68 seconds)
Cbc0010I After 2911000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2460.48 seconds)
Cbc0010I After 2912000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2461.33 seconds)
Cbc0010I After 2913000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2462.21 seconds)
Cbc0010I After 2914000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2463.10 seconds)
Cbc0010I After 2915000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2463.87 seconds)
Cbc0010I After 2916000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2464.72 seconds)
Cbc0010I After 2917000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2465.54 seconds)
Cbc0010I After 2918000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.40478 (2466.36 seconds)
Cbc0010I After 2919000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2467.01 seconds)
Cbc0010I After 2920000 nodes, 102819 on tree, -72.595615 best solution, best possible -74.40478 (2467.83 seconds)
Cbc0010I After 2921000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.40478 (2468.59 seconds)
Cbc0010I After 2922000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2469.46 seconds)
Cbc0010I After 2923000 nodes, 102811 on tree, -72.595615 best solution, best possible -74.40478 (2470.32 seconds)
Cbc0010I After 2924000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2471.17 seconds)
Cbc0010I After 2925000 nodes, 102813 on tree, -72.595615 best solution, best possible -74.40478 (2472.00 seconds)
Cbc0010I After 2926000 nodes, 102812 on tree, -72.595615 best solution, best possible -74.40478 (2472.73 seconds)
Cbc0010I After 2927000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.40478 (2473.47 seconds)
Cbc0010I After 2928000 nodes, 102816 on tree, -72.595615 best solution, best possible -74.40478 (2474.22 seconds)
Cbc0010I After 2929000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.40478 (2475.03 seconds)
Cbc0010I After 2930000 nodes, 102817 on tree, -72.595615 best solution, best possible -74.40478 (2475.92 seconds)
Cbc0010I After 2931000 nodes, 102810 on tree, -72.595615 best solution, best possible -74.40478 (2476.89 seconds)
Cbc0010I After 2932000 nodes, 102807 on tree, -72.595615 best solution, best possible -74.40478 (2477.67 seconds)
Cbc0010I After 2933000 nodes, 102803 on tree, -72.595615 best solution, best possible -74.40478 (2478.55 seconds)
Cbc0010I After 2934000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.40478 (2479.47 seconds)
Cbc0010I After 2935000 nodes, 102745 on tree, -72.595615 best solution, best possible -74.40478 (2480.38 seconds)
Cbc0010I After 2936000 nodes, 102698 on tree, -72.595615 best solution, best possible -74.40478 (2481.33 seconds)
Cbc0010I After 2937000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.40478 (2482.26 seconds)
Cbc0010I After 2938000 nodes, 102642 on tree, -72.595615 best solution, best possible -74.40478 (2483.21 seconds)
Cbc0010I After 2939000 nodes, 102646 on tree, -72.595615 best solution, best possible -74.40478 (2483.94 seconds)
Cbc0010I After 2940000 nodes, 102635 on tree, -72.595615 best solution, best possible -74.40478 (2484.68 seconds)
Cbc0010I After 2941000 nodes, 102625 on tree, -72.595615 best solution, best possible -74.40478 (2485.49 seconds)
Cbc0010I After 2942000 nodes, 102605 on tree, -72.595615 best solution, best possible -74.40478 (2486.40 seconds)
Cbc0010I After 2943000 nodes, 102578 on tree, -72.595615 best solution, best possible -74.40478 (2487.33 seconds)
Cbc0010I After 2944000 nodes, 102569 on tree, -72.595615 best solution, best possible -74.40478 (2488.21 seconds)
Cbc0010I After 2945000 nodes, 102569 on tree, -72.595615 best solution, best possible -74.40478 (2489.07 seconds)
Cbc0010I After 2946000 nodes, 102555 on tree, -72.595615 best solution, best possible -74.40478 (2490.02 seconds)
Cbc0010I After 2947000 nodes, 102536 on tree, -72.595615 best solution, best possible -74.40478 (2490.88 seconds)
Cbc0010I After 2948000 nodes, 102526 on tree, -72.595615 best solution, best possible -74.40478 (2491.77 seconds)
Cbc0010I After 2949000 nodes, 102496 on tree, -72.595615 best solution, best possible -74.40478 (2492.67 seconds)
Cbc0010I After 2950000 nodes, 102479 on tree, -72.595615 best solution, best possible -74.40478 (2493.59 seconds)
Cbc0010I After 2951000 nodes, 102461 on tree, -72.595615 best solution, best possible -74.40478 (2494.53 seconds)
Cbc0010I After 2952000 nodes, 102439 on tree, -72.595615 best solution, best possible -74.40478 (2495.43 seconds)
Cbc0010I After 2953000 nodes, 102230 on tree, -72.595615 best solution, best possible -74.40478 (2496.15 seconds)
Cbc0010I After 2954000 nodes, 102726 on tree, -72.595615 best solution, best possible -74.401306 (2497.97 seconds)
Cbc0010I After 2955000 nodes, 102725 on tree, -72.595615 best solution, best possible -74.401306 (2498.60 seconds)
Cbc0010I After 2956000 nodes, 102723 on tree, -72.595615 best solution, best possible -74.401306 (2499.48 seconds)
Cbc0010I After 2957000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.401306 (2500.34 seconds)
Cbc0010I After 2958000 nodes, 102673 on tree, -72.595615 best solution, best possible -74.401306 (2501.18 seconds)
Cbc0010I After 2959000 nodes, 102646 on tree, -72.595615 best solution, best possible -74.401306 (2502.15 seconds)
Cbc0010I After 2960000 nodes, 102613 on tree, -72.595615 best solution, best possible -74.401306 (2503.03 seconds)
Cbc0010I After 2961000 nodes, 102593 on tree, -72.595615 best solution, best possible -74.401306 (2503.87 seconds)
Cbc0010I After 2962000 nodes, 102573 on tree, -72.595615 best solution, best possible -74.401306 (2504.74 seconds)
Cbc0010I After 2963000 nodes, 102565 on tree, -72.595615 best solution, best possible -74.401306 (2505.53 seconds)
Cbc0010I After 2964000 nodes, 102531 on tree, -72.595615 best solution, best possible -74.401306 (2506.39 seconds)
Cbc0010I After 2965000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2507.37 seconds)
Cbc0010I After 2966000 nodes, 102485 on tree, -72.595615 best solution, best possible -74.401306 (2508.18 seconds)
Cbc0010I After 2967000 nodes, 102475 on tree, -72.595615 best solution, best possible -74.401306 (2509.05 seconds)
Cbc0010I After 2968000 nodes, 102451 on tree, -72.595615 best solution, best possible -74.401306 (2509.90 seconds)
Cbc0010I After 2969000 nodes, 102477 on tree, -72.595615 best solution, best possible -74.401306 (2510.82 seconds)
Cbc0010I After 2970000 nodes, 102444 on tree, -72.595615 best solution, best possible -74.401306 (2511.87 seconds)
Cbc0010I After 2971000 nodes, 102939 on tree, -72.595615 best solution, best possible -74.401306 (2513.35 seconds)
Cbc0010I After 2972000 nodes, 102930 on tree, -72.595615 best solution, best possible -74.401306 (2514.10 seconds)
Cbc0010I After 2973000 nodes, 102920 on tree, -72.595615 best solution, best possible -74.401306 (2514.99 seconds)
Cbc0010I After 2974000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.401306 (2515.86 seconds)
Cbc0010I After 2975000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.401306 (2516.85 seconds)
Cbc0010I After 2976000 nodes, 102844 on tree, -72.595615 best solution, best possible -74.401306 (2517.74 seconds)
Cbc0010I After 2977000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.401306 (2518.62 seconds)
Cbc0010I After 2978000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.401306 (2519.47 seconds)
Cbc0010I After 2979000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.401306 (2520.18 seconds)
Cbc0010I After 2980000 nodes, 102756 on tree, -72.595615 best solution, best possible -74.401306 (2521.05 seconds)
Cbc0010I After 2981000 nodes, 102730 on tree, -72.595615 best solution, best possible -74.401306 (2521.98 seconds)
Cbc0010I After 2982000 nodes, 102728 on tree, -72.595615 best solution, best possible -74.401306 (2522.98 seconds)
Cbc0010I After 2983000 nodes, 102731 on tree, -72.595615 best solution, best possible -74.401306 (2523.84 seconds)
Cbc0010I After 2984000 nodes, 102691 on tree, -72.595615 best solution, best possible -74.401306 (2524.75 seconds)
Cbc0010I After 2985000 nodes, 102662 on tree, -72.595615 best solution, best possible -74.401306 (2525.64 seconds)
Cbc0010I After 2986000 nodes, 102643 on tree, -72.595615 best solution, best possible -74.401306 (2526.56 seconds)
Cbc0010I After 2987000 nodes, 102611 on tree, -72.595615 best solution, best possible -74.401306 (2527.42 seconds)
Cbc0010I After 2988000 nodes, 102611 on tree, -72.595615 best solution, best possible -74.401306 (2528.23 seconds)
Cbc0010I After 2989000 nodes, 102580 on tree, -72.595615 best solution, best possible -74.401306 (2529.14 seconds)
Cbc0010I After 2990000 nodes, 102552 on tree, -72.595615 best solution, best possible -74.401306 (2530.03 seconds)
Cbc0010I After 2991000 nodes, 102529 on tree, -72.595615 best solution, best possible -74.401306 (2530.93 seconds)
Cbc0010I After 2992000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2531.71 seconds)
Cbc0010I After 2993000 nodes, 102496 on tree, -72.595615 best solution, best possible -74.401306 (2532.64 seconds)
Cbc0010I After 2994000 nodes, 102473 on tree, -72.595615 best solution, best possible -74.401306 (2533.46 seconds)
Cbc0010I After 2995000 nodes, 102431 on tree, -72.595615 best solution, best possible -74.401306 (2534.44 seconds)
Cbc0010I After 2996000 nodes, 102922 on tree, -72.595615 best solution, best possible -74.401306 (2535.58 seconds)
Cbc0010I After 2997000 nodes, 102933 on tree, -72.595615 best solution, best possible -74.401306 (2536.27 seconds)
Cbc0010I After 2998000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.401306 (2537.04 seconds)
Cbc0010I After 2999000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.401306 (2537.82 seconds)
Cbc0010I After 3000000 nodes, 102855 on tree, -72.595615 best solution, best possible -74.401306 (2538.82 seconds)
Cbc0010I After 3001000 nodes, 102851 on tree, -72.595615 best solution, best possible -74.401306 (2539.73 seconds)
Cbc0010I After 3002000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.401306 (2540.63 seconds)
Cbc0010I After 3003000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.401306 (2541.46 seconds)
Cbc0010I After 3004000 nodes, 102798 on tree, -72.595615 best solution, best possible -74.401306 (2542.11 seconds)
Cbc0010I After 3005000 nodes, 102759 on tree, -72.595615 best solution, best possible -74.401306 (2542.96 seconds)
Cbc0010I After 3006000 nodes, 102719 on tree, -72.595615 best solution, best possible -74.401306 (2543.79 seconds)
Cbc0010I After 3007000 nodes, 102679 on tree, -72.595615 best solution, best possible -74.401306 (2544.68 seconds)
Cbc0010I After 3008000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.401306 (2545.41 seconds)
Cbc0010I After 3009000 nodes, 102637 on tree, -72.595615 best solution, best possible -74.401306 (2546.29 seconds)
Cbc0010I After 3010000 nodes, 102604 on tree, -72.595615 best solution, best possible -74.401306 (2547.07 seconds)
Cbc0010I After 3011000 nodes, 102593 on tree, -72.595615 best solution, best possible -74.401306 (2547.96 seconds)
Cbc0010I After 3012000 nodes, 102560 on tree, -72.595615 best solution, best possible -74.401306 (2548.79 seconds)
Cbc0010I After 3013000 nodes, 102540 on tree, -72.595615 best solution, best possible -74.401306 (2549.70 seconds)
Cbc0010I After 3014000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2550.65 seconds)
Cbc0010I After 3015000 nodes, 102492 on tree, -72.595615 best solution, best possible -74.401306 (2551.55 seconds)
Cbc0010I After 3016000 nodes, 102475 on tree, -72.595615 best solution, best possible -74.401306 (2552.44 seconds)
Cbc0010I After 3017000 nodes, 102462 on tree, -72.595615 best solution, best possible -74.401306 (2553.37 seconds)
Cbc0010I After 3018000 nodes, 102443 on tree, -72.595615 best solution, best possible -74.401306 (2554.25 seconds)
Cbc0010I After 3019000 nodes, 102931 on tree, -72.595615 best solution, best possible -74.401306 (2555.23 seconds)
Cbc0010I After 3020000 nodes, 102910 on tree, -72.595615 best solution, best possible -74.401306 (2555.87 seconds)
Cbc0010I After 3021000 nodes, 102907 on tree, -72.595615 best solution, best possible -74.401306 (2556.63 seconds)
Cbc0010I After 3022000 nodes, 102899 on tree, -72.595615 best solution, best possible -74.401306 (2557.52 seconds)
Cbc0010I After 3023000 nodes, 102872 on tree, -72.595615 best solution, best possible -74.401306 (2558.32 seconds)
Cbc0010I After 3024000 nodes, 102865 on tree, -72.595615 best solution, best possible -74.401306 (2559.17 seconds)
Cbc0010I After 3025000 nodes, 102858 on tree, -72.595615 best solution, best possible -74.401306 (2560.07 seconds)
Cbc0010I After 3026000 nodes, 102840 on tree, -72.595615 best solution, best possible -74.401306 (2560.93 seconds)
Cbc0010I After 3027000 nodes, 102830 on tree, -72.595615 best solution, best possible -74.401306 (2561.81 seconds)
Cbc0010I After 3028000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.401306 (2562.66 seconds)
Cbc0010I After 3029000 nodes, 102809 on tree, -72.595615 best solution, best possible -74.401306 (2563.54 seconds)
Cbc0010I After 3030000 nodes, 102803 on tree, -72.595615 best solution, best possible -74.401306 (2564.38 seconds)
Cbc0010I After 3031000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.401306 (2565.24 seconds)
Cbc0010I After 3032000 nodes, 102771 on tree, -72.595615 best solution, best possible -74.401306 (2566.16 seconds)
Cbc0010I After 3033000 nodes, 102764 on tree, -72.595615 best solution, best possible -74.401306 (2567.05 seconds)
Cbc0010I After 3034000 nodes, 102760 on tree, -72.595615 best solution, best possible -74.401306 (2567.88 seconds)
Cbc0010I After 3035000 nodes, 102721 on tree, -72.595615 best solution, best possible -74.401306 (2568.80 seconds)
Cbc0010I After 3036000 nodes, 102715 on tree, -72.595615 best solution, best possible -74.401306 (2569.77 seconds)
Cbc0010I After 3037000 nodes, 102705 on tree, -72.595615 best solution, best possible -74.401306 (2570.67 seconds)
Cbc0010I After 3038000 nodes, 102684 on tree, -72.595615 best solution, best possible -74.401306 (2571.48 seconds)
Cbc0010I After 3039000 nodes, 102679 on tree, -72.595615 best solution, best possible -74.401306 (2572.38 seconds)
Cbc0010I After 3040000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.401306 (2573.24 seconds)
Cbc0010I After 3041000 nodes, 102664 on tree, -72.595615 best solution, best possible -74.401306 (2574.09 seconds)
Cbc0010I After 3042000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.401306 (2574.94 seconds)
Cbc0010I After 3043000 nodes, 102653 on tree, -72.595615 best solution, best possible -74.401306 (2575.76 seconds)
Cbc0010I After 3044000 nodes, 102649 on tree, -72.595615 best solution, best possible -74.401306 (2576.57 seconds)
Cbc0010I After 3045000 nodes, 102641 on tree, -72.595615 best solution, best possible -74.401306 (2577.40 seconds)
Cbc0010I After 3046000 nodes, 102627 on tree, -72.595615 best solution, best possible -74.401306 (2578.32 seconds)
Cbc0010I After 3047000 nodes, 102637 on tree, -72.595615 best solution, best possible -74.401306 (2579.10 seconds)
Cbc0010I After 3048000 nodes, 102622 on tree, -72.595615 best solution, best possible -74.401306 (2580.00 seconds)
Cbc0010I After 3049000 nodes, 102601 on tree, -72.595615 best solution, best possible -74.401306 (2580.79 seconds)
Cbc0010I After 3050000 nodes, 102585 on tree, -72.595615 best solution, best possible -74.401306 (2581.60 seconds)
Cbc0010I After 3051000 nodes, 102583 on tree, -72.595615 best solution, best possible -74.401306 (2582.38 seconds)
Cbc0010I After 3052000 nodes, 102588 on tree, -72.595615 best solution, best possible -74.401306 (2583.36 seconds)
Cbc0010I After 3053000 nodes, 102590 on tree, -72.595615 best solution, best possible -74.401306 (2584.33 seconds)
Cbc0010I After 3054000 nodes, 102588 on tree, -72.595615 best solution, best possible -74.401306 (2585.18 seconds)
Cbc0010I After 3055000 nodes, 102589 on tree, -72.595615 best solution, best possible -74.401306 (2586.09 seconds)
Cbc0010I After 3056000 nodes, 102584 on tree, -72.595615 best solution, best possible -74.401306 (2587.00 seconds)
Cbc0010I After 3057000 nodes, 102589 on tree, -72.595615 best solution, best possible -74.401306 (2588.00 seconds)
Cbc0010I After 3058000 nodes, 102581 on tree, -72.595615 best solution, best possible -74.401306 (2588.90 seconds)
Cbc0010I After 3059000 nodes, 102582 on tree, -72.595615 best solution, best possible -74.401306 (2589.77 seconds)
Cbc0010I After 3060000 nodes, 102581 on tree, -72.595615 best solution, best possible -74.401306 (2590.61 seconds)
Cbc0010I After 3061000 nodes, 102586 on tree, -72.595615 best solution, best possible -74.401306 (2591.51 seconds)
Cbc0010I After 3062000 nodes, 102584 on tree, -72.595615 best solution, best possible -74.401306 (2592.29 seconds)
Cbc0010I After 3063000 nodes, 102578 on tree, -72.595615 best solution, best possible -74.401306 (2593.08 seconds)
Cbc0010I After 3064000 nodes, 102577 on tree, -72.595615 best solution, best possible -74.401306 (2594.07 seconds)
Cbc0010I After 3065000 nodes, 102578 on tree, -72.595615 best solution, best possible -74.401306 (2594.89 seconds)
Cbc0010I After 3066000 nodes, 102562 on tree, -72.595615 best solution, best possible -74.401306 (2595.75 seconds)
Cbc0010I After 3067000 nodes, 102525 on tree, -72.595615 best solution, best possible -74.401306 (2596.64 seconds)
Cbc0010I After 3068000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2597.62 seconds)
Cbc0010I After 3069000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2598.47 seconds)
Cbc0010I After 3070000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2599.30 seconds)
Cbc0010I After 3071000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2600.06 seconds)
Cbc0010I After 3072000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2600.86 seconds)
Cbc0010I After 3073000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2601.67 seconds)
Cbc0010I After 3074000 nodes, 102520 on tree, -72.595615 best solution, best possible -74.401306 (2602.50 seconds)
Cbc0010I After 3075000 nodes, 102521 on tree, -72.595615 best solution, best possible -74.401306 (2603.33 seconds)
Cbc0010I After 3076000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2604.28 seconds)
Cbc0010I After 3077000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2605.02 seconds)
Cbc0010I After 3078000 nodes, 102523 on tree, -72.595615 best solution, best possible -74.401306 (2605.97 seconds)
Cbc0010I After 3079000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2606.93 seconds)
Cbc0010I After 3080000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2607.68 seconds)
Cbc0010I After 3081000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2608.49 seconds)
Cbc0010I After 3082000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2609.30 seconds)
Cbc0010I After 3083000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2610.27 seconds)
Cbc0010I After 3084000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2611.22 seconds)
Cbc0010I After 3085000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2611.86 seconds)
Cbc0010I After 3086000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2612.77 seconds)
Cbc0010I After 3087000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2613.48 seconds)
Cbc0010I After 3088000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2614.35 seconds)
Cbc0010I After 3089000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2615.24 seconds)
Cbc0010I After 3090000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2616.06 seconds)
Cbc0010I After 3091000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2616.84 seconds)
Cbc0010I After 3092000 nodes, 102518 on tree, -72.595615 best solution, best possible -74.401306 (2617.57 seconds)
Cbc0010I After 3093000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2618.40 seconds)
Cbc0010I After 3094000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2619.22 seconds)
Cbc0010I After 3095000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2620.00 seconds)
Cbc0010I After 3096000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2620.89 seconds)
Cbc0010I After 3097000 nodes, 102518 on tree, -72.595615 best solution, best possible -74.401306 (2621.75 seconds)
Cbc0010I After 3098000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2622.62 seconds)
Cbc0010I After 3099000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2623.47 seconds)
Cbc0010I After 3100000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2624.30 seconds)
Cbc0010I After 3101000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2625.19 seconds)
Cbc0010I After 3102000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2626.08 seconds)
Cbc0010I After 3103000 nodes, 102518 on tree, -72.595615 best solution, best possible -74.401306 (2626.94 seconds)
Cbc0010I After 3104000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2627.84 seconds)
Cbc0010I After 3105000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2628.74 seconds)
Cbc0010I After 3106000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2629.46 seconds)
Cbc0010I After 3107000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2630.26 seconds)
Cbc0010I After 3108000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2631.13 seconds)
Cbc0010I After 3109000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2631.99 seconds)
Cbc0010I After 3110000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2632.79 seconds)
Cbc0010I After 3111000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2633.54 seconds)
Cbc0010I After 3112000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2634.36 seconds)
Cbc0010I After 3113000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2635.13 seconds)
Cbc0010I After 3114000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2635.97 seconds)
Cbc0010I After 3115000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2636.93 seconds)
Cbc0010I After 3116000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2637.76 seconds)
Cbc0010I After 3117000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2638.55 seconds)
Cbc0010I After 3118000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2639.35 seconds)
Cbc0010I After 3119000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2640.15 seconds)
Cbc0010I After 3120000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2640.86 seconds)
Cbc0010I After 3121000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2641.71 seconds)
Cbc0010I After 3122000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2642.60 seconds)
Cbc0010I After 3123000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2643.50 seconds)
Cbc0010I After 3124000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2644.38 seconds)
Cbc0010I After 3125000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2645.22 seconds)
Cbc0010I After 3126000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2646.08 seconds)
Cbc0010I After 3127000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2646.90 seconds)
Cbc0010I After 3128000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2647.69 seconds)
Cbc0010I After 3129000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2648.57 seconds)
Cbc0010I After 3130000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2649.26 seconds)
Cbc0010I After 3131000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2650.05 seconds)
Cbc0010I After 3132000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2650.86 seconds)
Cbc0010I After 3133000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2651.68 seconds)
Cbc0010I After 3134000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2652.65 seconds)
Cbc0010I After 3135000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2653.46 seconds)
Cbc0010I After 3136000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2654.28 seconds)
Cbc0010I After 3137000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2655.13 seconds)
Cbc0010I After 3138000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2656.05 seconds)
Cbc0010I After 3139000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2656.85 seconds)
Cbc0010I After 3140000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2657.71 seconds)
Cbc0010I After 3141000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2658.56 seconds)
Cbc0010I After 3142000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2659.49 seconds)
Cbc0010I After 3143000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2660.40 seconds)
Cbc0010I After 3144000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2661.33 seconds)
Cbc0010I After 3145000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2662.24 seconds)
Cbc0010I After 3146000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2662.98 seconds)
Cbc0010I After 3147000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2663.75 seconds)
Cbc0010I After 3148000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2664.56 seconds)
Cbc0010I After 3149000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2665.44 seconds)
Cbc0010I After 3150000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2666.25 seconds)
Cbc0010I After 3151000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2667.10 seconds)
Cbc0010I After 3152000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2667.94 seconds)
Cbc0010I After 3153000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2668.73 seconds)
Cbc0010I After 3154000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2669.56 seconds)
Cbc0010I After 3155000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2670.42 seconds)
Cbc0010I After 3156000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2671.14 seconds)
Cbc0010I After 3157000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2672.05 seconds)
Cbc0010I After 3158000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2672.98 seconds)
Cbc0010I After 3159000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2673.86 seconds)
Cbc0010I After 3160000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2674.72 seconds)
Cbc0010I After 3161000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2675.56 seconds)
Cbc0010I After 3162000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2676.47 seconds)
Cbc0010I After 3163000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2677.34 seconds)
Cbc0010I After 3164000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2678.24 seconds)
Cbc0010I After 3165000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2679.12 seconds)
Cbc0010I After 3166000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2679.88 seconds)
Cbc0010I After 3167000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2680.56 seconds)
Cbc0010I After 3168000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2681.40 seconds)
Cbc0010I After 3169000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2682.09 seconds)
Cbc0010I After 3170000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2682.92 seconds)
Cbc0010I After 3171000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2683.86 seconds)
Cbc0010I After 3172000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2684.85 seconds)
Cbc0010I After 3173000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2685.87 seconds)
Cbc0010I After 3174000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2686.74 seconds)
Cbc0010I After 3175000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2687.60 seconds)
Cbc0010I After 3176000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2688.60 seconds)
Cbc0010I After 3177000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2689.56 seconds)
Cbc0010I After 3178000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2690.50 seconds)
Cbc0010I After 3179000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2691.44 seconds)
Cbc0010I After 3180000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2692.38 seconds)
Cbc0010I After 3181000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2693.18 seconds)
Cbc0010I After 3182000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2694.09 seconds)
Cbc0010I After 3183000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2695.00 seconds)
Cbc0010I After 3184000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2695.80 seconds)
Cbc0010I After 3185000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2696.71 seconds)
Cbc0010I After 3186000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2697.60 seconds)
Cbc0010I After 3187000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2698.39 seconds)
Cbc0010I After 3188000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2699.11 seconds)
Cbc0010I After 3189000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2699.83 seconds)
Cbc0010I After 3190000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2700.70 seconds)
Cbc0010I After 3191000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2701.53 seconds)
Cbc0010I After 3192000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2702.42 seconds)
Cbc0010I After 3193000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2703.09 seconds)
Cbc0010I After 3194000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2703.68 seconds)
Cbc0010I After 3195000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2704.40 seconds)
Cbc0010I After 3196000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2705.19 seconds)
Cbc0010I After 3197000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2705.98 seconds)
Cbc0010I After 3198000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2706.81 seconds)
Cbc0010I After 3199000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2707.62 seconds)
Cbc0010I After 3200000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2708.37 seconds)
Cbc0010I After 3201000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2709.14 seconds)
Cbc0010I After 3202000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2710.00 seconds)
Cbc0010I After 3203000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2710.78 seconds)
Cbc0010I After 3204000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2711.58 seconds)
Cbc0010I After 3205000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2712.33 seconds)
Cbc0010I After 3206000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2713.11 seconds)
Cbc0010I After 3207000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2713.98 seconds)
Cbc0010I After 3208000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2714.75 seconds)
Cbc0010I After 3209000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2715.58 seconds)
Cbc0010I After 3210000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2716.37 seconds)
Cbc0010I After 3211000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2717.33 seconds)
Cbc0010I After 3212000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2718.21 seconds)
Cbc0010I After 3213000 nodes, 102518 on tree, -72.595615 best solution, best possible -74.401306 (2718.99 seconds)
Cbc0010I After 3214000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2719.87 seconds)
Cbc0010I After 3215000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2720.74 seconds)
Cbc0010I After 3216000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2721.62 seconds)
Cbc0010I After 3217000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2722.47 seconds)
Cbc0010I After 3218000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2723.32 seconds)
Cbc0010I After 3219000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2724.24 seconds)
Cbc0010I After 3220000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2724.94 seconds)
Cbc0010I After 3221000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2725.93 seconds)
Cbc0010I After 3222000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2726.73 seconds)
Cbc0010I After 3223000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2727.66 seconds)
Cbc0010I After 3224000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2728.36 seconds)
Cbc0010I After 3225000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2729.23 seconds)
Cbc0010I After 3226000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2730.16 seconds)
Cbc0010I After 3227000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2730.97 seconds)
Cbc0010I After 3228000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2731.78 seconds)
Cbc0010I After 3229000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2732.64 seconds)
Cbc0010I After 3230000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2733.60 seconds)
Cbc0010I After 3231000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2734.61 seconds)
Cbc0010I After 3232000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2735.42 seconds)
Cbc0010I After 3233000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2736.24 seconds)
Cbc0010I After 3234000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2737.11 seconds)
Cbc0010I After 3235000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2737.95 seconds)
Cbc0010I After 3236000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2738.93 seconds)
Cbc0010I After 3237000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2739.64 seconds)
Cbc0010I After 3238000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2740.39 seconds)
Cbc0010I After 3239000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2741.24 seconds)
Cbc0010I After 3240000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2742.03 seconds)
Cbc0010I After 3241000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2742.76 seconds)
Cbc0010I After 3242000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2743.63 seconds)
Cbc0010I After 3243000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2744.48 seconds)
Cbc0010I After 3244000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2745.35 seconds)
Cbc0010I After 3245000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2746.38 seconds)
Cbc0010I After 3246000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2747.29 seconds)
Cbc0010I After 3247000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2748.13 seconds)
Cbc0010I After 3248000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2749.02 seconds)
Cbc0010I After 3249000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2749.79 seconds)
Cbc0010I After 3250000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2750.61 seconds)
Cbc0010I After 3251000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2751.52 seconds)
Cbc0010I After 3252000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2752.41 seconds)
Cbc0010I After 3253000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2753.41 seconds)
Cbc0010I After 3254000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2754.30 seconds)
Cbc0010I After 3255000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2754.91 seconds)
Cbc0010I After 3256000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2755.66 seconds)
Cbc0010I After 3257000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2756.37 seconds)
Cbc0010I After 3258000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2757.16 seconds)
Cbc0010I After 3259000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2757.98 seconds)
Cbc0010I After 3260000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2758.73 seconds)
Cbc0010I After 3261000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2759.62 seconds)
Cbc0010I After 3262000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2760.49 seconds)
Cbc0010I After 3263000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2761.38 seconds)
Cbc0010I After 3264000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2762.19 seconds)
Cbc0010I After 3265000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2762.96 seconds)
Cbc0010I After 3266000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2763.73 seconds)
Cbc0010I After 3267000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2764.62 seconds)
Cbc0010I After 3268000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2765.43 seconds)
Cbc0010I After 3269000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2766.31 seconds)
Cbc0010I After 3270000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2767.13 seconds)
Cbc0010I After 3271000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2767.98 seconds)
Cbc0010I After 3272000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2768.80 seconds)
Cbc0010I After 3273000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2769.64 seconds)
Cbc0010I After 3274000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2770.46 seconds)
Cbc0010I After 3275000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2771.16 seconds)
Cbc0010I After 3276000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2772.10 seconds)
Cbc0010I After 3277000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2772.84 seconds)
Cbc0010I After 3278000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2773.58 seconds)
Cbc0010I After 3279000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2774.51 seconds)
Cbc0010I After 3280000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2775.38 seconds)
Cbc0010I After 3281000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2776.35 seconds)
Cbc0010I After 3282000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2777.13 seconds)
Cbc0010I After 3283000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2777.85 seconds)
Cbc0010I After 3284000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2778.55 seconds)
Cbc0010I After 3285000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2779.46 seconds)
Cbc0010I After 3286000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2780.44 seconds)
Cbc0010I After 3287000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2781.27 seconds)
Cbc0010I After 3288000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2782.03 seconds)
Cbc0010I After 3289000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2782.86 seconds)
Cbc0010I After 3290000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2783.79 seconds)
Cbc0010I After 3291000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2784.72 seconds)
Cbc0010I After 3292000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2785.61 seconds)
Cbc0010I After 3293000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2786.40 seconds)
Cbc0010I After 3294000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2787.29 seconds)
Cbc0010I After 3295000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2788.08 seconds)
Cbc0010I After 3296000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2788.88 seconds)
Cbc0010I After 3297000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2789.67 seconds)
Cbc0010I After 3298000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2790.38 seconds)
Cbc0010I After 3299000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2791.10 seconds)
Cbc0010I After 3300000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2791.96 seconds)
Cbc0010I After 3301000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2792.81 seconds)
Cbc0010I After 3302000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2793.59 seconds)
Cbc0010I After 3303000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2794.42 seconds)
Cbc0010I After 3304000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2795.29 seconds)
Cbc0010I After 3305000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2796.16 seconds)
Cbc0010I After 3306000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2797.00 seconds)
Cbc0010I After 3307000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2797.79 seconds)
Cbc0010I After 3308000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2798.57 seconds)
Cbc0010I After 3309000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2799.49 seconds)
Cbc0010I After 3310000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2800.34 seconds)
Cbc0010I After 3311000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2801.25 seconds)
Cbc0010I After 3312000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2802.03 seconds)
Cbc0010I After 3313000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2802.90 seconds)
Cbc0010I After 3314000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2803.81 seconds)
Cbc0010I After 3315000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2804.74 seconds)
Cbc0010I After 3316000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2805.60 seconds)
Cbc0010I After 3317000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2806.45 seconds)
Cbc0010I After 3318000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2807.24 seconds)
Cbc0010I After 3319000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2808.16 seconds)
Cbc0010I After 3320000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2809.06 seconds)
Cbc0010I After 3321000 nodes, 102500 on tree, -72.595615 best solution, best possible -74.401306 (2809.98 seconds)
Cbc0010I After 3322000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2810.93 seconds)
Cbc0010I After 3323000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2811.73 seconds)
Cbc0010I After 3324000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2812.48 seconds)
Cbc0010I After 3325000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2813.32 seconds)
Cbc0010I After 3326000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2814.18 seconds)
Cbc0010I After 3327000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2815.04 seconds)
Cbc0010I After 3328000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2815.94 seconds)
Cbc0010I After 3329000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2816.87 seconds)
Cbc0010I After 3330000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2817.74 seconds)
Cbc0010I After 3331000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2818.73 seconds)
Cbc0010I After 3332000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2819.66 seconds)
Cbc0010I After 3333000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2820.56 seconds)
Cbc0010I After 3334000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2821.47 seconds)
Cbc0010I After 3335000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2822.43 seconds)
Cbc0010I After 3336000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2823.26 seconds)
Cbc0010I After 3337000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2824.16 seconds)
Cbc0010I After 3338000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2825.05 seconds)
Cbc0010I After 3339000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2825.92 seconds)
Cbc0010I After 3340000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2826.91 seconds)
Cbc0010I After 3341000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2827.64 seconds)
Cbc0010I After 3342000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2828.61 seconds)
Cbc0010I After 3343000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2829.45 seconds)
Cbc0010I After 3344000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2830.38 seconds)
Cbc0010I After 3345000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2831.33 seconds)
Cbc0010I After 3346000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2832.19 seconds)
Cbc0010I After 3347000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2833.03 seconds)
Cbc0010I After 3348000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2833.88 seconds)
Cbc0010I After 3349000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2834.76 seconds)
Cbc0010I After 3350000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2835.65 seconds)
Cbc0010I After 3351000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2836.54 seconds)
Cbc0010I After 3352000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2837.42 seconds)
Cbc0010I After 3353000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2838.37 seconds)
Cbc0010I After 3354000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2839.28 seconds)
Cbc0010I After 3355000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2840.08 seconds)
Cbc0010I After 3356000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2840.88 seconds)
Cbc0010I After 3357000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2841.77 seconds)
Cbc0010I After 3358000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2842.65 seconds)
Cbc0010I After 3359000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2843.57 seconds)
Cbc0010I After 3360000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2844.47 seconds)
Cbc0010I After 3361000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2845.34 seconds)
Cbc0010I After 3362000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2846.18 seconds)
Cbc0010I After 3363000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2847.13 seconds)
Cbc0010I After 3364000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2848.02 seconds)
Cbc0010I After 3365000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2848.91 seconds)
Cbc0010I After 3366000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2849.86 seconds)
Cbc0010I After 3367000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2850.75 seconds)
Cbc0010I After 3368000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2851.55 seconds)
Cbc0010I After 3369000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2852.43 seconds)
Cbc0010I After 3370000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2853.28 seconds)
Cbc0010I After 3371000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2854.10 seconds)
Cbc0010I After 3372000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2854.90 seconds)
Cbc0010I After 3373000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2855.56 seconds)
Cbc0010I After 3374000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2856.33 seconds)
Cbc0010I After 3375000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2857.11 seconds)
Cbc0010I After 3376000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2858.08 seconds)
Cbc0010I After 3377000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2858.90 seconds)
Cbc0010I After 3378000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2859.72 seconds)
Cbc0010I After 3379000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2860.70 seconds)
Cbc0010I After 3380000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2861.57 seconds)
Cbc0010I After 3381000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2862.44 seconds)
Cbc0010I After 3382000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2863.31 seconds)
Cbc0010I After 3383000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2864.16 seconds)
Cbc0010I After 3384000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2864.90 seconds)
Cbc0010I After 3385000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2865.71 seconds)
Cbc0010I After 3386000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2866.54 seconds)
Cbc0010I After 3387000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2867.41 seconds)
Cbc0010I After 3388000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2868.21 seconds)
Cbc0010I After 3389000 nodes, 102500 on tree, -72.595615 best solution, best possible -74.401306 (2869.11 seconds)
Cbc0010I After 3390000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2869.96 seconds)
Cbc0010I After 3391000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2870.91 seconds)
Cbc0010I After 3392000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2871.75 seconds)
Cbc0010I After 3393000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2872.54 seconds)
Cbc0010I After 3394000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2873.31 seconds)
Cbc0010I After 3395000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2874.05 seconds)
Cbc0010I After 3396000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2874.84 seconds)
Cbc0010I After 3397000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2875.77 seconds)
Cbc0010I After 3398000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2876.62 seconds)
Cbc0010I After 3399000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2877.40 seconds)
Cbc0010I After 3400000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2878.28 seconds)
Cbc0010I After 3401000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2879.13 seconds)
Cbc0010I After 3402000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2879.92 seconds)
Cbc0010I After 3403000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2880.75 seconds)
Cbc0010I After 3404000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2881.56 seconds)
Cbc0010I After 3405000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2882.26 seconds)
Cbc0010I After 3406000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2883.15 seconds)
Cbc0010I After 3407000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2883.90 seconds)
Cbc0010I After 3408000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2884.64 seconds)
Cbc0010I After 3409000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2885.39 seconds)
Cbc0010I After 3410000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2886.26 seconds)
Cbc0010I After 3411000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2887.16 seconds)
Cbc0010I After 3412000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2888.00 seconds)
Cbc0010I After 3413000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2888.85 seconds)
Cbc0010I After 3414000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2889.61 seconds)
Cbc0010I After 3415000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2890.49 seconds)
Cbc0010I After 3416000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2891.38 seconds)
Cbc0010I After 3417000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2892.20 seconds)
Cbc0010I After 3418000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2893.03 seconds)
Cbc0010I After 3419000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2893.84 seconds)
Cbc0010I After 3420000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2894.74 seconds)
Cbc0010I After 3421000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2895.69 seconds)
Cbc0010I After 3422000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2896.59 seconds)
Cbc0010I After 3423000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2897.31 seconds)
Cbc0010I After 3424000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2898.13 seconds)
Cbc0010I After 3425000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2898.81 seconds)
Cbc0010I After 3426000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2899.61 seconds)
Cbc0010I After 3427000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2900.44 seconds)
Cbc0010I After 3428000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2901.33 seconds)
Cbc0010I After 3429000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2902.17 seconds)
Cbc0010I After 3430000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2903.00 seconds)
Cbc0010I After 3431000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2903.81 seconds)
Cbc0010I After 3432000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2904.74 seconds)
Cbc0010I After 3433000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2905.64 seconds)
Cbc0010I After 3434000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2906.65 seconds)
Cbc0010I After 3435000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2907.81 seconds)
Cbc0010I After 3436000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2908.86 seconds)
Cbc0010I After 3437000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2909.89 seconds)
Cbc0010I After 3438000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2910.93 seconds)
Cbc0010I After 3439000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2912.06 seconds)
Cbc0010I After 3440000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2913.00 seconds)
Cbc0010I After 3441000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2913.91 seconds)
Cbc0010I After 3442000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2914.88 seconds)
Cbc0010I After 3443000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2915.91 seconds)
Cbc0010I After 3444000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2916.88 seconds)
Cbc0010I After 3445000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2917.73 seconds)
Cbc0010I After 3446000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2918.71 seconds)
Cbc0010I After 3447000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2919.69 seconds)
Cbc0010I After 3448000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2920.60 seconds)
Cbc0010I After 3449000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2921.50 seconds)
Cbc0010I After 3450000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2922.47 seconds)
Cbc0010I After 3451000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2923.43 seconds)
Cbc0010I After 3452000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2924.44 seconds)
Cbc0010I After 3453000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2925.40 seconds)
Cbc0010I After 3454000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.401306 (2926.19 seconds)
Cbc0010I After 3455000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2927.04 seconds)
Cbc0010I After 3456000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2927.93 seconds)
Cbc0010I After 3457000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2928.68 seconds)
Cbc0010I After 3458000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2929.37 seconds)
Cbc0010I After 3459000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2930.28 seconds)
Cbc0010I After 3460000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2931.13 seconds)
Cbc0010I After 3461000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2932.10 seconds)
Cbc0010I After 3462000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2932.99 seconds)
Cbc0010I After 3463000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2934.02 seconds)
Cbc0010I After 3464000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2934.93 seconds)
Cbc0010I After 3465000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2935.70 seconds)
Cbc0010I After 3466000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2936.51 seconds)
Cbc0010I After 3467000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.401306 (2937.34 seconds)
Cbc0010I After 3468000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2938.24 seconds)
Cbc0010I After 3469000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2939.04 seconds)
Cbc0010I After 3470000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2939.81 seconds)
Cbc0010I After 3471000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2940.59 seconds)
Cbc0010I After 3472000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2941.41 seconds)
Cbc0010I After 3473000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2942.26 seconds)
Cbc0010I After 3474000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2943.07 seconds)
Cbc0010I After 3475000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2944.02 seconds)
Cbc0010I After 3476000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2944.86 seconds)
Cbc0010I After 3477000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2945.81 seconds)
Cbc0010I After 3478000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2946.70 seconds)
Cbc0010I After 3479000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2947.52 seconds)
Cbc0010I After 3480000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2948.24 seconds)
Cbc0010I After 3481000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2949.03 seconds)
Cbc0010I After 3482000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2949.81 seconds)
Cbc0010I After 3483000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2950.56 seconds)
Cbc0010I After 3484000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2951.19 seconds)
Cbc0010I After 3485000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2951.86 seconds)
Cbc0010I After 3486000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2952.72 seconds)
Cbc0010I After 3487000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2953.51 seconds)
Cbc0010I After 3488000 nodes, 102517 on tree, -72.595615 best solution, best possible -74.401306 (2954.36 seconds)
Cbc0010I After 3489000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2955.28 seconds)
Cbc0010I After 3490000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2956.00 seconds)
Cbc0010I After 3491000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2956.85 seconds)
Cbc0010I After 3492000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2957.64 seconds)
Cbc0010I After 3493000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2958.53 seconds)
Cbc0010I After 3494000 nodes, 102511 on tree, -72.595615 best solution, best possible -74.401306 (2959.42 seconds)
Cbc0010I After 3495000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2960.24 seconds)
Cbc0010I After 3496000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2961.02 seconds)
Cbc0010I After 3497000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2961.78 seconds)
Cbc0010I After 3498000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2962.57 seconds)
Cbc0010I After 3499000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2963.39 seconds)
Cbc0010I After 3500000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2964.23 seconds)
Cbc0010I After 3501000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2965.05 seconds)
Cbc0010I After 3502000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2965.92 seconds)
Cbc0010I After 3503000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2966.81 seconds)
Cbc0010I After 3504000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2967.78 seconds)
Cbc0010I After 3505000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2968.59 seconds)
Cbc0010I After 3506000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2969.57 seconds)
Cbc0010I After 3507000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2970.51 seconds)
Cbc0010I After 3508000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2971.26 seconds)
Cbc0010I After 3509000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2972.07 seconds)
Cbc0010I After 3510000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2972.86 seconds)
Cbc0010I After 3511000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2973.68 seconds)
Cbc0010I After 3512000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2974.52 seconds)
Cbc0010I After 3513000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2975.24 seconds)
Cbc0010I After 3514000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (2976.03 seconds)
Cbc0010I After 3515000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2976.92 seconds)
Cbc0010I After 3516000 nodes, 102514 on tree, -72.595615 best solution, best possible -74.401306 (2977.90 seconds)
Cbc0010I After 3517000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2978.74 seconds)
Cbc0010I After 3518000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2979.49 seconds)
Cbc0010I After 3519000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2980.29 seconds)
Cbc0010I After 3520000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2981.25 seconds)
Cbc0010I After 3521000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (2982.22 seconds)
Cbc0010I After 3522000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2983.02 seconds)
Cbc0010I After 3523000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2983.91 seconds)
Cbc0010I After 3524000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2984.76 seconds)
Cbc0010I After 3525000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2985.69 seconds)
Cbc0010I After 3526000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2986.52 seconds)
Cbc0010I After 3527000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2987.31 seconds)
Cbc0010I After 3528000 nodes, 102506 on tree, -72.595615 best solution, best possible -74.401306 (2988.11 seconds)
Cbc0010I After 3529000 nodes, 102504 on tree, -72.595615 best solution, best possible -74.401306 (2988.79 seconds)
Cbc0010I After 3530000 nodes, 102512 on tree, -72.595615 best solution, best possible -74.401306 (2989.60 seconds)
Cbc0010I After 3531000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (2990.43 seconds)
Cbc0010I After 3532000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.401306 (2991.31 seconds)
Cbc0010I After 3533000 nodes, 102503 on tree, -72.595615 best solution, best possible -74.401306 (2992.22 seconds)
Cbc0010I After 3534000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2993.10 seconds)
Cbc0010I After 3535000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (2993.96 seconds)
Cbc0010I After 3536000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2994.80 seconds)
Cbc0010I After 3537000 nodes, 102509 on tree, -72.595615 best solution, best possible -74.401306 (2995.62 seconds)
Cbc0010I After 3538000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2996.39 seconds)
Cbc0010I After 3539000 nodes, 102508 on tree, -72.595615 best solution, best possible -74.401306 (2997.31 seconds)
Cbc0010I After 3540000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2998.32 seconds)
Cbc0010I After 3541000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.401306 (2999.36 seconds)
Cbc0010I After 3542000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (3000.31 seconds)
Cbc0010I After 3543000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.401306 (3001.14 seconds)
Cbc0010I After 3544000 nodes, 102513 on tree, -72.595615 best solution, best possible -74.401306 (3001.90 seconds)
Cbc0010I After 3545000 nodes, 102505 on tree, -72.595615 best solution, best possible -74.401306 (3002.84 seconds)
Cbc0010I After 3546000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.401306 (3003.78 seconds)
Cbc0010I After 3547000 nodes, 102494 on tree, -72.595615 best solution, best possible -74.401306 (3004.71 seconds)
Cbc0010I After 3548000 nodes, 102488 on tree, -72.595615 best solution, best possible -74.401306 (3005.61 seconds)
Cbc0010I After 3549000 nodes, 102472 on tree, -72.595615 best solution, best possible -74.401306 (3006.57 seconds)
Cbc0010I After 3550000 nodes, 102452 on tree, -72.595615 best solution, best possible -74.401306 (3007.43 seconds)
Cbc0010I After 3551000 nodes, 102936 on tree, -72.595615 best solution, best possible -74.401306 (3008.47 seconds)
Cbc0010I After 3552000 nodes, 102917 on tree, -72.595615 best solution, best possible -74.401306 (3009.17 seconds)
Cbc0010I After 3553000 nodes, 102910 on tree, -72.595615 best solution, best possible -74.401306 (3009.87 seconds)
Cbc0010I After 3554000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.401306 (3010.66 seconds)
Cbc0010I After 3555000 nodes, 102872 on tree, -72.595615 best solution, best possible -74.401306 (3011.52 seconds)
Cbc0010I After 3556000 nodes, 102849 on tree, -72.595615 best solution, best possible -74.401306 (3012.41 seconds)
Cbc0010I After 3557000 nodes, 102815 on tree, -72.595615 best solution, best possible -74.401306 (3013.30 seconds)
Cbc0010I After 3558000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.401306 (3014.14 seconds)
Cbc0010I After 3559000 nodes, 102778 on tree, -72.595615 best solution, best possible -74.401306 (3015.01 seconds)
Cbc0010I After 3560000 nodes, 102757 on tree, -72.595615 best solution, best possible -74.401306 (3015.90 seconds)
Cbc0010I After 3561000 nodes, 102745 on tree, -72.595615 best solution, best possible -74.401306 (3016.76 seconds)
Cbc0010I After 3562000 nodes, 102726 on tree, -72.595615 best solution, best possible -74.401306 (3017.55 seconds)
Cbc0010I After 3563000 nodes, 102725 on tree, -72.595615 best solution, best possible -74.401306 (3018.49 seconds)
Cbc0010I After 3564000 nodes, 102703 on tree, -72.595615 best solution, best possible -74.401306 (3019.32 seconds)
Cbc0010I After 3565000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.401306 (3020.24 seconds)
Cbc0010I After 3566000 nodes, 102674 on tree, -72.595615 best solution, best possible -74.401306 (3021.10 seconds)
Cbc0010I After 3567000 nodes, 102666 on tree, -72.595615 best solution, best possible -74.401306 (3022.04 seconds)
Cbc0010I After 3568000 nodes, 102651 on tree, -72.595615 best solution, best possible -74.401306 (3022.94 seconds)
Cbc0010I After 3569000 nodes, 102642 on tree, -72.595615 best solution, best possible -74.401306 (3023.87 seconds)
Cbc0010I After 3570000 nodes, 102628 on tree, -72.595615 best solution, best possible -74.401306 (3024.72 seconds)
Cbc0010I After 3571000 nodes, 102626 on tree, -72.595615 best solution, best possible -74.401306 (3025.45 seconds)
Cbc0010I After 3572000 nodes, 102619 on tree, -72.595615 best solution, best possible -74.401306 (3026.32 seconds)
Cbc0010I After 3573000 nodes, 102594 on tree, -72.595615 best solution, best possible -74.401306 (3027.30 seconds)
Cbc0010I After 3574000 nodes, 102576 on tree, -72.595615 best solution, best possible -74.401306 (3028.27 seconds)
Cbc0010I After 3575000 nodes, 102551 on tree, -72.595615 best solution, best possible -74.401306 (3029.14 seconds)
Cbc0010I After 3576000 nodes, 102544 on tree, -72.595615 best solution, best possible -74.401306 (3030.07 seconds)
Cbc0010I After 3577000 nodes, 102531 on tree, -72.595615 best solution, best possible -74.401306 (3030.87 seconds)
Cbc0010I After 3578000 nodes, 102515 on tree, -72.595615 best solution, best possible -74.401306 (3031.82 seconds)
Cbc0010I After 3579000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.401306 (3032.70 seconds)
Cbc0010I After 3580000 nodes, 102482 on tree, -72.595615 best solution, best possible -74.401306 (3033.58 seconds)
Cbc0010I After 3581000 nodes, 102458 on tree, -72.595615 best solution, best possible -74.401306 (3034.44 seconds)
Cbc0010I After 3582000 nodes, 102951 on tree, -72.595615 best solution, best possible -74.397703 (3035.92 seconds)
Cbc0010I After 3583000 nodes, 102955 on tree, -72.595615 best solution, best possible -74.397703 (3036.66 seconds)
Cbc0010I After 3584000 nodes, 102956 on tree, -72.595615 best solution, best possible -74.397703 (3037.41 seconds)
Cbc0010I After 3585000 nodes, 102959 on tree, -72.595615 best solution, best possible -74.397703 (3038.28 seconds)
Cbc0010I After 3586000 nodes, 102954 on tree, -72.595615 best solution, best possible -74.397703 (3039.24 seconds)
Cbc0010I After 3587000 nodes, 102929 on tree, -72.595615 best solution, best possible -74.397703 (3040.18 seconds)
Cbc0010I After 3588000 nodes, 102905 on tree, -72.595615 best solution, best possible -74.397703 (3041.13 seconds)
Cbc0010I After 3589000 nodes, 102893 on tree, -72.595615 best solution, best possible -74.397703 (3041.96 seconds)
Cbc0010I After 3590000 nodes, 102872 on tree, -72.595615 best solution, best possible -74.397703 (3042.86 seconds)
Cbc0010I After 3591000 nodes, 102848 on tree, -72.595615 best solution, best possible -74.397703 (3043.85 seconds)
Cbc0010I After 3592000 nodes, 102821 on tree, -72.595615 best solution, best possible -74.397703 (3044.81 seconds)
Cbc0010I After 3593000 nodes, 102808 on tree, -72.595615 best solution, best possible -74.397703 (3045.68 seconds)
Cbc0010I After 3594000 nodes, 102800 on tree, -72.595615 best solution, best possible -74.397703 (3046.52 seconds)
Cbc0010I After 3595000 nodes, 102770 on tree, -72.595615 best solution, best possible -74.397703 (3047.42 seconds)
Cbc0010I After 3596000 nodes, 102749 on tree, -72.595615 best solution, best possible -74.397703 (3048.35 seconds)
Cbc0010I After 3597000 nodes, 102739 on tree, -72.595615 best solution, best possible -74.397703 (3049.21 seconds)
Cbc0010I After 3598000 nodes, 102738 on tree, -72.595615 best solution, best possible -74.397703 (3049.99 seconds)
Cbc0010I After 3599000 nodes, 102715 on tree, -72.595615 best solution, best possible -74.397703 (3050.85 seconds)
Cbc0010I After 3600000 nodes, 102689 on tree, -72.595615 best solution, best possible -74.397703 (3051.71 seconds)
Cbc0010I After 3601000 nodes, 102672 on tree, -72.595615 best solution, best possible -74.397703 (3052.65 seconds)
Cbc0010I After 3602000 nodes, 102645 on tree, -72.595615 best solution, best possible -74.397703 (3053.51 seconds)
Cbc0010I After 3603000 nodes, 102627 on tree, -72.595615 best solution, best possible -74.397703 (3054.37 seconds)
Cbc0010I After 3604000 nodes, 102613 on tree, -72.595615 best solution, best possible -74.397703 (3055.26 seconds)
Cbc0010I After 3605000 nodes, 102611 on tree, -72.595615 best solution, best possible -74.397703 (3055.94 seconds)
Cbc0010I After 3606000 nodes, 102602 on tree, -72.595615 best solution, best possible -74.397703 (3056.86 seconds)
Cbc0010I After 3607000 nodes, 102573 on tree, -72.595615 best solution, best possible -74.397703 (3057.77 seconds)
Cbc0010I After 3608000 nodes, 102552 on tree, -72.595615 best solution, best possible -74.397703 (3058.71 seconds)
Cbc0010I After 3609000 nodes, 102528 on tree, -72.595615 best solution, best possible -74.397703 (3059.65 seconds)
Cbc0010I After 3610000 nodes, 102498 on tree, -72.595615 best solution, best possible -74.397703 (3060.54 seconds)
Cbc0010I After 3611000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.397703 (3061.34 seconds)
Cbc0010I After 3612000 nodes, 102476 on tree, -72.595615 best solution, best possible -74.397703 (3062.16 seconds)
Cbc0010I After 3613000 nodes, 102449 on tree, -72.595615 best solution, best possible -74.397703 (3063.07 seconds)
Cbc0010I After 3614000 nodes, 102944 on tree, -72.595615 best solution, best possible -74.394676 (3064.45 seconds)
Cbc0010I After 3615000 nodes, 102943 on tree, -72.595615 best solution, best possible -74.394676 (3065.10 seconds)
Cbc0010I After 3616000 nodes, 102942 on tree, -72.595615 best solution, best possible -74.394676 (3065.80 seconds)
Cbc0010I After 3617000 nodes, 102930 on tree, -72.595615 best solution, best possible -74.394676 (3066.58 seconds)
Cbc0010I After 3618000 nodes, 102930 on tree, -72.595615 best solution, best possible -74.394676 (3067.43 seconds)
Cbc0010I After 3619000 nodes, 102918 on tree, -72.595615 best solution, best possible -74.394676 (3068.22 seconds)
Cbc0010I After 3620000 nodes, 102900 on tree, -72.595615 best solution, best possible -74.394676 (3069.10 seconds)
Cbc0010I After 3621000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.394676 (3069.92 seconds)
Cbc0010I After 3622000 nodes, 102862 on tree, -72.595615 best solution, best possible -74.394676 (3070.87 seconds)
Cbc0010I After 3623000 nodes, 102863 on tree, -72.595615 best solution, best possible -74.394676 (3071.85 seconds)
Cbc0010I After 3624000 nodes, 102834 on tree, -72.595615 best solution, best possible -74.394676 (3072.68 seconds)
Cbc0010I After 3625000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.394676 (3073.65 seconds)
Cbc0010I After 3626000 nodes, 102767 on tree, -72.595615 best solution, best possible -74.394676 (3074.55 seconds)
Cbc0010I After 3627000 nodes, 102736 on tree, -72.595615 best solution, best possible -74.394676 (3075.51 seconds)
Cbc0010I After 3628000 nodes, 102720 on tree, -72.595615 best solution, best possible -74.394676 (3076.44 seconds)
Cbc0010I After 3629000 nodes, 102698 on tree, -72.595615 best solution, best possible -74.394676 (3077.33 seconds)
Cbc0010I After 3630000 nodes, 102686 on tree, -72.595615 best solution, best possible -74.394676 (3078.25 seconds)
Cbc0010I After 3631000 nodes, 102655 on tree, -72.595615 best solution, best possible -74.394676 (3079.08 seconds)
Cbc0010I After 3632000 nodes, 102650 on tree, -72.595615 best solution, best possible -74.394676 (3079.99 seconds)
Cbc0010I After 3633000 nodes, 102615 on tree, -72.595615 best solution, best possible -74.394676 (3080.99 seconds)
Cbc0010I After 3634000 nodes, 102610 on tree, -72.595615 best solution, best possible -74.394676 (3081.88 seconds)
Cbc0010I After 3635000 nodes, 102612 on tree, -72.595615 best solution, best possible -74.394676 (3082.69 seconds)
Cbc0010I After 3636000 nodes, 102593 on tree, -72.595615 best solution, best possible -74.394676 (3083.50 seconds)
Cbc0010I After 3637000 nodes, 102550 on tree, -72.595615 best solution, best possible -74.394676 (3084.45 seconds)
Cbc0010I After 3638000 nodes, 102550 on tree, -72.595615 best solution, best possible -74.394676 (3085.17 seconds)
Cbc0010I After 3639000 nodes, 102531 on tree, -72.595615 best solution, best possible -74.394676 (3086.14 seconds)
Cbc0010I After 3640000 nodes, 102501 on tree, -72.595615 best solution, best possible -74.394676 (3087.08 seconds)
Cbc0010I After 3641000 nodes, 102484 on tree, -72.595615 best solution, best possible -74.394676 (3087.95 seconds)
Cbc0010I After 3642000 nodes, 102475 on tree, -72.595615 best solution, best possible -74.394676 (3088.90 seconds)
Cbc0010I After 3643000 nodes, 102460 on tree, -72.595615 best solution, best possible -74.394676 (3089.82 seconds)
Cbc0010I After 3644000 nodes, 102438 on tree, -72.595615 best solution, best possible -74.394676 (3090.75 seconds)
Cbc0010I After 3645000 nodes, 102253 on tree, -72.595615 best solution, best possible -74.394676 (3091.52 seconds)
Cbc0010I After 3646000 nodes, 102750 on tree, -72.595615 best solution, best possible -74.391485 (3093.40 seconds)
Cbc0010I After 3647000 nodes, 102753 on tree, -72.595615 best solution, best possible -74.391485 (3094.06 seconds)
Cbc0010I After 3648000 nodes, 102748 on tree, -72.595615 best solution, best possible -74.391485 (3094.83 seconds)
Cbc0010I After 3649000 nodes, 102728 on tree, -72.595615 best solution, best possible -74.391485 (3095.75 seconds)
Cbc0010I After 3650000 nodes, 102718 on tree, -72.595615 best solution, best possible -74.391485 (3096.69 seconds)
Cbc0010I After 3651000 nodes, 102693 on tree, -72.595615 best solution, best possible -74.391485 (3097.60 seconds)
Cbc0010I After 3652000 nodes, 102678 on tree, -72.595615 best solution, best possible -74.391485 (3098.56 seconds)
Cbc0010I After 3653000 nodes, 102667 on tree, -72.595615 best solution, best possible -74.391485 (3099.53 seconds)
Cbc0010I After 3654000 nodes, 102668 on tree, -72.595615 best solution, best possible -74.391485 (3100.48 seconds)
Cbc0010I After 3655000 nodes, 102639 on tree, -72.595615 best solution, best possible -74.391485 (3101.36 seconds)
Cbc0010I After 3656000 nodes, 102622 on tree, -72.595615 best solution, best possible -74.391485 (3102.28 seconds)
Cbc0010I After 3657000 nodes, 102615 on tree, -72.595615 best solution, best possible -74.391485 (3103.08 seconds)
Cbc0010I After 3658000 nodes, 102609 on tree, -72.595615 best solution, best possible -74.391485 (3103.97 seconds)
Cbc0010I After 3659000 nodes, 102583 on tree, -72.595615 best solution, best possible -74.391485 (3104.84 seconds)
Cbc0010I After 3660000 nodes, 102572 on tree, -72.595615 best solution, best possible -74.391485 (3105.75 seconds)
Cbc0010I After 3661000 nodes, 102557 on tree, -72.595615 best solution, best possible -74.391485 (3106.67 seconds)
Cbc0010I After 3662000 nodes, 102552 on tree, -72.595615 best solution, best possible -74.391485 (3107.39 seconds)
Cbc0010I After 3663000 nodes, 102528 on tree, -72.595615 best solution, best possible -74.391485 (3108.28 seconds)
Cbc0010I After 3664000 nodes, 102516 on tree, -72.595615 best solution, best possible -74.391485 (3109.13 seconds)
Cbc0010I After 3665000 nodes, 102507 on tree, -72.595615 best solution, best possible -74.391485 (3109.96 seconds)
Cbc0010I After 3666000 nodes, 102510 on tree, -72.595615 best solution, best possible -74.391485 (3110.97 seconds)
Cbc0010I After 3667000 nodes, 102502 on tree, -72.595615 best solution, best possible -74.391485 (3111.83 seconds)
Cbc0010I After 3668000 nodes, 102488 on tree, -72.595615 best solution, best possible -74.391485 (3112.76 seconds)
Cbc0010I After 3669000 nodes, 102479 on tree, -72.595615 best solution, best possible -74.391485 (3113.63 seconds)
Cbc0010I After 3670000 nodes, 102472 on tree, -72.595615 best solution, best possible -74.391485 (3114.56 seconds)
Cbc0010I After 3671000 nodes, 102460 on tree, -72.595615 best solution, best possible -74.391485 (3115.42 seconds)
Cbc0010I After 3672000 nodes, 102453 on tree, -72.595615 best solution, best possible -74.391485 (3116.38 seconds)
Cbc0010I After 3673000 nodes, 102478 on tree, -72.595615 best solution, best possible -74.391485 (3117.32 seconds)
Cbc0010I After 3674000 nodes, 102465 on tree, -72.595615 best solution, best possible -74.391485 (3118.41 seconds)
Cbc0010I After 3675000 nodes, 102449 on tree, -72.595615 best solution, best possible -74.391485 (3119.44 seconds)
Cbc0010I After 3676000 nodes, 102949 on tree, -72.595615 best solution, best possible -74.391485 (3120.81 seconds)
Cbc0010I After 3677000 nodes, 102939 on tree, -72.595615 best solution, best possible -74.391485 (3121.67 seconds)
Cbc0010I After 3678000 nodes, 102923 on tree, -72.595615 best solution, best possible -74.391485 (3122.61 seconds)
Cbc0010I After 3679000 nodes, 102937 on tree, -72.595615 best solution, best possible -74.391485 (3123.51 seconds)
Cbc0010I After 3680000 nodes, 102913 on tree, -72.595615 best solution, best possible -74.391485 (3124.41 seconds)
Cbc0010I After 3681000 nodes, 102909 on tree, -72.595615 best solution, best possible -74.391485 (3125.28 seconds)
Cbc0010I After 3682000 nodes, 102901 on tree, -72.595615 best solution, best possible -74.391485 (3126.19 seconds)
Cbc0010I After 3683000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3127.10 seconds)
Cbc0010I After 3684000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.391485 (3128.10 seconds)
Cbc0010I After 3685000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3129.01 seconds)
Cbc0010I After 3686000 nodes, 102886 on tree, -72.595615 best solution, best possible -74.391485 (3129.91 seconds)
Cbc0010I After 3687000 nodes, 102880 on tree, -72.595615 best solution, best possible -74.391485 (3130.89 seconds)
Cbc0010I After 3688000 nodes, 102881 on tree, -72.595615 best solution, best possible -74.391485 (3131.75 seconds)
Cbc0010I After 3689000 nodes, 102886 on tree, -72.595615 best solution, best possible -74.391485 (3132.61 seconds)
Cbc0010I After 3690000 nodes, 102880 on tree, -72.595615 best solution, best possible -74.391485 (3133.64 seconds)
Cbc0010I After 3691000 nodes, 102881 on tree, -72.595615 best solution, best possible -74.391485 (3134.59 seconds)
Cbc0010I After 3692000 nodes, 102881 on tree, -72.595615 best solution, best possible -74.391485 (3135.38 seconds)
Cbc0010I After 3693000 nodes, 102887 on tree, -72.595615 best solution, best possible -74.391485 (3136.23 seconds)
Cbc0010I After 3694000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3137.16 seconds)
Cbc0010I After 3695000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3137.94 seconds)
Cbc0010I After 3696000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3138.82 seconds)
Cbc0010I After 3697000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3139.70 seconds)
Cbc0010I After 3698000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3140.49 seconds)
Cbc0010I After 3699000 nodes, 102880 on tree, -72.595615 best solution, best possible -74.391485 (3141.25 seconds)
Cbc0010I After 3700000 nodes, 102890 on tree, -72.595615 best solution, best possible -74.391485 (3142.01 seconds)
Cbc0010I After 3701000 nodes, 102879 on tree, -72.595615 best solution, best possible -74.391485 (3142.82 seconds)
Cbc0010I After 3702000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3143.69 seconds)
Cbc0010I After 3703000 nodes, 102885 on tree, -72.595615 best solution, best possible -74.391485 (3144.60 seconds)
Cbc0010I After 3704000 nodes, 102881 on tree, -72.595615 best solution, best possible -74.391485 (3145.43 seconds)
Cbc0010I After 3705000 nodes, 102881 on tree, -72.595615 best solution, best possible -74.391485 (3146.40 seconds)
Cbc0010I After 3706000 nodes, 102878 on tree, -72.595615 best solution, best possible -74.391485 (3147.36 seconds)
Cbc0010I After 3707000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3148.19 seconds)
Cbc0010I After 3708000 nodes, 102889 on tree, -72.595615 best solution, best possible -74.391485 (3149.06 seconds)
Cbc0010I After 3709000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3149.87 seconds)
Cbc0010I After 3710000 nodes, 102882 on tree, -72.595615 best solution, best possible -74.391485 (3150.72 seconds)
Cbc0010I After 3711000 nodes, 102885 on tree, -72.595615 best solution, best possible -74.391485 (3151.67 seconds)
Cbc0010I After 3712000 nodes, 102884 on tree, -72.595615 best solution, best possible -74.391485 (3152.44 seconds)
Cbc0010I After 3713000 nodes, 102890 on tree, -72.595615 best solution, best possible -74.391485 (3153.30 seconds)
Cbc0010I After 3714000 nodes, 102883 on tree, -72.595615 best solution, best possible -74.391485 (3154.02 seconds)
Cbc0010I After 3715000 nodes, 102884 on tree, -72.595615 best solution, best possible -74.391485 (3154.82 seconds)
Cbc0010I After 3716000 nodes, 102871 on tree, -72.595615 best solution, best possible -74.391485 (3155.73 seconds)
Cbc0010I After 3717000 nodes, 102868 on tree, -72.595615 best solution, best possible -74.391485 (3156.59 seconds)
Cbc0010I After 3718000 nodes, 102849 on tree, -72.595615 best solution, best possible -74.391485 (3157.56 seconds)
Cbc0010I After 3719000 nodes, 102846 on tree, -72.595615 best solution, best possible -74.391485 (3158.42 seconds)
Cbc0010I After 3720000 nodes, 102826 on tree, -72.595615 best solution, best possible -74.391485 (3159.31 seconds)
Cbc0010I After 3721000 nodes, 102820 on tree, -72.595615 best solution, best possible -74.391485 (3160.23 seconds)
Cbc0010I After 3722000 nodes, 102814 on tree, -72.595615 best solution, best possible -74.391485 (3161.25 seconds)
Cbc0010I After 3723000 nodes, 102801 on tree, -72.595615 best solution, best possible -74.391485 (3162.15 seconds)
Cbc0010I After 3724000 nodes, 102804 on tree, -72.595615 best solution, best possible -74.391485 (3163.11 seconds)
Cbc0010I After 3725000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3164.07 seconds)
Cbc0010I After 3726000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3164.93 seconds)
Cbc0010I After 3727000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.391485 (3165.78 seconds)
Cbc0010I After 3728000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3166.62 seconds)
Cbc0010I After 3729000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3167.33 seconds)
Cbc0010I After 3730000 nodes, 102797 on tree, -72.595615 best solution, best possible -74.391485 (3168.10 seconds)
Cbc0010I After 3731000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3168.88 seconds)
Cbc0010I After 3732000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3169.63 seconds)
Cbc0010I After 3733000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3170.59 seconds)
Cbc0010I After 3734000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3171.46 seconds)
Cbc0010I After 3735000 nodes, 102804 on tree, -72.595615 best solution, best possible -74.391485 (3172.36 seconds)
Cbc0010I After 3736000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3173.21 seconds)
Cbc0010I After 3737000 nodes, 102798 on tree, -72.595615 best solution, best possible -74.391485 (3174.14 seconds)
Cbc0010I After 3738000 nodes, 102798 on tree, -72.595615 best solution, best possible -74.391485 (3175.21 seconds)
Cbc0010I After 3739000 nodes, 102799 on tree, -72.595615 best solution, best possible -74.391485 (3176.15 seconds)
Cbc0010I After 3740000 nodes, 102797 on tree, -72.595615 best solution, best possible -74.391485 (3176.97 seconds)
Cbc0010I After 3741000 nodes, 102797 on tree, -72.595615 best solution, best possible -74.391485 (3177.95 seconds)
Cbc0010I After 3742000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3178.70 seconds)
Cbc0010I After 3743000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3179.39 seconds)
Cbc0010I After 3744000 nodes, 102800 on tree, -72.595615 best solution, best possible -74.391485 (3180.14 seconds)
Cbc0010I After 3745000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3181.01 seconds)
Cbc0010I After 3746000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3182.01 seconds)
Cbc0010I After 3747000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3182.95 seconds)
Cbc0010I After 3748000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3183.86 seconds)
Cbc0010I After 3749000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3184.83 seconds)
Cbc0010I After 3750000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3185.77 seconds)
Cbc0010I After 3751000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3186.74 seconds)
Cbc0010I After 3752000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3187.60 seconds)
Cbc0010I After 3753000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3188.53 seconds)
Cbc0010I After 3754000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3189.37 seconds)
Cbc0010I After 3755000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3190.24 seconds)
Cbc0010I After 3756000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3191.02 seconds)
Cbc0010I After 3757000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3191.84 seconds)
Cbc0010I After 3758000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3192.71 seconds)
Cbc0010I After 3759000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3193.53 seconds)
Cbc0010I After 3760000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3194.32 seconds)
Cbc0010I After 3761000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3195.10 seconds)
Cbc0010I After 3762000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3195.88 seconds)
Cbc0010I After 3763000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3196.74 seconds)
Cbc0010I After 3764000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3197.59 seconds)
Cbc0010I After 3765000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3198.52 seconds)
Cbc0010I After 3766000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3199.49 seconds)
Cbc0010I After 3767000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3200.41 seconds)
Cbc0010I After 3768000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3201.15 seconds)
Cbc0010I After 3769000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3202.00 seconds)
Cbc0010I After 3770000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3202.80 seconds)
Cbc0010I After 3771000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3203.63 seconds)
Cbc0010I After 3772000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3204.42 seconds)
Cbc0010I After 3773000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3205.37 seconds)
Cbc0010I After 3774000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3206.16 seconds)
Cbc0010I After 3775000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3207.08 seconds)
Cbc0010I After 3776000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3207.98 seconds)
Cbc0010I After 3777000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3208.74 seconds)
Cbc0010I After 3778000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3209.43 seconds)
Cbc0010I After 3779000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3210.14 seconds)
Cbc0010I After 3780000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3211.01 seconds)
Cbc0010I After 3781000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3211.93 seconds)
Cbc0010I After 3782000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3212.96 seconds)
Cbc0010I After 3783000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3213.97 seconds)
Cbc0010I After 3784000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3214.88 seconds)
Cbc0010I After 3785000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3215.64 seconds)
Cbc0010I After 3786000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3216.51 seconds)
Cbc0010I After 3787000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3217.19 seconds)
Cbc0010I After 3788000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3217.98 seconds)
Cbc0010I After 3789000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3219.05 seconds)
Cbc0010I After 3790000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3219.96 seconds)
Cbc0010I After 3791000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3221.06 seconds)
Cbc0010I After 3792000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3222.01 seconds)
Cbc0010I After 3793000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3222.95 seconds)
Cbc0010I After 3794000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3223.86 seconds)
Cbc0010I After 3795000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3224.85 seconds)
Cbc0010I After 3796000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3225.75 seconds)
Cbc0010I After 3797000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3226.78 seconds)
Cbc0010I After 3798000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3227.64 seconds)
Cbc0010I After 3799000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3228.54 seconds)
Cbc0010I After 3800000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3229.43 seconds)
Cbc0010I After 3801000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3230.39 seconds)
Cbc0010I After 3802000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3231.31 seconds)
Cbc0010I After 3803000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3232.26 seconds)
Cbc0010I After 3804000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3233.13 seconds)
Cbc0010I After 3805000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3233.95 seconds)
Cbc0010I After 3806000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3234.86 seconds)
Cbc0010I After 3807000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3235.65 seconds)
Cbc0010I After 3808000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3236.59 seconds)
Cbc0010I After 3809000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3237.49 seconds)
Cbc0010I After 3810000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3238.38 seconds)
Cbc0010I After 3811000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3239.27 seconds)
Cbc0010I After 3812000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3240.29 seconds)
Cbc0010I After 3813000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3241.26 seconds)
Cbc0010I After 3814000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3242.06 seconds)
Cbc0010I After 3815000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3242.73 seconds)
Cbc0010I After 3816000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3243.53 seconds)
Cbc0010I After 3817000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3244.28 seconds)
Cbc0010I After 3818000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3245.16 seconds)
Cbc0010I After 3819000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3246.06 seconds)
Cbc0010I After 3820000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3246.90 seconds)
Cbc0010I After 3821000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3247.75 seconds)
Cbc0010I After 3822000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3248.61 seconds)
Cbc0010I After 3823000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3249.49 seconds)
Cbc0010I After 3824000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3250.40 seconds)
Cbc0010I After 3825000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3251.22 seconds)
Cbc0010I After 3826000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3252.06 seconds)
Cbc0010I After 3827000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3252.94 seconds)
Cbc0010I After 3828000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3253.74 seconds)
Cbc0010I After 3829000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3254.56 seconds)
Cbc0010I After 3830000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3255.46 seconds)
Cbc0010I After 3831000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3256.26 seconds)
Cbc0010I After 3832000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3257.09 seconds)
Cbc0010I After 3833000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3258.00 seconds)
Cbc0010I After 3834000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3258.84 seconds)
Cbc0010I After 3835000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3259.76 seconds)
Cbc0010I After 3836000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3260.71 seconds)
Cbc0010I After 3837000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3261.59 seconds)
Cbc0010I After 3838000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3262.34 seconds)
Cbc0010I After 3839000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3263.09 seconds)
Cbc0010I After 3840000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3263.94 seconds)
Cbc0010I After 3841000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3264.86 seconds)
Cbc0010I After 3842000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3265.77 seconds)
Cbc0010I After 3843000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3266.57 seconds)
Cbc0010I After 3844000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3267.42 seconds)
Cbc0010I After 3845000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3268.43 seconds)
Cbc0010I After 3846000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3269.33 seconds)
Cbc0010I After 3847000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3270.15 seconds)
Cbc0010I After 3848000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3271.08 seconds)
Cbc0010I After 3849000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3271.96 seconds)
Cbc0010I After 3850000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3272.79 seconds)
Cbc0010I After 3851000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3273.75 seconds)
Cbc0010I After 3852000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3274.65 seconds)
Cbc0010I After 3853000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3275.55 seconds)
Cbc0010I After 3854000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3276.33 seconds)
Cbc0010I After 3855000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3277.24 seconds)
Cbc0010I After 3856000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3278.08 seconds)
Cbc0010I After 3857000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3278.94 seconds)
Cbc0010I After 3858000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3279.90 seconds)
Cbc0010I After 3859000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3280.91 seconds)
Cbc0010I After 3860000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3282.00 seconds)
Cbc0010I After 3861000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3282.87 seconds)
Cbc0010I After 3862000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3283.74 seconds)
Cbc0010I After 3863000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3284.62 seconds)
Cbc0010I After 3864000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3285.45 seconds)
Cbc0010I After 3865000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3286.34 seconds)
Cbc0010I After 3866000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3287.26 seconds)
Cbc0010I After 3867000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3288.03 seconds)
Cbc0010I After 3868000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3288.67 seconds)
Cbc0010I After 3869000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3289.29 seconds)
Cbc0010I After 3870000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3289.94 seconds)
Cbc0010I After 3871000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3290.87 seconds)
Cbc0010I After 3872000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3291.56 seconds)
Cbc0010I After 3873000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3292.52 seconds)
Cbc0010I After 3874000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3293.25 seconds)
Cbc0010I After 3875000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3294.15 seconds)
Cbc0010I After 3876000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3295.09 seconds)
Cbc0010I After 3877000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3295.98 seconds)
Cbc0010I After 3878000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3296.98 seconds)
Cbc0010I After 3879000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3297.81 seconds)
Cbc0010I After 3880000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3298.62 seconds)
Cbc0010I After 3881000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3299.46 seconds)
Cbc0010I After 3882000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3300.28 seconds)
Cbc0010I After 3883000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3301.05 seconds)
Cbc0010I After 3884000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3301.82 seconds)
Cbc0010I After 3885000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3302.63 seconds)
Cbc0010I After 3886000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3303.43 seconds)
Cbc0010I After 3887000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3304.33 seconds)
Cbc0010I After 3888000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3305.15 seconds)
Cbc0038I Full problem 100 rows 180 columns, reduced to 29 rows 37 columns
Cbc0010I After 3889000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3305.94 seconds)
Cbc0010I After 3890000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3306.90 seconds)
Cbc0010I After 3891000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3307.92 seconds)
Cbc0010I After 3892000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3308.81 seconds)
Cbc0010I After 3893000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3309.80 seconds)
Cbc0010I After 3894000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3310.76 seconds)
Cbc0010I After 3895000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3311.75 seconds)
Cbc0010I After 3896000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3312.77 seconds)
Cbc0010I After 3897000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3313.70 seconds)
Cbc0010I After 3898000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3314.52 seconds)
Cbc0010I After 3899000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3315.38 seconds)
Cbc0010I After 3900000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3316.29 seconds)
Cbc0010I After 3901000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3317.18 seconds)
Cbc0010I After 3902000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3318.11 seconds)
Cbc0010I After 3903000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3319.12 seconds)
Cbc0010I After 3904000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3320.03 seconds)
Cbc0010I After 3905000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3320.87 seconds)
Cbc0010I After 3906000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3321.81 seconds)
Cbc0010I After 3907000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3322.76 seconds)
Cbc0010I After 3908000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3323.74 seconds)
Cbc0010I After 3909000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3324.54 seconds)
Cbc0010I After 3910000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3325.36 seconds)
Cbc0010I After 3911000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3326.23 seconds)
Cbc0010I After 3912000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3326.93 seconds)
Cbc0010I After 3913000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3327.64 seconds)
Cbc0010I After 3914000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3328.49 seconds)
Cbc0010I After 3915000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3329.35 seconds)
Cbc0010I After 3916000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3330.31 seconds)
Cbc0010I After 3917000 nodes, 102790 on tree, -72.595615 best solution, best possible -74.391485 (3331.18 seconds)
Cbc0010I After 3918000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3331.99 seconds)
Cbc0010I After 3919000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3332.89 seconds)
Cbc0010I After 3920000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3333.87 seconds)
Cbc0010I After 3921000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3334.71 seconds)
Cbc0010I After 3922000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3335.54 seconds)
Cbc0010I After 3923000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3336.43 seconds)
Cbc0010I After 3924000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3337.47 seconds)
Cbc0010I After 3925000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3338.39 seconds)
Cbc0010I After 3926000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3339.20 seconds)
Cbc0010I After 3927000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3340.06 seconds)
Cbc0010I After 3928000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3341.01 seconds)
Cbc0010I After 3929000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3342.02 seconds)
Cbc0010I After 3930000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3342.99 seconds)
Cbc0010I After 3931000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3343.85 seconds)
Cbc0010I After 3932000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3344.77 seconds)
Cbc0010I After 3933000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3345.72 seconds)
Cbc0010I After 3934000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3346.62 seconds)
Cbc0010I After 3935000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3347.58 seconds)
Cbc0010I After 3936000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3348.58 seconds)
Cbc0010I After 3937000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3349.43 seconds)
Cbc0010I After 3938000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3350.39 seconds)
Cbc0010I After 3939000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3351.23 seconds)
Cbc0010I After 3940000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3352.17 seconds)
Cbc0010I After 3941000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3353.08 seconds)
Cbc0010I After 3942000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3354.12 seconds)
Cbc0010I After 3943000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3355.08 seconds)
Cbc0010I After 3944000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3356.10 seconds)
Cbc0010I After 3945000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3357.07 seconds)
Cbc0010I After 3946000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3357.87 seconds)
Cbc0010I After 3947000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3358.71 seconds)
Cbc0010I After 3948000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3359.75 seconds)
Cbc0010I After 3949000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3360.62 seconds)
Cbc0010I After 3950000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3361.59 seconds)
Cbc0010I After 3951000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3362.44 seconds)
Cbc0010I After 3952000 nodes, 102791 on tree, -72.595615 best solution, best possible -74.391485 (3363.18 seconds)
Cbc0010I After 3953000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3363.97 seconds)
Cbc0010I After 3954000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3364.95 seconds)
Cbc0010I After 3955000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3365.97 seconds)
Cbc0010I After 3956000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3367.06 seconds)
Cbc0010I After 3957000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3368.02 seconds)
Cbc0010I After 3958000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3368.99 seconds)
Cbc0010I After 3959000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3369.84 seconds)
Cbc0010I After 3960000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3370.63 seconds)
Cbc0010I After 3961000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3371.60 seconds)
Cbc0010I After 3962000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3372.57 seconds)
Cbc0010I After 3963000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3373.57 seconds)
Cbc0010I After 3964000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3374.62 seconds)
Cbc0010I After 3965000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3375.54 seconds)
Cbc0010I After 3966000 nodes, 102781 on tree, -72.595615 best solution, best possible -74.391485 (3376.55 seconds)
Cbc0010I After 3967000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3377.59 seconds)
Cbc0010I After 3968000 nodes, 102792 on tree, -72.595615 best solution, best possible -74.391485 (3378.59 seconds)
Cbc0010I After 3969000 nodes, 102780 on tree, -72.595615 best solution, best possible -74.391485 (3379.63 seconds)
Cbc0010I After 3970000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3380.56 seconds)
Cbc0010I After 3971000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3381.48 seconds)
Cbc0010I After 3972000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3382.36 seconds)
Cbc0010I After 3973000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3383.12 seconds)
Cbc0010I After 3974000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3383.99 seconds)
Cbc0010I After 3975000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3384.91 seconds)
Cbc0010I After 3976000 nodes, 102782 on tree, -72.595615 best solution, best possible -74.391485 (3385.85 seconds)
Cbc0010I After 3977000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (3386.69 seconds)
Cbc0010I After 3978000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3387.49 seconds)
Cbc0010I After 3979000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3388.41 seconds)
Cbc0010I After 3980000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3389.33 seconds)
Cbc0010I After 3981000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3390.30 seconds)
Cbc0010I After 3982000 nodes, 102793 on tree, -72.595615 best solution, best possible -74.391485 (3391.25 seconds)
Cbc0010I After 3983000 nodes, 102784 on tree, -72.595615 best solution, best possible -74.391485 (3392.17 seconds)
Cbc0010I After 3984000 nodes, 102787 on tree, -72.595615 best solution, best possible -74.391485 (3393.14 seconds)
Cbc0010I After 3985000 nodes, 102796 on tree, -72.595615 best solution, best possible -74.391485 (3394.10 seconds)
Cbc0010I After 3986000 nodes, 102783 on tree, -72.595615 best solution, best possible -74.391485 (3395.01 seconds)
Cbc0010I After 3987000 nodes, 102795 on tree, -72.595615 best solution, best possible -74.391485 (3395.92 seconds)
Cbc0010I After 3988000 nodes, 102786 on tree, -72.595615 best solution, best possible -74.391485 (3396.90 seconds)
Cbc0010I After 3989000 nodes, 102794 on tree, -72.595615 best solution, best possible -74.391485 (3397.82 seconds)
Cbc0010I After 3990000 nodes, 102789 on tree, -72.595615 best solution, best possible -74.391485 (3398.81 seconds)
Cbc0010I After 3991000 nodes, 102788 on tree, -72.595615 best solution, best possible -74.391485 (3399.81 seconds)
Cbc0010I After 3992000 nodes, 102785 on tree, -72.595615 best solution, best possible -74.391485 (340