/cluster/raid/home/zhivar.sourati/logical-fallacy-identification/AMR_parsers_and_graphs
Tue Sep 27 04:51:53 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  A100-PCIE-40GB      Off  | 00000000:27:00.0 Off |                    0 |
| N/A   29C    P0    33W / 250W |      0MiB / 40536MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
0
cuda
reading the data from AMR
using GPU
Model loaded!
Start the training ...
{'loss': 2.5251, 'learning_rate': 8.922413793103449e-06, 'epoch': 0.43}
{'eval_loss': 2.413750410079956, 'eval_accuracy': 0.20333333333333334, 'eval_f1': 0.06871652816251154, 'eval_precision': 0.04134444444444445, 'eval_recall': 0.20333333333333334, 'eval_runtime': 0.508, 'eval_samples_per_second': 590.543, 'eval_steps_per_second': 37.401, 'epoch': 0.43}
{'loss': 2.4984, 'learning_rate': 7.844827586206897e-06, 'epoch': 0.86}
{'eval_loss': 2.3918721675872803, 'eval_accuracy': 0.20333333333333334, 'eval_f1': 0.06871652816251154, 'eval_precision': 0.04134444444444445, 'eval_recall': 0.20333333333333334, 'eval_runtime': 0.5008, 'eval_samples_per_second': 599.063, 'eval_steps_per_second': 37.941, 'epoch': 0.86}
{'loss': 2.3729, 'learning_rate': 6.767241379310346e-06, 'epoch': 1.29}
{'eval_loss': 2.2202770709991455, 'eval_accuracy': 0.3, 'eval_f1': 0.2118335389318751, 'eval_precision': 0.16896580608619133, 'eval_recall': 0.3, 'eval_runtime': 0.5035, 'eval_samples_per_second': 595.875, 'eval_steps_per_second': 37.739, 'epoch': 1.29}
{'loss': 2.2603, 'learning_rate': 5.689655172413794e-06, 'epoch': 1.72}
{'eval_loss': 2.0393359661102295, 'eval_accuracy': 0.37666666666666665, 'eval_f1': 0.3186042253716502, 'eval_precision': 0.3298833612040134, 'eval_recall': 0.37666666666666665, 'eval_runtime': 0.5013, 'eval_samples_per_second': 598.414, 'eval_steps_per_second': 37.9, 'epoch': 1.72}
{'loss': 2.0829, 'learning_rate': 4.612068965517242e-06, 'epoch': 2.16}
{'eval_loss': 1.8425661325454712, 'eval_accuracy': 0.42, 'eval_f1': 0.35820956143815763, 'eval_precision': 0.44384595404595395, 'eval_recall': 0.42, 'eval_runtime': 0.5069, 'eval_samples_per_second': 591.853, 'eval_steps_per_second': 37.484, 'epoch': 2.16}
{'loss': 1.8018, 'learning_rate': 3.5344827586206898e-06, 'epoch': 2.59}
{'eval_loss': 1.6290556192398071, 'eval_accuracy': 0.5033333333333333, 'eval_f1': 0.45644322518971137, 'eval_precision': 0.48590458475793336, 'eval_recall': 0.5033333333333333, 'eval_runtime': 0.505, 'eval_samples_per_second': 594.073, 'eval_steps_per_second': 37.625, 'epoch': 2.59}
{'loss': 1.7196, 'learning_rate': 2.4568965517241382e-06, 'epoch': 3.02}
{'eval_loss': 1.5396857261657715, 'eval_accuracy': 0.56, 'eval_f1': 0.5390117406959511, 'eval_precision': 0.5763582975786083, 'eval_recall': 0.56, 'eval_runtime': 0.5074, 'eval_samples_per_second': 591.246, 'eval_steps_per_second': 37.446, 'epoch': 3.02}
{'loss': 1.5081, 'learning_rate': 1.3793103448275862e-06, 'epoch': 3.45}
{'eval_loss': 1.460969090461731, 'eval_accuracy': 0.5566666666666666, 'eval_f1': 0.525336262350701, 'eval_precision': 0.5922279121391276, 'eval_recall': 0.5566666666666666, 'eval_runtime': 0.5093, 'eval_samples_per_second': 589.037, 'eval_steps_per_second': 37.306, 'epoch': 3.45}
{'loss': 1.4595, 'learning_rate': 3.0172413793103453e-07, 'epoch': 3.88}
{'eval_loss': 1.416827917098999, 'eval_accuracy': 0.5766666666666667, 'eval_f1': 0.5564817242533069, 'eval_precision': 0.5865660337855723, 'eval_recall': 0.5766666666666667, 'eval_runtime': 0.5085, 'eval_samples_per_second': 589.97, 'eval_steps_per_second': 37.365, 'epoch': 3.88}
{'train_runtime': 61.5425, 'train_samples_per_second': 120.177, 'train_steps_per_second': 7.54, 'train_loss': 2.00774163624336, 'epoch': 4.0}
PredictionOutput(predictions=array([[ 1.443315  ,  0.71920055, -0.02560189, ..., -0.643804  ,
         1.8812188 ,  0.42170507],
       [ 2.8556626 , -0.0969406 , -0.47601068, ..., -0.9487027 ,
        -0.47699004,  0.9201157 ],
       [-0.6778634 ,  0.07976691, -0.13567641, ..., -1.0657451 ,
         0.55220544,  1.188037  ],
       ...,
       [-0.10414969,  2.0439534 ,  0.31962126, ..., -0.34592736,
         2.3304522 ,  0.12277301],
       [-1.2607857 , -0.3029183 , -0.17423052, ..., -1.0807384 ,
         2.874419  , -0.20850562],
       [ 0.10780869,  0.5420077 , -0.5528287 , ..., -1.3780497 ,
        -0.6689016 ,  0.36189073]], dtype=float32), label_ids=array([ 6, 11,  7,  9, 11,  6,  6, 11,  5,  3,  9, 11,  0,  1, 11, 12,  1,
        7,  0, 12,  3,  1,  8,  3,  6,  8,  0,  0, 11,  0, 11,  3,  3,  5,
        2,  8,  9,  1, 11,  1,  5, 12,  0, 12,  1,  2, 12,  0,  5,  7,  3,
       11,  2,  4,  8,  3, 12, 11, 11, 10,  7, 11,  0, 10, 12,  0,  1,  8,
       12,  5, 10,  5,  1,  8,  0, 12,  1,  7, 10, 12,  7,  7,  2,  0,  2,
       10, 11,  0,  6,  0, 10,  9,  5,  5,  0,  9,  1,  2,  8,  9,  0,  2,
        0,  7, 11,  9,  6,  6,  9,  3, 12,  7, 11, 11, 11, 10,  2,  8,  9,
        0,  7,  3, 11, 11, 12,  8,  0,  4, 11,  5,  8, 11,  1,  5, 11,  7,
       11,  0, 11,  0, 11,  6,  0, 11, 11,  8, 11,  1,  8,  6,  5,  0, 11,
        9,  0,  1,  5,  0,  1,  8,  8,  0,  2, 11, 11,  0,  6,  5,  6, 11,
        2,  2,  7,  9, 11,  1, 11,  1,  8,  9,  8,  6,  3,  8, 10,  1,  2,
        0, 11, 11,  3,  8,  6,  2,  4,  1, 11, 11, 11, 11,  0, 11,  2,  1,
        8,  1,  9,  0,  1, 11,  1,  5,  1,  6,  5,  0,  8,  0,  1, 10, 11,
        9,  0, 11, 12,  2,  4,  0, 11,  2, 12,  2, 11,  7,  3,  2,  2,  8,
        3,  0,  2, 11,  8,  8,  9,  3, 11,  6, 11,  0,  3,  2,  8, 10, 12,
       11,  5, 10,  6,  9, 11,  6,  3,  1,  6,  3,  7, 11,  6,  2, 11,  4,
       10,  9,  2,  0, 11,  5,  1, 11,  6, 11,  9, 11,  0,  0,  0, 11, 11,
        0,  1, 11,  1,  0,  3,  1,  6,  1, 11,  3]), metrics={'test_loss': 1.595670223236084, 'test_accuracy': 0.5133333333333333, 'test_f1': 0.4775876884676764, 'test_precision': 0.5293540937906264, 'test_recall': 0.5133333333333333, 'test_runtime': 0.6008, 'test_samples_per_second': 499.372, 'test_steps_per_second': 31.627})
