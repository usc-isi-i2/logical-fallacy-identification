
using GPU
Number of training graphs: 1479
Number of test graphs: 370
Epoch: 001, Train Acc: 0.1711, Test Acc: 0.1784
Epoch: 002, Train Acc: 0.1893, Test Acc: 0.1946
Epoch: 003, Train Acc: 0.1927, Test Acc: 0.1676
Epoch: 004, Train Acc: 0.2454, Test Acc: 0.2135
Epoch: 005, Train Acc: 0.2407, Test Acc: 0.2243
Epoch: 006, Train Acc: 0.2556, Test Acc: 0.2297
Epoch: 007, Train Acc: 0.3239, Test Acc: 0.2703
Epoch: 008, Train Acc: 0.3394, Test Acc: 0.2811
Epoch: 009, Train Acc: 0.3043, Test Acc: 0.2595
Epoch: 010, Train Acc: 0.3807, Test Acc: 0.2730
Epoch: 011, Train Acc: 0.3962, Test Acc: 0.3027
Epoch: 012, Train Acc: 0.4219, Test Acc: 0.2730
Epoch: 013, Train Acc: 0.4584, Test Acc: 0.2973
Epoch: 014, Train Acc: 0.5064, Test Acc: 0.3243
Epoch: 015, Train Acc: 0.5368, Test Acc: 0.3189
Epoch: 016, Train Acc: 0.5260, Test Acc: 0.3432
Epoch: 017, Train Acc: 0.5740, Test Acc: 0.3378
Epoch: 018, Train Acc: 0.5950, Test Acc: 0.3189
Epoch: 019, Train Acc: 0.5389, Test Acc: 0.3405
Epoch: 020, Train Acc: 0.6383, Test Acc: 0.3730
Epoch: 021, Train Acc: 0.6471, Test Acc: 0.3459
Epoch: 022, Train Acc: 0.6335, Test Acc: 0.3405
Epoch: 023, Train Acc: 0.6531, Test Acc: 0.3811
Epoch: 024, Train Acc: 0.6640, Test Acc: 0.3730
Epoch: 025, Train Acc: 0.7316, Test Acc: 0.3622
Epoch: 026, Train Acc: 0.6782, Test Acc: 0.3568
Epoch: 027, Train Acc: 0.7444, Test Acc: 0.3595
Epoch: 028, Train Acc: 0.7985, Test Acc: 0.3892
Epoch: 029, Train Acc: 0.7843, Test Acc: 0.3568
Epoch: 030, Train Acc: 0.8032, Test Acc: 0.3676
Epoch: 031, Train Acc: 0.8114, Test Acc: 0.3892
Epoch: 032, Train Acc: 0.8168, Test Acc: 0.3676
Epoch: 033, Train Acc: 0.8377, Test Acc: 0.3649
Epoch: 034, Train Acc: 0.8560, Test Acc: 0.3757
Epoch: 035, Train Acc: 0.8668, Test Acc: 0.3784
Epoch: 036, Train Acc: 0.8154, Test Acc: 0.3541
Epoch: 037, Train Acc: 0.8966, Test Acc: 0.3757
Epoch: 038, Train Acc: 0.8993, Test Acc: 0.3811
Epoch: 039, Train Acc: 0.9074, Test Acc: 0.3730
Epoch: 040, Train Acc: 0.8891, Test Acc: 0.3649
Epoch: 041, Train Acc: 0.8952, Test Acc: 0.3703
Epoch: 042, Train Acc: 0.9419, Test Acc: 0.3811
Epoch: 043, Train Acc: 0.9385, Test Acc: 0.3676
Epoch: 044, Train Acc: 0.9304, Test Acc: 0.4000
Epoch: 045, Train Acc: 0.9202, Test Acc: 0.3703
Epoch: 046, Train Acc: 0.9067, Test Acc: 0.3703
Epoch: 047, Train Acc: 0.8783, Test Acc: 0.3514
Epoch: 048, Train Acc: 0.9567, Test Acc: 0.3703
Epoch: 049, Train Acc: 0.9229, Test Acc: 0.3730
Epoch: 050, Train Acc: 0.9473, Test Acc: 0.3649
Epoch: 051, Train Acc: 0.9608, Test Acc: 0.3892
Epoch: 052, Train Acc: 0.9628, Test Acc: 0.3730
Epoch: 053, Train Acc: 0.8972, Test Acc: 0.3595
Epoch: 054, Train Acc: 0.9419, Test Acc: 0.3514
Epoch: 055, Train Acc: 0.9425, Test Acc: 0.3784
Epoch: 056, Train Acc: 0.9391, Test Acc: 0.3784
Epoch: 057, Train Acc: 0.9405, Test Acc: 0.3676
Epoch: 058, Train Acc: 0.9716, Test Acc: 0.3730
Epoch: 059, Train Acc: 0.9777, Test Acc: 0.3703
Epoch: 060, Train Acc: 0.9817, Test Acc: 0.3703
Epoch: 061, Train Acc: 0.9709, Test Acc: 0.3757
Epoch: 062, Train Acc: 0.9682, Test Acc: 0.3757
Epoch: 063, Train Acc: 0.9804, Test Acc: 0.3703
Epoch: 064, Train Acc: 0.9486, Test Acc: 0.3595
Epoch: 065, Train Acc: 0.9696, Test Acc: 0.3757
Epoch: 066, Train Acc: 0.9682, Test Acc: 0.3784
Epoch: 067, Train Acc: 0.9743, Test Acc: 0.3757
Epoch: 068, Train Acc: 0.9905, Test Acc: 0.3676
Epoch: 069, Train Acc: 0.9892, Test Acc: 0.3676
Epoch: 070, Train Acc: 0.9892, Test Acc: 0.3892
Epoch: 071, Train Acc: 0.9838, Test Acc: 0.3595
Epoch: 072, Train Acc: 0.9547, Test Acc: 0.3189
Epoch: 073, Train Acc: 0.9743, Test Acc: 0.3784
Epoch: 074, Train Acc: 0.9905, Test Acc: 0.3432
Epoch: 075, Train Acc: 0.9033, Test Acc: 0.3649
Traceback (most recent call last):
  File "/cluster/raid/home/zhivar.sourati/logical-fallacy-identification/AMR_parsers_and_graphs/gcn.py", line 235, in <module>
    train(model, train_data_loader, optimizer)
  File "/cluster/raid/home/zhivar.sourati/logical-fallacy-identification/AMR_parsers_and_graphs/gcn.py", line 169, in train
    optimizer.step()  # Update parameters based on gradients.
  File "/cluster/raid/home/zhivar.sourati/anaconda3/envs/general/lib/python3.10/site-packages/torch/optim/optimizer.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/cluster/raid/home/zhivar.sourati/anaconda3/envs/general/lib/python3.10/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/cluster/raid/home/zhivar.sourati/anaconda3/envs/general/lib/python3.10/site-packages/torch/optim/adam.py", line 141, in step
    F.adam(params_with_grad,
  File "/cluster/raid/home/zhivar.sourati/anaconda3/envs/general/lib/python3.10/site-packages/torch/optim/_functional.py", line 105, in adam
    denom = (exp_avg_sq.sqrt() / math.sqrt(bias_correction2)).add_(eps)
KeyboardInterrupt