predictions,true_labels,amr_str
fallacy of logic,fallacy of logic,"# ::snt "" Just like students are given a couple of MSK0 of MSK3 before taking exams , MSK1 should also be given few days or MSK0 to MSK3 MSK1 before an operation or MSK2 , after all MSK2 is not as easy task "" Is an example of .... 
(e / exemplify-01
      :ARG0 (r / recommend-01
            :ARG1 (o / or
                  :op1 (g / give-01
                        :ARG1 (t / thing
                              :name (n / name
                                    :op1 ""MSK1""))
                        :ARG2 (t2 / thing
                              :name (n2 / name
                                    :op1 ""MSK3""))
                        :duration (f / few
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (d / day)))
                        :mod (a / also))
                  :op2 (g2 / give-01
                        :ARG1 (t4 / thing
                              :name (n3 / name
                                    :op1 ""MSK0""))
                        :ARG2 (t5 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""))
                        :time (b / before
                              :op1 (o2 / operate-02)))
                  :op3 (g3 / give-01
                        :ARG1 (t6 / thing
                              :name (n5 / name
                                    :op1 ""MSK2""))
                        :ARG2 t5
                        :time (b2 / before
                              :op1 (t7 / take-01
                                    :ARG0 (p / person
                                          :ARG0-of (s / study-01))
                                    :ARG1 (e2 / exam))))
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (g4 / give-01
                              :ARG1 (t8 / thing
                                    :name (n6 / name
                                          :op1 ""MSK0"")
                                    :quant (c / couple)
                                    :part-of (t9 / thing
                                          :name (n7 / name
                                                :op1 ""MSK3"")))
                              :ARG2 p
                              :time (b3 / before
                                    :op1 e2))))
            :ARG1-of (c2 / cause-01
                  :ARG0 (e3 / easy-05
                        :polarity -
                        :ARG1 (t10 / thing
                              :name (n8 / name
                                    :op1 ""MSK2""))
                        :mod (a2 / after-all)))))"
appeal to emotion,appeal to emotion,"# ::snt You do n’t have to do this . MSK0 grandmother is in the hospital . MSK0 need MSK0 salary to support MSK1 medication . MSK1 ’s dying . 
(m / multi-sentence
      :snt1 (o / obligate-01
            :polarity -
            :ARG1 (y / you)
            :ARG2 (d / do-02
                  :ARG0 y
                  :ARG1 (t / this)))
      :snt2 (b / be-located-at-91
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (g / grandmother)))
            :ARG2 (h2 / hospital))
      :snt3 (n2 / need-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (s / salary
                  :mod (p4 / product
                        :name (n4 / name
                              :op1 ""MSK1"")))
            :purpose (s2 / support-01
                  :ARG0 s
                  :ARG1 (m2 / medication
                        :mod p4)))
      :snt4 (d2 / die-01
            :ARG1 (p5 / person
                  :name (n5 / name
                        :op1 ""MSK1""))))"
fallacy of logic,faulty generalization,"# ::snt I know MSK0 . MSK0 are all MSK1 . Therefore , Kentuckians are MSK1 . 
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (t2 / thing
            :name (n2 / name
                  :op1 ""MSK1"")
            :mod (a / all)
            :domain t)
      :snt3 (ii2 / infer-01
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :domain (p / person
                        :location (s / state
                              :name (n4 / name
                                    :op1 ""Kentucky""))))))"
fallacy of extension,circular reasoning,"# ::snt MSK1 : What are MSK2 ? Do you even know ? MSK3 of State : MSK4 're ... what MSK4 MSK5 to make MSK6 ! MSK1 : But why do MSK4 MSK5 MSK4 to make MSK6 ? MSK3 of Defense : [ raises hand after a pause ] Because MSK2 . 
(m / multi-sentence
      :snt1 (c / concern-02
            :ARG0 (s / string-entity
                  :value ""MSK2"")
            :ARG1 (a / amr-unknown)
            :ARG1-of (k / know-01
                  :ARG0 (y / you)
                  :mod (e / even)))
      :snt2 (c2 / concern-02
            :ARG0 (s2 / string-entity
                  :value ""MSK3""
                  :topic (s3 / state))
            :ARG1 (a2 / amr-unknown
                  :domain (a3 / and
                        :op1 (s4 / string-entity
                              :value ""MSK4"")
                        :op2 (s5 / string-entity
                              :value ""MSK5"")
                        :purpose (m2 / make-01
                              :ARG1 (s6 / string-entity
                                    :value 6))
                        :ARG0-of m2)))
      :snt3 (c3 / contrast-01
            :ARG1 (c4 / cause-01
                  :ARG0 (a4 / amr-unknown)
                  :ARG1 (a5 / and
                        :op1 (s7 / string-entity
                              :value ""MSK4"")
                        :op2 (s8 / string-entity
                              :value ""MSK5"")))
            :ARG2 (c5 / cause-01
                  :ARG0 (a6 / amr-unknown)
                  :ARG1 (a7 / and
                        :op1 (s9 / string-entity
                              :value ""MSK4"")
                        :op2 (s10 / string-entity
                              :value ""MSK5"")
                        :purpose (m3 / make-01
                              :ARG1 (s11 / string-entity
                                    :value ""MSK6""))
                        :ARG0-of m3)))
      :snt4 (r / raise-01
            :ARG0 (h / hand)
            :time (a8 / after
                  :op1 (p / pause-01)))
      :snt5 (s12 / string-entity
            :value ""MSK3""
            :topic (d / defend-01)))"
ad hominem,ad hominem,"# ::snt This is a fallacy of irrelevance that is based solely on someone 's or MSK0 history , origin , or source rather than MSK0 current meaning 
(f / fallacy
      :domain (t / this)
      :ARG1-of (r / relevant-01
            :polarity -)
      :ARG1-of (b / base-02
            :ARG2 (o / or
                  :op1 (h / history
                        :poss (s / someone))
                  :op2 (o2 / origin
                        :poss s)
                  :op3 (s2 / source-01
                        :ARG0 s)
                  :ARG1-of (ii / instead-of-91
                        :ARG2 (m / mean-01
                              :ARG1 (p / product
                                    :name (n / name
                                          :op1 ""MSK0""))
                              :time (c / current))))
            :manner (s3 / sole)))"
ad hominem,ad hominem,"# ::snt MSK0 : MSK0 should not be MSK1 that ... it has been scientifically proven that MSK1 MSK3 are no good for MSK0 health . Hugh : MSK0 MSK1 MSK3 all the time so that ca n’t be true . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (p2 / product
                        :polarity -
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :domain (t / that))
                  :ARG1-of (c / cause-01
                        :ARG0 (p3 / prove-01
                              :ARG1 (g / good-04
                                    :polarity -
                                    :ARG1 (a / and
                                          :op1 (p4 / product
                                                :name (n3 / name
                                                      :op1 ""MSK1""))
                                          :op2 (p5 / product
                                                :name (n4 / name
                                                      :op1 ""MSK3"")))
                                    :ARG2 (h / health
                                          :poss p))
                              :manner (s2 / science)))))
      :snt2 (s3 / say-01
            :ARG0 (p6 / person
                  :name (n5 / name
                        :op1 ""Hugh""))
            :ARG1 a
            :op1 (p7 / product
                  :name (n6 / name
                        :op1 ""MSK0""))
            :op2 (p8 / product
                  :name (n7 / name
                        :op1 ""MSK1""))
            :op3 (p9 / product
                  :name (n8 / name
                        :op1 ""MSK3""))
            :ARG0-of (c2 / cause-01
                  :ARG1 (p10 / possible-01
                        :polarity -
                        :ARG1 (t2 / true-01
                              :ARG1 t))))
      :time (t3 / time
            :mod (a2 / all)))"
ad hominem,ad hominem,"# ::snt MSK0 : MSK1 MSK0 MSK2 that MSK3 is morally MSK4 . MSK1 MSK5 : MSK1 Of course MSK5 would say that , MSK5 ’re a MSK6 . MSK1 MSK0 : MSK1 What about the arguments MSK0 gave to support MSK0 position ? MSK1 MSK5 : MSK1 Those do n’t count . Like MSK0 said , MSK5 ’re a MSK6 , so MSK5 have to say that MSK3 is MSK4 . Further , MSK5 are just a lackey to the Pope , so MSK0 ca n’t MSK2 what MSK5 say . MSK1 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / string-entity
                  :value ""MSK0"")
            :op2 (s2 / string-entity
                  :value ""MSK2"")
            :op3 (s3 / string-entity
                  :value ""MSK3"")
            :op4 (s4 / string-entity
                  :value ""MSK5""))
      :snt2 (s5 / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK5""))
            :ARG1 a
            :op1 (s6 / string-entity
                  :value ""MSK6"")
            :op2 s4)
      :mod (o / of-course)
      :ARG0-of (c / cause-01
            :ARG1 (o2 / obligate-01
                  :ARG1 p
                  :ARG2 (s7 / say-01
                        :ARG0 p
                        :ARG1 (s8 / string-entity
                              :value ""MSK4""))))
      :snt3 a
      :op1 (s9 / string-entity
            :value ""MSK1"")
      :op2 (s10 / string-entity
            :value ""MSK0"")
      :op3 (s11 / string-entity
            :value ""MSK1"")
      :op4 (s12 / string-entity
            :value ""MSK1"")
      :snt4 (p2 / possible-01
            :polarity -
            :ARG1 (s13 / say-01
                  :ARG0 (p3 / person
                        :name (n2 / name
                              :op1 ""MSK2""))
                  :ARG1 (t / thing
                        :ARG1-of (s14 / say-01
                              :ARG0 (p4 / person
                                    :name (n3 / name
                                          :op1 ""MSK3""))))))
      :snt5 (c2 / count-04
            :polarity -
            :ARG1 (a2 / argument
                  :ARG1-of (g / give-01
                        :ARG0 (p5 / person
                              :name (n4 / name
                                    :op1 ""MSK0""))
                        :purpose (s15 / support-01
                              :ARG0 a2
                              :ARG1 (p6 / position-02
                                    :ARG0 p5))))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 use one more can of hairspray this month , the ozone layer will not MSK1 , and MSK0 will not MSK1 ! 
(a / and
      :op1 (t / thing
            :polarity -
            :name (n / name
                  :op1 ""MSK1"")
            :mod (l / layer
                  :mod (o / ozone)))
      :op2 (t2 / thing
            :polarity -
            :name (n2 / name
                  :op1 ""MSK1"")
            :mod l)
      :condition (u / use-01
            :ARG0 (p / product
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (c / can
                  :quant 1
                  :consist-of (h / hairspray)
                  :mod (m / more))
            :time (m2 / month
                  :mod (t3 / this))))"
ad populum,ad populum,"# ::snt Argues that because MSK0 is popular , MSK0 must be right . 
(a / argue-01
      :ARG1 (c / cause-01
            :ARG0 (p / popular-02
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0"")))
            :ARG1 (o / obligate-01
                  :ARG1 (r / right-06
                        :ARG1 p2))))"
false dilemma,false dilemma,"# ::snt MSK0 either have to cut taxes or leave a huge debt for MSK0 children . 
(o / obligate-01
      :ARG1 (c / company
            :name (n / name
                  :op1 ""MSK0""))
      :ARG2 (o2 / or
            :op1 (c2 / cut-02
                  :ARG0 c
                  :ARG1 (t / tax-01))
            :op2 (l / leave-02
                  :ARG0 c
                  :ARG1 (d / debt
                        :mod (h / huge))
                  :ARG2 (p / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 c
                              :ARG2 (c3 / child))))))"
ad hominem,ad hominem,"# ::snt "" Why would you elect a mayor whose wife has been treated for alcohol addiction ? "" This logical fallacy is called ... 
(m / multi-sentence
      :snt1 (e / elect-01
            :ARG0 (y / you)
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :ARG1-of (t / treat-03
                                    :ARG2 (a / addict-01
                                          :ARG1 p2
                                          :ARG2 (a2 / alcohol))))
                        :ARG2 (w / wife)))
            :ARG1-of (c / cause-01
                  :ARG0 (a3 / amr-unknown)))
      :snt2 (c2 / call-01
            :ARG1 (f / fallacy
                  :mod (l / logic)
                  :mod (t2 / this))))"
circular reasoning,false causality,"# ::snt The best example of this fallacy is presented by the person who coined this term , MSK0 in MSK0 2007 book , The Black Swan . There are two people 
(m / multi-sentence
      :snt1 (p / present-01
            :ARG0 (p2 / person
                  :ARG0-of (c / coin-01
                        :ARG1 (t / term
                              :name (n / name
                                    :op1 ""MSK0"")
                              :mod (t2 / this))
                        :location (b / book
                              :name (n2 / name
                                    :op1 ""The""
                                    :op2 ""Black""
                                    :op3 ""Swan"")
                              :time (d / date-entity
                                    :year 2007))))
            :ARG1 (e / exemplify-01
                  :ARG0 (p3 / person)
                  :ARG1 (f / fallacy
                        :mod (t3 / this))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 e)
                        :ARG3 (m2 / most))))
      :snt2 (p4 / person
            :quant 2))"
false causality,false causality,"# ::snt "" MSK0 drank MSK1 and now MSK0 am MSK2 , so MSK1 must have made MSK0 MSK2 . "" 
(ii / infer-01
      :ARG1 (m / make-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK2"")))
      :ARG2 (a / and
            :op1 (d / drink-01
                  :ARG0 (p / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG1 (t3 / thing
                        :name (n4 / name
                              :op1 ""MSK1"")))
            :op2 (p2 / person
                  :name (n5 / name
                        :op1 ""MSK2"")
                  :domain p
                  :time (n6 / now))))"
ad hominem,faulty generalization,"# ::snt Teenagers are too immature and self - absorbed to understand anything about global issues . 
(h / have-degree-91
      :ARG1 (t / teenager)
      :ARG2 (a / and
            :op1 (m / mature-02
                  :polarity -
                  :ARG1 t)
            :op2 (a2 / absorb-01
                  :ARG0 t
                  :ARG1 t))
      :ARG3 (t2 / too)
      :ARG6 (u / understand-01
            :ARG0 t
            :ARG1 (a3 / anything
                  :topic (ii / issue-02
                        :ARG1 (g / globe)))))"
fallacy of credibility,intentional,"# ::snt MSK0 is watching television when MSK0 sees a commercial for MSK2 . MSK0 says , "" This is the best MSK2 on the market because no other MSK2 makers have been able to prove otherwise ! "" What fallacy has MSK0 committed ? 
(m / multi-sentence
      :snt1 (w / watch-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / television)
            :time (s / see-01
                  :ARG0 p
                  :ARG1 (c / commercial
                        :beneficiary (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK2"")))))
      :snt2 (s2 / say-01
            :ARG0 p
            :ARG1 (h / have-degree-91
                  :ARG1 (p3 / product
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :location (m2 / market))
                  :ARG2 (g / good-02
                        :ARG1 p3)
                  :ARG3 (m3 / most)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (p4 / possible-01
                              :polarity -
                              :ARG1 (p5 / prove-01
                                    :ARG0 (p6 / person
                                          :ARG0-of (m4 / make-01
                                                :ARG1 p3)
                                          :mod (o / other))
                                    :ARG1 (s3 / something
                                          :mod (e / else)))))))
      :snt3 (c3 / commit-02
            :ARG0 (p7 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (f / fallacy
                  :mod (a / amr-unknown))))"
ad populum,faulty generalization,"# ::snt "" No one stops to process ... No one appreciates the value "" is an example of 
(e / exemplify-01
      :ARG0 (s / stop-01
            :ARG0 (n / no-one)
            :purpose (p / process-01
                  :ARG0 n)
            :ARG1-of (m / mean-01
                  :ARG2 (a / appreciate-02
                        :ARG0 n
                        :ARG1 (v / value-02)))))"
ad populum,ad populum,"# ::snt Everyone who is really into MSK0 already owns the latest MSK0 MSK0 . Do n't be the only one left out ! Which logical fallacy is being used in the passage ? 
(m / multi-sentence
      :snt1 (o / own-01
            :ARG0 (e / everyone
                  :ARG0-of (f / favor-01
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""MSK0""))
                        :degree (r / really)))
            :ARG1 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK0"")
                  :mod (l / last))
            :time (a / already))
      :snt2 (l2 / leave-out-03
            :mode imperative
            :polarity -
            :ARG0 (y / you)
            :ARG1 y
            :mod (o2 / only))
      :snt3 (f2 / fallacy
            :mod (l3 / logic)
            :ARG1-of (u / use-01
                  :ARG2 (p3 / passage))
            :domain (a2 / amr-unknown)))"
ad populum,ad populum,"# ::snt "" A 2005 Gallup Poll found that an estimated MSK3 % of Americans over the MSK3 of MSK3 believe in MSK0 - or that the position of MSK1 and planets can affect MSK2 ’s lives . MSK1 is roughly 75,000,000 MSK2 . Therefore , there must be some truth to MSK0 ! "" 
(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (p / poll-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Gallup""))
                  :time (d / date-entity
                        :year 2005))
            :ARG1 (b / believe-01
                  :ARG0 (p2 / person
                        :ARG1-of (ii / include-91
                              :ARG2 (p3 / person
                                    :mod (c2 / country
                                          :name (n2 / name
                                                :op1 ""America"")))
                              :ARG3 (p4 / percentage-entity
                                    :value 3
                                    :ARG1-of (h / have-quant-91
                                          :ARG3 (e / equal)
                                          :ARG4 (p5 / product
                                                :name (n3 / name
                                                      :op1 ""MSK3"")))))
                        :ARG1-of (e2 / estimate-01
                              :ARG2 (p6 / percentage-entity
                                    :value 3
                                    :ARG1-of (h2 / have-quant-91
                                          :ARG3 (e3 / equal)
                                          :ARG4 p5))))
                  :ARG1 (o / or
                        :op1 (t / thing
                              :ARG2-of (p7 / position-01
                                    :ARG1 (a / and
                                          :op1 (t2 / thing
                                                :name (n4 / name
                                                      :op1 ""MSK1""))
                                          :op2 (p8 / planet))))
                        :op2 (p9 / possible-01
                              :ARG1 (a2 / affect-01
                                    :ARG0 t
                                    :ARG1 (l / life
                                          :poss (t3 / thing
                                                :name (n5 / name
                                                      :op1 ""MSK2""))))))))
      :snt2 (e4 / equal-01
            :ARG1 (t4 / thing
                  :name (n6 / name
                        :op1 ""MSK1""))
            :ARG2 (t5 / thing
                  :name (n7 / name
                        :op1 ""MSK2""))
            :ARG3 (r / roughly
                  :op1 75000000))
      :snt3 (ii2 / infer-01
            :ARG1 (t6 / true-01
                  :ARG1 (t7 / thing
                        :name (n8 / name
                              :op1 ""MSK0""))
                  :mod (s / some))))"
faulty generalization,ad hominem,"# ::snt "" Drivers in Richmond are terrible . Why does everyone in a big city drive like that ? "" 
(m / multi-sentence
      :snt1 (t / terrible-01
            :ARG1 (p / person
                  :ARG0-of (d / drive-01)
                  :location (c / city
                        :name (n / name
                              :op1 ""Richmond""))))
      :snt2 (c2 / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (d2 / drive-01
                  :ARG0 (e / everyone
                        :location (c3 / city
                              :mod (b / big)))
                  :ARG1-of (r / resemble-01
                        :ARG2 (t2 / that)))))"
fallacy of logic,fallacy of logic,"# ::snt No MSK0 under MSK1 are MSK3 . No MSK3 are MSK4 . Therefore , all MSK0 under MSK1 are MSK4 . 
(m / multi-sentence
      :snt1 (e / equal-01
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0"")
                  :prep-under (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :ARG2 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK3"")))
      :snt2 (c / cause-01
            :ARG1 (e2 / equal-01
                  :polarity -
                  :ARG1 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :prep-under t2)
                  :ARG2 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK4"")))))"
fallacy of relevance,fallacy of relevance,"# ::snt "" Why MSK0 about pandas going extinct , when MSK1 have the homeless in MSK1 country to MSK0 about ? "" 
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (c2 / concern-02
            :ARG0 (p / publication
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (e / extinct
                  :domain (p2 / panda)))
      :condition (c3 / concern-02
            :ARG0 (p3 / publication
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG1 (p4 / person
                  :ARG0-of (h / have-03
                        :polarity -
                        :ARG1 (h2 / home))
                  :location (c4 / country
                        :name (n3 / name
                              :op1 ""MSK1"")))))"
ad populum,fallacy of credibility,"# ::snt Everyone in our family has gone to the University of Tennessee , so you need to apply to UT . 
(g / go-01
      :ARG1 (e / everyone
            :ARG1-of (ii / include-91
                  :ARG2 (f / family
                        :poss (w / we))))
      :ARG4 (u / university
            :name (n / name
                  :op1 ""University""
                  :op2 ""of""
                  :op3 ""Tennessee""))
      :ARG0-of (c / cause-01
            :ARG1 (n2 / need-01
                  :ARG0 (y / you)
                  :ARG1 (a / apply-01
                        :ARG0 y
                        :ARG1 u))))"
fallacy of logic,fallacy of logic,"# ::snt Schools are MSK0 families ; therefore teachers ( MSK0 MSK1 ) should be allowed to discipline MSK1 students . Which logical fallacy is represented here ? 
(m / multi-sentence
      :snt1 (f / family
            :mod (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :domain (s / school)
            :ARG0-of (c / cause-01
                  :ARG1 (r / recommend-01
                        :ARG1 (a / allow-01
                              :ARG1 (d / discipline-01
                                    :ARG0 (p / person
                                          :ARG0-of (t2 / teach-01)
                                          :mod (t3 / thing
                                                :name (n2 / name
                                                      :op1 ""MSK0""))
                                          :mod (t4 / thing
                                                :name (n3 / name
                                                      :op1 ""MSK1"")))
                                    :ARG1 (p2 / person
                                          :ARG0-of (s2 / study-01)
                                          :mod t4))))))
      :snt2 (r2 / represent-01
            :ARG1 (f2 / fallacy
                  :mod (l / logic))
            :location (h / here)))"
fallacy of extension,fallacy of extension,"# ::snt Recent auto accidents in MSK0 neighborhood have led MSK0 to propose to the city council that the MSK2 along Main Street be MSK3 to calm the traffic flow . Opponents complain that MSK3 MSK2 all over town is counterproductive and an unnecessary burden on drivers . 
(m / multi-sentence
      :snt1 (l / lead-03
            :ARG0 (a / accident
                  :mod (a2 / auto)
                  :location (n / neighborhood
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :time (r / recent))
            :ARG1 n
            :ARG2 (p / propose-01
                  :ARG0 n
                  :ARG1 (h / have-mod-91
                        :ARG1 (f / facility
                              :name (n3 / name
                                    :op1 ""MSK2"")
                              :location (a3 / along
                                    :op1 (r2 / road
                                          :name (n4 / name
                                                :op1 ""Main""
                                                :op2 ""Street""))))
                        :ARG2 (f2 / facility
                              :name (n5 / name
                                    :op1 ""MSK3""))
                        :purpose (c / calm-down-02
                              :ARG0 f2
                              :ARG1 (f3 / flow-01
                                    :ARG1 (t / traffic))))
                  :ARG2 (c2 / council
                        :mod (c3 / city))))
      :snt2 (c4 / complain-01
            :ARG0 (p2 / person
                  :ARG0-of (o / oppose-01))
            :ARG1 (a4 / and
                  :op1 (c5 / counterproductive
                        :domain (f4 / facility
                              :name (n6 / name
                                    :op1 ""MSK3"")
                              :location (a5 / all-over
                                    :op1 (t2 / town))))
                  :op2 (b / burden-01
                        :ARG1 (p3 / person
                              :ARG0-of (d / drive-01))
                        :ARG1-of (n7 / need-01
                              :polarity -)))))"
fallacy of credibility,fallacy of credibility,"# ::snt "" MSK0 spoke in the trial as a witness in support of testing perfumes on animals , and MSK0 persuaded me . "" 
(a / and
      :op1 (s / speak-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :location (t / try-02)
            :manner (w / witness-01
                  :ARG0 p
                  :ARG1 (s2 / support-01
                        :ARG0 p
                        :ARG1 (t2 / test-01
                              :ARG1 (p2 / perfume)
                              :ARG2 (a2 / animal)))))
      :op2 (p3 / persuade-01
            :ARG0 p
            :ARG1 (ii / i)))"
false causality,false causality,"# ::snt MSK3 . A MSK0 lifestyle contributes to MSK1 . MSK3 . MSK2 have become more MSK0 in the last few decades . C. Therefore , the rise in MSK1 can be fixed by MSK2 getting more exercise . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (t / thing
                  :name (n / name
                        :op1 ""MSK3""))
            :op2 (c / contribute-01
                  :ARG0 (l / lifestyle
                        :mod t)
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op3 (b / become-01
                  :ARG1 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG2 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :ARG2-of (h / have-degree-91
                              :ARG1 t3
                              :ARG3 (m2 / more)))
                  :time (b2 / before
                        :op1 (n5 / now)
                        :duration (f / few
                              :op1 (t5 / temporal-quantity
                                    :quant 1
                                    :unit (d / decade))))))
      :snt2 (c2 / cause-01
            :li ""C""
            :ARG1 (p / possible-01
                  :ARG1 (f2 / fix-02
                        :ARG1 (r / rise-01
                              :ARG1 (t6 / thing
                                    :name (n6 / name
                                          :op1 ""MSK1"")))
                        :ARG2 (g / get-01
                              :ARG0 t3
                              :ARG1 (e / exercise-02
                                    :ARG0 t3
                                    :ARG2-of (h2 / have-degree-91
                                          :ARG1 t3
                                          :ARG3 (m3 / more))))))))"
circular reasoning,circular reasoning,"# ::snt Executions are moral because we must have a death penalty to discourage violent crime . 
(m / moral-02
      :ARG1 (e / execute-01)
      :ARG1-of (c / cause-01
            :ARG0 (o / obligate-01
                  :ARG1 (w / we)
                  :ARG2 (h / have-03
                        :ARG0 w
                        :ARG1 (p / penalty
                              :mod (d / die-01))
                        :purpose (d2 / discourage-01
                              :ARG0 w
                              :ARG1 (c2 / crime-02
                                    :mod (v / violent)))))))"
ad populum,ad populum,"# ::snt Everyone knows that Japanese DVD MSK0 are the best . After all , the outsell American MSK0 two - to - one . 
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (e / everyone)
            :ARG1 (h / have-degree-91
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""MSK0"")
                        :mod (d / disc
                              :mod (d2 / digital)
                              :mod (v / versatile))
                        :mod (c / country
                              :name (n2 / name
                                    :op1 ""Japan"")))
                  :ARG2 (g / good-02
                        :ARG1 p)
                  :ARG3 (m2 / most)))
      :snt2 (o / outsell-01
            :ARG0 (p2 / product
                  :name (n3 / name
                        :op1 ""MSK0"")
                  :mod (c2 / country
                        :name (n4 / name
                              :op1 ""America"")))
            :ARG1 p2
            :mod (a / after-all)
            :quant (r / ratio-of
                  :op1 2
                  :op2 1)))"
faulty generalization,false causality,"# ::snt MSK0 has a fever , sinus congestion , a cough , and ca n’t come to school , so MSK0 probably has a test later today . 
(c / cause-01
      :ARG0 (h / have-03
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / and
                  :op1 (f / fever)
                  :op2 (c2 / congest-01
                        :ARG0 (s / sinus))
                  :op3 (c3 / cough)
                  :op4 (p2 / possible-01
                        :polarity -
                        :ARG1 (c4 / come-01
                              :ARG1 p
                              :ARG4 (s2 / school)))))
      :ARG1 (t / test-01
            :ARG1 p
            :time (a2 / after
                  :op1 (n2 / now))
            :mod (p3 / probable)
            :time (t2 / today)))"
ad hominem,ad hominem,"# ::snt MSK0 says the sun is fully risen at 5:00 am , but how would MSK0 know MSK0 sleeps in until noon . ( love you MSK0 all MSK1 all MSK1 ) 
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (s / say-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r / rise-01
                        :ARG1 (s2 / sun)
                        :ARG1-of (f / full-09)
                        :time (d / date-entity
                              :time ""5:00"")))
            :ARG2 (k / know-01
                  :ARG0 p
                  :ARG1 (s3 / sleep-in-00
                        :ARG0 p
                        :time (u / until
                              :op1 (d2 / date-entity
                                    :time ""12:00"")))
                  :manner (a / amr-unknown)))
      :snt2 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0"")
                  :mod (a2 / all)
                  :mod (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1"")))))"
ad hominem,ad hominem,"# ::snt MSK0 says we need to wear masks , but MSK0 is the oldest , meanest doctor around . MSK0 ’m sure what MSK0 says is n’t true at all . 
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (s / say-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (n2 / need-01
                        :ARG0 (w / we)
                        :ARG1 (w2 / wear-01
                              :ARG0 w
                              :ARG1 (m2 / mask))))
            :ARG2 (d / doctor
                  :domain p
                  :ARG1-of (h / have-degree-91
                        :ARG2 (o / old)
                        :ARG3 (m3 / most)
                        :ARG5 (d2 / doctor
                              :location (a / around)))
                  :ARG0-of (m4 / mean-04
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 d
                              :ARG3 (m5 / most)
                              :ARG5 d2))))
      :snt2 (s2 / sure-02
            :ARG0 (ii / i)
            :ARG1 (t / true-01
                  :polarity -
                  :ARG1 (t2 / thing
                        :ARG1-of (s3 / say-01
                              :ARG0 p))
                  :degree (a2 / at-all))))"
circular reasoning,circular reasoning,"# ::snt You should drive on the right side of the road because that is what MSK0 says , and MSK0 is MSK0 . 
(a / and
      :op1 (c / cause-01
            :ARG0 (s / say-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r / recommend-01
                        :ARG1 (d / drive-01
                              :ARG0 (y / you)
                              :location (s2 / side
                                    :ARG1-of (r2 / right-04
                                          :ARG2 (r3 / road))))))
            :ARG1 r)
      :op2 (h / have-mod-91
            :ARG1 p
            :ARG2 p))"
faulty generalization,faulty generalization,"# ::snt "" You should n't go to ' Vomito ' I went once and the food was awful . "" is 
(r / recommend-01
      :ARG1 (g / go-02
            :polarity -
            :ARG0 (y / you)
            :ARG4 (e / event
                  :name (n / name
                        :op1 ""Vomito"")))
      :ARG2 y
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (g2 / go-02
                        :frequency 1
                        :ARG0 (ii / i)
                        :ARG4 e)
                  :op2 (a2 / awful
                        :domain (f / food)))))"
ad populum,fallacy of logic,"# ::snt MSK0 has the greatest food in town . MSK0 was voted # 1 by the local paper . Therefore , Phil , the owner of MSK0 , should run for president of the United States . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (s / sports-facility
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (f / food
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / great)
                        :ARG3 (m2 / most)
                        :ARG5 f
                        :location (t / town))))
      :snt2 (v / vote-01
            :ARG0 (p / paper
                  :ARG1-of (l / local-02))
            :ARG1 (s2 / sports-facility
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG2 (r / rank-01
                  :ARG2 1))
      :snt3 (c / cause-01
            :ARG1 (r2 / recommend-01
                  :ARG1 (r3 / run-02
                        :ARG0 (p2 / person
                              :name (n3 / name
                                    :op1 ""Phil"")
                              :ARG0-of (o / own-01
                                    :ARG1 (c2 / company
                                          :name (n4 / name
                                                :op1 ""MSK0""))))
                        :ARG1 (p3 / president
                              :ARG2-of (h3 / have-org-role-91
                                    :ARG1 (c3 / country
                                          :name (n5 / name
                                                :op1 ""United""
                                                :op2 ""States""))))))))"
ad hominem,ad hominem,"# ::snt MSK0 thinks everyone should vote . However , MSK0 once went to prison for drug use . So , MSK0 's obviously wrong . 
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (v / vote-01
                        :ARG0 (e / everyone)))
            :ARG1-of (c / contrast-01
                  :ARG2 (g / go-02
                        :ARG0 p
                        :ARG4 (p2 / prison)
                        :ARG1-of (c2 / cause-01
                              :ARG0 (u / use-01
                                    :ARG0 p
                                    :ARG1 (d / drug)))
                        :time (o / once))))
      :snt2 (c3 / cause-01
            :ARG1 (w / wrong-04
                  :ARG1 p
                  :ARG1-of (o2 / obvious-01))))"
fallacy of relevance,intentional,"# ::snt Let 's talk about MSK0 . Where did MSK1 get the poison MSK1 used on MSK0 ? 
(m / multi-sentence
      :snt1 (t / talk-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (d / disease
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (g / get-01
            :ARG0 (d2 / disease
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG1 (p / poison
                  :ARG1-of (u / use-01
                        :ARG2 (d3 / disease
                              :name (n3 / name
                                    :op1 ""MSK0""))))
            :ARG2 (a / amr-unknown)))"
false dilemma,false dilemma,"# ::snt "" The only solutions I can see to climate change is either mass extinction of humans , or passing this green bill . "" 
(p / possible-01
      :ARG1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (o / or
                  :op1 (e / extinction
                        :mod (m / mass)
                        :domain (h / human))
                  :op2 (p2 / pass-01
                        :ARG2 (b / bill
                              :mod (t / this)
                              :ARG1-of (g / green-03)))
                  :ARG2-of (s2 / solve-01
                        :ARG1 (c / change-01
                              :ARG1 (c2 / climate))
                        :mod (o2 / only)))))"
fallacy of logic,fallacy of logic,"# ::snt No MSK0 are MSK2 . Some MSK2 are not MSK3 . Therefore , some MSK3 are not MSK0 . 
(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""MSK2"")
            :domain (p2 / product
                  :polarity -
                  :name (n2 / name
                        :op1 ""MSK0"")))
      :snt2 (p3 / product
            :polarity -
            :name (n3 / name
                  :op1 ""MSK3"")
            :domain (p4 / product
                  :quant (s / some))
            :ARG1-of (c / cause-01
                  :ARG0 (p5 / product
                        :polarity -
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :domain (p6 / product
                              :quant (s2 / some))))))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 have no less a problem than MSK1 who have to have MSK0 MSK1 each day to sustain MSK0 . 
(h / have-03
      :ARG0 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (p / problem
            :ARG1-of (h2 / have-quant-91
                  :polarity -
                  :ARG3 (l / less)
                  :ARG4 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :ARG1-of (o / obligate-01
                              :ARG2 (h3 / have-03
                                    :ARG0 t2
                                    :ARG1 (t3 / thing
                                          :name (n3 / name
                                                :op1 ""MSK1""))
                                    :purpose (s / sustain-01
                                          :ARG0 t3
                                          :ARG1 t))
                              :frequency (r / rate-entity-91
                                    :ARG3 (t4 / temporal-quantity
                                          :quant 1
                                          :unit (d / day))))))))"
faulty generalization,faulty generalization,"# ::snt The MSK0 of laptops and other devices to replace MSK1 in the classroom would eventually lead to the downfall of MSK3 and publishing companies , causing MSK2 to be laid off from MSK2 jobs . As such , schools should stick to MSK0 MSK3 MSK1 as study materials . 
(m / multi-sentence
      :snt1 (l / lead-03
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK0"")
                  :consist-of (a / and
                        :op1 (l2 / laptop)
                        :op2 (d / device
                              :mod (o / other)))
                  :ARG2-of (r / replace-01
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :location (c / classroom)))
            :ARG1 (a2 / and
                  :op1 (p3 / product
                        :name (n3 / name
                              :op1 ""MSK3""))
                  :op2 (c2 / company
                        :ARG0-of (p4 / publish-01)))
            :ARG2 (f / fall-05
                  :ARG1 a2
                  :ARG0-of (c3 / cause-01
                        :ARG1 (l3 / lay-off-02
                              :ARG1 (p5 / product
                                    :name (n4 / name
                                          :op1 ""MSK2""))
                              :ARG2 (j / job
                                    :mod (p6 / product
                                          :name (n5 / name
                                                :op1 ""MSK2""))))))
            :time (e / eventual))
      :snt2 (r2 / recommend-01
            :ARG1 (s / stick-01
                  :ARG0 (s2 / school)
                  :ARG1 (a3 / and
                        :op1 (p7 / product
                              :name (n6 / name
                                    :op1 ""MSK0""))
                        :op2 (p8 / product
                              :name (n7 / name
                                    :op1 ""MSK3""))
                        :op3 (p9 / product
                              :name (n8 / name
                                    :op1 ""MSK1"")))
                  :ARG2 (s3 / study-01
                        :ARG0 s2))
            :mod (a4 / as-such)))"
faulty generalization,ad populum,"# ::snt Everybody know that staying out in the rain can make you sick . Which logical fallacy is represented here ? 
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (e / everybody)
            :ARG1 (p / possible-01
                  :ARG1 (m2 / make-02
                        :ARG0 (s / stay-01
                              :ARG1 (y / you)
                              :ARG3 (o / out)
                              :time (r / rain-01))
                        :ARG1 (s2 / sick-05
                              :ARG0 s
                              :ARG1 y))))
      :snt2 (r2 / represent-01
            :ARG1 (f / fallacy
                  :mod (l / logic)
                  :mod (a / amr-unknown))
            :location (h / here)))"
fallacy of credibility,ad populum,"# ::snt "" Historically , up until the late 16th century , most people believed that the Earth was the center of the universe . Today we understand this is not true , "" is an example of what fallacy ? 
(e / exemplify-01
      :ARG0 (b / believe-01
            :ARG0 (p / person
                  :mod (m / most))
            :ARG1 (c / center
                  :poss (u / universe)
                  :domain (p2 / planet
                        :name (n / name
                              :op1 ""Earth"")))
            :time (u2 / until
                  :op1 (l / late
                        :op1 (d / date-entity
                              :century 16)))
            :manner (h / historical))
      :ARG1 (f / fallacy
            :mod (a / amr-unknown))
      :ARG1-of (c2 / cause-01
            :ARG0 (u3 / understand-01
                  :ARG0 (w / we)
                  :ARG1 c
                  :time (t / today))))"
faulty generalization,faulty generalization,"# ::snt James , the company MSK0 work for just filed for bankruptcy ! How can I trust MSK0 with our money ? 
(m / multi-sentence
      :snt1 (f / file-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""James"")
                  :ARG2-of (w / work-01
                        :ARG0 (p / person
                              :name (n2 / name
                                    :op1 ""MSK0""))))
            :ARG2 (b / bankrupt-01)
            :time (j / just))
      :snt2 (p2 / possible-01
            :ARG1 (t / trust-01
                  :ARG0 (ii / i)
                  :ARG1 (m2 / money
                        :poss (w2 / we))
                  :ARG2 p)
            :manner (a / amr-unknown)))"
faulty generalization,faulty generalization,"# ::snt All required university courses are boring . 
(b / bore-02
      :ARG0 (c / course
            :mod (u / university)
            :ARG1-of (r / require-01)
            :mod (a / all)))"
fallacy of credibility,circular reasoning,"# ::snt God exists . How do you know ? Because it says so in the Bible . 
(m / multi-sentence
      :snt1 (e / exist-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""God""))
            :manner (a / amr-unknown))
      :snt2 (c / cause-01
            :ARG0 (s / say-01
                  :ARG0 (b / book
                        :name (n2 / name
                              :op1 ""Bible""))
                  :ARG1 (s2 / so))
            :ARG1 (k / know-01
                  :ARG0 (y / you)
                  :ARG1 e
                  :manner (a2 / amr-unknown))))"
false dilemma,false dilemma,"# ::snt "" Either MSK0 re-elect Mayor Ruiz , or MSK0 watch MSK0 city fall to pieces "" is an example of 
(e / exemplify-01
      :ARG0 (o / or
            :op1 (r / reelect-01
                  :ARG0 (c / city
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p / person
                        :name (n2 / name
                              :op1 ""Ruiz"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 c
                              :ARG2 (m / mayor))))
            :op2 (w / watch-01
                  :ARG0 c
                  :ARG1 (f / fall-05
                        :ARG1 (c2 / city
                              :poss c)
                        :ARG2 (p2 / piece)))))"
ad hominem,ad hominem,"# ::snt Charlie : Fast food is filled with salt , fat , and added sugars . We need better regulation of the industry . MSK0 : That may be , but MSK0 're sure a hypocrite ! MSK0 saw MSK0 devour a Triple - Baconator , super-sized fries , and 64 ounces of soda yesterday . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (f / fill-01
                  :ARG1 (f2 / food
                        :ARG1-of (f3 / fast-02))
                  :ARG2 (a / and
                        :op1 (s2 / salt)
                        :op2 (f4 / fat)
                        :op3 (s3 / sugar
                              :ARG1-of (a2 / add-02)))))
      :snt2 (s4 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (c / contrast-01
                  :ARG1 (p3 / possible-01
                        :ARG1 (t / that))
                  :ARG2 (h / hypocrite
                        :domain p2
                        :ARG1-of (s5 / sure-02))))
      :snt3 (s6 / see-01
            :ARG0 p2
            :ARG1 (d / devour-01
                  :ARG0 p2
                  :ARG1 (a3 / and
                        :op1 (p4 / product
                              :name (n3 / name
                                    :op1 ""Triple""
                                    :op2 ""Baconator""))
                        :op2 (f5 / fry
                              :ARG1-of (s7 / size-01
                                    :ARG2 (s8 / super)))
                        :op3 (s9 / soda
                              :quant (m2 / mass-quantity
                                    :quant 64
                                    :unit (o / ounce))))
                  :time (y / yesterday)))
      :snt4 (n4 / need-01
            :ARG0 (ii / industry)
            :ARG1 (r / regulate-01
                  :ARG1 ii
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 r)
                        :ARG3 (m3 / more)))))"
appeal to emotion,appeal to emotion,"# ::snt What is the appeal being used through this sad little girl ? 
(u / use-01
      :ARG1 (a / appeal-03
            :ARG0 (a2 / amr-unknown))
      :instrument (g / girl
            :mod (l / little)
            :ARG1-of (s / sad-02)
            :mod (t / this)))"
ad hominem,ad hominem,"# ::snt "" MSK0 raises a really good point , but can we really trust MSK0 ? MSK0 moved to this town three years ago and everyone knows MSK0 wife left MSK0 . 
(c / contrast-01
      :ARG1 (r / raise-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / point-04
                  :ARG1-of (g / good-02
                        :degree (r2 / really))))
      :ARG2 (p3 / possible-01
            :ARG1 (t / trust-02
                  :ARG0 (w / we)
                  :ARG1 p
                  :ARG1-of (r3 / real-04))
            :polarity (a / amr-unknown)
            :ARG1-of (c2 / cause-01
                  :ARG0 (a2 / and
                        :op1 (m / move-01
                              :ARG0 p
                              :ARG2 (t2 / town
                                    :mod (t3 / this))
                              :time (b / before
                                    :op1 (n2 / now)
                                    :quant (t4 / temporal-quantity
                                          :quant 3
                                          :unit (y / year))))
                        :op2 (k / know-01
                              :ARG0 (e / everyone)
                              :ARG1 (l / leave-15
                                    :ARG0 (p4 / person
                                          :ARG0-of (h / have-rel-role-91
                                                :ARG1 p
                                                :ARG2 (w2 / wife)))
                                    :ARG1 p))))))"
ad populum,ad populum,"# ::snt MSK0 saw that several of MSK0 friends had bought MSK1 . MSK0 realized MSK1 must be a very cool gadget if they had one , and everyone else probably did , too . What fallacy did MSK0 fall into ? 
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / buy-01
                  :ARG0 (p2 / person
                        :quant (s2 / several)
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 p
                              :ARG2 (f / friend)))
                  :ARG1 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (a / and
            :op1 (r / realize-01
                  :ARG0 p
                  :ARG1 (ii / infer-01
                        :ARG1 (g / gadget
                              :ARG1-of (c / cool-04
                                    :degree (v / very))
                              :domain (p4 / product
                                    :name (n3 / name
                                          :op1 ""MSK1"")))))
            :op2 (r2 / realize-01
                  :ARG0 (e / everyone
                        :mod (e2 / else))
                  :ARG1 (p5 / probable
                        :domain (h2 / have-03
                              :ARG0 e
                              :ARG1 p4))))
      :snt3 (f2 / fall-10
            :ARG1 (p6 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG2 (f3 / fallacy
                  :mod (a2 / amr-unknown))))"
false dilemma,appeal to emotion,"# ::snt MSK0 know MSK0 missed assignments , but if you fail MSK0 , MSK0 will lose MSK0 financial aid and have to drop out . 
(c / contrast-01
      :ARG1 (k / know-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (m / miss-02
                  :ARG0 p
                  :ARG1 (a / assign-01
                        :ARG2 p)))
      :ARG2 (a2 / and
            :op1 (l / lose-02
                  :ARG0 p
                  :ARG1 (a3 / aid-01
                        :ARG1 (f / finance)
                        :ARG2 p))
            :op2 (o / obligate-01
                  :ARG1 p
                  :ARG2 (d / drop-out-04
                        :ARG0 p))
            :condition (f2 / fail-01
                  :ARG1 (y / you)
                  :ARG2 p)))"
faulty generalization,faulty generalization,"# ::snt If you get in MSK0 , and the fault of MSK0 is a MSK2 at MSK3 , believing all MSK2 at MSK3 are bad drivers is an example of : 
(e / exemplify-01
      :ARG0 (b / believe-01
            :ARG1 (d / drive-01
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""MSK2"")
                        :mod (a / all)
                        :location (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK3"")))
                  :ARG1-of (b2 / bad-07)))
      :condition (a2 / and
            :op1 (g / get-05
                  :ARG1 (y / you)
                  :ARG2 (p3 / product
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :op2 (f / fault-01
                  :ARG1 p3
                  :ARG2 (p4 / product
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :location p2))))"
ad populum,ad populum,"# ::snt the phrase "" Ninety percent of all people surveyed said that MSK0 is better than Burger King so MSK0 must be true . "" represents which fallacy ? 
(r / represent-01
      :ARG0 (p / phrase-01
            :ARG1 (s / say-01
                  :ARG0 (p2 / person
                        :ARG1-of (ii / include-91
                              :ARG2 (p3 / person
                                    :mod (a / all)
                                    :ARG1-of (s2 / survey-01))
                              :ARG3 (p4 / percentage-entity
                                    :value 90)))
                  :ARG1 (h / have-degree-91
                        :ARG1 (p5 / product
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (g / good-02
                              :ARG1 p5)
                        :ARG3 (m / more)
                        :ARG4 (p6 / product
                              :name (n2 / name
                                    :op1 ""Burger""
                                    :op2 ""King""))
                        :ARG0-of (c / cause-01
                              :ARG1 (o / obligate-01
                                    :ARG1 (t / true-01
                                          :ARG1 p5))))))
      :ARG1 (f / fallacy
            :mod (a2 / amr-unknown)))"
fallacy of credibility,fallacy of extension,"# ::snt MSK1 The Senator thinks MSK0 can solve all MSK0 ecological problems by driving a Prius . MSK1 
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (s / senator)))
            :ARG1 (p2 / possible-01
                  :ARG1 (s2 / solve-01
                        :ARG0 (p3 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (p4 / problem
                              :mod (e / ecology)
                              :mod (a / all)
                              :poss p3)
                        :ARG2 (d / drive-01
                              :ARG0 p3
                              :ARG1 (c / car-make
                                    :name (n2 / name
                                          :op1 ""Prius""))))))
      :snt2 (p5 / person
            :name (n3 / name
                  :op1 ""MSK1"")))"
ad hominem,fallacy of relevance,"# ::snt MSK0 bears ca n't be dangerous ! MSK0 're too cute . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (e / endanger-01
                  :ARG0 (b / bear
                        :name (n / name
                              :op1 ""MSK0""))))
      :snt2 (c / cute
            :degree (t / too)
            :domain (p2 / product
                  :name n
                  :op1 ""MSK0"")))"
fallacy of credibility,faulty generalization,"# ::snt MSK0 swears the mechanic at that shop overcharged MSK0 last week and after looking at MSK0 invoice it seems MSK0 ’s right . So do n’t take MSK1 business there , as MSK1 ’ll definitely get ripped off . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / swear-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (o / overcharge-01
                        :ARG0 (m2 / mechanic
                              :location (s2 / shop
                                    :mod (t / that)))
                        :ARG2 p
                        :time (w / week
                              :mod (l / last))))
            :op2 (s3 / seem-01
                  :ARG1 (r / right-06
                        :ARG1 p)
                  :time (a2 / after
                        :op1 (l2 / look-01
                              :ARG1 (ii / invoice
                                    :poss p)))))
      :snt2 (c / cause-01
            :ARG0 (r2 / rip-off-02
                  :ARG1 (b / business
                        :poss (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1"")))
                  :mod (d / definite))
            :ARG1 (t2 / take-01
                  :polarity -
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 b
                  :ARG2 s2)))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 to sit in the same class for 2 hours is like asking MSK0 to wander the desert alone , with no water , for a week . 
(r / resemble-01
      :ARG1 (a / ask-02
            :ARG1 (s / sit-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (c / class
                        :ARG1-of (s2 / same-01))
                  :duration (t / temporal-quantity
                        :quant 2
                        :unit (h / hour)))
            :ARG2 p)
      :ARG2 (w / wander-01
            :ARG0 p
            :ARG1 (d / desert)
            :manner (a2 / alone)
            :accompanier (w2 / water
                  :polarity -)
            :duration (t2 / temporal-quantity
                  :quant 1
                  :unit (w3 / week))))"
faulty generalization,faulty generalization,"# ::snt MSK0 roommate said her MSK2 was MSK3 , and the one MSK0 ’m in is MSK3 , too . All MSK2 must be hard . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (r / roommate))
                  :mod (p2 / product
                        :name (n / name
                              :op1 ""MSK0"")))
            :ARG1 (a / and
                  :op1 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK3"")
                        :domain (p4 / product
                              :name (n3 / name
                                    :op1 ""MSK2"")
                              :poss p))
                  :op2 (b / be-located-at-91
                        :ARG1 ii
                        :ARG2 p3
                        :mod (t / too))))
      :snt2 (ii2 / infer-01
            :ARG1 (h2 / hard-02
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :mod (a2 / all)))))"
circular reasoning,false dilemma,"# ::snt It is an example of 
(e / exemplify-01
      :ARG0 (ii / it))"
fallacy of credibility,appeal to emotion,"# ::snt The Bible is filled with stories of God 's magic . 
(f / fill-01
      :ARG1 (b / book
            :name (n / name
                  :op1 ""Bible""))
      :ARG2 (s / story
            :topic (m / magic
                  :poss (p / person
                        :name (n2 / name
                              :op1 ""God"")))))"
fallacy of credibility,faulty generalization,"# ::snt MSK0 has ingredients from all the food groups . Therefore , MSK0 must be healthy . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (ii / ingredient
                  :source (g / group
                        :mod (f / food)
                        :mod (a / all))))
      :snt2 (ii2 / infer-01
            :ARG1 (h2 / healthy
                  :domain p)))"
ad populum,ad populum,"# ::snt McDonald 's Hamburgers : over 99 billion served . 
(s / serve-02
      :ARG2 (p / person
            :quant (o / over
                  :op1 99000000000))
      :location (f / facility
            :name (n / name
                  :op1 ""McDonald's""
                  :op2 ""Hamburgers"")))"
fallacy of relevance,fallacy of relevance,"# ::snt Mom , MSK0 know you 're upset that MSK0 went over MSK0 cell limit this month . The important issue here , though , is that MSK0 got an A on MSK0 algebra exam . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (k / know-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0"")
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (m2 / mom)))
                  :ARG1 (u / upset-01
                        :ARG0 (g / go-over
                              :op1 (l / limit-01
                                    :ARG1 (c / cell
                                          :mod p))
                              :time (m3 / month
                                    :mod (t / this)))
                        :ARG1 p))
            :ARG2 p)
      :snt2 (h2 / have-concession-91
            :ARG2 (ii2 / issue-02
                  :ARG0 (g2 / get-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :ARG1 (s2 / score-on-scale-91
                              :ARG1 ""A"")
                        :time (e / exam
                              :mod (m4 / mathematics)
                              :mod p))
                  :ARG1-of (ii3 / important-01)
                  :location (h3 / here))))"
fallacy of extension,faulty generalization,"# ::snt An environmental group illegally blocked loggers and workers at a nuclear plant . Therefore , MSK0 are radicals who take the law into MSK0 own hands . 
(m / multi-sentence
      :snt1 (b / block-01
            :ARG0 (g / group
                  :mod (e / environment))
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (l / log-03))
                  :op2 (p2 / person
                        :ARG0-of (w / work-01))
                  :location (p3 / plant
                        :mod (n / nucleus)))
            :manner (l2 / law
                  :polarity -))
      :snt2 (c / cause-01
            :ARG1 (p4 / person
                  :ARG1-of (r / radical-02)
                  :domain (p5 / political-movement
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG0-of (t / take-03
                        :ARG1 (l3 / law)
                        :ARG2 (ii / in-ones-hands-07
                              :ARG0 p5
                              :ARG1 l3)))))"
false dilemma,false dilemma,"# ::snt Look , MSK0 are going to have to make up MSK0 mind . Either MSK0 MSK1 that MSK0 can afford this stereo , or MSK0 MSK1 MSK0 are going to do without music for a while 
(m / multi-sentence
      :snt1 (l / look-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (o / obligate-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (m2 / make-up-mind-12
                        :ARG0 p
                        :ARG2 (p2 / possible-01
                              :ARG1 (a / afford-01
                                    :ARG0 p
                                    :ARG1 (s / stereo
                                          :mod (t / this)))))))
      :snt2 (o2 / or
            :op1 (p3 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :op2 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK1"")))
      :op3 (d / do-02
            :ARG0 (p5 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (m3 / music
                  :polarity -)
            :duration (w / while)))"
false dilemma,false dilemma,"# ::snt Either MSK0 love MSK1 or MSK0 hate MSK1 . 
(o / or
      :op1 (l / love-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :op2 (h / hate-01
            :ARG0 p
            :ARG1 p2))"
fallacy of extension,fallacy of relevance,"# ::snt MSK1 : MSK2 could MSK3 MSK4 . MSK5 : MSK6 have a financial interest in MSK9 MSK7 tires , why should MSK7 trust MSK6 ? MSK1 : MSK6 MSK8 MSK2 to MSK7 to have MSK2 checked , sir . MSK5 : MSK7 MSK8 MSK7 to the shop where MSK6 work . MSK1 : So should we forget about MSK4 for now ? MSK5 : MSK7 never suggested that . Are MSK6 trying to MSK3 reverse psychology on MSK7 , so MSK7 will MSK9 MSK4 ? 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (a / and
                  :op1 (t / thing
                        :name (n / name
                              :op1 ""MSK2""))
                  :op2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK3""))
                  :op3 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK4""))))
      :snt2 (a2 / and
            :op1 (ii / interest-01
                  :ARG1 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK6""))
                  :ARG2 (t5 / tire
                        :mod (p2 / product
                              :name (n5 / name
                                    :op1 ""MSK9"")))
                  :mod (f / financial))
            :op2 (r / recommend-01
                  :ARG1 (t6 / trust-02
                        :ARG0 (p3 / person
                              :name (n6 / name
                                    :op1 ""MSK7""))
                        :ARG1 (t7 / thing
                              :name (n7 / name
                                    :op1 ""MSK6"")))
                  :ARG1-of (c / cause-01
                        :ARG0 (a3 / amr-unknown))))
      :snt3 (t8 / try-01
            :ARG0 (p4 / person
                  :name (n8 / name
                        :op1 ""MSK6""))
            :ARG1 (p5 / psychology
                  :ARG1-of (r2 / reverse-01)
                  :beneficiary (p6 / person
                        :name (n9 / name
                              :op1 ""MSK7"")))
            :polarity (a4 / amr-unknown))
      :snt4 (a5 / and
            :op1 (t9 / thing
                  :name (n10 / name
                        :op1 ""MSK6""))
            :op2 (t10 / thing
                  :name (n11 / name
                        :op1 ""MSK7""))
            :op3 (t11 / thing
                  :name (n12 / name
                        :op1 ""MSK8""))
            :purpose (c2 / check-01
                  :ARG1 (t12 / thing
                        :name (n13 / name
                              :op1 ""MSK2"")))
            :location (s / shop
                  :location-of (w / work-01
                        :ARG0 (p7 / person
                              :name (n14 / name
                                    :op1 ""MSK6"")))))
      :snt5 (a6 / amr-unknown))"
ad populum,ad populum,"# ::snt MSK0 wants to go to a small community college close to home because all of MSK0 friends are there . 
(w / want-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (g / go-01
            :ARG1 p
            :ARG4 (c / college
                  :mod (c2 / community)
                  :mod (s / small)
                  :ARG1-of (c3 / close-10
                        :ARG2 (h / home))))
      :ARG1-of (c4 / cause-01
            :ARG0 (b / be-located-at-91
                  :ARG1 (p2 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (f / friend))
                        :mod (a / all))
                  :ARG2 c)))"
circular reasoning,circular reasoning,"# ::snt The thing about the new math MSK1 ( who is MSK0 ) is that MSK0 / MSK0 really stands out because MSK0 / MSK0 has good MSK1 skills . 
(s / stand-out-06
      :ARG1 (s2 / slash
            :op1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :op2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK0"")))
      :topic (m / mathematics
            :ARG1-of (n3 / new-01))
      :ARG1-of (c / cause-01
            :ARG0 (h / have-03
                  :ARG0 s2
                  :ARG1 (s3 / skill
                        :ARG1-of (g / good-02)
                        :mod t)))
      :ARG1-of (r / real-04))"
fallacy of logic,fallacy of logic,"# ::snt MSK3 MSK3 is just like ingesting MSK0 into MSK1 system ; both have been shown to be causally related to death . If MSK1 would n't MSK2 to take a spoonful of MSK0 , I would think that MSK1 would n't MSK2 to continue MSK3 . 
(m / multi-sentence
      :snt1 (r / resemble-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK3""))
            :ARG2 (ii / ingest-01
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :destination (s / system
                        :mod (p3 / product
                              :name (n3 / name
                                    :op1 ""MSK1""))))
            :mod (j / just))
      :snt2 (s2 / show-01
            :ARG1 (r2 / relate-01
                  :ARG1 (b / both)
                  :ARG2 (d / die-01)
                  :ARG1-of (c / cause-01
                        :ARG0 (a / amr-unknown))))
      :snt3 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (h / have-condition-91
                  :ARG1 (c2 / continue-01
                        :polarity -
                        :ARG0 (p4 / product
                              :name (n4 / name
                                    :op1 ""MSK2""))
                        :ARG1 (p5 / product
                              :name (n5 / name
                                    :op1 ""MSK3"")))
                  :ARG2 (t2 / take-01
                        :polarity -
                        :ARG0 (p6 / product
                              :name (n6 / name
                                    :op1 ""MSK1""))
                        :ARG1 (s3 / spoonful
                              :consist-of (p7 / product
                                    :name (n7 / name
                                          :op1 ""MSK0"")))))))"
circular reasoning,false causality,"# ::snt "" MSK0 became extinct because MSK0 ate vegetables ... "" is an example of what ? 
(e / exemplify-01
      :ARG0 (b / become-01
            :ARG1 (s / small-molecule
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (e2 / extinct)
            :ARG1-of (c / cause-01
                  :ARG0 (e3 / eat-01
                        :ARG0 s
                        :ARG1 (v / vegetable))))
      :ARG1 (a / amr-unknown))"
ad hominem,ad hominem,"# ::snt Of course that doctor advocates vaccination — he probably owns stock in a pharmaceutical company . 
(a / and
      :op1 (a2 / advocate-01
            :ARG0 (d / doctor
                  :mod (t / that))
            :ARG1 (v / vaccinate-01)
            :mod (o / of-course))
      :op2 (o2 / own-01
            :ARG0 d
            :ARG1 (s / stock
                  :mod (c / company
                        :mod (p / pharmaceutical)))
            :mod (p2 / probable)))"
circular reasoning,ad populum,"# ::snt SM 2 : MSK0 being popular because MSK0 has been on the best - seller list for months 
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""SM""
                  :op2 2))
      :ARG1 (p2 / popular-02
            :ARG1 (p3 / product
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1-of (c / cause-01
                  :ARG0 (l / list-01
                        :ARG1 p3
                        :ARG2 (t / thing
                              :ARG1-of (s2 / sell-01)
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (g / good-02
                                          :ARG1 t)
                                    :ARG3 (m / most)))
                        :duration (m2 / multiple
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (m3 / month)))))))"
fallacy of relevance,fallacy of relevance,"# ::snt "" Yes , MSK0 have safety issues in MSK0 factory . But MSK0 work really hard to make a good product . "" 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (ii / issue-02
                  :ARG0 (s / safe-01)
                  :location (f / factory
                        :mod c))
            :mod (y / yes))
      :snt2 (c2 / contrast-01
            :ARG2 (w / work-01
                  :ARG0 c
                  :ARG1 (m2 / make-01
                        :ARG0 c
                        :ARG1 (p / product
                              :ARG1-of (g / good-02)))
                  :ARG1-of (h2 / hard-02
                        :degree (r / really)))))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 are like MSK2 MSK0 're both tools with metal parts that could be used to kill someone . And yet it would be MSK3 to MSK5 the MSK4 of MSK2 so MSK5 on MSK4 guns are equally MSK3 . 
(m / multi-sentence
      :snt1 (r / resemble-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK2"")))
      :snt2 (t3 / tool
            :ARG0-of (h / have-03
                  :ARG1 (p / part
                        :mod (m2 / metal)
                        :ARG1-of (u / use-01
                              :ARG2 (k / kill-01
                                    :ARG1 (s / someone))
                              :ARG1-of (p2 / possible-01))))
            :domain t)
      :snt3 (a / and
            :op2 (e / equal-01
                  :ARG1 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK3""))
                  :ARG2 (t5 / thing
                        :name (n4 / name
                              :op1 ""MSK4"")
                        :part-of (t6 / thing
                              :name (n5 / name
                                    :op1 ""MSK2"")))
                  :ARG1-of (c / cause-01
                        :ARG1 (t7 / thing
                              :name (n6 / name
                                    :op1 ""MSK5"")
                              :location (g / gun
                                    :mod (t8 / thing
                                          :name (n7 / name
                                                :op1 ""MSK4""))))
                        :ARG2 t4)
                  :ARG0-of c))
      :mod (y / yet))"
circular reasoning,circular reasoning,"# ::snt "" MSK0 have a right to free speech so MSK0 can say what MSK0 want and you should n't try to stop MSK0 . "" 
(h / have-purpose-91
      :ARG1 (r / right-05
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (s / speak-01
                  :ARG1-of (f / free-04)))
      :ARG2 (a / and
            :op1 (p2 / possible-01
                  :ARG1 (s2 / say-01
                        :ARG0 p
                        :ARG1 (t / thing
                              :ARG1-of (w / want-01
                                    :ARG0 p))))
            :op2 (r2 / recommend-01
                  :ARG1 (t2 / try-01
                        :polarity -
                        :ARG0 (y / you)
                        :ARG1 (s3 / stop-03
                              :ARG0 y
                              :ARG1 p)))))"
faulty generalization,faulty generalization,"# ::snt You did n't remember to take out the trash this morning . It will pile up and the neighbors will complain and the health inspectors will come and take away the kids . 
(m / multi-sentence
      :snt1 (r / remember-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (t / take-out-11
                  :ARG0 y
                  :ARG1 (t2 / trash)
                  :time (d / date-entity
                        :dayperiod (m2 / morning)
                        :mod (t3 / today))))
      :snt2 (a / and
            :op1 (p / pile-up-02
                  :ARG1 (ii / it))
            :op2 (c / complain-01
                  :ARG0 (n / neighbor))
            :op3 (a2 / and
                  :op1 (c2 / come-01
                        :ARG1 (p2 / person
                              :ARG0-of (ii2 / inspect-01
                                    :ARG1 (h / health))))
                  :op2 (t4 / take-away-05
                        :ARG0 p2
                        :ARG1 (k / kid)))))"
ad populum,ad populum,"# ::snt If MSK0 were a true American MSK0 would support the rights of MSK1 to choose whatever vehicle MSK1 want . 
(s / support-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (r / right-05
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG2 (c / choose-01
                  :ARG0 p2
                  :ARG1 (v / vehicle
                        :mod (w / whatever)
                        :ARG1-of (w2 / want-01
                              :ARG0 p2))))
      :condition (p3 / person
            :mod (c2 / country
                  :name (n3 / name
                        :op1 ""United""
                        :op2 ""States""))
            :domain p
            :ARG1-of (t / true-01)))"
ad hominem,intentional,"# ::snt MSK0 : Can MSK0 believe that the president said , "" fat MSK1 are MSK2 "" ? MSK3 : Where did MSK0 hear MSK4 ? MSK0 : MSK0 read MSK4 in a headline on BrightBert News . MSK3 : MSK3 actually said , "" MSK1 who say , ' MSK5 are MSK2 ' are not only cruel , but MSK5 are also wrong as well as being irrational . "" 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (b / believe-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (s / say-01
                        :ARG0 (p3 / president)
                        :ARG1 (e / equal-01
                              :ARG1 (p4 / person
                                    :name (n2 / name
                                          :op1 ""MSK1"")
                                    :ARG1-of (f / fat-03))
                              :ARG2 (p5 / person
                                    :name (n3 / name
                                          :op1 ""MSK2"")))))
            :polarity (a / amr-unknown))
      :snt2 (r / read-01
            :ARG0 (p6 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (s2 / string-entity
                  :value ""MSK4"")
            :location (a2 / amr-unknown)
            :medium (h / headline
                  :poss (b2 / broadcast-program
                        :name (n5 / name
                              :op1 ""BrightBert""
                              :op2 ""News""))))
      :snt3 (s3 / say-01
            :ARG0 (p7 / person
                  :name (n6 / name
                        :op1 ""MSK3""))
            :ARG1 (e2 / equal-01
                  :ARG1 (s4 / string-entity
                        :value ""MSK1"")
                  :ARG2 (s5 / string-entity
                        :value ""MSK2""))
            :ARG2 (s6 / string-entity
                  :value ""MSK5""))
      :ARG1-of (a3 / actual-02)
      :snt4 (a4 / and
            :op1 (c / cruel
                  :domain (p8 / person
                        :ARG0-of (s7 / say-01
                              :ARG1 (e3 / equal-01
                                    :ARG1 (s8 / string-entity
                                          :value ""MSK5"")
                                    :ARG2 (s9 / string-entity
                                          :value ""MSK2"")))))
            :op2 (r2 / rational
                  :polarity -
                  :domain p8
                  :mod (a5 / also))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 eat a good diet , MSK0 will never have a heart attack . 
(h / have-03
      :polarity -
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (h2 / heart-attack)
      :time (e / ever)
      :condition (e2 / eat-01
            :ARG0 p
            :ARG1 (d / diet
                  :ARG1-of (g / good-02))))"
ad populum,ad populum,"# ::snt "" With 80 % of consumers choosing our product , is n't obvious that you should , too ? "" This logical fallacy is called ... 
(m / multi-sentence
      :snt1 (o / obvious-01
            :polarity -
            :ARG1 (r / recommend-01
                  :ARG4 (y / you)
                  :mod (t / too))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / choose-01
                        :ARG0 (p / person
                              :ARG0-of (c3 / consume-01)
                              :quant (p2 / percentage-entity
                                    :value 80))
                        :ARG1 (p3 / product
                              :poss (w / we))))
            :polarity (a / amr-unknown))
      :snt2 (c4 / call-01
            :ARG1 (f / fallacy
                  :mod (l / logical)
                  :mod (t2 / this))))"
fallacy of relevance,fallacy of relevance,"# ::snt When MSK0 gets MSK1 phone bill and MSK1 have gone over the MSK3 , MSK1 begin to distract MSK4 by talking about how well MSK1 did on a test today knowing MSK4 has offered to extend MSK1 MSK3 if MSK1 make good grades . MSK0 is an example of which logical fallacy ? 
(m / multi-sentence
      :snt1 (b / begin-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (d / distract-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK4""))
                  :ARG2 (t / talk-01
                        :ARG0 p
                        :ARG1 (g / good-02
                              :ARG1 (d2 / do-02
                                    :ARG0 (p3 / person
                                          :name (n3 / name
                                                :op1 ""MSK1"")
                                          :ARG0-of (k / know-01
                                                :ARG1 (o / offer-01
                                                      :ARG0 p2
                                                      :ARG1 (e / extend-02
                                                            :ARG0 p2
                                                            :ARG1 (p4 / product
                                                                  :name (n4 / name
                                                                        :op1 ""MSK1""))
                                                            :ARG2 (p5 / product
                                                                  :name (n5 / name
                                                                        :op1 ""MSK3""))
                                                            :condition (m2 / make-18
                                                                  :ARG0 p3
                                                                  :ARG1 (g2 / grade
                                                                        :ARG1-of (g3 / good-02)))))))
                                    :degree (s / so)
                                    :ARG1-of (t2 / test-01
                                          :ARG0 p3
                                          :time (t3 / today))))))
            :time (a / and
                  :op1 (g4 / get-01
                        :ARG0 p3
                        :ARG1 (b2 / bill-01
                              :ARG2 p3
                              :ARG3 (p6 / phone)))
                  :op2 (g5 / go-over-26
                        :ARG0 (p7 / product
                              :name (n6 / name
                                    :op1 ""MSK1""))
                        :ARG1 (p8 / product
                              :name (n7 / name
                                    :op1 ""MSK3"")))))
      :snt2 (e2 / exemplify-01
            :ARG0 (t4 / thing
                  :name (n8 / name
                        :op1 ""MSK0""))
            :ARG1 (f / fallacy
                  :mod (l / logic)
                  :mod (a2 / amr-unknown))))"
false causality,false causality,"# ::snt MSK0 MSK1 a test last week and MSK0 had MSK3 . Having MSK3 , therefore , made MSK0 MSK1 . 
(a / and
      :op1 (t / test-01
            :ARG1 (t2 / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :time (w / week
                  :mod (l / last)))
      :op2 (h / have-03
            :ARG0 t2
            :ARG1 (t3 / thing
                  :name (n2 / name
                        :op1 ""MSK3"")))
      :op3 (m / make-01
            :ARG0 (h2 / have-03
                  :ARG0 t2
                  :ARG1 t3)
            :ARG1 t2
            :ARG1-of (c / cause-01
                  :ARG0 (h3 / have-03
                        :ARG0 t2
                        :ARG1 t3))))"
ad populum,ad populum,"# ::snt MSK0 use MSK1 MSK2 to track MSK0 training , so MSK1 team needs to purchase MSK1 MSK2 for everyone . 
(u / use-01
      :ARG0 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (t2 / thing
            :name (n2 / name
                  :op1 ""MSK1""
                  :op2 ""MSK2""))
      :ARG2 (t3 / track-01
            :ARG0 t
            :ARG1 (t4 / train-01
                  :ARG2 t))
      :ARG0-of (c / cause-01
            :ARG1 (n3 / need-01
                  :ARG0 (t5 / team
                        :mod t2)
                  :ARG1 (p / purchase-01
                        :ARG0 t5
                        :ARG1 (t6 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""
                                    :op2 ""MSK2""))
                        :ARG4 (e / everyone)))))"
intentional,intentional,"# ::snt "" The university committee for student discipline investigated MSK0 for MSK1 , and MSK0 found no evidence of MSK2 . We thus declare that no MSK2 has taken place during MSK1 . "" 
(m / multi-sentence
      :snt1 (a / and
            :op1 (ii / investigate-01
                  :ARG0 (c / committee
                        :mod (u / university)
                        :ARG0-of (d / discipline-01
                              :ARG1 (p / person
                                    :ARG0-of (s / study-01))))
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op2 (f / find-01
                  :polarity -
                  :ARG0 t
                  :ARG1 (t3 / thing
                        :ARG0-of (e / evidence-01
                              :ARG1 (t4 / thing
                                    :name (n3 / name
                                          :op1 ""MSK2""))))))
      :snt2 (c2 / cause-01
            :ARG1 (d2 / declare-02
                  :ARG0 (w / we)
                  :ARG1 (t5 / thing
                        :polarity -
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :time (d3 / date-entity
                              :year 2007
                              :month 1)))))"
fallacy of logic,fallacy of logic,"# ::snt People who are MSK0 MSK1 in a MSK3 . MSK4 MSK1 in a MSK3 . Therefore : MSK4 is MSK0 . 
(m / multi-sentence
      :snt1 (p / person
            :mod (p2 / product
                  :name (n / name
                        :op1 ""MSK0"")
                  :mod (v / value-interval
                        :op1 0
                        :op2 1)
                  :location (p3 / product
                        :name (n2 / name
                              :op1 ""MSK3""))))
      :snt2 (ii / infer-01
            :ARG1 (p4 / product
                  :name (n3 / name
                        :op1 ""MSK4"")
                  :mod (v2 / value-interval
                        :op1 0
                        :op2 1)
                  :location p3)))"
appeal to emotion,fallacy of relevance,"# ::snt Reporter : MSK0 It ’s been two years since MSK1 were implemented , and so far MSK1 have failed to reduce unemployment rates . MSK0 Politician : MSK0 MSK2 have been MSK3 MSK4 ever since MSK2 came into office , and MSK2 ’m happy to say that MSK2 met with many business leaders throughout the country , who MSK1 say that MSK1 are glad to see that our MSK4 MSK3 is paying off . MSK0 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / and
                  :op1 (ii / implement-01
                        :ARG1 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK1"")))
                  :op2 (f / fail-01
                        :ARG1 t
                        :ARG2 (r / reduce-01
                              :ARG0 t
                              :ARG1 (r2 / rate-01
                                    :ARG1 (e / employ-01
                                          :polarity -)))
                        :time (s2 / so-far))))
      :snt2 (s3 / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (p3 / politician)))
            :ARG1 (a2 / and
                  :op1 (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :domain (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK3""))
                        :time (s4 / since
                              :op1 (c / come-01
                                    :ARG1 (t4 / thing
                                          :name (n5 / name
                                                :op1 ""MSK2""))
                                    :ARG4 (o / office))
                              :mod (e2 / ever)))
                  :op2 (h2 / happy-01
                        :ARG0 (s5 / say-01
                              :ARG0 t3
                              :ARG1 (m2 / meet-03
                                    :ARG0 t3
                                    :ARG1 (p4 / person
                                          :ARG0-of (l / lead-02
                                                :ARG1 (b / business))
                                          :quant (m3 / many)
                                          :location (t5 / throughout
                                                :op1 (c2 / country))
                                          :ARG0-of (s6 / say-01
                                                :ARG1 (g / glad-02
                                                      :ARG0 (s7 / see-01
                                                            :ARG0 t3
                                                            :ARG1 (p5 / pay-off-02
                                                                  :ARG1 (t6 / thing
                                                                        :name (n6 / name
                                                                              :op1 ""MSK1"")
                                                                        :poss (w / we))))))))))
                  :ARG2 p)))"
fallacy of extension,ad hominem,"# ::snt Representative Gutierrez of Illinois , MSK0 in MSK1 on July 11 , 1996 , replying to Republicans MSK0 in favor of the "" Defense of MSK2 Act "" , a bill stipulating that ' MSK2 ' be defined as being between a man and a woman only , excluding homosexual MSK2 : "" MSK3 now realize that MSK4 are n't the least bit serious when MSK4 MSK5 about how important it is for the federal government not to interfere in the lives of MSK1 MSK6 . MSK3 understand that MSK4 are just kidding - just teasing us - when MSK4 stress MSK7 and giving MSK7 to local officials . And now MSK3 know that MSK4 biggest joke of all is that old line about family values - all that MSK5 about encouraging MSK6 to care about and be committed to each other . "" 
(m / multi-sentence
      :snt1 (r / respond-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Gutierrez"")
                  :ARG0-of (r2 / represent-01
                        :ARG1 (s / state
                              :name (n2 / name
                                    :op1 ""Illinois""))))
            :ARG1 (p2 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG2 (f / favor-01
                  :ARG0 p
                  :ARG1 (l / law
                        :name (n4 / name
                              :op1 ""Defense""
                              :op2 ""of""
                              :op3 ""MSK2""
                              :op4 ""Act"")
                        :ARG0-of (s2 / stipulate-01
                              :ARG1 (d / define-01
                                    :ARG1 (l2 / law
                                          :name (n5 / name
                                                :op1 ""MSK2""))
                                    :ARG2 (b / between
                                          :op1 (m2 / man)
                                          :op2 (w / woman)
                                          :mod (o / only))
                                    :ARG0-of (e / exclude-01
                                          :ARG1 (l3 / law
                                                :name (n6 / name
                                                      :op1 ""MSK2"")
                                                :mod (h / homosexual)))))))
            :time (d2 / date-entity
                  :year 1996
                  :month 7
                  :day 11))
      :snt2 (a / and
            :op2 (u / understand-01
                  :ARG0 (p3 / person
                        :name (n7 / name
                              :op1 ""MSK3""))
                  :ARG1 (a2 / and
                        :op1 (k / kid-01
                              :ARG0 (p4 / person
                                    :name (n8 / name
                                          :op1 ""MSK4""))
                              :ARG1 (w2 / we)
                              :mod (j / just))
                        :op2 (g / give-01
                              :ARG0 p4
                              :ARG1 (l4 / law
                                    :name (n9 / name
                                          :op1 ""MSK7""))
                              :ARG2 (p5 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG2 (o2 / official
                                                :ARG1-of (l5 / local-02))))))
                  :time (n10 / now)))
      :snt3 (h3 / have-degree-91
            :polarity -
            :ARG1 (j2 / joke-01
                  :ARG0 (p6 / person
                        :name (n11 / name
                              :op1 ""MSK4""))
                  :ARG2 (ii / important-01
                        :ARG1 (ii2 / interfere-01
                              :polarity -
                              :ARG0 (g2 / government-organization
                                    :ARG0-of (g3 / govern-01)
                                    :mod (f2 / federal))
                              :ARG1 (l6 / life
                                    :poss (a3 / and
                                          :op1 (l7 / law
                                                :name (n12 / name
                                                      :op1 ""MSK1""))
                                          :op2 (l8 / law
                                                :name (n13 / name
                                                      :op2 ""MSK5""))))))
                  :mod (a4 / all)))
      :ARG2 (s3 / serious-01
            :ARG1 p6
            :mod (j3 / just))
      :ARG3 (m3 / most)
      :ARG5 a4)"
ad populum,ad populum,"# ::snt Well , every one else jumped off the roof , why ca n't I ? 
(j / jump-03
      :ARG0 (ii / i)
      :ARG1 (e / everyone
            :mod (e2 / else))
      :direction (o / off
            :op1 (r / roof))
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown))
      :mod (w / well)
      :ARG1-of (p / possible-01
            :polarity -))"
ad populum,ad populum,"# ::snt MSK0 cites ( biased ) MSK1 results showing that people think MSK0 ’s a MSK3 to prove a point that MSK0 is a MSK3 . ABC News / Washington Post MSK1 ( wrong big on election ) said MSK4 stand by MSK4 vote on me & 53 % said MSK3 . 
(m / multi-sentence
      :snt1 (c / cite-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / result
                  :mod (t / thing
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG0-of (b / bias-01)
                  :ARG0-of (s / show-01
                        :ARG1 (t2 / think-01
                              :ARG0 (p2 / person)
                              :ARG1 (t3 / thing
                                    :name (n3 / name
                                          :op1 ""MSK3"")
                                    :domain p))))
            :purpose (p3 / prove-01
                  :ARG0 p
                  :ARG1 (p4 / point-04
                        :ARG0 p
                        :ARG1 t)))
      :snt2 (a / and
            :op1 (s2 / say-01
                  :ARG0 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK1"")
                        :ARG1-of (w / wrong-04
                              :ARG2 (e / elect-01)
                              :degree (b2 / big)))
                  :ARG1 (s3 / stand-11
                        :ARG0 (p6 / person
                              :name (n5 / name
                                    :op1 ""MSK4""))
                        :ARG1 (v / vote-01
                              :ARG0 p6
                              :ARG1 (ii / i))))
            :op2 (s4 / say-01
                  :ARG0 (p7 / person
                        :ARG1-of (ii2 / include-91
                              :ARG3 (p8 / percentage-entity
                                    :value 53)))
                  :ARG1 t3))
      :snt3 a
      :op1 (b3 / broadcast-program
            :name (n6 / name
                  :op1 ""ABC""
                  :op2 ""News""))
      :op2 (n7 / newspaper
            :name (n8 / name
                  :op1 ""Washington""
                  :op2 ""Post"")))"
faulty generalization,faulty generalization,"# ::snt This crash will likely damage the reputation of MSK0 Airlines , which will hurt the tourism industry of MSK0 and ruin their economy . 
(l / likely-01
      :ARG1 (d / damage-01
            :ARG0 (c / crash-01
                  :mod (t / this))
            :ARG1 (r / reputation
                  :poss (c2 / company
                        :name (n / name
                              :op1 ""MSK0""
                              :op2 ""Airlines"")))
            :ARG0-of (h / hurt-01
                  :ARG1 (ii / industry
                        :mod (t2 / tourism)
                        :poss c2))
            :ARG0-of (r2 / ruin-01
                  :ARG1 (e / economy
                        :poss c2))))"
circular reasoning,ad hominem,"# ::snt MSK0 are n't effective because MSK0 are all dirty , lazy hippies . 
(e / effective-04
      :polarity -
      :ARG0 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1-of (c / cause-01
            :ARG0 (h / hippie
                  :ARG1-of (d / dirty-02)
                  :mod (l / lazy)
                  :mod (a / all)
                  :domain t)))"
faulty generalization,faulty generalization,"# ::snt In both of the murder MSK0 I have read , the District MSK1 was the culprit . All MSK0 writers like to make MSK1 out to be villains . 
(m / multi-sentence
      :snt1 (c / culprit
            :domain (p / publication
                  :name (n / name
                        :op1 ""MSK1"")
                  :mod (d / district))
            :topic (m2 / murder-01
                  :mod (b / both)
                  :ARG1-of (r / read-01
                        :ARG0 (ii / i))))
      :snt2 (l / like-01
            :ARG0 (p2 / person
                  :ARG0-of (w / write-01
                        :ARG1 (p3 / publication
                              :name (n2 / name
                                    :op1 ""MSK0"")))
                  :mod (a / all))
            :ARG1 (m3 / make-out-23
                  :ARG0 p2
                  :ARG1 p3
                  :ARG2 (v / villain))))"
ad hominem,ad hominem,"# ::snt MSK0 Jones ’ anti-DUI campaign should not be taken seriously . After all , the MSK0 himself was cited for driving under the influence in college 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (t / take-04
                  :polarity -
                  :ARG1 (c / campaign-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""MSK0""
                                    :op2 ""Jones""))
                        :ARG1 (o / oppose-01
                              :ARG1 (d / drive-01
                                    :time (ii / influence-01
                                          :ARG1 (p2 / person)))))
                  :ARG2 (s / serious-01)))
      :snt2 (c2 / cite-01
            :ARG1 (p3 / person
                  :name (n2 / name
                        :op1 ""MSK0""
                        :op2 ""Jones""))
            :ARG2 (d2 / drive-01
                  :ARG0 p3
                  :manner (ii2 / influence-01
                        :ARG1 p3))
            :time (c3 / college)
            :mod (a / after-all)))"
fallacy of relevance,fallacy of relevance,"# ::snt MSK0 is confronted by a friend who tells MSK0 that it is MSK1 . MSK0 begins to talk about right versus MSK1 and who decides . 
(m / multi-sentence
      :snt1 (c / confront-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (f / friend))
                  :ARG0-of (t / tell-01
                        :ARG1 (p3 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 p2))
            :ARG1 p2)
      :snt2 (b / begin-01
            :ARG0 p2
            :ARG1 (t2 / talk-01
                  :ARG0 p2
                  :ARG1 (a / and
                        :op1 (v / versus
                              :op1 (r / right-08)
                              :op2 (d / decide-01
                                    :ARG0 (a2 / amr-unknown)))))))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 are arguing about MSK1 out MSK2 : MSK3 : "" MSK0 should MSK1 out MSK2 . MSK0 are getting a bit messy . "" Bill : "" Why , MSK0 just went through MSK2 last year . Do MSK0 have to MSK1 MSK2 out everyday ? "" MSK3 : "" I never said anything about MSK1 MSK2 out every day . MSK4 just want too keep all MSK4 junk forever , which is just ridiculous . "" 
(m / multi-sentence
      :snt1 (a / argue-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG2 (t2 / thing
                  :name (n3 / name
                        :op1 ""MSK2"")))
      :snt2 (s / say-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (a2 / anything)
            :ARG3 (t3 / thing
                  :name (n4 / name
                        :op1 ""MSK2""))
            :time (e / ever))
      :snt3 (g / get-03
            :ARG1 (t4 / thing
                  :name (n5 / name
                        :op1 ""MSK0""))
            :ARG2 (m2 / mess-up-02
                  :ARG0 t4
                  :degree (b / bit)))
      :snt4 s
      :ARG0 (p2 / person
            :name (n6 / name
                  :op1 ""Bill""))
      :ARG1 (c / cause-01
            :ARG0 (a3 / amr-unknown)
            :ARG1 (o / obligate-01
                  :ARG1 (p3 / person
                        :name (n7 / name
                              :op1 ""MSK0""))
                  :ARG2 (a4 / and
                        :op1 (t5 / thing
                              :name (n8 / name
                                    :op1 ""MSK1""))
                        :op2 (t6 / thing
                              :name (n9 / name
                                    :op1 ""MSK2"")))
                  :frequency (r / rate-entity-91
                        :ARG3 (t7 / temporal-quantity
                              :quant 1
                              :unit (d / day)))))
      :snt5 (w / want-01
            :ARG0 (p4 / person
                  :name (n10 / name
                        :op1 ""MSK4""))
            :ARG1 (k / keep-01
                  :ARG0 p4
                  :ARG1 (j / junk
                        :mod (a5 / all)
                        :mod (p5 / product
                              :name (n11 / name
                                    :op1 ""MSK4"")))
                  :ARG1-of (r2 / ridiculous-02
                        :mod (j2 / just)))
            :mod (j3 / just)))"
faulty generalization,faulty generalization,"# ::snt MSK0 is MSK1 when MSK2 finds out that MSK0 MSK3 MSK4 one day . MSK2 tells MSK0 that MSK2 is MSK1 that since MSK0 MSK3 one MSK4 , MSK0 will start MSK3 more frequently . Then MSK0 will drop out altogether , never graduate or get into college , and end up unemployed and living at home for the rest of MSK0 life . What type of fallacy has MSK0 committed ? 
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MSK0"")
            :mod (s / string-entity
                  :value ""MSK1"")
            :time (f / find-out-03
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK3"")
                        :mod (s2 / string-entity
                              :value ""MSK4""))
                  :time (d / day
                        :mod (o / one)))
            :ARG0-of f)
      :snt2 (t / tell-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1 (a / and
                  :op1 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :mod (s3 / string-entity
                              :value ""MSK1""))
                  :op2 (s4 / start-01
                        :ARG0 p4
                        :ARG1 (s5 / string-entity
                              :value ""MSK3"")
                        :ARG1-of (f2 / frequent-02
                              :ARG2-of (h / have-degree-91
                                    :ARG1 s4
                                    :ARG3 (m2 / more)))
                        :time (s6 / since
                              :op1 (p5 / person
                                    :name (n5 / name
                                          :op1 ""MSK3"")
                                    :mod (s7 / string-entity
                                          :value ""MSK4"")))))
            :ARG2 p)
      :snt3 (c / commit-02
            :ARG0 (p6 / person
                  :name (n6 / name
                        :op1 ""MSK0""))
            :ARG1 (f3 / fallacy
                  :mod (a2 / amr-unknown))
            :time (t2 / then
                  :op1 (a3 / and
                        :op1 (d2 / drop-out-04
                              :ARG0 p6
                              :mod (a4 / altogether))
                        :op2 (o2 / or
                              :op1 (g / graduate-01
                                    :polarity -
                                    :ARG1 p6
                                    :time (e / ever))
                              :op2 (g2 / get-05
                                    :polarity -
                                    :ARG1 p6
                                    :ARG2 (c2 / college)))
                        :op3 (l / live-01
                              :ARG0 p6
                              :location (h2 / home)
                              :duration (r / rest
                                    :ARG0 p6)
                              :part r)))))"
false causality,false causality,"# ::snt MSK0 had come up six times in a row on the roulette wheel , so MSK1 knew that MSK0 was close to certain that black would be next up . Suffering an economic form of natural selection with this thinking , MSK1 soon lost all of MSK1 savings . 
(m / multi-sentence
      :snt1 (c / come-up-13
            :frequency 6
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :location (w / wheel
                  :mod (r / roulette))
            :mod (ii / in-a-row)
            :ARG0-of (c2 / cause-01
                  :ARG1 (k / know-01
                        :ARG0 p
                        :ARG1 (c3 / close-10
                              :ARG1 p
                              :ARG2 k
                              :ARG0 p
                              :ARG1 (n2 / next
                                    :domain (p2 / person
                                          :name (n3 / name
                                                :op1 ""Black"")))))))
      :snt2 (c4 / cause-01
            :ARG0 (s / suffer-01
                  :ARG0 (p3 / person
                        :name (n4 / name
                              :op1 ""MSK1""))
                  :ARG1 (f / form
                        :mod (e / economy)
                        :mod (n5 / natural-03))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (t / think-01
                              :ARG0 p3
                              :ARG1 (t2 / this))))
            :ARG1 (l / lose-02
                  :ARG0 p3
                  :ARG1 (t3 / thing
                        :ARG1-of (s2 / save-01
                              :ARG0 p3)
                        :mod (a / all))
                  :time (s3 / soon))))"
faulty generalization,faulty generalization,"# ::snt "" Once MSK0 leave the house , MSK0 can not go back . MSK0 will not receive any financial support so MSK0 MSK1 to stop going to school . MSK0 credit card will be cut so MSK0 MSK1 to work . MSK0 will live on MSK0 own . "" 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (g / go-back-19
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0"")))
            :time (l / leave-11
                  :ARG0 p2
                  :ARG1 (h / house)))
      :snt2 (c / cause-01
            :ARG0 (s / support-01
                  :polarity -
                  :ARG1 (p3 / person
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :mod (f / financial)
                  :ARG0-of (c2 / cause-01
                        :ARG1 (s2 / stop-01
                              :ARG0 p3
                              :ARG1 (g2 / go-02
                                    :ARG0 p3
                                    :ARG4 (s3 / school)))))
            :ARG1 (c3 / cut-02
                  :ARG1 (c4 / card
                        :mod (c5 / credit)
                        :poss p2)
                  :purpose (w / work-01
                        :ARG0 p3
                        :ARG1 (p4 / product
                              :name (n3 / name
                                    :op1 ""MSK1"")))))
      :snt3 (l2 / live-01
            :ARG0 (p5 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :manner (b / by-oneself)))"
fallacy of logic,intentional,"# ::snt MSK1 : If MSK2 are a MSK4 then MSK2 MSK6 : MSK7 . MSK1 : MSK8 am a MSK4 and MSK8 did not MSK6 : MSK7 . MSK1 : Well MSK2 are n’t a TRUE MSK4 . ” 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / string-entity
                  :value ""MSK2"")
            :op2 (s2 / string-entity
                  :value ""MSK6"")
            :op3 (s3 / string-entity
                  :value ""MSK7""))
      :snt2 (a2 / and
            :op1 (s4 / string-entity
                  :value ""MSK8""
                  :domain (s5 / string-entity
                        :value ""MSK4""))
            :op2 (c / contrast-01
                  :ARG1 s4
                  :ARG2 (s6 / string-entity
                        :value ""MSK6""
                        :domain (s7 / string-entity
                              :value ""MSK7""))))
      :snt3 (s8 / string-entity
            :value ""MSK1""
            :domain (s9 / string-entity
                  :value ""MSK2""))
      :snt4 (t / true-01
            :polarity -
            :ARG1 (s10 / string-entity
                  :value ""MSK4"")
            :ARG2 (s11 / string-entity
                  :value ""MSK2"")
            :mod (w / well)))"
fallacy of logic,circular reasoning,"# ::snt MSK0 has to MSK1 so MSK0 will MSK1 . 
(c / cause-01
      :ARG0 (o / obligate-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :ARG1 (t3 / thing
            :name (n3 / name
                  :op1 ""MSK1"")
            :domain t))"
faulty generalization,false causality,"# ::snt P1 . MSK0 has been empirically proven to cause MSK2 . C. Therefore , if MSK3 MSK4 MSK0 , MSK3 will MSK4 MSK2 . 
(m / multi-sentence
      :snt1 (p / prove-01
            :ARG1 (c / cause-01
                  :ARG0 (e / enzyme
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (e2 / enzyme
                        :name (n2 / name
                              :op1 ""MSK2"")))
            :manner (e3 / empirical))
      :snt2 c
      :ARG0 (e4 / enzyme
            :name (n3 / name
                  :op1 ""MSK3""))
      :ARG1 (e5 / enzyme
            :name (n4 / name
                  :op1 ""MSK4"")
            :domain (e6 / enzyme
                  :name (n5 / name
                        :op1 ""MSK2"")))
      :condition (e7 / enzyme
            :name (n6 / name
                  :op1 ""MSK3"")
            :domain e6))"
false dilemma,false dilemma,"# ::snt "" Either MSK0 have MSK1 or MSK0 scrap MSK1 altogether and have zero football "" IS an example of what fallacy ? 
(e / exemplify-01
      :ARG0 (o / or
            :op1 (h / have-03
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op2 (a / and
                  :op1 (s / scrap-01
                        :ARG0 p
                        :ARG1 p2
                        :degree (a2 / altogether))
                  :op2 (h2 / have-03
                        :ARG0 p
                        :ARG1 (f / football
                              :quant 0))))
      :ARG1 (f2 / fallacy
            :mod (a3 / amr-unknown)))"
fallacy of credibility,fallacy of extension,"# ::snt MSK0 ( Blue ) has been refuting all of Robot 1 's ( Orange ) arguments . MSK0 launches the above counterargument . What is this fallacy ? 
(m / multi-sentence
      :snt1 (r / refute-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0"")
                  :mod (b / blue))
            :ARG1 (a / argue-01
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""Robot""
                              :op2 1)
                        :mod (o / orange))
                  :mod (a2 / all)))
      :snt2 (l / launch-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (c / counterargument
                  :location (a3 / above)))
      :snt3 (f / fallacy
            :domain (a4 / amr-unknown)
            :mod (t / this)))"
appeal to emotion,fallacy of relevance,"# ::snt Sure , that charity group is under investigation for misusing funds , but everyone deserves a healthy meal . 
(c / contrast-01
      :ARG1 (ii / investigate-01
            :ARG1 (g / group
                  :mod (c2 / charity))
            :ARG2 (m / misuse-01
                  :ARG0 g
                  :ARG1 (m2 / monetary-quantity
                        :ARG2-of (f / fund-01)))
            :ARG1-of (s / sure-02))
      :ARG2 (d / deserve-01
            :ARG0 (e / everyone)
            :ARG1 (m3 / meal
                  :mod (h / healthy))))"
false causality,faulty generalization,"# ::snt MSK0 suspects MSK1 of stealing and asks MSK1 to empty MSK1 pockets . The first thing MSK1 take out is MSK2 and they immediately shout , MSK3 I knew MSK2 ! MSK3 What fallacy has MSK0 committed ? 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / suspect-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (s2 / steal-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))))
            :op2 (a2 / ask-02
                  :ARG0 p
                  :ARG1 (e / empty-01
                        :ARG0 p2
                        :ARG1 (p3 / pocket
                              :poss p2))
                  :ARG2 p2))
      :snt2 (a3 / and
            :op1 (t / take-out-11
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 (t2 / thing
                        :ord (o / ordinal-entity
                              :value 1)
                        :domain (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK2""))))
            :op2 (s3 / shout-01
                  :ARG0 (a4 / and
                        :op1 p
                        :op2 (p5 / person
                              :name (n5 / name
                                    :op1 ""MSK3"")))
                  :ARG1 (k / know-01
                        :ARG0 a4
                        :ARG1 t3)
                  :time (ii / immediate)))
      :snt3 (c / commit-02
            :ARG0 (p6 / person
                  :name (n6 / name
                        :op1 ""MSK3""))
            :ARG1 (f / fallacy
                  :mod (a5 / amr-unknown))))"
fallacy of logic,faulty generalization,"# ::snt The United States is the MSK0 nation in the world . So every American is MSK0 . 
(c / cause-01
      :ARG0 (n / nation
            :ARG1-of (s / standard-02
                  :ARG2 (m / methamphetamine))
            :domain (c2 / country
                  :name (n2 / name
                        :op1 ""United""
                        :op2 ""States""))
            :location (w / world))
      :ARG1 (n3 / nation
            :mod m
            :domain (p / person
                  :mod (c3 / country
                        :name (n4 / name
                              :op1 ""America""))
                  :mod (e / every))))"
faulty generalization,false causality,"# ::snt MSK0 threw up because MSK0 ate Hot Cheetos . 
(c / cause-01
      :ARG0 (e / eat-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / product
                  :name (n2 / name
                        :op1 ""Hot""
                        :op2 ""Cheetos"")))
      :ARG1 (t / throw-up-07
            :ARG0 p))"
intentional,intentional,"# ::snt Did MSK0 ever give up MSK0 bad habits ? 
(g / give-up-07
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (h / habit
            :ARG1-of (b / bad-07
                  :ARG2 p))
      :polarity (a / amr-unknown)
      :time (e / ever))"
false causality,false causality,"# ::snt MSK0 passed MSK0 MSK2 after going out to MSK4 . MSK0 should go to MSK4 before every MSK2 ! 
(m / multi-sentence
      :snt1 (p / pass-07
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (p3 / person
                  :name (n2 / name
                        :op1 ""MSK2""))
            :time (a / after
                  :op1 (g / go-out-17
                        :ARG0 p2
                        :prep-to (p4 / person
                              :name (n3 / name
                                    :op1 ""MSK4"")))))
      :snt2 (r / recommend-01
            :ARG1 (g2 / go-01
                  :ARG1 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK0""))
                  :ARG4 (p6 / person
                        :name (n5 / name
                              :op1 ""MSK4""))
                  :time (b / before
                        :op1 (p7 / person
                              :name (n6 / name
                                    :op1 ""MSK2"")
                              :mod (e / every))))))"
ad populum,fallacy of relevance,"# ::snt "" It 's important for you to take this psychology course . Sign up today . Do n't wait . "" 
(m / multi-sentence
      :snt1 (ii / important-01
            :ARG1 (t / take-01
                  :ARG0 (y / you)
                  :ARG1 (c / course-91
                        :ARG1 (p / psychology)
                        :mod (t2 / this))))
      :snt2 (s / sign-up-03
            :mode imperative
            :ARG0 (y2 / you)
            :ARG3 c
            :time (t3 / today))
      :snt3 (w / wait-01
            :polarity -
            :mode imperative
            :ARG1 (y3 / you)))"
ad hominem,ad hominem,"# ::snt "" MSK0 suggests that lowering taxes will be a good idea , MSK0 is coming from a woman to eats a pint of Ben and Jerry 's each night ! "" 
(s / suggest-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (ii / idea
            :ARG1-of (g / good-02)
            :domain (l / lower-05
                  :ARG1 (t / tax-01)))
      :ARG1-of (c / cause-01
            :ARG0 (c2 / come-03
                  :ARG1 p
                  :ARG2 (w / woman
                        :ARG0-of (e / eat-01
                              :ARG1 (p2 / pint
                                    :quant-of (p3 / product
                                          :name (n2 / name
                                                :op1 ""Ben""
                                                :op2 ""and""
                                                :op3 ""Jerry's"")))
                              :frequency (n3 / night
                                    :mod (e2 / each)))))))"
intentional,false causality,"# ::snt Before women got the vote , there were no nuclear weapons 
(w / weapon
      :polarity -
      :mod (n / nucleus)
      :time (b / before
            :op1 (v / vote-01
                  :ARG0 (w2 / woman))))"
false causality,false causality,"# ::snt a connection between two MSK0 that does n't always mean that one causes the other ( correlation MSK1 causation ) MSK2 conexión entre dos MSK0 MSK3 no siempre significa MSK3 MSK2 MSK4 la otra ( correlación MSK1 MSK4 ) 
(m / multi-sentence
      :snt1 (m2 / mean-01
            :polarity -
            :ARG1 (c / connect-01
                  :ARG1 (t / thing
                        :quant 2
                        :name (n / name
                              :op1 ""MSK0"")))
            :ARG2 (c2 / cause-01
                  :ARG0 t
                  :ARG1 (t2 / thing
                        :mod (o / other)))
            :time (a / always)
            :ARG1-of (m3 / mean-01
                  :ARG2 (c3 / correlate-01
                        :ARG1 (t3 / thing
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 (t4 / thing
                              :name (n3 / name
                                    :op1 ""MSK1"")))))
      :snt2 (m4 / mean-01
            :polarity -
            :ARG1 (c4 / converse-01
                  :ARG0 (t5 / thing
                        :quant 2
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :ARG1 (t6 / thing
                        :quant 3
                        :name (n5 / name
                              :op1 ""MSK3"")))
            :ARG2 (a2 / and
                  :op1 (t7 / thing
                        :name (n6 / name
                              :op1 ""MSK3""))
                  :op2 (t8 / thing
                        :name (n7 / name
                              :op1 ""MSK4""))
                  :op3 (t9 / thing
                        :name (n8 / name
                              :op1 ""LSK4"")
                        :mod (o2 / otra)))
            :time (e / ever))
      :snt3 (c5 / correlate-01
            :ARG1 (t10 / thing
                  :name (n9 / name
                        :op1 ""MSK1""))
            :ARG2 t5))"
ad hominem,ad hominem,"# ::snt MSK0 best friend says MSK1 ’re a liar , so MSK0 ’m not going to talk to MSK1 . 
(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (f / friend
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (g / good-02
                                    :ARG1 f)
                              :ARG3 (m / most)))))
      :ARG1 (l / lie-08
            :ARG0 p2)
      :ARG0-of (c / cause-01
            :ARG1 (t / talk-01
                  :polarity -
                  :ARG0 p2
                  :ARG2 p2)))"
faulty generalization,ad hominem,"# ::snt MSK0 drives a car . MSK0 must be wealthy . 
(ii / infer-01
      :ARG1 (w / wealthy
            :domain (p / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :ARG2 (d / drive-01
            :ARG0 p
            :ARG1 (c / car)))"
false causality,false causality,"# ::snt MSK2 . All the MSK0 in the area had to kept closed for most part of the week . MSK2 . MSK1 have withdrawn MSK1 children from the local MSK0 . 
(m / multi-sentence
      :snt2 (w / withdraw-01
            :ARG0 (s / school
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (c / child
                  :mod s)
            :ARG2 (s2 / school
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :ARG1-of (l / local-02)))
      :snt1 (o / obligate-01
            :ARG2 (k / keep-02
                  :ARG1 (c2 / close-01
                        :ARG1 (f / facility
                              :name (n3 / name
                                    :op1 ""MSK0"")
                              :location (a / area)
                              :mod (a2 / all))
                        :duration (p / part
                              :mod (m2 / most)
                              :part-of (w2 / week)))))
      :snt2 (f2 / facility
            :name (n4 / name
                  :op1 ""MSK2"")))"
appeal to emotion,appeal to emotion,"# ::snt What type of persuasive writing is used to influence readers ’ feelings ( pathos ) ? 
(u / use-01
      :ARG1 (t / type-03
            :ARG1 (w / write-01
                  :ARG0-of (p / persuasive-02))
            :ARG2 (a / amr-unknown))
      :ARG2 (ii / influence-01
            :ARG0 t
            :ARG1 (f / feel-01
                  :ARG0 (p2 / person
                        :ARG0-of (r / read-01))
                  :ARG1 (p3 / pathos))))"
ad hominem,fallacy of extension,"# ::snt We should prohibit all cadets from assisting on emergency services missions . MSK0 are so immature MSK0 wo n’t ever stop goofing around . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (p / prohibit-01
                  :ARG0 (w / we)
                  :ARG1 (c / cadet
                        :mod (a / all))
                  :ARG2 (a2 / assist-01
                        :ARG0 c
                        :ARG2 (m2 / mission-01
                              :ARG1 (s / serve-01
                                    :ARG1 (e / emergency))))))
      :snt2 (m3 / mature-02
            :polarity -
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2-of (h / have-degree-91
                  :ARG1 p2
                  :ARG3 (s2 / so)
                  :ARG6 (s3 / stop-01
                        :polarity -
                        :ARG0 p2
                        :ARG1 (g / goof-around-00
                              :ARG0 p2)
                        :time (e2 / ever)))))"
fallacy of relevance,fallacy of relevance,"# ::snt Teacher : Why do n’t MSK0 have MSK1 today ? Student : Well , MSK2 did MSK1 . MSK2 was actually really interested in all that info about MSK3 . Would MSK0 like to hear the song that MSK2 wrote to memorize MSK3 ? 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (h / have-03
                  :polarity -
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :time (t / today)))
      :snt2 (s / say-01
            :ARG0 (p3 / person
                  :ARG0-of (s2 / study-01))
            :ARG1 (d / do-02
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK1""))
                  :mod (w / well)))
      :snt3 (ii / interest-01
            :ARG1 (p6 / person
                  :name (n5 / name
                        :op1 ""MSK2""))
            :ARG2 (ii2 / information
                  :mod (a2 / all)
                  :topic (p7 / product
                        :name (n6 / name
                              :op1 ""MSK3"")))
            :degree (r / really)
            :ARG1-of (a3 / actual-02))
      :snt4 (l / like-02
            :ARG0 (p8 / person
                  :name (n7 / name
                        :op1 ""MSK0""))
            :ARG1 (h2 / hear-01
                  :ARG0 p8
                  :ARG1 (s3 / song
                        :ARG1-of (w2 / write-01
                              :ARG0 (p9 / person
                                    :name (n8 / name
                                          :op1 ""MSK2""))
                              :purpose (m2 / memorize-01
                                    :ARG0 p8
                                    :ARG1 p7))))
            :polarity a))"
ad populum,faulty generalization,"# ::snt MSK1 : People are turning to God everywhere ! MSK2 MSK3 MSK4 said that MSK2 had a personal relationship with Jesus Christ . Fred : Where did MSK5 find MSK2 MSK5 MSK4 ? MSK1 : In MSK3 church . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (t / turn-18
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""God""))
                  :location (e / everywhere)))
      :snt2 (s2 / say-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1 (r / relation-03
                  :ARG0 p3
                  :ARG2 (p4 / person
                        :name (n4 / name
                              :op1 ""Jesus""
                              :op2 ""Christ""))
                  :ARG1-of (p5 / personal-02)))
      :snt3 (s3 / say-01
            :ARG0 (p6 / person
                  :name (n5 / name
                        :op1 ""Fred""))
            :ARG1 (f / find-01
                  :ARG0 (p7 / person
                        :name (n6 / name
                              :op1 ""MSK5""))
                  :ARG1 (a / and
                        :op1 (p8 / person
                              :name (n7 / name
                                    :op1 ""MSK2""))
                        :op2 (p9 / person
                              :name (n8 / name
                                    :op1 ""MSK3""))
                        :op3 (p10 / person
                              :name (n9 / name
                                    :op1 ""MSK4"")))
                  :location (a2 / amr-unknown)))
      :snt4 (b / be-located-at-91
            :ARG1 (p11 / person
                  :name (n10 / name
                        :op1 ""MSK1""))
            :ARG2 (c / church
                  :mod (p12 / product
                        :name (n11 / name
                              :op1 ""MSK3"")))))"
appeal to emotion,ad populum,"# ::snt If MSK0 are a true American , MSK0 will ask MSK0 congressman to vote against NAFTA . 
(h / have-condition-91
      :ARG1 (a / ask-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (v / vote-01
                  :ARG0 (p2 / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG2 (c / congressman))
                        :mod p)
                  :ARG1 (a2 / against
                        :op1 (t / treaty
                              :name (n2 / name
                                    :op1 ""NAFTA""))))
            :ARG2 p2)
      :ARG2 (p3 / person
            :mod (c2 / country
                  :name (n3 / name
                        :op1 ""America""))
            :ARG1-of (t2 / true-01)
            :domain p))"
ad populum,ad populum,"# ::snt "" MSK0 is doing MSK0 , you should be too ! "" is an example of which fallacy ? 
(e / exemplify-01
      :ARG0 (d / do-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :name n
                  :op1 ""MSK0""))
      :ARG1-of (c / cause-01
            :ARG0 (r / recommend-01
                  :ARG1 (d2 / do-02
                        :ARG0 (y / you)
                        :ARG1 t
                        :mod (t2 / too))))
      :ARG1 (f / fallacy
            :mod (a / amr-unknown)))"
fallacy of logic,faulty generalization,"# ::snt MSK0 is part of MSK1 . MSK0 has MSK3 Therefore , MSK1 has MSK3 . What fallacy is described in this logical form ? 
(m / multi-sentence
      :snt1 (h / have-part-91
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK3""))
            :ARG0-of (c / cause-01
                  :ARG1 (h2 / have-03
                        :ARG0 t
                        :ARG1 t2)))
      :snt2 (d / describe-01
            :ARG1 (f / fallacy
                  :mod (a / amr-unknown))
            :manner (f2 / form
                  :mod (l / logic)
                  :mod (t3 / this))))"
faulty generalization,fallacy of extension,"# ::snt MSK0 MSK1 to get rid of the student newspaper . Next MSK0 will probably MSK1 to ban free MSK2 ! MSK0 wo n't MSK1 us to MSK2 at all ! MSK0 will make it a law that you can not MSK2 in public . 
(m / multi-sentence
      :snt1 (h / have-purpose-91
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (g / get-04
                  :ARG0 p
                  :ARG1 (r / rid-01
                        :ARG0 p
                        :ARG1 (n2 / newspaper
                              :mod (p2 / person
                                    :ARG0-of (s / study-01))))))
      :snt2 (p3 / probable
            :domain h
            :ARG1 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG2 (b / ban-01
                  :ARG0 p4
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :ARG1-of (f / free-03)))
            :time (n5 / next))
      :snt3 (h2 / have-polarity-91
            :ARG1 (p6 / person
                  :name (n6 / name
                        :op1 ""MSK0""))
            :ARG2 -
            :ARG3 (e / equal)
            :ARG4 (p7 / person
                  :name (n7 / name
                        :op1 ""MSK2""))
            :degree (a / at-all))
      :snt4 (m2 / make-01
            :ARG0 (p8 / person
                  :name (n8 / name
                        :op1 ""MSK0""))
            :ARG1 (l / law
                  :ARG1-of (m3 / mean-01
                        :ARG2 (p9 / possible-01
                              :polarity -
                              :ARG1 (p10 / person
                                    :name (n9 / name
                                          :op1 ""MSK2"")
                                    :ARG1-of (p11 / public-02)))))))"
ad hominem,ad hominem,"# ::snt A Congressman calls a Whitehouse Spokesperson a "" giant idiot "" 
(c / call-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG1 (g / government-organization
                        :name (n / name
                              :op1 ""Congress""))
                  :ARG2 (c2 / congressman)))
      :ARG1 (p2 / person
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (g2 / government-organization
                        :name (n2 / name
                              :op1 ""Whitehouse""))
                  :ARG2 (s / spokesman)))
      :ARG2 (ii / idiot
            :mod (g3 / giant)))"
ad hominem,ad hominem,"# ::snt "" MSK0 are not a credible resource person . MSK0 have n't finished college . "" 
(m / multi-sentence
      :snt1 (p / person
            :mod (r / resource)
            :mod (c / credible
                  :polarity -)
            :domain (p2 / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (f / finish-01
            :polarity -
            :ARG0 (p3 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG1 (c2 / college))"
faulty generalization,ad populum,"# ::snt A commercial shows a group of friends all hanging out wearing MSK0 from a popular MSK0 company . This is an example of 
(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (c / commercial)
            :ARG1 (h / hang-out-06
                  :ARG1 (g / group
                        :consist-of (f / friend)
                        :mod (a / all))
                  :manner (w / wear-01
                        :ARG0 g
                        :ARG1 (p / product
                              :name (n / name
                                    :op1 ""MSK0"")
                              :source (c2 / company
                                    :ARG1-of (p2 / popular-02)
                                    :mod p)))))
      :snt2 (e / exemplify-01
            :ARG0 (t / this)))"
fallacy of extension,appeal to emotion,"# ::snt MSK0 can not get a job because MSK1 failed MSK0 ; MSK0 have to steal to survive . MSK1 is society 's fault , not MSK0 . 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (f / fail-01
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK1""))
                  :ARG2 t)
            :ARG1 (p / possible-01
                  :polarity -
                  :ARG1 (g / get-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :ARG1 (j / job))))
      :snt2 (c2 / contrast-01
            :ARG1 (f2 / fault-01
                  :ARG1 (s / society)
                  :ARG2 (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK1"")))
            :ARG2 (f3 / fault-01
                  :polarity -
                  :ARG1 p2
                  :ARG2 t2))
      :snt3 (o / obligate-01
            :ARG1 (p3 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG2 (s2 / steal-01
                  :ARG0 p3
                  :purpose (s3 / survive-01
                        :ARG0 p3))))"
false causality,false causality,"# ::snt “ MSK0 raised taxes , and then the rate of violent MSK1 went up . MSK0 is responsible for the rise in MSK1 . "" 
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / raise-01
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / tax-01))
            :op2 (ii / increase-01
                  :ARG1 (t3 / thing
                        :ARG2-of (r2 / rate-01
                              :ARG1 (v / violent
                                    :domain (t4 / thing
                                          :name (n2 / name
                                                :op1 ""MSK1"")))))
                  :time (t5 / then)))
      :snt2 (r3 / responsible-01
            :ARG0 (t6 / thing
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (r4 / rise-01
                  :ARG1 (t7 / thing
                        :name (n4 / name
                              :op1 ""MSK1"")))))"
fallacy of credibility,fallacy of credibility,"# ::snt How do MSK1 MSK2 is the third largest industry in the United States ? Derek Shlongmiester , the adult film star of over 50 years , said MSK2 was . MSK2 's how MSK1 . 
(m / multi-sentence
      :snt1 (h / have-mod-91
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG2 (a / amr-unknown))
      :snt2 (s / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Derek""
                        :op2 ""Shlongmiester"")
                  :ARG0-of (s2 / star-01
                        :ARG2 (f / film
                              :mod (a2 / adult))
                        :duration (o / over
                              :op1 (t / temporal-quantity
                                    :quant 50
                                    :unit (y / year)))))
            :ARG1 (h2 / have-mod-91
                  :ARG1 (p3 / product
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG2 (a3 / amr-unknown)))
      :snt3 (h3 / have-mod-91
            :ARG1 (p4 / product
                  :name (n4 / name
                        :op1 ""MSK2""))
            :ARG2 (p5 / product
                  :name (n5 / name
                        :op1 ""MSK1"")))
      :snt4 (h4 / have-degree-91
            :ARG1 (ii / industry
                  :location (c / country
                        :name (n6 / name
                              :op1 ""United""
                              :op2 ""States"")))
            :ARG2 (l / large)
            :ARG3 (m2 / most
                  :ord (o2 / ordinal-entity
                        :value 3))))"
faulty generalization,faulty generalization,"# ::snt MSK0 has MSK1 with a MSK3 who is MSK4 . MSK4 disrupts the MSK1 and is failing . MSK0 decides all MSK3 are not serious students . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :accompanier (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK3"")
                  :ARG1-of (m2 / mean-01
                        :ARG2 (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK4"")))))
      :snt2 (a / and
            :op1 (d / disrupt-01
                  :ARG0 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK4""))
                  :ARG1 t)
            :op2 (f / fail-01
                  :ARG1 t5))
      :snt3 (d2 / decide-01
            :ARG0 (t6 / thing
                  :name (n6 / name
                        :op1 ""MSK0""))
            :ARG1 (s / serious-01
                  :polarity -
                  :ARG1 (p / person
                        :ARG0-of (s2 / study-01)
                        :mod (a2 / all)
                        :domain (p2 / person
                              :name (n7 / name
                                    :op1 ""MSK3""))))))"
circular reasoning,circular reasoning,"# ::snt Fast food is bad for you because is junk . 
(c / cause-01
      :ARG0 (j / junk
            :domain (f / food
                  :ARG1-of (f2 / fast-02)))
      :ARG1 (b / bad-04
            :ARG1 f
            :ARG2 (y / you)))"
appeal to emotion,fallacy of credibility,"# ::snt "" We 're going to protest and not get in trouble because Mr. Iglesias said it 's okay . "" 
(a / and
      :op1 (p / protest-01
            :ARG0 (w / we))
      :op2 (ii / in-trouble-02
            :polarity -
            :ARG1 w)
      :ARG1-of (c / cause-01
            :ARG0 (s / say-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Mr.""
                              :op2 ""Iglesias""))
                  :ARG1 (o / okay-04
                        :ARG1 (ii2 / it)))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 do n't take MSK1 , then MSK0 wo n't do well on the MSK2 . If MSK0 do n't do well on the AP MSK2 , then MSK0 ca n't get into a MSK4 . If MSK0 ca n't get into a MSK4 , then MSK0 'll never get MSK5 . If MSK0 ca n't get MSK5 , then MSK0 'm going to have to live in MSK0 parents ' basement forever . Guess MSK0 'll sign up for MSK1 . 
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (p / possible-01
                  :polarity -
                  :ARG1 (d / do-02
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (w / well)
                        :ARG2 (p3 / product
                              :name (n2 / name
                                    :op1 ""MSK2""))))
            :ARG2 (t / take-01
                  :polarity -
                  :ARG0 p2
                  :ARG1 (p4 / product
                        :name (n3 / name
                              :op1 ""MSK1""))))
      :snt2 (h2 / have-condition-91
            :ARG1 (o / obligate-01
                  :ARG1 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK0""))
                  :ARG2 (l / live-01
                        :ARG0 p5
                        :location (b / basement
                              :poss (p6 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 p5
                                          :ARG2 (p7 / parent))))
                        :duration (f / forever)))
            :ARG2 (p8 / possible-01
                  :polarity -
                  :ARG1 (d2 / do-02
                        :ARG0 p2
                        :ARG1 (w2 / well)
                        :ARG2 (p9 / product
                              :name (n5 / name
                                    :op1 ""MSK4"")))))
      :snt3 (g / guess-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s / sign-up-03
                  :ARG1 p2
                  :ARG3 (p10 / product
                        :name (n6 / name
                              :op1 ""MSK1""))
                  :time (e / ever)))
      :snt4 (h4 / have-condition-91
            :ARG1 (p11 / possible-01
                  :polarity -
                  :ARG1 (g2 / get-01
                        :ARG0 p2
                        :ARG1 (p12 / product
                              :name (n7 / name
                                    :op1 ""MSK4""))))
            :ARG2 (p13 / possible-01
                  :polarity -
                  :ARG1 (g3 / get-01
                        :ARG0 p2
                        :ARG1 p12))))"
false causality,false causality,"# ::snt Every time MSK0 MSK2 , MSK0 MSK4 . Therefore , MSK2 causes MSK0 to MSK4 . 
(c / cause-01
      :ARG0 (t / thing
            :name (n / name
                  :op1 ""MSK2""))
      :ARG1 (t2 / thing
            :name (n2 / name
                  :op1 ""MSK0"")
            :ARG1-of (t3 / transfer-01
                  :ARG3 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK4""))))
      :frequency (r / rate-entity-91
            :ARG4 t))"
ad populum,ad populum,"# ::snt Everyone is getting tattoos in college , so you might as well do it too . 
(g / get-01
      :ARG0 (e / everyone)
      :ARG1 (t / tattoo-01
            :ARG1 e)
      :time (c / college)
      :ARG0-of (c2 / cause-01
            :ARG1 (p / possible-01
                  :ARG1 (d / do-02
                        :ARG0 (y / you)
                        :ARG1 t
                        :mod (a / as-well)
                        :mod (t2 / too)))))"
faulty generalization,fallacy of relevance,"# ::snt There is no need for additional taxes for MSK0 . Every year we throw MSK1 into MSK0 , and all they do is hire more management and build more buildings . None of MSK1 actually reaches the classroom or is really used for MSK0 . 
(m / multi-sentence
      :snt1 (n / need-01
            :polarity -
            :ARG1 (t / tax-01
                  :ARG2 (p / product
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :mod (a / additional)))
      :snt2 (a2 / and
            :op1 (t2 / throw-01
                  :ARG0 (w / we)
                  :ARG1 (p2 / product
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG2 (p3 / product
                        :name (n4 / name
                              :op1 ""MSK0""))
                  :frequency (r / rate-entity-91
                        :ARG3 (t3 / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :op2 (a3 / and
                  :op1 (h / hire-01
                        :ARG0 (t4 / they)
                        :ARG1 (p4 / person
                              :ARG0-of (m2 / manage-01)
                              :quant (m3 / more)))
                  :op2 (b / build-01
                        :ARG0 t4
                        :ARG1 (b2 / building
                              :quant (m4 / more)))
                  :mod (a4 / all)))
      :snt3 (o / or
            :op1 (r2 / reach-01
                  :ARG0 (n5 / none
                        :ARG1-of (ii / include-91
                              :ARG2 (p5 / product
                                    :name (n6 / name
                                          :op1 ""MSK1""))))
                  :ARG1 (c / classroom)
                  :ARG1-of (a5 / actual-02))
            :op2 (u / use-01
                  :ARG1 n5
                  :ARG2 (p6 / product
                        :name (n7 / name
                              :op1 ""MSK0""))
                  :ARG1-of (r3 / real-04))))"
ad hominem,ad hominem,"# ::snt MSK0 is nominated for teacher of the year , which is MSK1 on by MSK0 fellow faculty members . A colleague says that MSK0 would never MSK1 for MSK0 because MSK0 is too young . 
(m / multi-sentence
      :snt1 (n / nominate-01
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""MSK0"")
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (f / faculty)
                        :ARG2 (m2 / member
                              :mod (f2 / fellow))))
            :ARG1 p
            :ARG2 (p2 / person
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :ARG0-of (t / teach-01)
                  :ARG1-of (m3 / mean-01
                        :ARG2 (p3 / person
                              :name (n4 / name
                                    :op1 ""MSK1"")
                              :ARG0-of (t2 / teach-01)))))
      :snt2 (s / say-01
            :ARG0 (p4 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 (p5 / person
                              :name (n5 / name
                                    :op1 ""MSK0""))
                        :ARG2 (c / colleague)))
            :ARG1 (h3 / have-polarity-91
                  :ARG1 (p6 / person
                        :name (n6 / name
                              :op1 ""MSK0"")
                        :ARG0-of (t3 / teach-01))
                  :ARG2 -
                  :time (e / ever)
                  :beneficiary p5
                  :ARG1-of (c2 / cause-01
                        :ARG0 (y / young
                              :ARG2-of (h4 / have-degree-91
                                    :ARG1 p5
                                    :ARG3 (t4 / too)))))))"
ad hominem,ad hominem,"# ::snt Do n't believe what MSK0 says about global warming . MSK0 dropped out of college ! 
(m / multi-sentence
      :snt1 (b / believe-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG1-of (s / say-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :topic (w / warm-01
                              :ARG1 (g / globe)))))
      :snt2 (d / drop-out-04
            :ARG0 p
            :ARG1 (c / college)))"
ad hominem,fallacy of relevance,"# ::snt MSK0 're complaining because MSK0 have to walk to school ? MSK0 used to have to give MSK0 parents MSK0 entire paycheck . 
(m / multi-sentence
      :snt1 (c / complain-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1-of (c2 / cause-01
                  :ARG0 (o / obligate-01
                        :ARG1 p
                        :ARG2 (w / walk-01
                              :ARG2 (s / school))))
            :polarity (a / amr-unknown))
      :snt2 (o2 / obligate-01
            :ARG1 (p2 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG2 (g / give-01
            :ARG0 p2
            :ARG1 (p3 / paycheck
                  :mod (e / entire))
            :ARG2 (p4 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (p5 / parent))))
      :time (u / use-03))"
false causality,ad populum,"# ::snt MSK0 has MSK1 heads - up nine MSK2 in a row . So MSK0 will probably MSK1 tails - up next MSK2 MSK0 is tossed . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :mod (h2 / heads-up))
            :frequency (t3 / temporal-quantity
                  :quant 9
                  :unit (y / year)
                  :mod (ii / in-a-row)))
      :snt2 (c / cause-01
            :ARG0 (t4 / toss-01
                  :ARG1 (t5 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")))
            :ARG1 (p / probable
                  :domain (t6 / tails-up-00
                        :ARG1 (t7 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""))
                        :time (n5 / next
                              :op1 t4)))))"
appeal to emotion,fallacy of relevance,"# ::snt Son : MSK0 am so excited ! MSK0 got an MSK1 A MSK1 on MSK0 physics exam ! Dad : Why not an MSK1 A + MSK1 ? This means that you answered something incorrectly . That is not acceptable ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (s2 / son)))
            :ARG1 (e / excite-01
                  :ARG0 (g / get-01
                        :ARG0 p2
                        :ARG1 (s3 / score-on-scale-91
                              :ARG1 ""MSK1""
                              :ARG3 ""A"")
                        :ARG4 (s4 / score-on-scale-91
                              :ARG1 ""MSK1""
                              :ARG3 ""1"")
                        :time (e2 / exam
                              :topic (p3 / physics)
                              :mod p2))
                  :degree (s5 / so)))
      :snt2 (s6 / say-01
            :ARG0 (p4 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (d / dad)))
            :ARG1 (c / cause-01
                  :ARG0 (a / amr-unknown)
                  :ARG1 (a2 / and
                        :polarity -
                        :op1 (s7 / score-on-scale-91
                              :ARG1 ""MSK1""
                              :ARG3 ""A"")
                        :op2 (s8 / score-on-scale-91
                              :ARG1 ""MSK1""
                              :ARG3 ""1"")))
            :snt3 (m2 / mean-01
                  :ARG1 (a3 / answer-01
                        :ARG0 (y / you)
                        :ARG1 (s9 / something)
                        :ARG1-of (c2 / correct-02
                              :polarity -))
                  :ARG2 (t / that
                        :ARG1-of (a4 / accept-01
                              :ARG1-of (p5 / possible-01
                                    :polarity -))))))"
circular reasoning,circular reasoning,"# ::snt "" MSK0 are the MSK1 football team because MSK0 're MSK2 than MSK3 . MSK0 're MSK2 than MSK3 because MSK0 're the MSK1 . "" 
(m / multi-sentence
      :snt1 (t / team
            :mod (f / football)
            :mod (t2 / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :domain (t3 / thing
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1-of (c / cause-01
                  :ARG0 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :domain t3
                        :ARG1-of (c2 / compare-01
                              :ARG2 (t5 / thing
                                    :name (n4 / name
                                          :op1 ""MSK3""))))))
      :snt2 (c3 / cause-01
            :ARG0 t4
            :ARG1 (t6 / thing
                  :name (n5 / name
                        :op1 ""MSK2"")
                  :domain t3
                  :ARG1-of (c4 / compare-01
                        :ARG2 (t7 / thing
                              :name (n6 / name
                                    :op1 ""MSK3""))))))"
ad hominem,ad hominem,"# ::snt How can MSK0 tell MSK1 MSK1 should MSK2 to lose weight ? All MSK0 do is sit behind a desk all day . MSK1 've never seen MSK0 do a lick of MSK2 . 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (t / tell-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r / recommend-01
                        :ARG0 p2
                        :ARG1 (l / lose-01
                              :ARG0 (p3 / person
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG1 (w / weight)))
                  :ARG2 p3)
            :manner (a / amr-unknown))
      :snt2 (t2 / thing
            :mod (a2 / all)
            :ARG1-of (d / do-02
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :domain (s / sit-01
                  :ARG1 p4
                  :ARG2 (b / behind
                        :op1 (d2 / desk))
                  :duration (d3 / day
                        :mod a2)))
      :snt3 (s2 / see-01
            :polarity -
            :ARG0 (p5 / person
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG1 (l2 / lick-01
                  :ARG0 p5
                  :ARG1 (p6 / person
                        :name (n5 / name
                              :op1 ""MSK2"")))
            :time (e / ever)))"
faulty generalization,false dilemma,"# ::snt There are two kinds of people in this world : those who like penguins , and those who are terrible monsters . 
(a / and
      :op1 (p / person
            :ARG0-of (l / like-01
                  :ARG1 (p2 / penguin)))
      :op2 (p3 / person
            :mod (m / monster
                  :ARG1-of (t / terrible-01)))
      :mod (k / kind
            :quant 2)
      :location (w / world
            :mod (t2 / this)))"
ad populum,faulty generalization,"# ::snt "" Four out of five dentists recommend Happy Glossy toothpaste . Therefore , it must be great . "" 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG0 (d / dentist
                  :quant 4
                  :ARG1-of (ii / include-91
                        :ARG2 (d2 / dentist
                              :quant 5)))
            :ARG1 (t / toothpaste
                  :name (n / name
                        :op1 ""Happy""
                        :op2 ""Glossy"")))
      :snt2 (ii2 / infer-01
            :ARG1 (g / great
                  :domain (ii3 / it))))"
ad hominem,ad hominem,"# ::snt MSK0 says that MSK0 does not trust MSK0 pediatrician because he has never been MSK0 . 
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (t / trust-02
            :polarity -
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (p3 / person
                  :mod (p4 / pediatrics)
                  :domain p)
            :ARG1-of (c / cause-01
                  :ARG0 (h / have-mod-91
                        :polarity -
                        :ARG1 p3
                        :ARG2 p
                        :time (e / ever)))))"
ad hominem,faulty generalization,"# ::snt MSK0 has always associated with shady people , so MSK0 must not be trustworthy . 
(a / associate-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG2 (p2 / person
            :mod (s / shady))
      :time (a2 / always)
      :ARG0-of (c / cause-01
            :ARG1 (o / obligate-01
                  :ARG1 (t / trustworthy
                        :polarity -
                        :domain p))))"
false causality,false causality,"# ::snt Our garage sale made lots of money before MSK0 showed up . Obviously , MSK0 scared off all the customers . 
(m / multi-sentence
      :snt1 (m2 / make-05
            :ARG0 (s / sell-01
                  :ARG0 (w / we)
                  :mod (g / garage))
            :ARG1 (m3 / money
                  :quant (l / lot))
            :time (b / before
                  :op1 (s2 / show-up-02
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSK0"")))))
      :snt2 (s3 / scare-off-02
            :ARG0 p
            :ARG1 (c / customer
                  :mod (a / all))
            :ARG1-of (o / obvious-01)))"
ad hominem,ad hominem,"# ::snt MSK3 : No fault MSK1 is really harmful to the family and the larger society . MSK3 : Well , MSK2 must not really think that since MSK2 ’re MSK1 MSK2 . 
(m / multi-sentence
      :snt1 (f / fault-01
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG2 (h / harm-01
                  :ARG0 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1 (a / and
                        :op1 (f2 / family)
                        :op2 (s / society
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / more))))
                  :degree (r / really)))
      :snt2 (ii / infer-01
            :ARG1 (t3 / think-01
                  :polarity -
                  :ARG0 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG1 (t5 / that)
                  :ARG1-of (r2 / real-04))
            :ARG1-of (c / cause-01
                  :ARG0 (t6 / thing
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :domain (t7 / thing
                              :name (n5 / name
                                    :op1 ""MSK1""))))))"
fallacy of extension,ad populum,"# ::snt MSK0 : Do MSK0 MSK1 in MSK2 MSK3 ? MSK4 : MSK0 MSK5 that babies are born MSK2 ? MSK0 : MSK0 MSK5 MSK3 without fertilization . MSK4 : No . MSK0 : How could MSK0 not MSK1 in MSK2 MSK3 ? MSK6 MSK1 in MSK6 , do n’t MSK0 think MSK0 should reconsider MSK0 position ? 
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-part-91
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :location (a2 / and
                        :op1 (t3 / thing
                              :name (n3 / name
                                    :op1 ""MSK2""))
                        :op2 (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK3"")))
                  :polarity (a3 / amr-unknown))
            :op2 (h2 / have-part-91
                  :ARG1 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK6""))
                  :ARG2 t2
                  :polarity (a4 / amr-unknown))
            :snt2 (a5 / and
                  :op1 (h3 / have-part-91
                        :ARG1 (t6 / thing
                              :name (n6 / name
                                    :op1 ""MSK0""))
                        :ARG2 (t7 / thing
                              :name (n7 / name
                                    :op1 ""MSK5""))
                        :time (b / bear-02
                              :ARG1 (b2 / baby)))
                  :op2 (h4 / have-part-91
                        :ARG1 t6
                        :ARG2 t7)
                  :op3 (f / fertilize-01
                        :polarity -
                        :ARG1 t6))
            :snt3 (h5 / have-part-91
                  :ARG1 (t8 / thing
                        :name (n8 / name
                              :op1 ""MSK4""))
                  :ARG2 (t9 / thing
                        :name (n9 / name
                              :op1 ""MSK5""))
                  :polarity (a6 / amr-unknown))
            :snt4 (h6 / have-part-91
                  :ARG1 (t10 / thing
                        :name (n10 / name
                              :op1 ""MSK6""))
                  :ARG2 (t11 / thing
                        :name (n11 / name
                              :op1 ""MSK3""))
                  :location (t12 / thing
                        :name (n12 / name
                              :op1 ""MSK2"")))
            :snt5 (n13 / no)
            :snt6 (p / possible-01
                  :ARG1 (h7 / have-part-91
                        :polarity -
                        :ARG1 (t13 / thing
                              :name (n14 / name
                                    :op1 ""MSK0""))
                        :ARG2 (t14 / thing
                              :name (n15 / name
                                    :op1 ""MSK1""))
                        :location (t15 / thing
                              :name (n16 / name
                                    :op1 ""MSK2""))))
            :polarity (a7 / amr-unknown)))"
fallacy of extension,fallacy of extension,"# ::snt After MSK0 said that MSK1 should put more money into health and education , MSK2 responded by saying that MSK2 was surprised that MSK0 hates MSK1 so much that MSK2 wants to leave coref3 defenceless by cutting military spending . 
(r / respond-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK2""))
      :ARG2 (s / say-01
            :ARG0 p
            :ARG1 (s2 / surprise-01
                  :ARG0 (h / hate-01
                        :ARG0 p
                        :ARG1 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1-of (h2 / have-quant-91
                              :ARG2 (m / much)
                              :ARG3 (s3 / so)
                              :ARG6 (w / want-01
                                    :ARG0 p
                                    :ARG1 (l / leave-13
                                          :ARG0 p
                                          :ARG1 (d / defend-01
                                                :ARG1 (c / coref3))
                                          :manner (c2 / cut-02
                                                :ARG0 p
                                                :ARG1 (s4 / spend-01
                                                      :ARG4 (m2 / military)))))))
                  :ARG1 p))
      :time (a / after
            :op1 (s5 / say-01
                  :ARG0 p2
                  :ARG1 (r2 / recommend-01
                        :ARG1 (p3 / put-01
                              :ARG0 p2
                              :ARG1 (m3 / money
                                    :mod (m4 / more))
                              :ARG2 (a2 / and
                                    :op1 (h3 / health)
                                    :op2 (e / educate-01)))))))"
fallacy of logic,ad populum,"# ::snt MSK0 did n't want to the only one not MSK1 to MSK2 while MSK0 completed MSK0 Achieve article , so MSK0 MSK1 to MSK2 too . 
(c / contrast-01
      :ARG1 (w / want-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (c2 / compare-01
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG2 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK2""))))
      :ARG2 (c3 / complete-01
            :ARG0 p
            :ARG1 (a / article
                  :name (n4 / name
                        :op1 ""MSK0""
                        :op2 ""Achieve"")))
      :ARG0-of (c4 / cause-01
            :ARG1 (c5 / compare-01
                  :polarity -
                  :ARG1 p
                  :ARG2 (p4 / person
                        :name (n5 / name
                              :op1 ""MSK1""))
                  :ARG3 (p5 / person
                        :name (n6 / name
                              :op1 ""MSK2""))
                  :mod (t / too))))"
appeal to emotion,fallacy of extension,"# ::snt If MSK0 take away farmers ' ability to grow genetically engineered crops , if MSK0 eliminate that option , MSK1 will go hungry , in fact , MSK1 will starve . Unlike MSK2 opponent , MSK2 choose to use the technology available to MSK0 and save lives . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / hunger-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK1"")))
            :op2 (s / starve-01
                  :ARG1 p
                  :mod (ii / in-fact))
            :condition (t / take-away-05
                  :ARG0 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (c / capable-01
                        :ARG1 (p2 / person
                              :ARG0-of (f / farm-01))
                        :ARG2 (g / grow-03
                              :ARG0 p2
                              :ARG1 (c2 / crop
                                    :ARG1-of (e / engineer-01
                                          :manner (g2 / genetics)))))))
      :snt2 (r / resemble-01
            :polarity -
            :ARG1 (c3 / choose-01
                  :ARG0 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :ARG0-of (o / oppose-01
                              :ARG1 t2))
                  :ARG1 (a2 / and
                        :op1 (u / use-01
                              :ARG0 p3
                              :ARG1 (t3 / technology
                                    :ARG2-of (a3 / available-02
                                          :ARG1 t2)))
                        :op2 (s2 / save-02
                              :ARG0 p3
                              :ARG1 (l / life))))))"
appeal to emotion,false dilemma,"# ::snt I thought MSK0 were a good person , but MSK0 were not at church today . 
(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (g / good-02)))
      :ARG2 (b / be-located-at-91
            :polarity -
            :ARG1 p
            :ARG2 (c2 / church)
            :time (t2 / today)))"
ad populum,fallacy of logic,"# ::snt "" MSK0 like music , so MSK0 should get married . "" 
(c / cause-01
      :ARG0 (l / like-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSN""))
            :ARG1 (m / music))
      :ARG1 (r / recommend-01
            :ARG1 (m2 / marry-01
                  :ARG1 p)))"
ad populum,faulty generalization,"# ::snt Four out of five dentists recommend Happy Glossy Smiley toothpaste brand . Therefore , it must be great . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG0 (d / dentist
                  :quant 4
                  :ARG1-of (ii / include-91
                        :ARG2 (d2 / dentist
                              :quant 5)))
            :ARG1 (b / brand
                  :name (n / name
                        :op1 ""Happy""
                        :op2 ""Glossy""
                        :op3 ""Smiley"")
                  :mod (t / toothpaste)))
      :snt2 (ii2 / infer-01
            :ARG1 (g / great
                  :domain (ii3 / it))))"
intentional,intentional,"# ::snt What drugs were you on ? 
(d / drug
      :domain (a / amr-unknown)
      :poss (y / you))"
fallacy of logic,fallacy of logic,"# ::snt MSK6 MSK0 are like MSK2 MSK0 ’re both tools with metal parts that could be used to kill someone . And yet it would be MSK3 to MSK5 the MSK4 of MSK2 so MSK5 on MSK4 guns are equally MSK3 . MSK6 
(m / multi-sentence
      :snt1 (r / resemble-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK2""))
            :ARG2 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK0"")))
      :snt2 (t / tool
            :ARG0-of (h / have-03
                  :ARG1 (p3 / part
                        :mod (m2 / metal)
                        :ARG1-of (u / use-01
                              :ARG2 (k / kill-01
                                    :ARG1 (s / someone))
                              :ARG1-of (p4 / possible-01))))
            :domain (a / and
                  :op1 (p5 / product
                        :name (n3 / name
                              :op1 ""MSK3"")
                        :prep-to (p6 / product
                              :name (n4 / name
                                    :op1 ""MSK5"")))
                  :op2 (p7 / product
                        :name (n5 / name
                              :op1 ""MSK4"")
                        :poss (p8 / product
                              :name (n6 / name
                                    :op1 ""MSK2""))
                        :ARG0-of (c / cause-01
                              :ARG1 (e / equal-01
                                    :ARG1 p6
                                    :ARG2 p8)))))
      :snt3 (p9 / product
            :name (n7 / name
                  :op1 ""MSK6"")))"
fallacy of logic,faulty generalization,"# ::snt A MSK0 makes less MSK1 than a MSK2 . Therefore , MSK0 are less of a MSK1 problem than MSK2 
(m / multi-sentence
      :snt1 (m2 / make-01
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :ARG1-of (h / have-quant-91
                        :ARG3 (l / less)
                        :ARG4 (p3 / product
                              :name (n3 / name
                                    :op1 ""MSK2"")))))
      :snt2 (ii / infer-01
            :ARG1 (h2 / have-quant-91
                  :ARG1 (p4 / problem
                        :domain (p5 / product
                              :name (n4 / name
                                    :op1 ""MSK1"")))
                  :ARG3 (l2 / less)
                  :ARG4 (p6 / problem
                        :domain (p7 / product
                              :name (n5 / name
                                    :op1 ""MSK2""))))))"
false causality,faulty generalization,"# ::snt MSK0 is riding MSK0 bike in MSK0 home town in Maine , minding MSK0 own business . A station wagon comes up behind MSK0 and MSK1 starts beeping MSK1 horn and then tries to force MSK0 off the road . As MSK1 goes by , MSK1 yells "" get on the sidewalk where you belong ! "" MSK0 sees that the car has MSK2 plates and concludes that all MSK2 drivers are jerks . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / ride-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (b / bike
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :location (t / town
                        :name (n3 / name
                              :op1 ""MSK0"")
                        :mod (h / home)
                        :location (s / state
                              :name (n4 / name
                                    :op1 ""Maine""))))
            :op2 (m2 / mind-05
                  :ARG0 p
                  :ARG1 (b2 / business
                        :poss p)))
      :snt2 (a2 / and
            :op1 (c / come-up-13
                  :ARG1 (s2 / station-wagon)
                  :location (b3 / behind
                        :op1 p))
            :op2 (s3 / start-01
                  :ARG0 (p2 / person
                        :name (n5 / name
                              :op1 ""MSK1""
                              :op2 ""horn""))
                  :ARG1 (b4 / beep-01
                        :ARG0 p2
                        :ARG1 (h2 / horn))
                  :op3 (t2 / try-01
                        :ARG0 p2
                        :ARG1 (f / force-01
                              :ARG0 p2
                              :ARG1 p
                              :ARG2 (o / off
                                    :op1 (r2 / road)))
                        :time (t3 / then)))
            :snt3 (y / yell-01
                  :ARG0 (p3 / person
                        :name (n6 / name
                              :op1 ""MSK1""))
                  :ARG1 (g / get-05
                        :mode imperative
                        :ARG0 (y2 / you)
                        :ARG2 (s4 / sidewalk
                              :ARG2-of (b5 / belong-01
                                    :ARG0 y2)))
                  :time (g2 / go-02
                        :ARG0 (p4 / person
                              :name (n7 / name
                                    :op1 ""MSK1""))))
            :snt4 (c2 / conclude-01
                  :ARG0 p
                  :ARG1 (j / jerk
                        :domain (p5 / person
                              :ARG0-of (d / drive-01
                                    :ARG1 (c3 / car
                                          :name (n8 / name
                                                :op1 ""MSK2"")))
                              :mod (a3 / all))))))"
false dilemma,false dilemma,"# ::snt I ’m raising funds to help cure XYZ disease . If MSK0 do n’t donate , then MSK0 ’re part of the problem . 
(m / multi-sentence
      :snt1 (r / raise-02
            :ARG0 (ii / i)
            :ARG1 (f / fund)
            :purpose (h / help-01
                  :ARG0 f
                  :ARG1 (c / cure-01
                        :ARG2 (d / disease
                              :name (n / name
                                    :op1 ""Yaz"")))))
      :snt2 (h2 / have-condition-91
            :ARG1 (h3 / have-part-91
                  :ARG1 (p / problem)
                  :ARG2 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0"")))
            :ARG2 (d2 / donate-01
                  :polarity -
                  :ARG0 p2)))"
faulty generalization,faulty generalization,"# ::snt If MSK0 let MSK1 implant tracking devices in criminals , MSK1 's not going to stop there ! MSK1 're going to want to track MSK0 at work , MSK0 school children , and then eventually everyone ! 
(m / multi-sentence
      :snt1 (s / stop-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :time (t / there)
            :condition (l / let-01
                  :ARG0 p
                  :ARG1 (ii / implant-01
                        :ARG0 p
                        :ARG1 (d / device
                              :ARG0-of (t2 / track-01))
                        :ARG2 (p2 / person
                              :ARG2-of (c / criminal-03)))))
      :snt2 (w / want-01
            :ARG0 p
            :ARG1 (a / and
                  :op1 (t3 / track-01
                        :ARG0 p
                        :ARG1 (p3 / person
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :location (w2 / work-01))
                  :op2 (c2 / child
                        :mod (s2 / school)
                        :poss p)
                  :op3 (e / everyone
                        :time (e2 / eventual)))))"
intentional,fallacy of relevance,"# ::snt MSK0 : Dude , where are MSK1 car keys ? Silent Bob : ( says nothing ) MSK0 : MSK1 KNEW MSK0 took them ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / be-located-at-91
                  :ARG1 (k / key
                        :mod (c / car)
                        :poss (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1"")))
                  :ARG2 (a / amr-unknown)
                  :mod (d / dude)))
      :snt2 (s2 / say-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""Silent""
                        :op2 ""Bob""))
            :ARG1 (n4 / nothing))
      :snt3 (s3 / say-01
            :ARG0 (p4 / person
                  :name (n5 / name
                        :op1 ""MSK1""))
            :ARG1 (k2 / know-01
                  :ARG0 p4
                  :ARG1 (t / take-01
                        :ARG0 p4
                        :ARG1 k))))"
circular reasoning,circular reasoning,"# ::snt MSK0 is the best because MSK0 's expensive . 
(c / cause-01
      :ARG0 (e / expensive
            :domain (p / product
                  :name (n / name
                        :op1 ""MSK0"")))
      :ARG1 (g / good-02
            :ARG1 p
            :ARG2-of (h / have-degree-91
                  :ARG1 p
                  :ARG3 (m / most))))"
faulty generalization,faulty generalization,"# ::snt I saw MSK0 get in a car accident . Therefore , MSK0 are bad drivers 
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (g / get-05
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (a / accident
                        :mod (c / car))))
      :snt2 (c2 / cause-01
            :ARG0 (d / drive-01
                  :ARG0 (p2 / person
                        :name n
                        :op1 ""MSK0""))
            :ARG1-of (b / bad-02)))"
ad populum,ad populum,"# ::snt Matthew : Everyone believes that MSK0 get paid enough for the job MSK0 do . Therefore , it must be true . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Matthew""))
            :ARG1 (b / believe-01
                  :ARG0 (e / everyone)
                  :ARG1 (p2 / pay-01
                        :ARG1 (m2 / monetary-quantity
                              :ARG1-of (h / have-quant-91
                                    :ARG3 (e2 / enough)))
                        :ARG2 (p3 / person
                              :name n
                              :op1 ""MSK0""))
                  :ARG3 (j / job
                        :ARG1-of (d / do-02
                              :ARG0 p3))))
      :snt2 (ii / infer-01
            :ARG1 (t / true-01
                  :ARG1 (ii2 / it))))"
intentional,intentional,"# ::snt If MSK0 neighbor robs a bank , should MSK0 go to jail ? is an example of ..... 
(e / exemplify-01
      :ARG0 (r / recommend-01
            :ARG1 (j / jail-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :condition (r2 / rob-01
                        :ARG0 (n2 / neighbor
                              :poss p)
                        :ARG1 (b / bank)))
            :polarity (a / amr-unknown)))"
ad hominem,fallacy of relevance,"# ::snt Jon : "" Go easy on MSK0 ; you 've had three shots already now . "" Jeff : "" Oh sure , coref1 'll put down MSK0 when you put down that tequila . Lay off , man . "" 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Jon""))
            :ARG1 (g / go-06
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1-of (e / easy-05)
                  :ARG1-of (c / cause-01
                        :ARG0 (h / have-06
                              :ARG0 y
                              :ARG1 (s2 / shot
                                    :quant 3)
                              :time (a / already)
                              :time (n3 / now)))))
      :snt2 (s3 / say-01
            :ARG0 (p3 / person
                  :name (n4 / name
                        :op1 ""Jeff""))
            :ARG1 (s4 / sure-02
                  :ARG1 (p4 / put-01
                        :ARG0 (c2 / coref1)
                        :ARG1 (p5 / product
                              :name (n5 / name
                                    :op1 ""MSK0""))
                        :ARG2 (d / down)
                        :time (p6 / put-01
                              :ARG0 (y2 / you)
                              :ARG1 (t / tequila
                                    :mod (t2 / that))
                              :ARG2 (d2 / down)))))
      :snt3 (l / lay-off-06
            :mode imperative
            :ARG0 (y3 / you)))"
fallacy of logic,faulty generalization,"# ::snt MSK0 has significantly less fat than the leading candy bar ! Plus , MSK0 's nowhere near as MSK1 as MSK1 Cheetos ! 
(m / multi-sentence
      :snt1 (f / fat-03
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1-of (h / have-quant-91
                  :ARG3 (l / less
                        :ARG1-of (s / significant-02))
                  :ARG4 (b / bar
                        :mod (c / candy)
                        :ARG0-of (l2 / lead-01))))
      :snt2 (a / and
            :op2 (n2 / near-02
                  :polarity -
                  :ARG1 (p2 / product
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG2 (p3 / product
                        :name (n4 / name
                              :op1 ""MSK1""))
                  :ARG3 (e / equal)
                  :ARG4 (p4 / product
                        :name (n5 / name
                              :op1 ""Cheetos"")
                        :mod p3))))"
fallacy of logic,intentional,"# ::snt Although MSK0 have MSK1 that MSK2 is not made of MSK4 , MSK0 have not MSK1 that MSK2 can not be MSK5 with them ; therefore , MSK2 is MSK5 with MSK4 . MSK6 is MSK7 because MSK8 can not MSK1 that MSK6 is MSK9 . MSK6 is MSK9 because MSK8 can not MSK1 that MSK6 is MSK7 . 
(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :concession (m2 / make-01
                  :polarity -
                  :ARG1 t
                  :ARG2 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK4""))))
      :snt2 (c / cause-01
            :ARG0 (p / possible-01
                  :polarity -
                  :ARG1 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK5"")
                        :domain (t5 / thing
                              :name (n5 / name
                                    :op1 ""MSK6""))
                        :prep-with (t6 / they)))
            :ARG1 (h2 / have-03
                  :ARG0 (t7 / thing
                        :ARG1 (t8 / thing
                              :name (n6 / name
                                    :op1 ""MSK7""))
                        :ARG1-of (c2 / cause-01
                              :ARG0 (p2 / possible-01
                                    :polarity -
                                    :ARG1 t7
                                    :name (n7 / name
                                          :op1 ""MSK8"")
                                    :domain t5)))))
      :snt3 (h3 / have-03
            :ARG0 (t9 / thing
                  :name (n8 / name
                        :op1 ""MSK6""))
            :ARG1 (t10 / thing
                  :name (n9 / name
                        :op1 ""MSK9""))
            :ARG1-of (c3 / cause-01
                  :ARG0 (p3 / possible-01
                        :polarity -
                        :ARG1 t7))))"
circular reasoning,circular reasoning,"# ::snt MSK0 MSK2 cause MSK3 to be MSK0 , because MSK0 MSK3 play MSK0 MSK2 . 
(c / cause-01
      :ARG0 (p / play-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""
                        :op2 ""MSK3""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK0""
                        :op2 ""MSK2""))
            :ARG0-of (c2 / cause-01
                  :ARG1 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK3""))))
      :ARG1 t3)"
ad populum,ad populum,"# ::snt A 2005 Gallup Poll found that an estimated MSK2 % of Americans over the MSK2 of MSK2 believe in MSK0 — or that the position of the stars and planets can affect MSK1 's lives . That is roughly 75,000,000 MSK1 . Therefore , there must be some truth to MSK0 ! 
(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (p / poll-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Gallup""))
                  :time (d / date-entity
                        :year 2005))
            :ARG1 (b / believe-01
                  :ARG0 (p2 / person
                        :ARG1-of (ii / include-91
                              :ARG2 (p3 / person
                                    :mod (c2 / country
                                          :name (n2 / name
                                                :op1 ""America"")))
                              :ARG3 (p4 / percentage-entity
                                    :value 2
                                    :ARG1-of (e / estimate-01
                                          :ARG2 (p5 / product
                                                :name (n3 / name
                                                      :op1 ""MSK2"")
                                                :part (p6 / percentage-entity
                                                      :value 2))))))
                  :ARG1 (o / or
                        :op1 (t / thing
                              :name (n4 / name
                                    :op1 ""MSK0""))
                        :op2 (p7 / possible-01
                              :ARG1 (a / affect-01
                                    :ARG0 (t2 / thing
                                          :ARG2-of (p8 / position-01
                                                :ARG1 (a2 / and
                                                      :op1 (s / star)
                                                      :op2 (p9 / planet))))
                                    :ARG1 (l / life
                                          :poss (p10 / person
                                                :mod (p11 / product
                                                      :name (n5 / name
                                                            :op1 ""MSK1"")
                                                      :part (p12 / percentage-entity
                                                            :value 750000))))))))
            :snt2 (ii2 / infer-01
                  :ARG1 (t3 / true-01
                        :ARG1 (t4 / thing
                              :name (n6 / name
                                    :op1 ""MSK0""))
                        :mod (s2 / some)))))"
ad populum,fallacy of credibility,"# ::snt MSK0 saw MSK1 in a commercial for male skin care . MSK1 's looking good for MSK1 age , so MSK0 'm willing to try the product . MSK1 must know what MSK1 's talking about . 
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK1""))
            :location (c / commercial
                  :purpose (c2 / care-03
                        :ARG1 (s2 / skin
                              :mod (m2 / male)))))
      :snt2 (l / look-02
            :ARG0 p2
            :ARG1 (g / good-02)
            :time (a / age-01
                  :ARG1 p2)
            :ARG0-of (c3 / cause-01
                  :ARG1 (w / will-02
                        :ARG0 p
                        :ARG1 (t / try-01
                              :ARG0 p
                              :ARG1 (p3 / product)))))
      :snt3 (ii / infer-01
            :ARG1 (k / know-01
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 (t2 / thing
                        :ARG1-of (t3 / talk-01
                              :ARG0 p4)))))"
intentional,ad populum,"# ::snt Trying the latest social media challenge is a good example of what logical fallacy ? 
(e / exemplify-01
      :ARG0 (t / try-01
            :ARG1 (c / challenge-01
                  :mod (m / media
                        :mod (s / social))
                  :mod (l / last)))
      :ARG1 (f / fallacy
            :mod (l2 / logical)
            :mod (a / amr-unknown))
      :ARG1-of (g / good-02))"
fallacy of logic,circular reasoning,"# ::snt Murder is MSK1 . Therefore , abortion is MSK1 . 
(m / multi-sentence
      :snt1 (m2 / murder-01
            :ARG1-of (k / know-01
                  :ARG2 (t / thing
                        :name (n / name
                              :op1 ""SSK1""))))
      :snt2 (ii / infer-01
            :ARG1 (a / abort-01
                  :ARG1-of k)))"
false causality,false causality,"# ::snt MSK0 was going great ! Then MSK1 showed up and little by MSK2 started collecting MSK2 coats and heading home . MSK1 ruined MSK0 . 
(m / multi-sentence
      :snt1 (g / go-06
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :mod (g2 / great))
      :snt2 (a / and
            :op1 (s / show-up-02
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op2 (s2 / start-01
                  :ARG0 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG1 (a2 / and
                        :op1 (c / collect-01
                              :ARG0 t3
                              :ARG1 (c2 / coat
                                    :mod t3))
                        :op2 (h / head-02
                              :ARG0 t3
                              :ARG1 (h2 / home)))
                  :time (t4 / then)
                  :manner (l / little-by-little)))
      :snt3 (r / ruin-01
            :ARG0 (t5 / thing
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG1 t))"
faulty generalization,fallacy of relevance,"# ::snt MSK0 MSK1 now is MSK2 whether MSK0 is MSK1 to MSK3 MSK4 MSK5 who have committed murder . I think MSK0 is all MSK1 to MSK3 MSK4 MSK5 . If we ban MSK3 of MSK6 , then everybody on death row will suddenly MSK2 MSK6 are MSK4 and purposely fail sanity tests . MSK0 would result in chaos . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (e / equal-01
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK2""))
                  :time (n3 / now))
            :op2 (e2 / equal-01
                  :ARG1 t
                  :ARG2 (a2 / and
                        :op1 t2
                        :op2 (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK3""))
                        :op3 (t4 / thing
                              :name (n5 / name
                                    :op1 ""MSK4""))
                        :op4 (t5 / thing
                              :name (n6 / name
                                    :op1 ""MSK5""))
                        :ARG0-of (c / commit-02
                              :ARG1 (m2 / murder-01)))))
      :snt2 (t6 / think-01
            :ARG0 (ii / i)
            :ARG1 (e3 / equal-01
                  :ARG1 (t7 / thing
                        :name (n7 / name
                              :op1 ""MSK0""))
                  :ARG2 (a3 / and
                        :op1 (t8 / thing
                              :name (n8 / name
                                    :op1 ""MSK1""))
                        :op2 (t9 / thing
                              :name (n9 / name
                                    :op1 ""MSK3""))
                        :op3 (t10 / thing
                              :name (n10 / name
                                    :op1 ""MSK4""))
                        :op4 (t11 / thing
                              :name (n11 / name
                                    :op1 ""MSK5"")))
                  :mod (a4 / all)))
      :snt3 (a5 / and
            :op1 (b / ban-01
                  :ARG0 (w / we)
                  :ARG1 (t12 / thing
                        :name (n12 / name
                              :op1 ""MSK3"")))
            :op2 (f / fail-01
                  :ARG1 (t13 / test-01
                        :ARG2 (s / sanity))
                  :manner (s2 / sudden)
                  :manner (p / purpose))
            :condition b))"
ad populum,faulty generalization,"# ::snt "" MSK0 looks great ! Let 's buy MSK0 ! "" 
(m / multi-sentence
      :snt1 (l / look-02
            :mode expressive
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (g / great))
      :snt2 (b / buy-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 p))"
false causality,faulty generalization,"# ::snt After MSK0 listened to the first song of MSK0 , MSK0 knew MSK0 ’d hate MSK1 , so MSK0 converted MSK1 into a Frisbee . 
(c / cause-01
      :ARG0 (k / know-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (h / hate-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :time (a / after
                  :op1 (l / listen-01
                        :ARG0 p
                        :ARG1 (s / song
                              :ord (o / ordinal-entity
                                    :value 1)
                              :poss p))))
      :ARG1 (c2 / convert-01
            :ARG0 p
            :ARG1 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK1""))
            :ARG2 (f / frisbee)))"
ad hominem,intentional,"# ::snt MSK0 : MSK1 are upstanding citizens of the community . MSK2 : Then why are there so many of MSK1 in MSK3 ? MSK0 : MSK1 were never MSK6 . MSK2 : What ’s a MSK6 ? MSK0 : Those who do n't go to MSK3 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (c / citizen
                  :mod (u / upstanding)
                  :poss (c2 / community)
                  :domain (t / thing
                        :mod 1
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (s2 / say-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1 (c3 / cause-01
                  :ARG0 (a / amr-unknown)
                  :ARG1 (b / be-located-at-91
                        :ARG1 (t2 / thing
                              :mod 1
                              :name (n4 / name
                                    :op1 ""MSK1"")
                              :ARG1-of (h / have-quant-91
                                    :ARG2 (m2 / many)
                                    :ARG3 (s3 / so)))
                        :ARG2 (t3 / thing
                              :name (n5 / name
                                    :op1 ""MSK3"")))))
      :snt3 a
      :domain (t4 / thing
            :mod 6
            :name (n6 / name
                  :op1 ""MSK6""))
      :snt4 (s4 / say-01
            :ARG0 (p3 / person
                  :name (n7 / name
                        :op1 ""MSK0""))
            :ARG1 (p4 / person
                  :ARG0-of (g / go-02
                        :polarity -
                        :ARG4 (t5 / thing
                              :name (n8 / name
                                    :op1 ""MSK3""))))))"
ad populum,ad populum,"# ::snt Tries to persuade the reader to do , think or buy MSK0 because MSK0 is popular or because "" everyone "" is doing MSK0 . 
(t / try-01
      :ARG1 (p / persuade-01
            :ARG1 (p2 / person
                  :ARG0-of (r / read-01))
            :ARG2 (o / or
                  :op1 (d / do-02
                        :ARG0 p2
                        :ARG1 (t2 / thing
                              :name (n / name
                                    :op1 ""MSK0"")))
                  :op2 (t3 / think-01
                        :ARG0 p2
                        :ARG1 t2)
                  :op3 (b / buy-01
                        :ARG0 p2
                        :ARG1 t2)
                  :ARG1-of (c / cause-01
                        :ARG0 (o2 / or
                              :op1 (p3 / popular-02
                                    :ARG1 t2)
                              :op2 (d2 / do-02
                                    :ARG0 (e / everyone)
                                    :ARG1 t2))))))"
appeal to emotion,fallacy of relevance,"# ::snt Why worry about taking attendance when there are so many starving children in the world ? 
(w / worry-02
      :ARG0 (a / amr-unknown)
      :ARG1 (a2 / attend-01)
      :time (c / child
            :ARG1-of (s / starve-01)
            :location (w2 / world)
            :ARG1-of (h / have-quant-91
                  :ARG2 (m / many)
                  :ARG3 (s2 / so))))"
false dilemma,false dilemma,"# ::snt Purchase our product or no one is going to think you ’re attractive . 
(o / or
      :op1 (p / purchase-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / product
                  :poss (w / we)))
      :op2 (t / think-01
            :ARG0 (n / no-one)
            :ARG1 (a / attract-01
                  :ARG0 y)))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 says MSK1 should not fund the missile attack program . MSK0 disagree . MSK0 do n't understand why MSK0 wants to leave MSK1 defenseless like that . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :polarity -
                  :ARG1 (f / fund-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (p3 / program
                              :topic (a / attack-01
                                    :ARG2 (m2 / missile)))))
            :ARG2-of (d / disagree-01
                  :ARG0 p))
      :snt2 (u / understand-01
            :polarity -
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (w / want-01
                              :ARG0 p4
                              :ARG1 (l / leave-12
                                    :ARG0 p4
                                    :ARG1 (d2 / defenseless
                                          :domain p2
                                          :ARG1-of (r2 / resemble-01
                                                :ARG2 (t2 / that)))))))))"
ad populum,ad populum,"# ::snt This is an emotional appeal that speaks the concept that many people MSK0 or MSK0 , so you should , too 
(a / appeal-02
      :ARG0 (t / this)
      :mod (e / emotion)
      :ARG0-of (s / speak-01
            :ARG1 (c / concept
                  :topic (r / recommend-01
                        :ARG0 (p / person
                              :quant (m / many)
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (y / you)
                        :mod (t2 / too)))))"
faulty generalization,ad populum,"# ::snt Everyone being referred to as comrade . 
(r / refer-01
      :ARG1 (e / everyone)
      :ARG2 (c / comrade))"
ad populum,ad populum,"# ::snt MSK0 is accepted by just about everyone in our society , so MSK0 ’s ethical to keep slaves . 
(a / accept-01
      :ARG0 (e / everyone
            :location (s / society
                  :poss (w / we))
            :mod (j / just))
      :ARG1 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG0-of (c / cause-01
            :ARG1 (e2 / ethics
                  :domain (k / keep-01
                        :ARG0 t
                        :ARG1 (s2 / slave)))))"
ad hominem,fallacy of relevance,"# ::snt MSK0 tell me it 's unpatriotic to cheat on federal income tax reports . Well , MSK0 should know . MSK0 've never once listed MSK0 huge bonuses . 
(m / multi-sentence
      :snt1 (t / tell-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / patriotic
                  :polarity -
                  :domain (c / cheat-02
                        :ARG1 (r / report-01
                              :ARG1 (t2 / tax-01
                                    :ARG3 (ii / income))
                              :mod (f / federal))))
            :ARG2 (ii2 / i))
      :snt2 (r2 / recommend-01
            :ARG1 (k / know-01
                  :ARG0 (p3 / person
                        :name n
                        :op1 ""MSK0"")))
      :mod (w / well)
      :snt3 (l / list-01
            :polarity -
            :ARG0 (p4 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG1 (b / bonus
            :mod (h / huge)
            :poss p4)
      :time (e / ever)
      :frequency (r3 / rate-entity-91
            :ARG1 1
            :ARG2 e))"
faulty generalization,fallacy of credibility,"# ::snt I MSK1 at MSK0 Happy Sunshine MSK1 ( MSK2 ) , which is much better than your grocery MSK1 because at MSK2 everything is MSK0 including the 38 - year - old MSK1 manager ’s long gray hair and saggy breasts . 
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (ii / i)
            :ARG2 (p / product
                  :name (n / name
                        :op1 ""MSK1""))
            :location (p2 / product
                  :name (n2 / name
                        :op1 ""Happy""
                        :op2 ""Sunshine""
                        :op3 ""MSK1"")
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 p)
                        :ARG3 (m2 / more
                              :quant (m3 / much))
                        :ARG4 (p3 / product
                              :name (n3 / name
                                    :op1 ""MSK1"")
                              :purpose (g2 / grocery)
                              :poss (y / you)))))
      :snt2 (b2 / be-located-at-91
            :ARG1 (e / everything
                  :ARG2-of (ii2 / include-01
                        :ARG1 (a / and
                              :op1 (h2 / hair
                                    :ARG1-of (g3 / gray-02)
                                    :ARG1-of (l / long-03))
                              :op2 (b3 / breast
                                    :mod (s / saggy))
                              :poss (p4 / person
                                    :ARG0-of (m4 / manage-01
                                          :ARG1 (p5 / product
                                                :name (n4 / name
                                                      :op1 ""MSK1"")))
                                    :age (t / temporal-quantity
                                          :quant 38
                                          :unit (y2 / year))))))
            :ARG2 (p6 / product
                  :name (n5 / name
                        :op1 ""MSK2""))
            :location p5))"
false causality,false causality,"# ::snt MSK0 took MSK1 this morning and now MSK0 ’m sick , so MSK1 must have made MSK0 ill . 
(a / and
      :op1 (t / take-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK1""))
            :time (d / date-entity
                  :dayperiod (m / morning)
                  :mod (t2 / today)))
      :op2 (s / sick-05
            :ARG1 p
            :time (n3 / now)
            :ARG0-of (c / cause-01
                  :ARG1 (o / obligate-01
                        :ARG1 (m2 / make-02
                              :ARG0 p2
                              :ARG1 (ii / ill-01
                                    :ARG1 p))))))"
ad populum,ad populum,"# ::snt Get Verizon -- 1 billion people ca n't be wrong . 
(a / and
      :op1 (g / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (c / company
                  :name (n / name
                        :op1 ""Verizon"")))
      :op2 (p / possible-01
            :polarity -
            :ARG1 (w / wrong-04
                  :ARG1 (p2 / person
                        :quant 1000000000))))"
faulty generalization,faulty generalization,"# ::snt "" If MSK0 MSK1 you , MSK0 must MSK1 everyone , and then the company goes bankrupt . "" 
(a / and
      :op1 (o / obligate-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSN""))
            :ARG2 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :beneficiary (e / everyone))
            :condition (p3 / product
                  :name (n3 / name
                        :op1 ""MSK0"")
                  :beneficiary (y / you)
                  :domain p2))
      :op2 (b / bankrupt-01
            :ARG1 (c / company)
            :time (t / then)))"
ad hominem,faulty generalization,"# ::snt Atheists are morally bankrupt . 
(b / bankrupt-01
      :ARG1 (a / atheist)
      :manner (m / moral-02))"
fallacy of relevance,appeal to emotion,"# ::snt Last year MSK0 wanted to quit MSK1 because MSK0 treated MSK0 like an outcast and talked about MSK0 to MSK0 . MSK0 felt betrayed and sad all of the time but now MSK0 think MSK0 have a place at MSK0 new middle MSK1 . 
(c / contrast-01
      :ARG1 (w / want-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (q / quit-01
                  :ARG0 p
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :time (y / year
                  :mod (l / last))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (t / treat-01
                              :ARG0 p
                              :ARG1 p
                              :ARG2 (o / outcast))
                        :op2 (t2 / talk-01
                              :ARG0 p
                              :ARG1 p))))
      :ARG2 (t3 / think-01
            :ARG0 p
            :ARG1 (h / have-03
                  :ARG0 p
                  :ARG1 (p3 / place
                        :location (p4 / product
                              :name (n3 / name
                                    :op1 ""MSK1"")
                              :ARG1-of (n4 / new-01)
                              :mod (m / middle))))
            :time (n5 / now))
      :ARG1-of c2
      :ARG0 (f / feel-01
            :ARG0 p
            :ARG1 (a2 / and
                  :op1 (b / betray-01
                        :ARG1 p)
                  :op2 (s / sad-02
                        :ARG1 p))
            :time (t4 / time
                  :mod (a3 / all))))"
fallacy of relevance,fallacy of relevance,"# ::snt In order to really look at the problem of MSK0 , we must first consider how the homeless suffer when MSK0 is cold . 
(o / obligate-01
      :ARG1 (w / we)
      :ARG2 (c / consider-02
            :ARG0 w
            :ARG1 (t / thing
                  :manner-of (s / suffer-01
                        :ARG0 (p / person
                              :ARG0-of (h / have-03
                                    :polarity -
                                    :ARG1 (h2 / home)))
                        :time (c2 / cold-01
                              :ARG1 (p2 / product
                                    :name (n / name
                                          :op1 ""MSK0"")))))
            :ord (o2 / ordinal-entity
                  :value 1))
      :purpose (l / look-01
            :ARG0 w
            :ARG1 (p3 / problem
                  :topic p2)
            :ARG1-of (r / real-04)))"
appeal to emotion,fallacy of logic,"# ::snt Why should we worry about the negative depiction of MSK0 in music videos when thousands of MSK0 are dying of AIDS each year ? 
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r / recommend-01
            :ARG1 (w / worry-02
                  :ARG0 (d / depict-01
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (n2 / negative-03)
                        :location (v / video
                              :mod (m / music))))
            :ARG2 (w2 / we)
            :condition (d2 / die-01
                  :ARG1 (p2 / person
                        :ARG1-of (ii / include-91
                              :ARG2 p)
                        :quant (m2 / multiple
                              :op1 1000))
                  :ARG1-of c
                  :ARG0 (d3 / disease
                        :name (n3 / name
                              :op1 ""AIDS"")))
            :frequency (r2 / rate-entity-91
                  :ARG2 (t / temporal-quantity
                        :quant 1
                        :unit (y / year)))))"
ad hominem,ad hominem,"# ::snt MSK0 mocked Romney for walking like a penguin . MSK0 also repeatedly called Jeb Bush low - energy . 
(m / multi-sentence
      :snt1 (m2 / mock-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Romney""))
            :ARG2 (w / walk-01
                  :ARG0 p2
                  :ARG1-of (r / resemble-01
                        :ARG2 (p3 / penguin))))
      :snt2 (c / call-01
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (p5 / person
                  :name (n4 / name
                        :op1 ""Jeb""
                        :op2 ""Bush""))
            :ARG2 (e / energy
                  :ARG1-of (l / low-04))
            :ARG1-of (r2 / repeat-01)
            :mod (a / also)))"
circular reasoning,faulty generalization,"# ::snt MSK0 people are great at kissing . MSK1 is MSK0 . Get MSK1 a date ! 
(m / multi-sentence
      :snt1 (g / great
            :domain (k / kiss-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))))
      :snt2 (p2 / person
            :name (n2 / name
                  :op1 ""MSK1"")
            :domain (p3 / person))
      :snt3 (g2 / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (d / date)
            :ARG4 p3))"
faulty generalization,faulty generalization,"# ::snt First MSK0 handed out I - pads , now MSK0 use Quizizz , next MSK0 'll have robot subs ! 
(a / and
      :op1 (h / hand-out-03
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / pad
                  :mod (ii / i))
            :time (f / first))
      :op2 (u / use-01
            :ARG0 p
            :ARG1 p
            :name (n2 / name
                  :op1 ""Quizizz""))
      :time (n3 / now)
      :op3 (h2 / have-03
            :ARG0 p
            :ARG1 (s / sub
                  :mod (r / robot))
            :time (n4 / next)))"
false causality,false causality,"# ::snt There was a thunderstorm with rain therefore MSK0 did not finish MSK0 homework . 
(c / cause-01
      :ARG0 (t / thunderstorm
            :accompanier (r / rain-01))
      :ARG1 (f / finish-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (h / homework
                  :mod p)))"
faulty generalization,appeal to emotion,"# ::snt The sinister fisherman 's suspicious smile frightened the innocent children 
(f / frighten-01
      :ARG0 (s / smile-01
            :ARG0 (p / person
                  :ARG0-of (f2 / fish-01)
                  :mod (s2 / sinister))
            :ARG1-of (s3 / suspicious-03))
      :ARG1 (c / child
            :ARG1-of (ii / innocent-01)))"
ad populum,ad populum,"# ::snt MSK0 guess MSK0 should buy MSK0 12 - year - old daughter an iPhone . Everyone at MSK1 new school has one and MSK0 want MSK1 to fit in with the other kids . 
(m / multi-sentence
      :snt1 (g / guess-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (b / buy-01
                        :ARG0 p
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""iPhone""))
                        :ARG4 (p3 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (d / daughter))
                              :age (t / temporal-quantity
                                    :quant 12
                                    :unit (y / year))))
                  :ARG2 p))
      :snt2 (a / and
            :op1 (h2 / have-03
                  :ARG0 (e / everyone
                        :location (s / school
                              :name (n3 / name
                                    :op1 ""MSK1"")
                              :ARG1-of (n4 / new-01)))
                  :ARG1 (o / one))
            :op2 (w / want-01
                  :ARG0 p
                  :ARG1 (f / fit-in-02
                        :ARG1 (p4 / person
                              :name (n5 / name
                                    :op1 ""MSK1""))
                        :ARG2 (k / kid
                              :mod (o2 / other))))))"
ad populum,ad populum,"# ::snt "" Everyone else believes MSK0 , so MSK0 must be true . "" 
(b / believe-01
      :ARG0 (e / everyone
            :mod (e2 / else))
      :ARG1 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG0-of (c / cause-01
            :ARG1 (o / obligate-01
                  :ARG1 (t2 / true-01
                        :ARG1 t))))"
ad hominem,ad hominem,"# ::snt Charlie : Fast food is filled with salt , fat , and added sugars . We need better regulation of the industry . MSK0 : That may be , but MSK0 ’re such a hypocrite ! MSK0 saw MSK0 devour a Triple - Baconator , super-sized fries , and 64 ounces of soda yesterday . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (f / fill-01
                  :ARG1 (f2 / food
                        :ARG1-of (f3 / fast-02))
                  :ARG2 (a / and
                        :op1 (s2 / salt)
                        :op2 (f4 / fat)
                        :op3 (s3 / sugar
                              :ARG1-of (a2 / add-02)))))
      :snt2 (s4 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (c / contrast-01
                  :ARG1 (p3 / possible-01
                        :ARG1 (t / that))
                  :ARG2 (h / hypocrite
                        :degree (s5 / such)
                        :domain p2)))
      :snt3 (s6 / see-01
            :ARG0 p2
            :ARG1 (d / devour-01
                  :ARG0 p2
                  :ARG1 (a3 / and
                        :op1 (p4 / product
                              :name (n3 / name
                                    :op1 ""Triple""
                                    :op2 ""Baconator""))
                        :op2 (f5 / fry
                              :ARG1-of (s7 / size-01
                                    :ARG2 (s8 / super)))
                        :op3 (s9 / soda
                              :quant (m2 / mass-quantity
                                    :quant 64
                                    :unit (o / ounce))))
                  :time (y / yesterday)))
      :snt4 (n4 / need-01
            :ARG0 (ii / industry)
            :ARG1 (r / regulate-01
                  :ARG1 ii
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 r)
                        :ARG3 (m3 / more)))))"
intentional,ad hominem,"# ::snt , motive , or other attribute of the person making the argument . 
(o / or
      :op1 (m / motive)
      :op2 (a / attribute-01
            :mod (o2 / other))
      :poss (p / person
            :ARG0-of (a2 / argue-01)))"
circular reasoning,appeal to emotion,"# ::snt MSK3 : MSK1 'll never MSK2 . MSK3 : We have ways of making MSK1 MSK2 . 
(m / multi-sentence
      :snt1 (e / equal-01
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK2""))
            :time (e2 / ever))
      :snt2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (w2 / way
                  :instrument-of (m2 / make-01
                        :ARG0 w
                        :ARG1 (t3 / thing
                              :name (n3 / name
                                    :op1 ""MSK1""))
                        :ARG2 (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK2""))))))"
ad populum,ad populum,"# ::snt Last week , MSK0 played MSK1 in MSK2 . MSK3 was excited to go to the game because MSK3 is a huge MSK0 fan . Because everyone in MSK2 MSK4 for MSK3 decided to MSK4 for MSK1 too . 
(m / multi-sentence
      :snt1 (p / play-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p3 / person
                  :name (n2 / name
                        :op1 ""MSK1""))
            :time (w / week
                  :mod (l / last))
            :location (t / thing
                  :name (n3 / name
                        :op1 ""MSK2"")))
      :snt2 (e / excite-01
            :ARG0 (f / fan
                  :mod (h / huge)
                  :domain (p4 / person
                        :name (n4 / name
                              :op1 ""MSK3"")))
            :ARG1 p4
            :ARG1-of (c / cause-01
                  :ARG0 (d / decide-01
                        :ARG0 (e2 / everyone
                              :location (t2 / thing
                                    :name (n5 / name
                                          :op1 ""MSK2"")))
                        :ARG1 (t3 / thing
                              :name (n6 / name
                                    :op1 ""MSK4"")
                              :purpose (t4 / thing
                                    :name (n7 / name
                                          :op1 ""MSK3"")))
                        :mod (t5 / too)))))"
ad populum,ad populum,"# ::snt MSK0 is doing MSK0 . You should too . 
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :name n
                  :op1 ""MSK0""))
      :snt2 (r / recommend-01
            :ARG1 (d2 / do-02
                  :ARG0 (y / you)
                  :ARG1 t
                  :mod (t2 / too))))"
ad populum,ad populum,"# ::snt Join the crowd and do n’t get left behind ! 
(a / and
      :op1 (j / join-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (c / crowd))
      :op2 (l / leave-behind-18
            :polarity -
            :mode imperative
            :ARG0 y))"
appeal to emotion,appeal to emotion,"# ::snt "" There MSK0 was in the MSK1 of MSK2 , and yet a perfect stranger ; without home and without friends , in the MSK1 of thousands of MSK0 own brethren — children of a common Father , and yet MSK0 dared not to unfold to any one of MSK2 MSK0 sad condition . "" Check each literary term found in this quote : 
(c / check-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / term
            :mod (l / literary)
            :mod (e / each)
            :ARG1-of (f / find-01
                  :location (t2 / thing
                        :ARG1-of (q / quote-01)
                        :mod (t3 / this))))
      :concession (s / stranger
            :ARG1-of (p / perfect-02)
            :domain (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :location (a / and
                  :op1 (t4 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :part-of (t5 / thing
                              :name (n3 / name
                                    :op1 ""MSK2""))
                        :part (t6 / thing
                              :name (n4 / name
                                    :op1 ""MSK1"")))
                  :op2 (p3 / person
                        :quant (m / multiple
                              :op1 1000)
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 p2
                              :ARG2 (b / brother))
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 (p4 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 p2
                                          :ARG2 (f2 / father
                                                :mod (c2 / common))))
                              :ARG2 (c3 / child)))
                  :location t6)
            :concession-of (d / dare-01
                  :polarity -
                  :ARG0 p2
                  :ARG1 (u / unfold-02
                        :ARG1 p2
                        :destination (o / one
                              :ARG1-of (ii / include-91
                                    :ARG2 t5)
                              :mod (s2 / sad))))))"
faulty generalization,faulty generalization,"# ::snt MSK0 can not unlock MSK0 child from MSK1 because if MSK0 do , MSK2 will MSK3 to MSK4 MSK5 . If MSK0 let MSK2 MSK4 MSK5 , MSK2 will MSK3 to MSK4 MSK6 . If MSK2 MSK4 MSK6 , MSK2 will get picked up by a stranger in a van , who will sell MSK2 in a sex slavery ring in some other country . Therefore , MSK0 should keep MSK2 locked up in MSK1 . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (u / unlock-01
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :mod (c / child))
                  :ARG2 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK1"")))
            :ARG1-of (c2 / cause-01
                  :ARG0 (h / have-condition-91
                        :ARG1 (e / equal-01
                              :ARG1 t
                              :ARG2 (t4 / thing
                                    :name (n4 / name
                                          :op1 ""MSK4""))
                              :ARG3 (t5 / thing
                                    :name (n5 / name
                                          :op1 ""MSK5"")))
                        :ARG2 (l / let-01
                              :ARG0 t
                              :ARG1 (e2 / equal-01
                                    :ARG1 t4
                                    :ARG2 t5)))))
      :snt2 (h2 / have-condition-91
            :ARG1 (e3 / equal-01
                  :ARG1 (t6 / thing
                        :name (n6 / name
                              :op1 ""MSK2""))
                  :ARG2 (t7 / thing
                        :name (n7 / name
                              :op1 ""MSK4""))
                  :ARG3 (t8 / thing
                        :name (n8 / name
                              :op1 ""MSK6"")))
            :ARG2 (p2 / pick-up-04
                  :ARG0 (s / stranger
                        :ARG0-of (s2 / sell-01
                              :ARG1 t3))
                  :ARG1 t6
                  :location (r / ring
                        :mod (s3 / slavery
                              :mod (s4 / sex-01))
                        :location (c3 / country
                              :mod (s5 / some)
                              :mod (o / other)))))
      :snt3 (c4 / cause-01
            :ARG1 (r2 / recommend-01
                  :ARG1 (k / keep-01
                        :ARG0 t
                        :ARG1 (l2 / lock-up-03
                              :ARG0 t
                              :ARG1 t3)))))"
faulty generalization,faulty generalization,"# ::snt Even though it 's only the first day , I can tell this is going to be a boring course . 
(p / possible-01
      :ARG1 (t / tell-02
            :ARG0 (ii / i)
            :ARG1 (c / course
                  :ARG0-of (b / bore-02)
                  :domain (t2 / this)))
      :concession (d / day
            :ord (o / ordinal-entity
                  :value 1)
            :mod (o2 / only)))"
fallacy of logic,faulty generalization,"# ::snt Eugene is MSK0 in class . MSK1 is MSK1 friend , so MSK1 must be MSK0 , too . 
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MSK0"")
            :location (c / class)
            :domain (p2 / person
                  :name (n2 / name
                        :op1 ""Eugene"")))
      :snt2 (c2 / cause-01
            :ARG0 (h / have-rel-role-91
                  :ARG0 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 p3
                  :ARG2 (f / friend))
            :ARG1 (o / obligate-01
                  :ARG2 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK1"")
                        :domain p3
                        :mod (t / too)))))"
ad hominem,ad hominem,"# ::snt "" How would MSK0 know anything about technology ? MSK0 're too old ! "" 
(m / multi-sentence
      :snt1 (k / know-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / anything
                  :topic (t / technology))
            :manner (a2 / amr-unknown))
      :snt2 (h / have-degree-91
            :mode expressive
            :ARG1 p
            :ARG2 (o / old)
            :ARG3 (t2 / too)))"
ad populum,ad populum,"# ::snt "" Everybody is MSK0 coming back from lunch , so it should n't matter if I 'm MSK0 . "" 
(c / cause-01
      :ARG0 (k / know-02
            :ARG0 (e / everybody)
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSN""))
            :time (c2 / come-01
                  :ARG1 e
                  :ARG3 (l / lunch)))
      :ARG1 (r / recommend-01
            :ARG1 (m / matter-01
                  :polarity -
                  :ARG1 k
                  :condition (h / have-mod-91
                        :ARG1 (ii / i)
                        :ARG2 t))))"
ad populum,ad populum,"# ::snt Lots of people bought MSK0 , so MSK0 must be good . 
(b / buy-01
      :ARG0 (p / person
            :quant (l / lot))
      :ARG1 (p2 / product
            :name (n / name
                  :op1 ""MSK0""))
      :ARG0-of (c / cause-01
            :ARG1 (ii / infer-01
                  :ARG1 (g / good-07
                        :ARG1 p2))))"
false causality,false causality,"# ::snt My child was diagnosed with autism after receiving MSK0 . That is proof that MSK0 are to blame . 
(m / multi-sentence
      :snt1 (d / diagnose-01
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (c / child)))
            :ARG2 (a / autism)
            :time (a2 / after
                  :op1 (r / receive-01
                        :ARG0 p
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""MSK0"")))))
      :snt2 (p3 / prove-01
            :ARG0 (t / that)
            :ARG1 (b / blame-01
                  :ARG1 p2)))"
faulty generalization,faulty generalization,"# ::snt MSK0 are MSK1 , and MSK0 are MSK3 . Therefore , all MSK1 must be MSK3 . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :op2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK3"")))
      :snt2 (ii / infer-01
            :ARG1 (o / obligate-01
                  :ARG2 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK3"")
                        :domain (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK1"")
                              :mod (a2 / all))))))"
intentional,intentional,"# ::snt "" You ca n't prove that MSK0 actually do n't exist and therefore it 's reasonable to say that MSK0 do "" IS an example of this fallacy . 
(e / exemplify-01
      :ARG0 (p / possible-01
            :polarity -
            :ARG1 (p2 / prove-01
                  :ARG0 (y / you)
                  :ARG1 (e2 / exist-01
                        :polarity -
                        :ARG1 (t / thing
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1-of (a / actual-02)
                        :ARG0-of (c / cause-01
                              :ARG1 (r / reasonable-02
                                    :ARG1 (s / say-01
                                          :ARG1 e2))))))
      :ARG1 (f / fallacy
            :mod (t2 / this)))"
circular reasoning,fallacy of logic,"# ::snt MSK0 are mythical . MSK0 are MSK1 . Therefore , MSK0 are MSK1 . 
(m / multi-sentence
      :snt1 (m2 / myth
            :domain (t / thing
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (t2 / thing
            :name (n2 / name
                  :op1 ""MSK1"")
            :domain t)
      :snt3 (ii / infer-01
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :domain t)))"
ad hominem,ad hominem,"# ::snt MSK0 voted for the tax increase . It 's not hard to understand why when you consider that MSK0 is a millionaire and has never had to worry about money . 
(m / multi-sentence
      :snt1 (v / vote-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (ii / increase-01
                  :ARG1 (t / tax-01)))
      :snt2 (h / hard-02
            :polarity -
            :ARG1 (u / understand-01
                  :ARG0 (y / you)
                  :ARG1 (t2 / thing
                        :ARG0-of (c / cause-01)))
            :condition (c2 / consider-02
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (m2 / millionaire
                              :domain p)
                        :op2 (o / obligate-01
                              :polarity -
                              :ARG1 p
                              :ARG2 (w / worry-02
                                    :ARG0 p
                                    :ARG1 (m3 / money))
                              :time (e / ever))))))"
faulty generalization,ad populum,"# ::snt MSK0 MSK1 a MSK2 - MSK3 , so all of MSK0 friends MSK1 MSK2 - MSK3 . 
(c / cause-01
      :ARG0 (a / and
            :op1 (a2 / and
                  :op1 (s / string-entity
                        :value ""MSK0"")
                  :op2 (s2 / string-entity
                        :value ""MSK2""))
            :op2 (a3 / and
                  :op1 (s3 / string-entity
                        :value ""MSK3"")
                  :op2 (s4 / string-entity
                        :value ""MSK1"")))
      :ARG1 (a4 / and
            :op1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (f / friend))
                  :mod (a5 / all))
            :op2 (p3 / person
                  :ARG0-of h
                  :ARG1 p2
                  :ARG2 f)
            :mod a5)
      :op3 (p4 / person
            :name (n2 / name
                  :op1 ""MSK2""))
      :op4 (p5 / person
            :name (n3 / name
                  :op1 ""MSK3"")))"
ad populum,ad populum,"# ::snt Now that the Chiefs are going to the Super Bowl , everybody is suddenly a fan . 
(f / fan
      :domain (e / everybody)
      :manner (s / sudden)
      :time (g / go-02
            :ARG0 (t / team
                  :name (n / name
                        :op1 ""Chiefs""))
            :ARG4 (g2 / game
                  :name (n2 / name
                        :op1 ""Super""
                        :op2 ""Bowl""))))"
fallacy of credibility,fallacy of relevance,"# ::snt Sure , MSK0 have n't given raises to MSK0 employees in more than ten years . However , MSK0 do pride MSK0 on providing customer service in over seven different languages . 
(m / multi-sentence
      :snt1 (s / sure-02
            :ARG1 (g / give-01
                  :polarity -
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r / raise-01)
                  :ARG2 (p / person
                        :ARG1-of (e / employ-01
                              :ARG0 c))
                  :time (b / before
                        :op1 (n2 / now)
                        :duration (m2 / more-than
                              :op1 (t / temporal-quantity
                                    :quant 10
                                    :unit (y / year))))))
      :snt2 (c2 / contrast-01
            :ARG2 (p2 / pride-01
                  :ARG0 c
                  :ARG1 c
                  :ARG2 (p3 / provide-01
                        :ARG0 c
                        :ARG1 (s2 / serve-01
                              :ARG0 c
                              :ARG2 (c3 / customer)
                              :medium (l / language
                                    :quant 7
                                    :ARG1-of (d / differ-02)))))))"
ad hominem,ad hominem,"# ::snt MSK0 - "" An apple is a vegetable . "" Alexis - "" Do n't listen to MSK0 ; MSK0 is failing AP Language "" 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (v / vegetable
                  :domain (a / apple)))
      :snt2 (s2 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Alexis""))
            :ARG1 (l / listen-01
                  :mode imperative
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG1-of (c / cause-01
                        :ARG0 (f / fail-01
                              :ARG1 p3
                              :ARG2 (l2 / language
                                    :name (n4 / name
                                          :op1 ""AP"")))))))"
ad populum,faulty generalization,"# ::snt MSK0 is the class president . MSK0 believes that MSK1 should sponsor a MSK2 as a MSK3 . Then MSK0 learns that a group of girls that MSK0 does n't like also support the idea of a MSK2 as a MSK3 . So , MSK0 changes MSK0 mind and decides that MSK1 should plan a race instead . 
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MSK0"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (c / class)
                  :ARG2 (p2 / president)))
      :snt2 (b / believe-01
            :ARG0 p
            :ARG1 (r / recommend-01
                  :ARG0 p
                  :ARG1 (s / sponsor-01
                        :ARG0 (p3 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (p4 / person
                              :name (n3 / name
                                    :op1 ""MSK2""))
                        :ARG2 (p5 / person
                              :name (n4 / name
                                    :op1 ""MSK3""))))
            :time (t / then)
            :time-of (l / learn-01
                  :ARG0 p
                  :ARG1 (s2 / support-01
                        :ARG0 (g / group
                              :consist-of (g2 / girl)
                              :ARG1-of (d / dislike-01
                                    :ARG0 p))
                        :ARG1 (ii / idea
                              :topic (r2 / resemble-01
                                    :ARG1 p4
                                    :ARG2 p5))
                        :mod (a / also)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (a2 / and
                        :op1 (c3 / change-01
                              :ARG0 p
                              :ARG1 (m2 / mind-05
                                    :ARG0 p))
                        :op2 (d2 / decide-01
                              :ARG0 p
                              :ARG1 (r3 / recommend-01
                                    :ARG0 p
                                    :ARG1 (p6 / plan-01
                                          :ARG0 p3
                                          :ARG1 (r4 / race-02)
                                          :ARG1-of (ii2 / instead-of-91
                                                :ARG2 s))))))))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 ca n’t stop eating these MSK1 . MSK0 really MSK2 MSK1 , or MSK0 seriously MSK4 . MSK0 know MSK0 really MSK2 MSK1 ; therefore , MSK0 can not MSK4 . 
(a / and
      :op1 (p / possible-01
            :polarity -
            :ARG1 (s / stop-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (e / eat-01
                        :ARG0 p2
                        :ARG1 (p3 / product
                              :name (n2 / name
                                    :op1 ""MSK1"")
                              :mod (t / this)))))
      :op2 (o / or
            :op1 (p4 / product
                  :name (n3 / name
                        :op1 ""MSK2"")
                  :ARG1-of (r / real-04))
            :op2 (p5 / product
                  :name (n4 / name
                        :op1 ""MSK3"")
                  :ARG1-of (r2 / real-04))
            :op3 (p6 / product
                  :name (n5 / name
                        :op1 ""MSK4"")
                  :ARG1-of (s2 / serious-01)))
      :op3 (k / know-01
            :ARG0 p2
            :ARG1 a
            :op1 (p7 / product
                  :name (n6 / name
                        :op1 ""MSK0"")
                  :ARG1-of (r3 / real-04))
            :op2 (p8 / product
                  :name (n7 / name
                        :op1 ""MSK2"")
                  :ARG1-of (r4 / real-04)))
      :ARG0-of (c / cause-01
            :ARG1 (p9 / possible-01
                  :polarity -
                  :ARG1 (t2 / thing
                        :name (n8 / name
                              :op1 ""MSK4"")))))"
ad hominem,faulty generalization,"# ::snt Did MSK0 really vote for Donald as class treasurer ? Did n't MSK0 hear that his uncle was imprisoned for embezzling $ 1.5 million ? 
(m / multi-sentence
      :snt1 (v / vote-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Donald""))
            :ARG2 (t / treasurer
                  :mod (c / class))
            :polarity (a / amr-unknown)
            :ARG1-of (r / real-04))
      :snt2 (h / hear-01
            :polarity -
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (ii / imprison-01
                  :ARG1 (p4 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (u / uncle)))
                  :ARG3 (e / embezzle-01
                        :ARG0 p4
                        :ARG1 (m2 / monetary-quantity
                              :quant 1500000
                              :unit (d / dollar))))
            :polarity (a2 / amr-unknown)))"
false dilemma,false dilemma,"# ::snt All of MSK0 friends are coming to MSK0 birthday party . If MSK1 does n't , MSK1 might as well tell MSK0 that MSK1 does n't like MSK0 . 
(m / multi-sentence
      :snt1 (c / come-01
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (f / friend))
                  :mod (a / all))
            :ARG4 (p3 / party
                  :mod (b / birthday)
                  :beneficiary p2))
      :snt2 (h2 / have-condition-91
            :ARG1 (p4 / possible-01
                  :ARG1 (t / tell-01
                        :ARG0 (p5 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (d / dislike-01
                              :ARG0 (p6 / person
                                    :name (n3 / name
                                          :op1 ""MSK1""))
                              :ARG1 p2)
                        :ARG2 p2
                        :mod (a2 / as-well)))
            :ARG2 (d2 / do-02
                  :polarity -
                  :ARG0 p6)))"
fallacy of logic,fallacy of logic,"# ::snt No MSK0 are MSK1 . MSK2 are MSK0 . Therefore , MSK2 are MSK1 . 
(m / multi-sentence
      :snt1 (e / equal-01
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :snt2 (e2 / equal-01
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG2 t2
            :ARG1-of (c / cause-01
                  :ARG0 (e3 / equal-01
                        :ARG1 t3
                        :ARG2 t))))"
circular reasoning,false causality,"# ::snt MSK0 ’ve never had the flu because MSK0 take MSK0 vitamins everyday . 
(c / cause-01
      :ARG0 (t / take-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (v / vitamin
                  :name (n2 / name
                        :op1 ""MSK0""))
            :frequency (r / rate-entity-91
                  :ARG3 (t2 / temporal-quantity
                        :quant 1
                        :unit (d / day))))
      :ARG1 (h / have-03
            :polarity -
            :ARG0 p
            :ARG1 (d2 / disease
                  :name (n3 / name
                        :op1 ""influenza""))
            :time (e / ever)))"
false dilemma,false dilemma,"# ::snt We either ban hairspray or the world will end . 
(o / or
      :op1 (b / ban-01
            :ARG0 (w / we)
            :ARG1 (h / hairspray))
      :op2 (e / end-01
            :ARG1 (w2 / world)))"
ad hominem,fallacy of extension,"# ::snt A speaker chooses a deliberately poor or oversimplified example in order to ridicule and refute an idea 
(c / choose-01
      :ARG0 (p / person
            :ARG0-of (s / speak-01))
      :ARG1 (o / or
            :op1 (e / example
                  :mod (p2 / poor
                        :manner (d / deliberate)))
            :op2 (e2 / example
                  :ARG1-of (o2 / oversimplify-01)))
      :purpose (a / and
            :op1 (r / ridicule-01
                  :ARG0 p
                  :ARG1 (ii / idea))
            :op2 (r2 / refute-01
                  :ARG0 p
                  :ARG1 ii)))"
ad populum,ad populum,"# ::snt Everyone I know is making fruit MSK0 for quick , portable meals , so MSK0 must be really good for you . 
(m / make-01
      :ARG0 (e / everyone
            :ARG1-of (k / know-02
                  :ARG0 (ii / i)))
      :ARG1 (p / product
            :name (n / name
                  :op1 ""MSK0"")
            :consist-of (f / fruit))
      :purpose (m2 / meal
            :ARG1-of (q / quick-02)
            :mod (p2 / portable))
      :ARG0-of (c / cause-01
            :ARG1 (ii2 / infer-01
                  :ARG1 (g / good-04
                        :ARG1 p
                        :ARG2 (y / you)
                        :degree (r / really)))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 allow a housing development to be built on Sunny Lake , a resort will come next , and soon MSK0 wo n’t have any wilderness left ! 
(a / and
      :op1 (c / come-01
            :ARG1 (r / resort)
            :time (n / next)
            :condition (a2 / allow-01
                  :ARG0 (l / location
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (b / build-01
                        :ARG1 (d / develop-02
                              :ARG1 (h / house-01))
                        :location (l2 / local-region
                              :name (n3 / name
                                    :op1 ""Sunny""
                                    :op2 ""Lake"")))))
      :op2 (h2 / have-03
            :polarity -
            :ARG0 l
            :ARG1 (w / wilderness
                  :quant (a3 / any)
                  :ARG1-of (l3 / leave-17))
            :time (s / soon)))"
fallacy of extension,fallacy of extension,"# ::snt A : MSK0 MSK1 are telling MSK1 employees to say Happy Holidays instead of Merry MSK2 . MSK0 B : MSK0 This is crazy ! Why are MSK1 trying to get rid of MSK2 ?! MSK0 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / string-entity
                  :value ""MSK0"")
            :op2 (t / tell-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""MSK1""))
                  :ARG1 (s2 / say-01
                        :ARG0 (p / person
                              :ARG1-of (e / employ-01
                                    :ARG0 c))
                        :ARG1 (h / holiday
                              :ARG1-of (h2 / happy-01))
                        :ARG1-of (ii / instead-of-91
                              :ARG2 (s3 / say-01
                                    :ARG0 c
                                    :ARG1 h
                                    :name (n2 / name
                                          :op1 ""Merry""
                                          :op2 ""Holidays"")))))
            :ARG2 p)
      :snt2 (s4 / string-entity
            :value ""MSK0""
            :mod ""B"")
      :snt3 (c2 / crazy-03
            :mode expressive
            :ARG1 (t2 / this))
      :snt4 (c3 / cause-01
            :ARG0 (a2 / amr-unknown)
            :ARG1 (t3 / try-01
                  :ARG0 (c4 / company
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 (r / rid-01
                        :ARG0 c4
                        :ARG1 (c5 / company
                              :name (n4 / name
                                    :op1 ""MSK2"")))))
      :snt5 (e2 / emoticon
            :value ""MSK0""))"
intentional,faulty generalization,"# ::snt MSK0 is convinced that MSK0 was a MSK1 that brought down the aircraft . MSK2 Our countrymen MSK3 MSK0 was a MSK1 , MSK2 said the president . MSK2 A survey done a few days after MSK4 indicates that almost seventy percent of the people MSK3 MSK4 was a terrorist ’s MSK1 . MSK2 
(m / multi-sentence
      :snt1 (c / convince-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t / thing
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :ARG0-of (b / bring-down-03
                        :ARG1 (a / aircraft))
                  :domain (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK0""))))
      :snt2 (s / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (p3 / president)))
            :ARG1 (t3 / thing
                  :name (n4 / name
                        :op1 ""MSK1"")
                  :domain (p4 / person
                        :name (n5 / name
                              :op1 ""MSK3"")
                        :poss (w / we)
                        :mod (c2 / country))))
      :snt3 (ii / indicate-01
            :ARG0 (s2 / survey-01
                  :time (a2 / after
                        :op1 (t4 / thing
                              :name (n6 / name
                                    :op1 ""MSK4""))
                        :quant (f / few
                              :op1 (t5 / temporal-quantity
                                    :quant 1
                                    :unit (d / day)))))
            :ARG1 (t6 / thing
                  :name (n7 / name
                        :op1 ""MSK1"")
                  :domain (p5 / person
                        :ARG1-of (ii2 / include-91
                              :ARG2 (p6 / person
                                    :name (n8 / name
                                          :op1 ""MSK3""))
                              :ARG3 (a3 / almost
                                    :op1 (p7 / percentage-entity
                                          :value 70))))
                  :poss (t7 / terrorist)))
      :snt4 (t8 / thing
            :name (n9 / name
                  :op1 ""MSK2"")))"
circular reasoning,faulty generalization,"# ::snt MSK0 to finish MSK1 is impossible , MSK2 know because MSK2 MSK0 MSK1 once . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (f / finish-01
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (k / know-01
            :ARG0 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1-of (c / cause-01
                  :ARG0 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :time (o / once)))))"
fallacy of extension,fallacy of extension,"# ::snt Teacher : MSK0 are receiving a MSK1 because MSK0 did n't do MSK0 homework . Students : Are MSK0 serious ? MSK0 gave MSK2 a MSK1 because MSK0 hate MSK2 ???? 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (t / teach-01))
            :ARG1 (r / receive-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1-of (c / cause-01
                        :ARG0 (d / do-02
                              :polarity -
                              :ARG0 p2
                              :ARG1 (h / homework
                                    :mod t2)))))
      :snt2 (s2 / say-01
            :ARG0 (p3 / person
                  :ARG0-of (s3 / study-01))
            :ARG1 (s4 / serious-01
                  :ARG1 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :polarity (a / amr-unknown)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h2 / hate-01
                              :ARG0 p4
                              :ARG1 (p5 / person
                                    :name (n4 / name
                                          :op1 ""MSK2""))))))
      :snt3 (g / give-01
            :ARG0 p4
            :ARG1 (t3 / thing
                  :name (n5 / name
                        :op1 ""MSK1""))
            :ARG2 (p6 / person
                  :name (n6 / name
                        :op1 ""MSK2""))
            :ARG1-of (c3 / cause-01
                  :ARG0 h2)))"
faulty generalization,faulty generalization,"# ::snt That MSK0 , Fred , stole my wallet . All MSK0 are thieves . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (s2 / steal-01
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""MSK0"")
                        :mod (t / that))
                  :ARG1 (w / wallet
                        :poss ii))
            :ARG2 (p2 / person
                  :name (n2 / name
                        :op1 ""Fred"")))
      :snt2 (p3 / person
            :ARG0-of (t2 / thieve-01)
            :domain (p4 / product
                  :name (n3 / name
                        :op1 ""MSK0"")
                  :mod (a / all))))"
ad hominem,ad hominem,"# ::snt MSK2 : "" We should argue with logic facts "" MSK2 : "" MSK1 should grow a brain before MSK1 open MSK1 mouth "" 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (a / argue-02
                  :ARG0 (w / we)
                  :ARG1 (f / fact
                        :mod (l / logic))))
      :snt2 (r2 / recommend-01
            :ARG1 (g / grow-01
                  :ARG0 (e / enzyme
                        :name (n / name
                              :op1 ""MSK1"")
                        :part (m2 / mouth))
                  :ARG1 (b / brain)
                  :time (b2 / before
                        :op1 (o / open-01
                              :ARG0 (e2 / enzyme
                                    :name (n2 / name
                                          :op1 ""MSK1"")
                                    :part m2)
                              :ARG1 m2)))))"
circular reasoning,fallacy of relevance,"# ::snt MSK0 should present MSK1 with MSK0 squadron ’s MSK2 of the year award . MSK1 ’s the most active and highest - performing MSK2 MSK0 have . REPLY : But MSK2 Arnold has been in CAP longer . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (p / present-01
                  :ARG0 (p2 / product
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG2 (a / award
                        :name (n3 / name
                              :op1 ""MSK2""
                              :op2 ""of""
                              :op3 ""the""
                              :op4 ""Year"")
                        :poss (s / squadron))))
      :snt2 (h / have-03
            :ARG0 (p4 / product
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG1 (a2 / and
                  :op1 (a3 / activity-06
                        :ARG0 p4
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p4
                              :ARG3 (m2 / most)))
                  :op2 (p5 / perform-02
                        :ARG0 p4
                        :ARG2-of (h3 / have-degree-91
                              :ARG3 (m3 / most))
                        :ARG1-of h3)))
      :snt3 (r2 / reply-01
            :ARG2 (c / contrast-01
                  :ARG2 (b / be-located-at-91
                        :ARG1 (p6 / product
                              :name (n5 / name
                                    :op1 ""MSK2""
                                    :op2 ""Arnold""))
                        :ARG2 (g / government-organization
                              :name (n6 / name
                                    :op1 ""CAP""))
                        :ARG1-of (h4 / have-degree-91
                              :ARG2 (l / long-03
                                    :ARG1 b)
                              :ARG3 (m4 / more))))))"
faulty generalization,faulty generalization,"# ::snt MSK0 change , the more MSK0 remain the same . 
(c / correlate-91
      :ARG1 (m / more
            :ARG3-of (h / have-quant-91
                  :ARG1 (c2 / change-01
                        :ARG1 (t / thing
                              :name (n / name
                                    :op1 ""MSK0"")))))
      :ARG2 (m2 / more
            :ARG3-of (h2 / have-degree-91
                  :ARG1 (r / remain-01
                        :ARG1 t
                        :ARG3 (s / same-01
                              :ARG1 t)))))"
false causality,false causality,"# ::snt Utah passed a strict MSK0 - MSK2 , and MSK3 there MSK4 . Therefore , MSK0 - MSK2 MSK4 MSK3 . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (p / pass-01
                  :ARG0 (s / state
                        :name (n / name
                              :op1 ""Utah""))
                  :ARG1 (t / thing
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :mod (s2 / strict)
                        :ARG1-of (e / equal-01
                              :ARG2 (t2 / thing
                                    :name (n3 / name
                                          :op1 ""MSK2"")))))
            :op2 (p2 / pass-01
                  :ARG0 s
                  :ARG1 (t3 / thing
                        :name (n4 / name
                              :op1 ""MSK3"")
                        :mod s2
                        :ARG1-of (e2 / equal-01
                              :ARG2 (t4 / thing
                                    :name (n5 / name
                                          :op1 ""MSK4""))))))
      :snt2 (c / cause-01
            :ARG1 a
            :op1 (p3 / pass-01
                  :ARG0 s
                  :ARG1 (t5 / thing
                        :name (n6 / name
                              :op1 ""MSK0"")
                        :mod (s3 / string-entity
                              :value ""MSK2"")))
            :op2 (p4 / pass-01
                  :ARG0 s
                  :ARG1 (t6 / thing
                        :name (n7 / name
                              :op1 ""MSK4"")
                        :mod (s4 / string-entity
                              :value ""MSK3"")))))"
intentional,circular reasoning,"# ::snt MSK0 : MSK0 think MSK1 is MSK2 . Adam : No MSK1 is n't . If MSK1 was MSK2 , MSK1 would n't be legal . Of which fallacy is this an example ? http://www.funtrivia.com 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / think-01
                  :ARG0 p
                  :ARG1 (s2 / same-01
                        :ARG1 (t2 / thing
                              :mod 1
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 (t3 / thing
                              :mod 2))))
      :snt2 (s3 / say-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""Adam""))
            :ARG1 (e / equal-01
                  :polarity -
                  :ARG1 t2
                  :ARG2 t3))
      :snt3 (l / legal-02
            :polarity -
            :ARG1 (t4 / thing
                  :mod 1
                  :name (n4 / name
                        :op1 ""MSK1""))
            :condition (s4 / same-01
                  :ARG1 t4
                  :ARG2 (t5 / thing
                        :mod 2)))
      :snt4 (f / fallacy
            :domain (t6 / this)
            :mod (a / amr-unknown)
            :medium (u / url-entity
                  :value ""http://www.funtrivia.com"")))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 : All MSK2 are MSK3 . MSK0 : MSK4 are MSK3 . Conclusion : MSK4 are MSK2 . 
(m / multi-sentence
      :snt1 (t / thing
            :mod 3
            :domain (t2 / thing
                  :name (n / name
                        :op1 ""MSK2"")
                  :mod (a / all)))
      :snt2 (t3 / thing
            :mod 4
            :domain (t4 / thing
                  :name (n2 / name
                        :op1 ""MSK4"")))
      :snt3 (c / conclude-01)
      :snt4 (t5 / thing
            :mod 2
            :domain (t6 / thing
                  :name (n3 / name
                        :op1 ""MSK2""))))"
faulty generalization,faulty generalization,"# ::snt Running in the halls at school is against the rules . Therefore , the indoor track team should be written up . 
(m / multi-sentence
      :snt1 (a / against
            :op1 (r / rule)
            :domain (r2 / run-02
                  :location (h / hall
                        :location (s / school))))
      :snt2 (c / cause-01
            :ARG1 (r3 / recommend-01
                  :ARG1 (w / write-up-07
                        :ARG1 (t / team
                              :purpose (t2 / track)
                              :location (ii / indoor))))))"
appeal to emotion,false dilemma,"# ::snt I thought MSK0 were a good person , but MSK0 were n’t at church today . 
(c / contrast-01
      :ARG1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (g / good-02)))
      :ARG2 (b / be-located-at-91
            :polarity -
            :ARG1 p
            :ARG2 (c2 / church)
            :time (t2 / today)))"
faulty generalization,faulty generalization,"# ::snt MSK0 saw a MSK1 MSK2 in MSK0 class yesterday ; all MSK0 MSK1 must be MSK2 , so cell phones should be banned . 
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (p / person
                  :mod (p2 / product
                        :name (n / name
                              :op1 ""MSK0"")))
            :ARG1 (p3 / person
                  :mod (p4 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :mod (p5 / product
                        :name (n3 / name
                              :op1 ""MSK2"")))
            :location (c / class
                  :mod p2)
            :time (y / yesterday))
      :snt2 (o / obligate-01
            :ARG2 (p6 / product
                  :name (n4 / name
                        :op1 ""MSK1"")
                  :mod (a / all)
                  :domain (p7 / product
                        :name (n5 / name
                              :op1 ""MSK2"")))
            :ARG0-of (c2 / cause-01
                  :ARG1 (r / recommend-01
                        :ARG1 (b / ban-01
                              :ARG1 (p8 / phone
                                    :mod (c3 / cell)))))))"
false causality,false causality,"# ::snt MSK0 The temperature has dropped this morning , and coref1 also have MSK1 . Therefore , the cold weather must be causing MSK1 . MSK0 
(m / multi-sentence
      :snt1 (a / and
            :op1 (d / drop-01
                  :ARG1 (t / temperature)
                  :time (d2 / date-entity
                        :dayperiod (m2 / morning)
                        :mod (t2 / today)))
            :op2 (h / have-03
                  :ARG0 (c / coref1)
                  :ARG1 (p / protein
                        :name (n / name
                              :op1 ""MSK1""))
                  :mod (a2 / also)))
      :snt2 (ii / infer-01
            :ARG1 (c2 / cause-01
                  :ARG0 (w / weather
                        :ARG1-of (c3 / cold-01))
                  :ARG1 (p2 / protein
                        :name (n2 / name
                              :op1 ""MSK1"")))))"
appeal to emotion,appeal to emotion,"# ::snt A commercial about abandoned MSK0 needing a shelter of a forever home . They ask for a small donation to help these struggling MSK0 . 
(m / multi-sentence
      :snt1 (c / commercial
            :topic (c2 / company
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (a / abandon-01)
                  :ARG0-of (n2 / need-01
                        :ARG1 (s / shelter-01
                              :ARG1 c2
                              :ARG2 (h / home
                                    :duration (f / forever))))))
      :snt2 (a2 / ask-02
            :ARG0 (t / they)
            :ARG1 (d / donate-01
                  :ARG1 (s2 / small)
                  :purpose (h2 / help-01
                        :ARG1 (c3 / company
                              :name (n3 / name
                                    :op1 ""MSK0"")
                              :ARG0-of (s3 / struggle-02)
                              :mod (t2 / this)))
                  :ARG0-of h2)))"
false dilemma,false dilemma,"# ::snt "" MSK0 can be a good politician and play dirty or MSK0 can drop out . "" 
(o / or
      :op1 (p / possible-01
            :ARG1 (a / and
                  :op1 (p2 / politician
                        :ARG1-of (g / good-03)
                        :domain (p3 / person
                              :name (n / name
                                    :op1 ""MSK0"")))
                  :op2 (p4 / play-02
                        :ARG0 p3
                        :ARG1 (d / dirty-02))))
      :op2 (p5 / possible-01
            :ARG1 (d2 / drop-out-04
                  :ARG0 p3)))"
ad hominem,ad hominem,"# ::snt "" I do n't know how MSK0 can be such a hard grader . MSK0 's always late for class . "" 
(m / multi-sentence
      :snt1 (k / know-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :manner-of (p / possible-01
                        :ARG1 (p2 / person
                              :ARG0-of (g / grade-01
                                    :ARG1-of (h / hard-02
                                          :degree (s / such)))
                              :domain (p3 / person
                                    :name (n / name
                                          :op1 ""MSK0""))))))
      :snt2 (l / late-02
            :ARG1 p3
            :ARG2 (c / class)
            :time (a / always)))"
fallacy of credibility,fallacy of credibility,"# ::snt MSK0 MSK1 is to prepare youth for Air Force Basic Military Training . MSK0 REPLY : MSK0 MSK1 is true because I heard MSK1 from the Wing Commander . MSK0 
(m / multi-sentence
      :snt1 (h / have-purpose-91
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (p / prepare-02
                  :ARG0 t
                  :ARG1 (y / youth)
                  :ARG2 (t2 / train-01
                        :ARG0 (m2 / military
                              :name (n2 / name
                                    :op1 ""Air""
                                    :op2 ""Force""
                                    :op3 ""Basic""
                                    :op4 ""Military""))
                        :ARG2 y)))
      :snt2 (r / reply-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG2 (t3 / true-01
                  :ARG1 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK1""))
                  :ARG1-of (c / cause-01
                        :ARG0 (h2 / hear-01
                              :ARG0 p2
                              :ARG1 t4
                              :ARG2 (p3 / person
                                    :ARG0-of (h3 / have-org-role-91
                                          :ARG2 (c2 / commander
                                                :mod (w / wing)))))))))"
faulty generalization,intentional,"# ::snt MSK0 out of MSK0 dentists MSK2 ! ( only MSK0 were MSK3 . Out of 1000 MSK3 , only 20 % MSK2 ) 
(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""MSK0"")
            :ARG1-of (ii / include-91
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK2"")
                        :purpose (d / dentistry))))
      :snt2 (p3 / product
            :name (n3 / name
                  :op1 ""MSK3"")
            :domain (p4 / product
                  :name (n4 / name
                        :op1 ""MSK0"")
                  :mod (o / only))
            :ARG1-of (ii2 / include-91
                  :ARG2 (p5 / product
                        :quant 1000
                        :name (n5 / name
                              :op1 ""MSK3""))
                  :ARG3 (p6 / percentage-entity
                        :value 20
                        :mod (o2 / only)))))"
faulty generalization,faulty generalization,"# ::snt We ca n’t freeze the MSK7 year because then students wo n’t graduate on time . Next thing you know most people will be unemployed and will resort to MSK0 . The MSK0 rate will skyrocket and society will collapse . No podemos congelar el año MSK7 MSK6 entonces MSK3 estudiantes no MSK1 graduarán a tiempo . Lo MSK6 MSK2 sabes es MSK2 MSK3 mayoría MSK4 MSK3 gente estará desempleada MSK5 recurrirá al MSK0 . MSK3 tasa MSK4 MSK0 MSK1 disparará MSK5 MSK3 sociedad colapsará . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (f / freeze-02
                  :ARG0 (w / we)
                  :ARG1 (y / year
                        :mod (p2 / product
                              :name (n / name
                                    :op1 ""MSK7""))))
            :ARG1-of (c / cause-01
                  :ARG0 (g / graduate-01
                        :polarity -
                        :ARG1 (p3 / person
                              :ARG0-of (s / study-01))
                        :time (o / on-time))))
      :snt2 (a / and
            :op1 (e / employ-01
                  :polarity -
                  :ARG1 (p4 / person
                        :mod (m2 / most)))
            :op2 (r / resort-01
                  :ARG0 p4
                  :ARG1 (p5 / product
                        :name (n2 / name
                              :op1 ""MSK0"")))
            :op3 (s2 / skyrocket-01
                  :ARG1 (r2 / rate
                        :mod (p6 / product
                              :name (n3 / name
                                    :op1 ""MSK0""))))
            :op4 (r3 / recur-01
                  :ARG0 (p7 / product
                        :name (n4 / name
                              :op1 ""MSK5""))
                  :ARG1 (p8 / product
                        :name (n5 / name
                              :op1 ""MSK0"")))
            :op5 (p9 / product
                  :name (n6 / name
                        :op1 ""MSK1""))
            :op6 (p10 / product
                  :name (n7 / name
                        :op1 ""MSK2""))
            :op7 (p11 / product
                  :name (n8 / name
                        :op1 ""MSK3""))
            :op8 (p12 / product
                  :name (n9 / name
                        :op1 ""MSK4""))
            :op9 (p13 / product
                  :name (n10 / name
                        :op1 ""MSK5""))
            :op10 (p14 / product
                  :name (n11 / name
                        :op1 ""MSK3""))
            :op11 (p15 / product
                  :name (n12 / name
                        :op1 ""MSK5""))
            :op12 (p16 / product
                  :name (n13 / name
                        :op1 ""MSK3""))
            :op13 (p17 / product
                  :name (n14 / name
                        :op1 ""MSK3""))
            :op14 (p18 / product
                  :name (n15 / name
                        :op1 ""MSK4""))
            :ARG1-of (g2 / graduate-01))
      :snt3 (c2 / collapse-01
            :ARG1 (s3 / society)))"
faulty generalization,faulty generalization,"# ::snt If MSK0 allow MSK0 14 year - old to have her first date tonight , what 's next ? A wedding , kids ? 
(m / multi-sentence
      :snt1 (n / next
            :domain (a / amr-unknown)
            :condition (a2 / allow-01
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (d / date-02
                        :ARG0 (p2 / person
                              :age (t / temporal-quantity
                                    :quant 14
                                    :unit (y / year))
                              :poss p)
                        :ord (o / ordinal-entity
                              :value 1)
                        :time (d2 / date-entity
                              :dayperiod (n3 / night)
                              :mod (t2 / today)))))
      :snt2 (a3 / and
            :op1 (w / wed-01)
            :op2 (k / kid)))"
faulty generalization,faulty generalization,"# ::snt If MSK0 put limits on the right to bear arms , soon all of MSK0 Constitutionally - given rights will be taken away . 
(t / take-away-05
      :ARG1 (r / right-05
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :mod (a / all)
            :ARG1-of (g / give-01
                  :ARG0 (c / constitution)))
      :time (s / soon)
      :condition (l / limit-01
            :ARG0 p
            :ARG1 (r2 / right-05
                  :ARG2 (b / bear-01
                        :ARG1 (a2 / arm)))))"
circular reasoning,circular reasoning,"# ::snt A is MSK0 because A is MSK0 . 
(c / cause-01
      :ARG0 (t / thing
            :mod (v / variable
                  :name (n / name
                        :op1 ""MSN""))
            :domain (t2 / thing
                  :name (n2 / name
                        :op1 ""A"")))
      :ARG1 t)"
intentional,intentional,"# ::snt Have MSK0 stopped beating MSK0 wife ? 
(s / stop-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (b / beat-01
            :ARG0 p
            :ARG1 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (w / wife))))
      :polarity (a / amr-unknown))"
ad hominem,faulty generalization,"# ::snt No one in MSK0 family surfs ? But I thought MSK0 said MSK0 lived in California before this . 
(m / multi-sentence
      :snt1 (s / surf-01
            :ARG0 (n / no-one
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p / person
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :ARG2 (f / family)))
            :polarity (a / amr-unknown))
      :snt2 (c / contrast-01
            :ARG2 (t / think-01
                  :ARG0 (ii / i)
                  :ARG1 (s2 / say-01
                        :ARG0 p
                        :ARG1 (l / live-01
                              :ARG0 p
                              :location (s3 / state
                                    :name (n3 / name
                                          :op1 ""California""))
                              :time (b / before
                                    :op1 (t2 / this)))))))"
intentional,fallacy of relevance,"# ::snt MSK0 said that MSK1 MSK2 MSK3 in children , but MSK0 scientifically well - read MSK4 Caleb said that this claim had been debunked and proven false . Their MSK4 Alice offered a compromise that MSK1 must MSK2 some MSK3 , just not all MSK3 . 
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (s / say-01
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK2"")
                        :location (c2 / child)))
            :ARG2 (s2 / say-01
                  :ARG0 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK4""
                              :op2 ""Caleb"")
                        :ARG1-of (r / read-01
                              :manner (s3 / science)
                              :ARG1-of (w / well-09)))
                  :ARG1 (a / and
                        :op1 (d / debunk-01
                              :ARG1 (t4 / thing
                                    :ARG1-of (c3 / claim-01)
                                    :mod (t5 / this)))
                        :op2 (p / prove-01
                              :ARG1 (f / false
                                    :domain t4)))))
      :snt2 (o / offer-01
            :ARG0 (t6 / thing
                  :name (n4 / name
                        :op1 ""MSK4""
                        :op2 ""Alice"")
                  :poss (t7 / they))
            :ARG1 (c4 / compromise-01
                  :ARG0 t6
                  :ARG2 (a2 / and
                        :op1 (o2 / obligate-01
                              :ARG1 (t8 / thing
                                    :name (n5 / name
                                          :op1 ""MSK1""))
                              :ARG2 (t9 / thing
                                    :name (n6 / name
                                          :op1 ""MSK2"")
                                    :mod (s4 / some)))
                        :op2 (o3 / obligate-01
                              :ARG1 (t10 / thing
                                    :name (n7 / name
                                          :op1 ""MSK3"")
                                    :mod (a3 / all
                                          :polarity -)))))))"
faulty generalization,faulty generalization,"# ::snt Teacher : If I let you go to MSK0 pretty soon everybody will want to go to MSK0 . This is an example of 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (t / teach-01))
            :ARG1 (h / have-condition-91
                  :ARG1 (w / want-01
                        :ARG0 (e / everybody)
                        :ARG1 (g / go-01
                              :ARG1 e
                              :ARG4 (s2 / school
                                    :name (n / name
                                          :op1 ""MSK0"")))
                        :time (s3 / soon
                              :mod (p2 / pretty)))
                  :ARG2 (l / let-01
                        :ARG0 p
                        :ARG1 (g2 / go-01
                              :ARG1 (y / you)
                              :ARG4 s2))))
      :snt2 (e2 / exemplify-01
            :ARG0 (t2 / this)))"
intentional,intentional,"# ::snt MSK0 says , "" MSK0 ca n't prove that MSK1 do n't exist , so MSK1 must be real "" . coref2 is an example of which logical fallacy ? 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / possible-01
                  :polarity -
                  :ARG1 (p3 / prove-01
                        :ARG0 p
                        :ARG1 (e / exist-01
                              :polarity -
                              :ARG1 (p4 / person
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG0-of (c / cause-01
                                    :ARG1 (o / obligate-01
                                          :ARG2 (r / real-04
                                                :ARG1 p4)))))))
      :snt2 (e2 / exemplify-01
            :ARG0 (t / thing
                  :name (n3 / name
                        :op1 ""Coref2""))
            :ARG1 (f / fallacy
                  :mod (l / logic)
                  :mod (a / amr-unknown))))"
circular reasoning,fallacy of extension,"# ::snt This is when you characterize MSK0 in order to more effectively tear MSK0 down . 
(c / characterize-01
      :ARG0 (y / you)
      :ARG1 (p / protein
            :name (n / name
                  :op1 ""MSK0""))
      :purpose (t / tear-down-05
            :ARG0 y
            :ARG1 p
            :ARG1-of (h / have-degree-91
                  :ARG2 (e / effective-04
                        :ARG1 t)
                  :ARG3 (m / more)))
      :time (t2 / this))"
ad populum,ad populum,"# ::snt 40 million people ca n't be wrong ! Buy the new iPhone XIV today ! 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (w / wrong-04
                  :ARG1 (p2 / person
                        :quant 40000000)))
      :snt2 (b / buy-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p3 / product
                  :name (n / name
                        :op1 ""iPhone""
                        :op2 ""IV"")
                  :ARG1-of (n2 / new-01))
            :time (t / today)))"
ad hominem,circular reasoning,"# ::snt MSK0 is against the MSK1 because MSK0 's MSK2 ; I know MSK0 's MSK2 because MSK0 is against the MSK1 . 
(m / multi-sentence
      :snt1 (o / oppose-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG1-of (c / cause-01
                  :ARG0 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :poss t)))
      :snt2 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (t4 / thing
                  :name (n4 / name
                        :op1 ""MSK2"")
                  :poss ii)
            :ARG1-of (c2 / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 t
                        :ARG1 t2))))"
appeal to emotion,appeal to emotion,"# ::snt MSK0 believe that when MSK1 MSK2 , MSK1 are all given new , young , perfect bodies , and MSK1 spend eternity with those whom MSK1 love . MSK0 ca n’t imagine the point of life if it all just ends when MSK1 MSK2 ! 
(m / multi-sentence
      :snt1 (b / believe-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (g / give-01
                  :ARG1 (b2 / body
                        :ARG1-of (n2 / new-01)
                        :mod (y / young)
                        :ARG1-of (p2 / perfect-02))
                  :ARG2 (a / and
                        :op1 (p3 / person
                              :name (n3 / name
                                    :op1 ""MSK1""))
                        :op2 (p4 / person
                              :name (n4 / name
                                    :op1 ""MSK2""))
                        :mod (a2 / all))
                  :time (s / spend-02
                        :ARG0 p3
                        :ARG1 (e / eternity)
                        :accompanier (p5 / person
                              :ARG1-of (l / love-01
                                    :ARG0 p3)))))
      :snt2 (p6 / possible-01
            :polarity -
            :ARG1 (ii / imagine-01
                  :ARG0 (p7 / person
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG1 (p8 / point
                        :poss (l2 / life)))
            :condition (e2 / end-01
                  :ARG1 (a3 / all)
                  :mod (j / just)
                  :time (p9 / person
                        :name (n6 / name
                              :op1 ""MSK1"")))))"
intentional,false dilemma,"# ::snt Student : MSK0 did n't MSK3 MSK1 this ; MSK1 never MSK2 this . MSK3 : So , MSK0 're either lazy or unwilling to MSK2 is that right ? 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (s2 / study-01))
            :ARG1 (a / and
                  :op1 (m2 / miss-02
                        :polarity -
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 (t2 / this))
                  :op2 (m3 / miss-02
                        :polarity -
                        :ARG0 (p3 / person
                              :name (n3 / name
                                    :op1 ""MSK1""))
                        :ARG1 (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK2""))
                        :ARG2 (t4 / this)
                        :time (e / ever))))
      :snt2 (s3 / say-01
            :ARG0 (p4 / person
                  :name (n5 / name
                        :op1 ""MSK3""))
            :ARG1 (ii / infer-01
                  :ARG1 (o / or
                        :op1 (l / lazy
                              :domain p2)
                        :op2 (w / will-02
                              :polarity -
                              :ARG0 p4
                              :ARG1 (t5 / thing
                                    :name (n6 / name
                                          :op1 ""MSK2"")))
                        :domain (t6 / that)
                        :ARG1-of (r / request-confirmation-91)))))"
circular reasoning,appeal to emotion,"# ::snt Which fallacy is the following example ? "" By MSK0 God , you are MSK0 goodness , MSK1 , and love MSK1 . "" 
(f / fallacy
      :domain (a / amr-unknown)
      :ARG1-of (f2 / follow-04)
      :example-of (a2 / and
            :op1 (g / goodness
                  :domain (p / person
                        :name (n / name
                              :op1 ""MSK0""
                              :op2 ""God"")))
            :op2 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""
                        :op2 ""God"")
                  :domain (y / you))
            :op3 (l / love-01
                  :ARG0 y
                  :ARG1 p)
            :ARG1-of (c / cause-01
                  :ARG0 p)))"
faulty generalization,appeal to emotion,"# ::snt Ginger : Your MSK2 just ran into MSK0 house and ransacked MSK0 kitchen ! Mary : MSK1 would never do that , look at how adorable MSK1 is with those MSK2 eyes ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Ginger""))
            :ARG1 (a / and
                  :op1 (r / run-02
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK2"")
                              :poss p
                              :part (e / eye
                                    :mod 2))
                        :ARG1 (h / house
                              :name (n3 / name
                                    :op1 ""MSK0"")
                              :part (k / kitchen))
                        :mod (j / just))
                  :op2 (r2 / ransack-01
                        :ARG0 p2
                        :ARG1 k)))
      :snt2 (s2 / say-01
            :ARG0 (p3 / person
                  :name (n4 / name
                        :op1 ""Mary""))
            :ARG1 (a2 / and
                  :op1 (d / do-02
                        :polarity -
                        :ARG0 (p4 / person
                              :name (n5 / name
                                    :op1 ""MSK1"")
                              :part (e2 / eye
                                    :mod 1))
                        :ARG1 (t / that)
                        :time (e3 / ever))
                  :op2 (l / look-01
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 (a3 / adorable
                              :domain e2
                              :ARG1-of (c / cause-01
                                    :ARG0 e2))))))"
appeal to emotion,fallacy of extension,"# ::snt SM 6 : North invading South during Civil War 
(ii / invade-01
      :ARG0 (c / country
            :name (n / name
                  :op1 ""North""))
      :ARG1 (c2 / country
            :name (n2 / name
                  :op1 ""South""))
      :time (w / war
            :name (n3 / name
                  :op1 ""Civil""
                  :op2 ""War""))
      :ARG1-of (d / describe-01
            :ARG0 (p / publication
                  :name (n4 / name
                        :op1 ""SM""
                        :op2 6))))"
intentional,faulty generalization,"# ::snt MSK0 seemed so promising , but the 3 studies that supported MSK0 MSK1 turned out to have critical methodological flaws , so MSK0 is probably not MSK1 . 
(c / contrast-01
      :ARG1 (s / seem-01
            :ARG1 (p / promise-01
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :degree (s2 / so)))
      :ARG2 (t2 / turn-out-11
            :ARG1 (t3 / thing
                  :quant 3
                  :ARG1-of (s3 / study-01)
                  :ARG0-of (s4 / support-01
                        :ARG1 (t4 / thing
                              :name (n2 / name
                                    :op1 ""MSK1""))))
            :ARG2 (h / have-03
                  :ARG0 t3
                  :ARG1 (f / flaw-01
                        :ARG1 (p2 / procedure)
                        :ARG1-of (c2 / critical-02)))
            :ARG0-of (c3 / cause-01
                  :ARG1 (p3 / probable
                        :domain (t5 / thing
                              :polarity -
                              :name (n3 / name
                                    :op1 ""MSK1"")
                              :domain t)))))"
false causality,false causality,"# ::snt MSK0 were correlated with the closest approaches of MSK1 . Therefore , MSK1 must have caused MSK0 . 
(m / multi-sentence
      :snt1 (c / correlate-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :ARG1-of (a / approach-01
                        :ARG2 (t3 / thing
                              :name (n2 / name
                                    :op1 ""MSK1"")))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (c2 / close-10
                              :ARG1 t2)
                        :ARG3 (m2 / most))))
      :snt2 (ii / infer-01
            :ARG1 (c3 / cause-01
                  :ARG0 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 t)))"
fallacy of credibility,fallacy of credibility,"# ::snt attaching an MSK0 to a person of false or appeared authority in order to give credence to their MSK0 
(a / attach-01
      :ARG1 (p / product
            :name (n / name
                  :op1 ""MSK0""))
      :ARG2 (p2 / person
            :ARG0-of (h / have-03
                  :ARG1 (o / or
                        :op1 (a2 / authority
                              :mod (f / false))
                        :op2 (a3 / authority
                              :ARG1-of (a4 / appear-02)))))
      :purpose (c / credence
            :beneficiary p))"
ad populum,ad populum,"# ::snt Form : Idea MSK0 is popular . Therefore , MSK0 is correct . 
(f / form
      :mod (ii / idea
            :topic (p / popular-02
                  :ARG1 (p2 / product
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG0-of (c / cause-01
                        :ARG1 (c2 / correct-02
                              :ARG1 p2)))))"
circular reasoning,circular reasoning,"# ::snt It says in MSK0 that MSK1 MSK2 . Since MSK0 is MSK1 word , and MSK1 never speaks falsely , then everything in MSK0 must be true . So , MSK1 must MSK2 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / it)
            :ARG1 (s2 / string-entity
                  :value ""MSK1""
                  :domain (s3 / string-entity
                        :value ""MSK2""))
            :location (s4 / string-entity
                  :value ""MSK0""))
      :snt2 (c / cause-01
            :ARG0 (a / and
                  :op1 (w / word
                        :mod (s5 / string-entity
                              :value ""MSK1"")
                        :domain (s6 / string-entity
                              :value ""MSK1""))
                  :op2 (s7 / speak-01
                        :polarity -
                        :ARG0 s5
                        :time (e / ever)
                        :manner (f / false)))
            :ARG1 (o / obligate-01
                  :ARG1 (e2 / everything
                        :location s2)
                  :ARG2 (t / true-01
                        :ARG1 e2)))
      :snt3 (ii2 / infer-01
            :ARG1 (o2 / obligate-01
                  :ARG1 (s8 / string-entity
                        :value ""MSK1"")
                  :ARG2 (s9 / string-entity
                        :value ""MSK2""))))"
fallacy of logic,fallacy of relevance,"# ::snt MSK0 should n't have to MSK1 for MSK0 parking ticket . There are MSK2 commit . MSK2 should have to MSK1 . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (o / obligate-01
                  :polarity -
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1-of (c / cause-01
                        :ARG0 (t / ticket-02
                              :ARG1 p
                              :ARG2 (p3 / park-01
                                    :ARG1 p)))))
      :snt2 (c2 / commit-01
            :ARG1 (p4 / product
                  :name (n3 / name
                        :op1 ""MSK2"")))
      :snt3 (r2 / recommend-01
            :ARG1 (o2 / obligate-01
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :ARG2 (p6 / product
                        :name (n5 / name
                              :op1 ""MSK1"")))))"
faulty generalization,faulty generalization,"# ::snt My sister MSK0 MSK1 , so all girls must MSK0 to MSK1 too . 
(c / cause-01
      :ARG0 (s / string-entity
            :value ""MSK0""
            :domain (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (s2 / sister))))
      :ARG1 (o / obligate-01
            :ARG1 (g / girl
                  :mod (a / all))
            :ARG2 (s3 / string-entity
                  :value ""MSK0 to MSK1"")
            :mod (t / too)))"
fallacy of extension,false dilemma,"# ::snt MSK1 : I ’m against the war . MSK1 : You must hate our troops . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (o / oppose-01
                  :ARG0 p
                  :ARG1 (w / war-01)))
      :snt2 (o2 / obligate-01
            :ARG1 (y / you)
            :ARG2 (h / hate-01
                  :ARG0 y
                  :ARG1 (t / troop
                        :poss (w2 / we)))))"
false dilemma,false dilemma,"# ::snt Vote for me or live through four more years of higher taxes . 
(o / or
      :op1 (v / vote-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i))
      :op2 (l / live-02
            :mode imperative
            :ARG0 y
            :ARG1 (t / temporal-quantity
                  :quant 4
                  :unit (y2 / year)
                  :mod (m / more)
                  :duration-of (t2 / tax-01
                        :ARG1-of (h / have-degree-91
                              :ARG2 (h2 / high-02
                                    :ARG1 t2)
                              :ARG3 (m2 / more))))))"
false causality,faulty generalization,"# ::snt Two members of my team have become more MSK4 MSK0 after taking MSK3 . That proves we should have mandatory MSK3 for the whole company to improve MSK0 MSK4 . 
(m / multi-sentence
      :snt1 (b / become-01
            :ARG1 (p / person
                  :quant 2
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / team
                              :poss (ii / i))
                        :ARG2 (m2 / member)))
            :ARG2 (h2 / have-degree-91
                  :ARG1 p
                  :ARG2 (s / string-entity
                        :value ""MSK4"")
                  :ARG3 (m3 / more)
                  :ARG4 (s2 / string-entity
                        :value ""MSK0""))
            :time (a / after
                  :op1 (t2 / take-01
                        :ARG0 p
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""MSK3"")))))
      :snt2 (p3 / prove-01
            :ARG0 (t3 / that)
            :ARG1 (r / recommend-01
                  :ARG1 (h3 / have-03
                        :ARG0 (w / we)
                        :ARG1 (p4 / product
                              :name (n2 / name
                                    :op1 ""MSK3"")
                              :ARG1-of (m4 / mandate-01))
                        :beneficiary (c / company
                              :mod (w2 / whole))
                        :purpose (ii2 / improve-01
                              :ARG0 w
                              :ARG1 (s3 / string-entity
                                    :value ""MSK0""))))))"
faulty generalization,faulty generalization,"# ::snt Justin claimed that passing federal laws to MSK0 the amount of violence in music is the first step in a process that will eventually result in absolute government MSK0 of the media and total censorship over all forms of artistic expression . Of what fallacy is this an example ? 
(m / multi-sentence
      :snt1 (c / claim-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Justin""))
            :ARG1 (s / step-01
                  :ARG1 (p2 / process-02
                        :ARG1-of (r / result-01
                              :ARG2 (a / and
                                    :op1 (g / government-organization
                                          :name (n2 / name
                                                :op1 ""MSK0"")
                                          :mod (a2 / absolute)
                                          :ARG0-of (g2 / govern-01)
                                          :domain (m2 / media))
                                    :op2 (c2 / censor-01
                                          :ARG0 g
                                          :ARG1 (e / express-01
                                                :ARG1 (a3 / art)
                                                :mod (f / form
                                                      :mod (a4 / all)))
                                          :degree (t / total)))
                              :time (e2 / eventual)))
                  :ARG2 (p3 / pass-05
                        :ARG1 (a5 / amount
                              :quant-of (v / violence
                                    :mod (m3 / music)))
                        :ARG2 g)
                  :ord (o / ordinal-entity
                        :value 1)))
      :snt2 (e3 / exemplify-01
            :ARG0 (t2 / this)
            :ARG1 (f2 / fallacy
                  :mod (a6 / amr-unknown))))"
false dilemma,false dilemma,"# ::snt I 'm raising money to help cure XYZ disease . If MSK0 do not donate , MSK0 are part of the problem . 
(m / multi-sentence
      :snt1 (r / raise-02
            :ARG0 (ii / i)
            :ARG1 (m2 / money)
            :purpose (h / help-01
                  :ARG0 m2
                  :ARG1 (c / cure-01
                        :ARG2 (d / disease
                              :name (n / name
                                    :op1 ""Yaz"")))))
      :snt2 (h2 / have-condition-91
            :ARG1 (h3 / have-part-91
                  :ARG1 (p / problem)
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK0"")))
            :ARG2 (d2 / donate-01
                  :polarity -
                  :ARG0 p2)))"
intentional,ad populum,"# ::snt SM 7 : No global warming happening 
(s / say-01
      :ARG0 (b / broadcast-program
            :name (n / name
                  :op1 ""SM""
                  :op2 7))
      :ARG1 (w / warm-01
            :polarity -
            :ARG1 (g / globe)))"
circular reasoning,circular reasoning,"# ::snt MSK1 is real because I have experienced what can only be described as MSK1 . 
(c / cause-01
      :ARG0 (e / experience-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (d / describe-01
                        :ARG2 (s / string-entity
                              :value ""MSK1"")
                        :ARG1-of (p / possible-01
                              :mod (o / only)))))
      :ARG1 (r / real-04
            :ARG1 t
            :name (n / name
                  :op1 ""MSK1"")))"
false causality,circular reasoning,"# ::snt "" Once a year , a miracle causes this large rock to float about ten centimeters off the ground since supernatural powers want us to remember the martyrs who died in that spot . "" 
(c / cause-01
      :ARG0 (m / miracle)
      :ARG1 (f / float-01
            :ARG0 m
            :ARG1 (r / rock
                  :mod (l / large)
                  :mod (t / this))
            :ARG2 (o / off
                  :op1 (g / ground)
                  :quant (a / about
                        :op1 (d / distance-quantity
                              :quant 10
                              :unit (c2 / centimeter)))))
      :ARG1-of (c3 / cause-01
            :ARG0 (w / want-01
                  :ARG0 (p / power
                        :mod (s / supernatural))
                  :ARG1 (r2 / remember-01
                        :ARG0 (w2 / we)
                        :ARG1 (m2 / martyr-01
                              :ARG1-of (d2 / die-01
                                    :location (s2 / spot
                                          :mod (t2 / that)))))))
      :frequency (r3 / rate-entity-91
            :ARG3 (t3 / temporal-quantity
                  :quant 1
                  :unit (y / year))))"
ad hominem,ad hominem,"# ::snt "" Do not listen to MSK0 , MSK0 will only tell MSK0 lies about the recent activities given in our EAPP class . "" 
(l / listen-01
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1-of (c / cause-01
            :ARG0 (l2 / lie-08
                  :ARG0 p
                  :ARG1 (a / activity-06
                        :time (r / recent)
                        :ARG1-of (g / give-01
                              :location (c2 / class
                                    :name (n2 / name
                                          :op1 ""EAPP"")
                                    :poss (w / we))))
                  :ARG2 p
                  :mod (o / only))))"
faulty generalization,intentional,"# ::snt MSK0 : All MSK1 MSK2 are MSK3 MSK4 : MSK0 get shoved in a locker every day and cry when MSK0 see bunnies Jojo : Well , REAL MSK1 MSK2 are MSK3 MSK4 : What does toughness have to do with Geography ? MSK0 : MSK9 MSK5 MSK7 MSK8 MSK4 : MSK0 empujan en un casillero MSK9 MSK5 días y lloro MSK10 MSK10 conejitos . MSK0 : Bueno , MSK5 verdaderos MSK7 MSK8 . MSK4 : ¿ Qué MSK10 MSK10 MSK10 MSK5 MSK8 con MSK5 geografía ? 
(m / multi-sentence
      :snt1 (a / and
            :op1 (l / language
                  :name (n / name
                        :op1 ""MSK1""))
            :op2 (l2 / language
                  :name (n2 / name
                        :op1 ""MSK3""))
            :op3 (l3 / language
                  :name (n3 / name
                        :op1 ""MSK4""))
            :op4 (a2 / and
                  :op1 (s / shove-01
                        :ARG1 (s2 / string-entity
                              :value ""MSK0"")
                        :ARG2 (l4 / locker)
                        :frequency (r / rate-entity-91
                              :ARG3 (t / temporal-quantity
                                    :quant 1
                                    :unit (d / day))))
                  :op2 (c / cry-02
                        :ARG0 s2
                        :time (s3 / see-01
                              :ARG0 s2
                              :ARG1 (b / bunny)))))
      :snt2 (s4 / say-01
            :ARG0 (ii / i)
            :ARG1 (a3 / and
                  :op1 (s5 / string-entity
                        :value ""MSK1"")
                  :op2 (s6 / string-entity
                        :value ""MSK3"")
                  :op3 (s7 / string-entity
                        :value ""MSK4"")
                  :ARG1-of (r2 / real-04))
            :ARG2 (p / person
                  :name (n4 / name
                        :op1 ""Jojo"")))
      :snt3 (h / have-to-do-with-04
            :ARG0 (t2 / toughness)
            :ARG1 (g / geography)
            :ARG2 (a4 / amr-unknown))
      :snt4 (a5 / and
            :op1 (s8 / string-entity
                  :value ""MSK9"")
            :op2 (s9 / string-entity
                  :value ""MSK5"")
            :op3 (s10 / string-entity
                  :value ""MSK7"")
            :op4 (s11 / string-entity
                  :value ""MSK8""))
      :op2 (s12 / string-entity
            :value ""MSK5"")
      :op3 (s13 / string-entity
            :value ""MSK10"")
      :op4 (s14 / string-entity
            :value ""MSK10"")
      :op5 (s15 / string-entity
            :value ""MSK10"")
      :op6 (s16 / string-entity
            :value ""MSK10"")
      :op7 (s17 / string-entity
            :value ""MSK10""))"
fallacy of extension,intentional,"# ::snt The Windmill debate - Snowball promises that MSK0 will mean less MSK1 and better living conditions . Napoleon says that MSK0 's just unnecessary and will be more MSK1 . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (p / promise-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Snowball""))
                  :ARG2 (m2 / mean-01
                        :ARG1 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :ARG2 (a2 / and
                              :op1 (t2 / thing
                                    :name (n3 / name
                                          :op1 ""MSK1"")
                                    :quant (l / less))
                              :op2 (c / condition
                                    :mod (l2 / live-01)
                                    :ARG1-of (h / have-degree-91
                                          :ARG2 (g / good-02
                                                :ARG1 c)
                                          :ARG3 (m3 / more))))))
            :snt2 (s / say-01
                  :ARG0 (p3 / person
                        :name (n4 / name
                              :op1 ""Napoleon""))
                  :ARG1 (a3 / and
                        :op1 (n5 / need-01
                              :polarity -
                              :ARG1 t
                              :mod (j / just))
                        :op2 (h2 / have-mod-91
                              :ARG1 t
                              :ARG2 (t3 / thing
                                    :name (n6 / name
                                          :op1 ""MSK1"")
                                    :quant (m4 / more)))))
            :snt3 (d / debate-01
                  :mod (n7 / newspaper
                        :name (n8 / name
                              :op1 ""Windmill"")))))"
ad hominem,ad hominem,"# ::snt Charlie : Fast food is filled with salt , fat , and added sugars . We need better regulation of the industry . MSK0 : That MSK0 be , but MSK0 're such a hypocrite ! MSK0 saw MSK0 devour a Triple - Baconator , super-sized fries , and 64oz of soda yesterday ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (f / fill-01
                  :ARG1 (f2 / food
                        :ARG1-of (f3 / fast-02))
                  :ARG2 (a / and
                        :op1 (s2 / salt)
                        :op2 (f4 / fat)
                        :op3 (s3 / sugar
                              :ARG1-of (a2 / add-02)))))
      :snt2 (s4 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (c / contrast-01
                  :ARG1 (h / hypocrite
                        :domain p2
                        :degree (s5 / such))
                  :ARG2 (s6 / see-01
                        :ARG0 p2
                        :ARG1 (d / devour-01
                              :ARG0 p2
                              :ARG1 (a3 / and
                                    :op1 (p3 / product
                                          :name (n3 / name
                                                :op1 ""Triple""
                                                :op2 ""Baconator""))
                                    :op2 (f5 / fry
                                          :ARG1-of (s7 / size-01
                                                :ARG2 (s8 / super)))
                                    :op3 (s9 / soda
                                          :quant (m2 / mass-quantity
                                                :quant 64
                                                :unit (o / ounce))))
                              :time (y / yesterday)))))
      :snt3 (n4 / need-01
            :ARG0 (w / we)
            :ARG1 (r / regulate-01
                  :ARG1 (ii / industry)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 r)
                        :ARG3 (m3 / more)))))"
ad hominem,ad hominem,"# ::snt MSK0 is not qualified to make suggestions about our penal system . As an ex-convict , MSK0 would always take the criminals ’ side . 
(m / multi-sentence
      :snt1 (q / qualify-02
            :polarity -
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (s / suggest-01
                  :ARG0 p
                  :ARG1 (s2 / system
                        :mod (p2 / penal)
                        :poss (w / we))))
      :snt2 (s3 / side-01
            :ARG0 (p3 / person
                  :name n
                  :op1 ""MSK0"")
            :ARG1-of (c / convict-01
                  :time (e / ex)))
      :ARG1 (p4 / person
            :ARG0-of (c2 / crime-02))
      :time (a / always))"
fallacy of extension,ad hominem,"# ::snt MSK0 MSK3 that MSK1 should open up the Arctic National Wildlife Refuge for MSK2 drilling . But MSK0 just wants to reward MSK0 rich cronies in the MSK2 industry , so MSK1 ca n't take MSK0 MSK3 seriously . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (o / open-up-03
                        :ARG0 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (r2 / refuge
                              :name (n3 / name
                                    :op1 ""Arctic""
                                    :op2 ""National""
                                    :op3 ""Wildlife""
                                    :op4 ""Refuge""))
                        :purpose (d / drill-01
                              :ARG3 (p3 / product
                                    :name (n4 / name
                                          :op1 ""MSK2"")))))
            :ARG2 (p4 / person
                  :name (n5 / name
                        :op1 ""MSK3"")))
      :snt2 (c / contrast-01
            :ARG2 (w / want-01
                  :ARG0 (p5 / person
                        :name (n6 / name
                              :op1 ""MSK0""))
                  :ARG1 (r3 / reward-01
                        :ARG0 p5
                        :ARG1 (c2 / crony
                              :ARG1-of (e / enrich-01)
                              :ARG0-of (h / have-org-role-91
                                    :ARG1 (ii / industry
                                          :mod p3))))
                  :mod (j / just)
                  :ARG0-of (c3 / cause-01
                        :ARG1 (p6 / possible-01
                              :polarity -
                              :ARG1 (t / take-04
                                    :ARG0 (p7 / person
                                          :name (n7 / name
                                                :op1 ""MSK1""))
                                    :ARG1 (p8 / product
                                          :name (n8 / name
                                                :op1 ""MSK3""))
                                    :ARG2 (s2 / serious-01)))))))"
