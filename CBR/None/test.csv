predictions,true_labels,amr_str
faulty generalization,fallacy of extension,"# ::snt People who drive big cars probably hate the environment . 
(h / hate-01
      :ARG0 (p / person
            :ARG0-of (d / drive-01
                  :ARG1 (c / car
                        :mod (b / big))))
      :ARG1 (e / environment)
      :mod (p2 / probable))"
intentional,faulty generalization,"# ::snt MSK0 ca n't jump . No , really , MSK0 ca n't ! 
(p / possible-01
      :polarity -
      :ARG1 (j / jump-03
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :ARG1-of (r / real-04)
      :ARG1-of (c / contrast-01
            :ARG2 (p3 / possible-01
                  :polarity -
                  :ARG1 (j2 / jump-03
                        :ARG0 p2))))"
false causality,fallacy of logic,"# ::snt ' Cotton and grain crops were lower this year than last . So , MSK0 must be stealing MSK0 . "" This is an example of what kind of logical fallacy ? 
(m / multi-sentence
      :snt1 (l / low-04
            :ARG1 (a / and
                  :op1 (c / crop
                        :mod (c2 / cotton))
                  :op2 (c3 / crop
                        :mod (g / grain)))
            :time (y / year
                  :mod (t / this))
            :ARG2-of (h / have-degree-91
                  :ARG1 a
                  :ARG3 (m2 / more)
                  :ARG4 (y2 / year
                        :mod (l2 / last))))
      :snt2 (ii / infer-01
            :ARG1 (s / steal-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 p))
      :snt3 (e / exemplify-01
            :ARG0 t)
      :ARG1 (f / fallacy
            :mod (l3 / logical)
            :mod (k / kind
                  :mod (a2 / amr-unknown))))"
false causality,false causality,"# ::snt "" Why are MSK0 MSK1 MSK0 !? "" "" The last time MSK2 was weak , MSK2 MSK1 coref1 and coref3 got better . "" What is this ? 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (s / string-entity
                  :value ""MSK0""
                  :domain (s2 / string-entity
                        :value ""MSK1"")))
      :snt2 (g / get-03
            :ARG1 (a2 / and
                  :op1 (s3 / string-entity
                        :value ""MSK2""
                        :domain (s4 / string-entity
                              :value ""MSK1""))
                  :op2 (c2 / coref1)
                  :op3 (c3 / coref3))
            :ARG2 (g2 / good-02
                  :ARG1 a2
                  :ARG2-of (h / have-degree-91
                        :ARG1 a2
                        :ARG3 (m2 / more)))
            :time (w / weak-02
                  :ARG1 (s5 / string-entity
                        :value ""MSK2"")
                  :mod (l / last)))
      :snt3 (a3 / amr-unknown
            :domain (t / this)))"
faulty generalization,faulty generalization,"# ::snt All students are good and all clowns are bad . 
(a / and
      :op1 (g / good-02
            :ARG1 (p / person
                  :ARG0-of (s / study-01)
                  :mod (a2 / all)))
      :op2 (b / bad-07
            :ARG1 (c / clown)))"
fallacy of extension,fallacy of extension,"# ::snt "" People who do n't support the proposed state minimum wage increase must hate the poor so much . "" Which logical fallacy is used in the statement above ? 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (h / hate-01
                  :ARG0 (p / person
                        :ARG0-of (s / support-01
                              :polarity -
                              :ARG1 (ii / increase-01
                                    :ARG1 (w / wage
                                          :mod (m2 / minimum))
                                    :ARG1-of (p2 / propose-01)
                                    :mod (s2 / state))))
                  :ARG1 (p3 / person
                        :mod (p4 / poor))
                  :degree (m3 / much
                        :degree (s3 / so))))
      :snt2 (f / fallacy
            :mod (l / logic)
            :ARG1-of (u / use-01
                  :ARG2 (s4 / state-01
                        :location (a / above)))
            :mod (a2 / amr-unknown)))"
fallacy of extension,fallacy of extension,"# ::snt Charlie : Illegal posting and MSK2 of songs online is crippling MSK0 . MSK1 : MSK1 could n't be more wrong ; MSK0 is doing just fine ! MSK1 ca n't believe MSK1 think the government should be allowed to regulate what MSK1 MSK2 with MSK1 friends . No one wants a world where MSK1 ca n't loan a book to MSK1 girlfriend , let MSK1 roommate borrow MSK1 iPod , or MSK2 a funny meme with MSK1 blog followers . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (c / cripple-01
                  :ARG0 (a / and
                        :op1 (p2 / post-01
                              :ARG1 (s2 / song)
                              :ARG2 (o / online)
                              :ARG1-of (l / legal-02
                                    :polarity -))
                        :op2 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK2"")))
                  :ARG1 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1""))))
      :snt2 (a2 / and
            :op1 (p4 / possible-01
                  :polarity -
                  :ARG1 (w / wrong-04
                        :ARG1 (p5 / person
                              :name (n4 / name
                                    :op1 ""MSK1""))
                        :ARG2-of (h / have-degree-91
                              :ARG1 p5
                              :ARG3 (m2 / more))))
            :op2 (d / do-02
                  :ARG0 (p6 / person
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG1-of (f / fine-04
                        :mod (j / just)))
            :op3 p4
            :polarity -
            :ARG1 (b / believe-01
                  :ARG0 p5
                  :ARG1 (t2 / think-01
                        :ARG0 p5
                        :ARG1 (r / recommend-01
                              :ARG1 (a3 / allow-01
                                    :ARG1 (r2 / regulate-01
                                          :ARG0 (g / government-organization
                                                :ARG0-of (g2 / govern-01))
                                          :ARG1 (a4 / and
                                                :op1 p5
                                                :op2 (p7 / person
                                                      :name (n6 / name
                                                            :op1 ""MSK1""))
                                                :op3 (p8 / person
                                                      :name (n7 / name
                                                            :op1 ""MSK2""))
                                                :op4 (p9 / person
                                                      :ARG0-of (h2 / have-rel-role-91
                                                            :ARG1 p5
                                                            :ARG2 (f2 / friend)))))))))
            :snt3 (w2 / want-01
                  :ARG0 (n8 / no-one)
                  :ARG1 (w3 / world
                        :location-of p4
                        :polarity -
                        :ARG1 (o2 / or
                              :op1 (l2 / loan-01
                                    :ARG0 (p10 / person
                                          :name (n9 / name
                                                :op1 ""MSK1""))
                                    :ARG1 (b2 / book)
                                    :ARG2 (p11 / person
                                          :ARG0-of h2
                                          :ARG1 p10
                                          :ARG2 (g3 / girlfriend))))
                        :op2 (l3 / let-01
                              :ARG0 p10
                              :ARG1 (b3 / borrow-01
                                    :ARG0 p10
                                    :ARG1 (p12 / product
                                          :name (n10 / name
                                                :op1 ""MSK1"")
                                          :mod (ii / iPod)
                                          :ARG2-of b3))))
                  :op3 (l4 / loan-01
                        :ARG0 p10
                        :ARG1 (m3 / meme
                              :mod (f3 / funny))
                        :ARG2 p11))))"
ad hominem,faulty generalization,"# ::snt MSK0 wants to play a guitar solo on our next recording . MSK0 father is a horrible musician , though , so I doubt that Paula 's any good either . 
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / play-11
                  :ARG0 p
                  :ARG1 (s / solo
                        :mod (g / guitar))
                  :time (t / thing
                        :ARG1-of (r / record-01
                              :ARG0 (w2 / we))
                        :mod (n2 / next))))
      :snt2 (h / have-concession-91
            :ARG1 (m2 / musician
                  :mod (h2 / horrible)
                  :domain (p3 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 p
                              :ARG2 (f / father)))
                  :ARG0-of (c / cause-01
                        :ARG1 (d / doubt-01
                              :ARG0 (ii / i)
                              :ARG1 (g2 / good-03
                                    :ARG1 (p4 / person
                                          :name (n3 / name
                                                :op1 ""Paula""))
                                    :mod (a / any)
                                    :mod (e / either)))))))"
ad hominem,fallacy of credibility,"# ::snt MSK0 sister - in - law , who is a teacher , said that this school is not somewhere that MSK0 would want to send MSK0 children . 
(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (s2 / sister-in-law))
            :ARG0-of (t / teach-01))
      :ARG1 (s3 / somewhere
            :polarity -
            :location-of (w / want-01
                  :ARG0 p2
                  :ARG1 (s4 / send-03
                        :ARG0 p2
                        :ARG1 (c / child
                              :poss p2)))
            :domain (s5 / school
                  :mod (t2 / this))))"
faulty generalization,circular reasoning,"# ::snt something that kills is deadly 
(k / kill-01
      :ARG0 (s / something))"
false causality,false causality,"# ::snt MSK3 MSK0 crows always before MSK1 MSK2 , therefore MSK0 causes MSK1 to MSK2 . MSK3 
(m / multi-sentence
      :snt1 (s / string-entity
            :value ""MSK3"")
      :snt2 (c / crow-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :time (b / before
                  :op1 (s2 / string-entity
                        :value ""MSK1"")
                  :op2 (s3 / string-entity
                        :value ""MSK2""))
            :time (a / always)
            :ARG0-of (c2 / cause-01
                  :ARG1 c2
                  :ARG0 t
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :destination (s4 / string-entity
                              :value ""MSK2""))))
      :snt3 (s5 / string-entity
            :value ""MSK3""))"
fallacy of logic,faulty generalization,"# ::snt MSK0 = a MSK1 ; MSK0 = a MSK1 ; therefore MSK0 = MSK0 . 
(m / multi-sentence
      :snt1 (e / equal-01
            :ARG1 (s / string-entity
                  :value ""MSK0"")
            :ARG2 (s2 / string-entity
                  :value ""MSK1""))
      :snt2 (e2 / equal-01
            :ARG1 (s3 / string-entity
                  :value ""MSK0"")
            :ARG2 (s4 / string-entity
                  :value ""MSK1"")
            :ARG1-of (c / cause-01
                  :ARG0 (e3 / equal-01
                        :ARG1 s3
                        :ARG2 s))))"
fallacy of extension,ad hominem,"# ::snt MSK0 against the man ; MSK0 attacking the individual rather than their position . 
(m / multi-sentence
      :snt1 (o / oppose-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (m2 / man))
      :snt2 (a / attack-01
            :ARG0 (p2 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG1 (ii / individual
            :ARG1-of (ii2 / instead-of-91
                  :ARG2 (p3 / position-02
                        :ARG1 (t / they)))))"
ad populum,ad populum,"# ::snt Makes the claim that EVERYONE is using this product , and you should , too . 
(c / claim-01
      :ARG1 (a / and
            :op1 (u / use-01
                  :ARG0 (e / everyone)
                  :ARG1 (p / product
                        :mod (t / this)))
            :op2 (r / recommend-01
                  :ARG1 (u2 / use-01
                        :ARG0 (y / you)
                        :ARG1 p
                        :mod (t2 / too)))))"
ad hominem,faulty generalization,"# ::snt I ca n't trust the mayor or the governor . All politicians must be liars . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (t / trust-02
                  :ARG0 (ii / i)
                  :ARG1 (o / or
                        :op1 (m2 / mayor)
                        :op2 (g / governor))))
      :snt2 (o2 / obligate-01
            :ARG1 (p2 / politician
                  :mod (a / all))
            :ARG2 (l / lie-08
                  :ARG0 p2)))"
fallacy of logic,intentional,"# ::snt "" MSK0 'm MSK1 and MSK0 do n't MSK3 . "" "" All MSK1 MSK3 . "" "" MSK0 do n't . "" "" Then you must not really be MSK1 . "" 
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-mod-91
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op2 (h2 / have-mod-91
                  :polarity -
                  :ARG1 t
                  :ARG2 t2))
      :snt2 (h3 / have-mod-91
            :polarity -
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :mod (a2 / all))
            :ARG2 (t4 / thing
                  :name (n4 / name
                        :op1 ""MSK3"")))
      :snt3 (ii / infer-01
            :ARG1 (h4 / have-mod-91
                  :polarity -
                  :ARG1 (y / you)
                  :ARG2 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK1""))
                  :ARG1-of (r / real-04))
            :mod (t6 / then)))"
ad populum,ad populum,"# ::snt Everyone is going to get MSK0 when MSK0 comes out this weekend . Why are n’t you ? 
(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (e / everyone)
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :time (c / come-out-09
                  :ARG1 p
                  :time (w / weekend
                        :mod (t / this))))
      :snt2 (g2 / get-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 p
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / amr-unknown))))"
fallacy of logic,fallacy of logic,"# ::snt MSK0 is like basic training . MSK0 ’s CAP ’s equivalent to Boot Camp . 
(m / multi-sentence
      :snt1 (r / resemble-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / train-01
                  :mod (b / basic)))
      :snt2 (e / equal-01
            :ARG1 (t3 / thing
                  :name (n2 / name
                        :op1 ""CAP"")
                  :poss (p / program
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :ARG2 (b2 / bootcamp)))"
ad hominem,ad hominem,"# ::snt We can not listen to John ’s opinion on global warming because he is a tree hugger . 
(p / possible-01
      :polarity -
      :ARG1 (l / listen-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :ARG1-of (o / opine-01
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""John""))
                        :topic (w2 / warm-01
                              :ARG1 (g / globe)))))
      :ARG1-of (c / cause-01
            :ARG0 (h / hug-01
                  :ARG0 p2
                  :ARG1 (t2 / tree))))"
faulty generalization,intentional,"# ::snt Kerry ’s plan will raise taxes by at least $ 900 billion his first hundred days . 
(r / raise-01
      :ARG0 (p / plan-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Kerry"")))
      :ARG1 (t / tax-01)
      :ARG2 (a / at-least
            :op1 (m / monetary-quantity
                  :quant 900000000000
                  :unit (d / dollar)))
      :duration (t2 / temporal-quantity
            :quant 100
            :unit (d2 / day)
            :ord (o / ordinal-entity
                  :value 1)
            :poss p2))"
circular reasoning,circular reasoning,"# ::snt Repeating the same thing as if you ’re proving something 
(r / repeat-01
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (s / same-01))
      :manner (p / prove-01
            :ARG0 y
            :ARG1 (s2 / something)))"
circular reasoning,ad populum,"# ::snt "" I 'm gon na get MSK0 because MSK1 has MSK0 and MSK1 're cool . "" 
(c / cause-01
      :ARG0 (a / and
            :op1 (h / have-03
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK1""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK0"")))
            :op2 (c2 / cool-04
                  :ARG1 t))
      :ARG1 (g / get-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 t2))"
ad hominem,fallacy of relevance,"# ::snt "" MSK0 has a MSK3 MSK2 record . "" "" Well , the United States has done plenty of MSK3 things , but we are n't a MSK3 country , so MSK0 is n't , either . "" - the President when confronted about MSK0 MSK2 abuses . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / record
                  :mod (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK3""))))
      :snt2 (c / contrast-01
            :ARG1 (d / do-02
                  :ARG0 (c2 / country
                        :name (n3 / name
                              :op1 ""United""
                              :op2 ""States""))
                  :ARG1 (t3 / thing
                        :quant (p / plenty)
                        :mod t2))
            :ARG2 (c3 / country
                  :polarity -
                  :mod t2
                  :domain c2
                  :ARG0-of (c4 / cause-01
                        :ARG1 (a / abuse-02
                              :ARG0 t
                              :ARG1 (t4 / thing
                                    :name (n4 / name
                                          :op1 ""MSK2""))))))
      :snt3 (s / say-01
            :ARG0 (p2 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG2 (p3 / president)))
            :ARG1 (c5 / confront-01
                  :ARG1 p2
                  :ARG2 a)))"
faulty generalization,circular reasoning,"# ::snt "" The Philippines is in poverty because of poor people . "" 
(c / cause-01
      :ARG0 (p / person
            :mod (p2 / poor))
      :ARG1 (b / be-located-at-91
            :ARG1 (c2 / country
                  :name (n / name
                        :op1 ""Philippines""))
            :ARG2 p2))"
fallacy of relevance,fallacy of extension,"# ::snt Thomas : "" MSK0 MSK1 are an effective way to meet potential MSK0 . With MSK2 's MSK3 work schedules nowadays , technology can help you make connections . "" MSK4 : "" MSK0 MSK1 are dangerous ! Most MSK2 are catfished , and MSK5 usually pretend to be so much better than MSK5 really are online . If MSK6 're so MSK3 , MSK6 wo n't have time for any of that , anyway . "" What fallacy is MSK4 leaning toward ? 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Thomas""))
            :ARG1 (w / way
                  :ARG0-of (e / effective-04
                        :ARG1 (m2 / meet-02
                              :ARG0 (y / you)
                              :ARG1 (p2 / product
                                    :name (n2 / name
                                          :op1 ""MSK0"")
                                    :mod (p3 / potential))))
                  :domain (p4 / product
                        :name (n3 / name
                              :op1 ""MSK1""))))
      :snt2 (s2 / say-01
            :ARG0 (p5 / product
                  :name (n4 / name
                        :op1 ""MSK4""))
            :ARG1 (a / and
                  :op1 (e2 / endanger-01
                        :mode expressive
                        :ARG0 (p6 / product
                              :name (n5 / name
                                    :op1 ""MSK0"")))
                  :op2 (c / catfish-00
                        :ARG1 (p7 / product
                              :name (n6 / name
                                    :op1 ""MSK2"")
                              :mod (m3 / most)))
                  :op3 (p8 / pretend-01
                        :ARG0 (p9 / product
                              :name (n7 / name
                                    :op1 ""MSK5""))
                        :ARG1 (h / have-degree-91
                              :ARG1 p9
                              :ARG2 (g / good-02
                                    :ARG1 p9)
                              :ARG3 (m4 / more
                                    :quant (m5 / much
                                          :degree (s3 / so)))
                              :ARG4 (p10 / product
                                    :name (n8 / name
                                          :op1 ""MSK3""))
                              :location (o / online))
                        :mod (u / usual))))
      :snt3 (h2 / have-condition-91
            :ARG1 (h3 / have-03
                  :polarity -
                  :ARG0 (p11 / product
                        :name (n9 / name
                              :op1 ""MSK6""))
                  :ARG1 (t / time
                        :purpose (t2 / that
                              :mod (a2 / any))))
            :ARG2 (l / lean-01
                  :ARG1 p11
                  :ARG2 (f / fallacy
                        :mod (a3 / amr-unknown)))
            :time (n10 / nowadays)))"
ad hominem,fallacy of relevance,"# ::snt "" My opponent claims that MSK0 is endangering our MSK1 waters . But have you thought about all of MSK0 in China ? Where they have to wear masks sometimes in the MSK1 ? That 's what we really need to worry about . "" 
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (c2 / claim-01
                  :ARG0 (p / person
                        :ARG0-of (o / oppose-01
                              :ARG1 (ii / i)))
                  :ARG1 (e / endanger-01
                        :ARG0 (s / small-molecule
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (w / water
                              :mod (p2 / product
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :poss (w2 / we)))))
      :snt2 (t / think-01
            :ARG0 (y / you)
            :ARG2 (s2 / small-molecule
                  :name (n3 / name
                        :op1 ""MSK0"")
                  :mod (a / all)
                  :location (c3 / country
                        :name (n4 / name
                              :op1 ""China"")
                        :location-of (o2 / obligate-01
                              :ARG1 (t2 / they)
                              :ARG2 (w3 / wear-01
                                    :ARG0 t2
                                    :ARG1 (m2 / mask)
                                    :time (s3 / sometimes)
                                    :location (p3 / product
                                          :name (n5 / name
                                                :op1 ""MSK1""))))))
            :polarity (a2 / amr-unknown))
      :snt3 (n6 / need-01
            :ARG0 (w4 / we)
            :ARG1 (w5 / worry-01
                  :ARG0 (t3 / that)
                  :ARG1 w4
                  :degree (r / really))))"
ad hominem,ad hominem,"# ::snt "" MSK0 're a Westener and MSK0 're an idiot . "" 
(a / and
      :op1 (p / person
            :mod (w / world-region
                  :name (n / name
                        :op1 ""West""))
            :domain (p2 / person
                  :name (n2 / name
                        :op1 ""MSN"")))
      :op2 (ii / idiot
            :domain p2))"
intentional,ad hominem,"# ::snt MSK0 are frauds who do n’t earn MSK0 salaries 
(d / defraud-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""MSK0""))
      :ARG0-of (e / earn-01
            :polarity -
            :ARG1 (s / salary
                  :mod p)))"
faulty generalization,faulty generalization,"# ::snt MSK0 did not do MSK0 chores so therefore all children are lazy . 
(c / cause-01
      :ARG0 (d / do-02
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (c2 / chore
                  :poss p))
      :ARG1 (l / lazy
            :domain (c3 / child
                  :mod (a / all))))"
ad hominem,ad hominem,"# ::snt Having come from the same political MSK0 , MSK1 is sure to communicate biased and untrue claims about MSK1 MSK0 - mates 
(s / sure-02
      :ARG1 (c / communicate-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (c2 / claim-01
                  :ARG1 (a / and
                        :op1 (b / bias-01
                              :ARG1 c2)
                        :op2 (t / true-01
                              :polarity -
                              :ARG1 c2))
                  :topic (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0-of ( have-rel-role-91 :ARG1 person_0 :ARG2 ( mate ) ) ) ) ) :ARG1-of ( cause-01 :ARG0 ( come-03 :ARG1 person_0 :ARG2 ( product_0 :name ( name_2 :op1 "")))))"
faulty generalization,faulty generalization,"# ::snt MSK0 would never buy a MSK1 . MSK0 father owned two of MSK2 and both of MSK2 had frequent transmission problems . MSK1 obviously break down all the time . 
(m / multi-sentence
      :snt1 (b / buy-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK1""))
            :time (e / ever))
      :snt2 (a / and
            :op1 (o / own-01
                  :ARG0 (p3 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (p4 / person
                                    :name (n3 / name
                                          :op1 ""MSK0""))
                              :ARG2 (f / father)))
                  :ARG1 (p5 / product
                        :quant 2
                        :name (n4 / name
                              :op1 ""MSK2"")))
            :op2 (h2 / have-03
                  :ARG0 (p6 / product
                        :name (n5 / name
                              :op1 ""MSK2"")
                        :mod (b2 / both))
                  :ARG1 (p7 / problem
                        :topic (t / transmit-01)
                        :ARG1-of (f2 / frequent-02))))
      :snt3 (b3 / break-down-12
            :ARG1 (p8 / product
                  :name (n6 / name
                        :op1 ""MSK1""))
            :ARG1-of (o2 / obvious-01)
            :time (t2 / time
                  :mod (a2 / all))))"
fallacy of credibility,circular reasoning,"# ::snt MSK3 MSK0 must accept the traditions of the men of old time who affirm themselves to be the offspring of MSK1 - that is what MSK2 say - and MSK2 must surely have known MSK2 own ancestors . How can MSK0 doubt the word of the children of MSK1 ? MSK3 - Plato , Timaeus 
(m / multi-sentence
      :snt1 (a / and
            :op1 (o / obligate-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK3""))
                  :ARG2 (a2 / accept-01
                        :ARG0 p
                        :ARG1 (t / tradition
                              :poss (m2 / man
                                    :time (t2 / time
                                          :mod (o2 / old))
                                    :ARG0-of (a3 / affirm-01
                                          :ARG1 (o3 / offspring
                                                :domain m2
                                                :poss (p2 / person
                                                      :name (n2 / name
                                                            :op1 ""MSK1"")))
                                          :ARG1-of (s / say-01
                                                :ARG0 (p3 / person
                                                      :name (n3 / name
                                                            :op1 ""MSK2""))))))))
            :op2 (o4 / obligate-01
                  :ARG1 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :ARG2 (k / know-01
                        :ARG0 p4
                        :ARG1 (p5 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 p4
                                    :ARG2 (a4 / ancestor)))
                        :ARG1-of (s2 / sure-02))))
      :snt2 (p6 / possible-01
            :ARG1 (d / doubt-01
                  :ARG0 (p7 / person
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG1 (w / word-01
                        :ARG0 (p8 / person
                              :ARG0-of h
                              :ARG1 (p9 / person
                                    :name (n6 / name
                                          :op1 ""MSK1""))
                              :ARG2 (c / child)))))
      :manner (a5 / amr-unknown)
      :snt3 (w2 / work-of-art
            :name (n7 / name
                  :op1 ""Timaeus"")
            :source (p10 / person
                  :name (n8 / name
                        :op1 ""Plato""))))"
intentional,circular reasoning,"# ::snt Has your psychology department stopped teaching that ineffective approach to therapy yet ? 
(s / stop-01
      :ARG0 (d / department
            :topic (p / psychology)
            :poss (y / you))
      :ARG1 (t / teach-01
            :ARG0 d
            :ARG1 (a / approach-02
                  :ARG1 (t2 / therapy)
                  :ARG0-of (e / effective-04
                        :polarity -)
                  :mod (t3 / that)))
      :polarity (a2 / amr-unknown)
      :time (y2 / yet))"
fallacy of credibility,fallacy of credibility,"# ::snt MSK0 : Hey , did MSK0 hear MSK1 have a new operating system out now ? MSK2 is better than anything else out there because MSK1 just released MSK2 ! MSK3 : What ’s MSK2 called ? MSK0 : Windows Vista ! MSK3 : Sounds wonderful ! I ca n’t wait until MSK4 MSK0 install MSK2 on all MSK4 computers ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (h / hear-01
                  :ARG0 p
                  :ARG1 (h2 / have-03
                        :ARG0 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (s2 / system
                              :ARG0-of (o / operate-01)
                              :ARG1-of (n3 / new-01))
                        :time (n4 / now))
                  :polarity (a / amr-unknown)
                  :mod (h3 / hey
                        :mode expressive)))
      :snt2 (c / cause-01
            :ARG0 (r / release-01
                  :ARG0 (p3 / product
                        :name (n5 / name
                              :op1 ""MSK1""))
                  :ARG1 (p4 / product
                        :name (n6 / name
                              :op1 ""MSK2""))
                  :time (j / just))
            :ARG1 (g / good-02
                  :ARG1 (p5 / product
                        :name (n7 / name
                              :op1 ""MSK2""))
                  :ARG2-of (h4 / have-degree-91
                        :ARG1 p5
                        :ARG3 (m2 / more)
                        :ARG4 (a2 / anything
                              :mod (e / else)
                              :location (o2 / out-there)))))
      :snt3 (c2 / call-01
            :ARG1 (p6 / product
                  :name (n8 / name
                        :op1 ""MSK3""))
            :ARG2 (p7 / product
                  :name (n9 / name
                        :op1 ""Windows""
                        :op2 ""Vista""))
            :polarity (a3 / amr-unknown))
      :snt4 (s3 / sound-01
            :ARG1 (p8 / product
                  :name (n10 / name
                        :op1 ""MSK3""))
            :ARG2 (w / wonderful))
      :snt5 (p9 / possible-01
            :polarity -
            :ARG1 (w2 / wait-01
                  :ARG1 (ii / i)
                  :ARG2 (ii2 / install-01
                        :ARG0 (p10 / person
                              :name (n11 / name
                                    :op1 ""MSK4""))
                        :ARG1 (p11 / product
                              :name (n12 / name
                                    :op1 ""MSK2""))
                        :ARG2 (c3 / computer
                              :mod (a4 / all)
                              :mod (p12 / product
                                    :name (n13 / name
                                          :op1 ""MSK4"")))))))"
circular reasoning,appeal to emotion,"# ::snt MSK0 takes MSK1 to MSK2 in God just like MSK0 takes MSK1 to MSK2 in MSK3 -- but at least MSK3 is based on a creature that actually exists ! 
(c / contrast-01
      :ARG1 (t / take-01
            :ARG0 (t2 / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t3 / thing
                  :mod 1
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG3 (t4 / thing
                  :mod 2
                  :name (n3 / name
                        :op1 ""MSK2""))
            :location (t5 / thing
                  :name (n4 / name
                        :op1 ""God""))
            :ARG1-of (r / resemble-01
                  :ARG2 (t6 / take-01
                        :ARG0 t2
                        :ARG1 t3
                        :ARG3 t4
                        :location (t7 / thing
                              :name (n5 / name
                                    :op1 ""MSK3"")))))
      :ARG2 (b / base-02
            :ARG1 t5
            :ARG2 (c2 / creature
                  :ARG1-of (e / exist-01
                        :ARG1-of (a / actual-02)))
            :mod (a2 / at-least)))"
fallacy of relevance,fallacy of relevance,"# ::snt When asked about MSK0 comments MSK0 made on MSK0 tape with Billy Bush , MSK0 responded , MSK4 MSK1 ’s locker room talk , and MSK1 ’s one of those things . MSK2 will knock the hell out of MSK3 . We ’re going to defeat MSK3 . MSK3 happened a number of years ago in a vacuum that was left because of bad judgment . And MSK2 will tell you , MSK2 will take care of MSK3 . MSK4 
(m / multi-sentence
      :snt1 (r / respond-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (a / and
                  :op1 (t / talk-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :location (r2 / room
                              :mod (l / locker)))
                  :op2 (ii / include-91
                        :ARG1 p2
                        :ARG2 (t2 / thing)))
            :time (a2 / ask-01
                  :ARG1 (t3 / thing
                        :ARG1-of (c / comment-01
                              :ARG0 p
                              :medium (t4 / tape-02
                                    :ARG1 p
                                    :ARG2 (p3 / person
                                          :name (n3 / name
                                                :op1 ""Billy""
                                                :op2 ""Bush"")))))
                  :ARG2 p))
      :snt2 (a3 / and
            :op2 (t5 / tell-01
                  :ARG0 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :ARG1 (a4 / and
                        :op1 (k / knock-out-03
                              :ARG0 p4
                              :ARG1 (p5 / person
                                    :name (n5 / name
                                          :op1 ""MSK3""))
                              :degree (h / hell))
                        :op2 (c2 / care-03
                              :ARG0 p4
                              :ARG1 p5))
                  :ARG2 (y / you))
            :snt3 (d / defeat-01
                  :ARG0 (w / we)
                  :ARG1 (p6 / person
                        :name (n6 / name
                              :op1 ""MSK3"")))
            :snt4 (e / event
                  :name (n7 / name
                        :op1 ""MSK3"")
                  :time (b / before
                        :op1 (n8 / now)
                        :quant (n9 / number
                              :op1 (t6 / temporal-quantity
                                    :quant 1
                                    :unit (y2 / year))))
                  :location (v / vacuum
                        :ARG1-of (l2 / leave-12
                              :ARG0 (j / judge-01
                                    :ARG1-of (b2 / bad-02)))))))"
faulty generalization,false causality,"# ::snt "" Truly helps cramming for a MSK0 : MSK1 psychological MSK0 is crowded and MSK1 have an A. "" 
(h / help-01
      :ARG1 (c / cram-01
            :ARG2 (p / product
                  :name (n / name
                        :op1 ""MSK0"")))
      :ARG1-of (t / true-01)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / crowd-01
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1"")
                              :mod (p3 / psychology)))
                  :op2 (h2 / have-03
                        :ARG0 (p4 / product
                              :name (n3 / name
                                    :op1 ""MSK1""))
                        :ARG1 (s / string-entity
                              :value ""A"")))))"
ad populum,ad populum,"# ::snt assumes that if many people act or believe a certain MSK0 , it must be the right MSK0 
(a / assume-02
      :ARG1 (o / obligate-01
            :ARG1 (p / person
                  :ARG1-of (r / right-03)
                  :domain (p2 / person
                        :name (n / name
                              :op1 ""MSK0"")
                        :mod (c / certain)))
            :condition (o2 / or
                  :op1 (a2 / act-01
                        :ARG0 (p3 / person
                              :quant (m / many))
                        :ARG1 p2)
                  :op2 (b / believe-01
                        :ARG0 p3
                        :ARG1 p2))))"
faulty generalization,faulty generalization,"# ::snt We should go inside ; the last time the clouds were that dark , there was a tornado . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (g / go-02
                  :ARG0 (w / we)
                  :ARG4 (ii / inside)))
      :snt2 (t / tornado
            :time (d / darken-01
                  :ARG1 (c / cloud)
                  :mod (l / last)
                  :degree (t2 / that))))"
ad populum,ad populum,"# ::snt Everyone is / is not doing MSK0 ! MSK0 must / must not be a good thing ! 
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (e / everyone)
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (o / obligate-01
            :ARG1 (s / slash
                  :op1 (t2 / thing
                        :ARG1-of (g / good-02)
                        :domain (t3 / thing
                              :name n
                              :op1 ""MSK0"")))
            :op2 (t4 / thing
                  :polarity -
                  :domain t3)))"
fallacy of credibility,fallacy of credibility,"# ::snt An ad claims that MSK0 out of MSK0 real estate agents reccommend moving to Sunnyville , California . 
(c / claim-01
      :ARG0 (a / advertise-01)
      :ARG1 (r / recommend-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c2 / company
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (a2 / agent
                              :mod (r2 / real-estate))))
            :ARG1 (m / move-01
                  :ARG2 (c3 / city
                        :name (n2 / name
                              :op1 ""Sunnyville"")
                        :location (s / state
                              :name (n3 / name
                                    :op1 ""California""))))))"
intentional,intentional,"# ::snt Have MSK0 stopped MSK1 on tests ? To MSK2 yes means MSK0 MSK1 before . To MSK2 no means MSK0 continue to MSK1 . 
(m / multi-sentence
      :snt1 (s / stop-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :time (t3 / test-01)
            :polarity (a / amr-unknown))
      :snt2 (m2 / mean-01
            :ARG1 (y / yes)
            :ARG2 (t4 / thing
                  :name (n3 / name
                        :op1 ""MSK0"")
                  :time (b / before))
            :polarity (a2 / amr-unknown))
      :snt3 (m3 / mean-01
            :ARG1 (t5 / thing
                  :polarity -
                  :name (n4 / name
                        :op1 ""MSK2""))
            :ARG2 (c / continue-01
                  :ARG0 (t6 / thing
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG4 t2)
            :polarity (a3 / amr-unknown)))"
ad hominem,ad hominem,"# ::snt "" You 're too ugly to be class president ! "" 
(h / have-degree-91
      :mode expressive
      :ARG1 (y / you)
      :ARG2 (u / ugly)
      :ARG3 (t / too)
      :ARG6 (h2 / have-org-role-91
            :ARG0 y
            :ARG1 (c / class)
            :ARG2 (p / president)))"
intentional,intentional,"# ::snt Why should merely cracking down on terrorism help to stop it , when that method has n't worked in any other country ? 
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r / recommend-01
            :ARG1 (h / help-01
                  :ARG0 (c2 / crack-down-06
                        :ARG1 (t / terrorism)
                        :mod (m / mere))
                  :ARG1 (s / stop-01
                        :ARG1 t)))
      :condition (w / work-09
            :polarity -
            :ARG1 c2
            :location (c3 / country
                  :mod (o / other)
                  :mod (a2 / any))))"
ad populum,ad populum,"# ::snt 40 million people ca n't be wrong ! Buy the new Iphone XIV today ! 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (w / wrong-04
                  :ARG1 (p2 / person
                        :quant 40000000)))
      :snt2 (b / buy-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p3 / product
                  :name (n / name
                        :op1 ""Iphone""
                        :op2 ""IVIV"")
                  :ARG1-of (n2 / new-01))
            :time (t / today)))"
appeal to emotion,appeal to emotion,"# ::snt If MSK0 love MSK0 family , MSK0 'll buy this new stealth security system . 
(h / have-condition-91
      :ARG1 (b / buy-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (s / system
                  :ARG0-of (s2 / secure-02)
                  :mod (s3 / stealth)
                  :ARG1-of (n2 / new-01)
                  :mod (t / this)))
      :ARG2 (l / love-01
            :ARG0 p
            :ARG1 (f / family
                  :mod p)))"
appeal to emotion,intentional,"# ::snt How many school shootings should MSK0 tolerate before MSK0 change the gun laws ? 
(r / recommend-01
      :ARG1 (t / tolerate-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (s / shoot-02
                  :location (s2 / school)
                  :quant (a / amr-unknown))
            :time (b / before
                  :op1 (c / change-01
                        :ARG0 p
                        :ARG1 (l / law
                              :topic (g / gun))))))"
faulty generalization,ad hominem,"# ::snt MSK0 said that MSK0 was proud of the MSK1 who participated in this year 's Special Olympics . Those MSK1 are a bunch of losers . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / pride-01
                  :ARG0 p
                  :ARG1 (p3 / person
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :ARG0-of (p4 / participate-01
                              :ARG1 (g / game
                                    :name (n3 / name
                                          :op1 ""Special""
                                          :op2 ""Olympics"")
                                    :time (y / year
                                          :mod (t / this)))))))
      :snt2 (p5 / person
            :ARG0-of (l / lose-03)
            :quant (b / bunch)
            :domain (p6 / person
                  :name (n4 / name
                        :op1 ""MSK1"")
                  :mod (t2 / that))))"
fallacy of credibility,fallacy of credibility,"# ::snt Our competitors use unhealthy MSK0 substitutes and artificial MSK0 . But Rev - Up Energy Drink contains one hundred percent real cane MSK0 to fuel your body better . 
(m / multi-sentence
      :snt1 (u / use-01
            :ARG0 (c / company
                  :ARG0-of (c2 / compete-02
                        :ARG1 (w / we)))
            :ARG1 (a / and
                  :op1 (s / small-molecule
                        :name (n / name
                              :op1 ""MSK0"")
                        :ARG1-of (s2 / substitute-01)
                        :mod (h / healthy
                              :polarity -))
                  :op2 (s3 / small-molecule
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :mod (a2 / artificial))))
      :snt2 (c3 / contrast-01
            :ARG2 (c4 / contain-01
                  :ARG0 (p / product
                        :name (n3 / name
                              :op1 ""Rev-Up""
                              :op2 ""Energy""
                              :op3 ""Drink""))
                  :ARG1 (s4 / small-molecule
                        :name (n4 / name
                              :op1 ""MSK0"")
                        :consist-of (c5 / cane)
                        :ARG1-of (r / real-04)
                        :quant (p2 / percentage-entity
                              :value 100))
                  :purpose (f / fuel-01
                        :ARG0 p
                        :ARG1 (b / body
                              :poss (y / you))
                        :manner (g / good-02
                              :ARG2-of (h2 / have-degree-91
                                    :ARG1 f
                                    :ARG3 (m2 / more)))))))"
fallacy of logic,fallacy of logic,"# ::snt It ’s possible to MSK0 the class without MSK2 . Therefore , MSK3 will MSK0 even if MSK3 do n’t MSK2 . 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0"")
                  :prep-without (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK2"")))
            :mod (c / class))
      :snt2 (c2 / cause-01
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK3"")
                  :prep-to c)
            :concession (e / even-if
                  :op1 (t4 / thing
                        :polarity -
                        :name (n4 / name
                              :op1 ""MSK2"")))))"
intentional,circular reasoning,"# ::snt "" MSK0 should n't have flunked the test because MSK0 never get F 's "" is an example of 
(e / exemplify-01
      :ARG0 (r / recommend-01
            :ARG1 (f / flunk-01
                  :polarity -
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t / test-01))
            :ARG1-of (c / cause-01
                  :ARG0 (g / get-01
                        :polarity -
                        :ARG0 p
                        :ARG1 (s / score-on-scale-91
                              :ARG1 ""F"")
                        :time (e2 / ever)))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 do n't take MSK1 , then MSK0 wo n't do well on the MSK2 . If MSK0 do n't do well on the AP MSK2 , then MSK0 wo n't get into a MSK4 . If MSK0 ca n't get into a MSK4 , then MSK0 'll never get MSK5 . If MSK0 ca n't get MSK5 , then MSK0 'm going to have to live in MSK0 parents ' basement forever . Guess MSK0 'll sign up for MSK1 ... 
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (d / do-02
                  :polarity -
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (w / well)
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK2"")))
            :ARG2 (t / take-01
                  :polarity -
                  :ARG0 p
                  :ARG1 (p3 / product
                        :name (n3 / name
                              :op1 ""MSK1""))))
      :snt2 (h2 / have-condition-91
            :ARG1 (o / obligate-01
                  :ARG1 p
                  :ARG2 (l / live-01
                        :ARG0 p
                        :location (b / basement
                              :poss (p4 / person
                                    :ARG0-of (h3 / have-rel-role-91
                                          :ARG1 p
                                          :ARG2 (p5 / parent))))
                        :duration (f / forever)))
            :ARG2 (d2 / do-02
                  :polarity -
                  :ARG0 p
                  :ARG1 (w2 / well)
                  :ARG2 (p6 / product
                        :name (n4 / name
                              :op1 ""MSK4""))))
      :snt3 (g / guess-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s / sign-up-03
                  :ARG1 (p7 / person
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG3 (p8 / product
                        :name (n6 / name
                              :op1 ""MSK1""))
                  :time (e / ever)))
      :snt4 (p9 / possible-01
            :polarity -
            :ARG1 (g2 / get-01
                  :ARG0 p7
                  :ARG1 (p10 / product
                        :name (n7 / name
                              :op1 ""MSK4"")))))"
appeal to emotion,appeal to emotion,"# ::snt MSK0 ca n’t take home a B in this course . MSK0 parents will be angry with MSK0 . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (t / take-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (s / score-on-scale-91
                        :ARG1 ""B"")
                  :ARG3 (h / home)
                  :ARG5 (c / course
                        :mod (t2 / this))))
      :snt2 (a / anger-01
            :ARG0 (p3 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p2
                        :ARG2 (p4 / parent)))
            :ARG1 p2))"
fallacy of extension,fallacy of relevance,"# ::snt MSK0 do n't MSK1 that there should be marriage among homosexuals . Anyway , MSK2 on MSK3 people are high . MSK0 MSK1 that MSK2 on the MSK3 are just ridiculous . 
(m / multi-sentence
      :snt1 (d / do-02
            :polarity -
            :ARG0 (p / person
                  :mod (v / value-interval
                        :op1 0
                        :op2 1))
            :ARG1 (r / recommend-01
                  :ARG1 (m2 / marry-01
                        :ARG1 (h / homosexual))))
      :snt2 (h2 / high-02
            :ARG1 (t / thing
                  :mod (v2 / value-interval
                        :op1 2
                        :op2 3)
                  :topic (p2 / person
                        :mod (v3 / variable
                              :name (n / name
                                    :op1 ""SSK3""))))
            :mod (a / anyway))
      :snt3 (r2 / ridiculous-02
            :ARG1 (t2 / thing
                  :mod (v4 / value-interval
                        :op1 0
                        :op2 1)
                  :topic (p3 / person
                        :mod (v5 / variable
                              :name (n2 / name
                                    :op1 ""SSK3""))))
            :mod (j / just)))"
fallacy of relevance,circular reasoning,"# ::snt "" MSK0 need to fix MSK0 broken judicial system by electing new people . "" This logical fallacy is called ... 
(c / call-01
      :ARG1 (f / fallacy
            :mod (l / logical)
            :mod (t / this))
      :ARG2 (n / need-01
            :ARG0 (p / political-party
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (f2 / fix-02
                  :ARG0 p
                  :ARG1 (s / system
                        :mod (j / judiciary)
                        :ARG1-of (b / break-01)
                        :poss p)
                  :manner (e / elect-01
                        :ARG0 p
                        :ARG1 (p2 / person
                              :ARG1-of (n3 / new-01))))))"
intentional,intentional,"# ::snt MSK0 : MSK1 am a MSK2 being . MSK1 am not a cyborg from the future here to destroy humanity . Fred : Prove that you are MSK2 ! MSK3 do n't pass out when MSK3 lose a lot of blood . Here 's a knife . MSK0 : Get to MSK4 , Freddie . And no more SYFY channel before MSK4 ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / being
                  :mod (p2 / product
                        :name (n2 / name
                              :op1 ""MSK2""))
                  :domain (p3 / product
                        :name (n3 / name
                              :op1 ""MSK1""))))
      :snt2 (s2 / say-01
            :ARG0 (ii / i)
            :ARG1 (p4 / prove-01
                  :mode imperative
                  :ARG0 (p5 / person
                        :name (n4 / name
                              :op1 ""Fred""))
                  :ARG1 (p6 / person
                        :name (n5 / name
                              :op1 ""MSK2"")
                        :domain p5))
            :ARG2 p5)
      :snt3 (p7 / pass-out-11
            :polarity -
            :ARG0 (p8 / person
                  :name (n6 / name
                        :op1 ""MSK3""))
            :time (l / lose-02
                  :ARG0 p8
                  :ARG1 (b2 / blood
                        :quant (l2 / lot))))
      :snt4 (k / knife
            :location (h / here))
      :snt5 (g / get-05
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p9 / person
                  :name (n7 / name
                        :op1 ""Fred""))
            :ARG2 (p10 / product
                  :name (n8 / name
                        :op1 ""MSK4""))
            :time (b3 / before
                  :op1 (p11 / product
                        :name (n9 / name
                              :op1 ""MSK5""))))
      :snt6 (c / channel
            :polarity -
            :name (n10 / name
                  :op1 ""SYFY"")
            :mod (m2 / more)))"
faulty generalization,faulty generalization,"# ::snt If MSK0 do n't study , MSK0 'll fail MSK0 test . Then MSK0 will do poorly in the class and MSK0 GPA will fall . MSK0 wo n't get into a good college , so MSK0 'll never get a decent job and MSK0 'll end up poor and homeless . 
(m / multi-sentence
      :snt1 (f / fail-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t / test
                  :name (n2 / name
                        :op1 ""MSK0""))
            :condition (s / study-01
                  :polarity -
                  :ARG0 p))
      :snt2 (a / and
            :op1 (d / do-02
                  :ARG0 (p2 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG1 (p3 / poor)
                  :ARG2 (c / class)
                  :time (t2 / then))
            :op2 (f2 / fall-01
                  :ARG1 (g / grade-point-average
                        :value 0
                        :mod p2))
            :ARG1-of (c2 / cause-01
                  :ARG0 (g2 / get-05
                        :polarity -
                        :ARG0 p2
                        :ARG1 (c3 / college
                              :ARG1-of (g3 / good-02))
                        :time (e / ever)
                        :ARG0-of c2
                        :ARG1 (a2 / and
                              :op1 (g4 / get-05
                                    :polarity -
                                    :ARG0 p2
                                    :ARG1 (j / job
                                          :mod (d2 / decent)))
                              :op2 (e2 / end-up-03
                                    :ARG1 p2
                                    :ARG2 (a3 / and
                                          :op1 p3)
                                    :op2 (h / homeless)))))))"
fallacy of credibility,faulty generalization,"# ::snt MSK0 know for a fact that MSK1 exist . MSK0 friend , who is a very reliable person , has seen MSK1 on many occasions . 
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (e / exist-01
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :mod (f / for-a-fact))
      :snt2 (s / see-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (f2 / friend))
                  :ARG1-of (r / rely-01
                        :ARG1-of (p4 / possible-01
                              :degree (v / very))))
            :ARG1 p2
            :frequency (o / occasion-02
                  :quant (m2 / many))))"
false dilemma,false dilemma,"# ::snt If MSK0 do n't say the Pledge of Allegiance , then MSK0 must be a traitor . 
(o / obligate-01
      :ARG1 (b / betray-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :condition (s / say-01
            :polarity -
            :ARG0 p
            :ARG1 (t / thing
                  :name (n2 / name
                        :op1 ""Pledge""
                        :op2 ""of""
                        :op3 ""Allegiance""))))"
intentional,fallacy of logic,"# ::snt Not believing in the Tooth Fairy is like denying that the Titanic MSK0 because eye - witnesses did not agree if MSK1 broke in half before or after MSK1 MSK0 . 
(r / resemble-01
      :ARG1 (b / believe-01
            :polarity -
            :ARG1 (f / fairy
                  :mod (t / tooth)))
      :ARG2 (d / deny-01
            :ARG1 (b2 / break-in-08
                  :ARG1 (s / ship
                        :name (n / name
                              :op1 ""MSK1""))
                  :ARG2 (h / half)
                  :time (o / or
                        :op1 (b3 / before
                              :op1 (s2 / ship
                                    :name (n2 / name
                                          :op1 ""MSK1"")))
                        :op2 (a / after
                              :op1 s2)))
            :ARG1-of (c / cause-01
                  :ARG0 (a2 / agree-01
                        :polarity -
                        :ARG0 (p / person
                              :ARG0-of (w / witness-01
                                    :manner (e / eye)))
                        :ARG1 (b4 / break-in-08
                              :ARG1 s
                              :ARG2 h)))))"
faulty generalization,faulty generalization,"# ::snt All of MSK0 MSK1 - MSK2 friends are MSK4 . Therefore , all MSK1 - MSK2 people must be MSK4 . This assumption from MSK0 experience is an example of 
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MSK4"")
            :domain (a / and
                  :op1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :mod (a2 / all))
                  :op2 (p3 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 p2
                              :ARG2 (f / friend))
                        :mod (a3 / all)
                        :mod (p4 / product
                              :name (n3 / name
                                    :op1 ""MSK1"")))
                  :op3 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK2"")
                        :mod (a4 / all))))
      :snt2 (ii / infer-01
            :ARG1 (h2 / have-mod-91
                  :ARG1 (a5 / and
                        :op1 (p6 / person
                              :name (n5 / name
                                    :op1 ""MSK1"")
                              :mod (a6 / all))
                        :op2 (p7 / person
                              :name (n6 / name
                                    :op1 ""MSK2"")
                              :mod (a7 / all)))
                  :ARG2 (p8 / person
                        :name (n7 / name
                              :op1 ""MSK4""))))
      :snt3 (e / exemplify-01
            :ARG0 (a8 / assume-02
                  :source (t / thing
                        :ARG1-of (e2 / experience-01
                              :ARG0 (p9 / person
                                    :name (n8 / name
                                          :op1 ""MSK0""))))
                  :mod (t2 / this))
            :ARG1 t))"
ad hominem,ad hominem,"# ::snt MSK0 is running for class president . In MSK0 campaign speech MSK0 says , "" MSK0 opponent does not deserve to win . MSK0 is a smoker and MSK0 cheated on MSK0 boyfriend last year . "" What fallacy has MSK0 committed ? http://www.funtrivia.com 
(m / multi-sentence
      :snt1 (r / run-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / president
                  :mod (c / class)))
      :snt2 (s / say-01
            :ARG0 p
            :ARG1 (d / deserve-01
                  :polarity -
                  :ARG0 (p3 / person
                        :ARG0-of (o / oppose-01
                              :ARG1 p))
                  :ARG1 (w / win-01
                        :ARG0 p3))
            :subevent-of (s2 / speech
                  :mod (c2 / campaign-01
                        :ARG0 p)))
      :snt3 (a / and
            :op1 (p4 / person
                  :ARG0-of (s3 / smoke-02)
                  :domain (p5 / person
                        :name n
                        :op1 ""MSK0"")))
      :op2 (c3 / cheat-03
            :ARG0 p5
            :ARG1 (p6 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p5
                        :ARG2 (b / boyfriend)))
            :time (y / year
                  :mod (l / last)))
      :snt4 (c4 / commit-02
            :ARG0 p5
            :ARG1 (f / fallacy
                  :mod (a2 / amr-unknown))
            :medium (u / url-entity
                  :value ""http://www.funtrivia.com"")))"
false dilemma,false dilemma,"# ::snt MSK0 is trying to MSK1 money for MSK0 . In MSK0 address to the board of trustees , MSK0 says , "" We must MSK1 tuition to cover the cost of new books . Otherwise coref1 will be forced to close . "" Of what fallacy is this an example ? 
(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (m2 / money-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (s / say-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (o / obligate-01
                  :ARG1 (w / we)
                  :ARG2 (t2 / tuition
                        :mod (p4 / product
                              :name (n4 / name
                                    :op1 ""MSK1"")))
                  :purpose (c / cover-01
                        :ARG0 w
                        :ARG1 (c2 / cost-01
                              :ARG1 (b / book
                                    :ARG1-of (n5 / new-01)))
                        :ARG2 p4))
            :subevent-of (a / address-03
                  :ARG0 p3
                  :ARG2 (b2 / board
                        :consist-of (t3 / trustees))))
      :snt3 (f / force-01
            :ARG1 (c3 / coref1)
            :ARG2 (c4 / close-01
                  :ARG1 c3)
            :condition (h / have-polarity-91
                  :ARG1 o
                  :ARG2 -))
      :snt4 (f2 / fallacy
            :domain (t4 / this)
            :mod (a2 / amr-unknown)))"
intentional,intentional,"# ::snt MSK0 : MSK1 have tiny , invisible unicorns living in MSK1 anus . MSK2 : How do MSK2 figure ? MSK0 : Can MSK2 prove that MSK1 do n't ? MSK2 : No . MSK0 : Then MSK1 do . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK1"")
                  :part (a / anus))
            :ARG1 (u / unicorn
                  :mod (t2 / tiny)
                  :ARG1-of (s / see-01
                        :ARG1-of (p / possible-01
                              :polarity -))
                  :ARG0-of (l / live-01
                        :location a)))
      :snt2 (f / figure-06
            :ARG0 (t3 / thing
                  :name (n2 / name
                        :op1 ""MSK2"")
                  :part a)
            :ARG1 (a2 / amr-unknown))
      :snt3 (p2 / possible-01
            :ARG1 (p3 / prove-01
                  :ARG0 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :part a)
                  :ARG1 (d / do-02
                        :polarity -
                        :ARG0 (t5 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""))))
            :polarity (a3 / amr-unknown))
      :snt4 (n5 / no)
      :snt5 (h2 / have-condition-91
            :ARG1 (d2 / do-02
                  :ARG0 (t6 / thing
                        :name (n6 / name
                              :op1 ""MSK1"")))
            :ARG2 (t7 / then)))"
ad hominem,ad hominem,"# ::snt How can MSK0 tell MSK1 MSK1 should MSK2 to lose weight ? All MSK0 do is sit behind a desk all day . MSK0 've never seen MSK0 do a lick of MSK2 . Identify the logical fallacy commited in this argument . 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (t / tell-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r / recommend-01
                        :ARG0 p2
                        :ARG1 (l / lose-01
                              :ARG0 (p3 / person
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG1 (w / weight))
                        :ARG2 p3)
                  :ARG2 p3)
            :manner (a / amr-unknown))
      :snt2 (t2 / thing
            :mod (a2 / all)
            :ARG1-of (d / do-02
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :domain (s / sit-01
                  :ARG1 p4
                  :ARG2 (b / behind
                        :op1 (d2 / desk))
                  :duration (d3 / day
                        :mod a2)))
      :snt3 (s2 / see-01
            :polarity -
            :ARG0 p2
            :ARG1 d
            :ARG0 p4
            :ARG1 (l2 / lick-01
                  :ARG0 p4
                  :ARG1 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK2""))))
      :time (e / ever)
      :snt4 (ii / identify-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f / fallacy
                  :mod (l3 / logic)
                  :ARG1-of (c / commit-02
                        :ARG0 t2
                        :ARG1-of (a3 / argue-01)
                        :mod (t3 / this)))))"
faulty generalization,ad populum,"# ::snt MSK0 am MSK1 for Smith for President . MSK0 whole family is Democrat , so MSK0 'll be MSK1 that way , too . 
(c / cause-01
      :ARG0 (p / political-party
            :name (n / name
                  :op1 ""Democrat"")
            :domain (f / family
                  :mod (w / whole)
                  :poss (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0""))))
      :ARG1 (p3 / person
            :name (n3 / name
                  :op1 ""MSK1"")
            :domain p2
            :prep-for (p4 / person
                  :name (n4 / name
                        :op1 ""Smith"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (p5 / president)))
            :mod (t / too)))"
intentional,fallacy of relevance,"# ::snt MSK0 must eliminate affirmative action . MSK0 ca n’t rely on laws to end racial prejudice . 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (l / law
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (e / eliminate-01
                  :ARG0 l
                  :ARG1 (a / affirmative-action)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (r / rely-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (e2 / end-01
                        :ARG0 l2
                        :ARG1 (p2 / prejudice-01
                              :ARG1-of (c / cause-01
                                    :ARG0 (r2 / race)))))))"
faulty generalization,intentional,"# ::snt Your honor , while my son may have made a bad decision that night while under the influence of alcohol , MSK0 should n't affect the rest of MSK1 life . MSK0 was just one mistake . MSK1 's on the varsity swim team . 
(m / multi-sentence
      :snt1 (h / honor-01
            :ARG1 (y / you))
      :snt2 (r / recommend-01
            :ARG1 (a / affect-01
                  :polarity -
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (r2 / rest
                        :part-of (l / life
                              :poss (p / person
                                    :ARG0-of (h2 / have-rel-role-91
                                          :ARG1 (ii / i)
                                          :ARG2 (s / son)))))
                  :concession (p2 / possible-01
                        :ARG1 (d / decide-01
                              :ARG0 p
                              :ARG1 (t2 / thing
                                    :ARG1-of (b / bad-07))
                              :time (d2 / date-entity
                                    :dayperiod (n2 / night)
                                    :mod (t3 / that))
                              :manner (ii2 / influence-01
                                    :ARG0 (a2 / alcohol)
                                    :ARG1 p)))))
      :snt3 (m2 / mistake-02
            :quant 1
            :ARG1 (t4 / thing
                  :name (n3 / name
                        :op1 ""MSK0""))
            :mod (j / just))
      :snt4 (h3 / have-org-role-91
            :ARG0 (p3 / person
                  :ARG0-of (h4 / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (d3 / daughter
                              :mod 1)))
            :ARG1 (t5 / team
                  :mod (v / varsity)
                  :mod (s2 / swim))))"
fallacy of credibility,fallacy of credibility,"# ::snt There is definitely a link between MSK0 and drinking energy drinks . I read about MSK0 on Wikipedia . 
(m / multi-sentence
      :snt1 (l / link-01
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (d / drink-01
                  :ARG1 (e / energy-drink))
            :mod (d2 / definite))
      :snt2 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (p2 / publication
                  :name (n2 / name
                        :op1 ""Wikipedia""))
            :topic p))"
false dilemma,false dilemma,"# ::snt When MSK0 falsely claims or assumes an "" either / or "" situation , when in fact there is at least one additional logically valid option , MSK0 is called ... 
(c / call-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :time (o / or
            :op1 (c2 / claim-01
                  :ARG0 p
                  :ARG1 (s / situation
                        :mod (o2 / or
                              :op1 (e / either)
                              :op2 (o3 / or
                                    :op1 (e2 / et-cetera))))
                  :manner (f / false))
            :op2 (a / assume-02
                  :ARG0 p
                  :ARG1 s
                  :manner f)
            :op3 (o4 / option
                  :quant (a2 / at-least
                        :op1 1)
                  :ARG1-of (v / valid-02
                        :manner (l / logic))
                  :mod (a3 / additional)
                  :mod (ii / in-fact))))"
circular reasoning,fallacy of credibility,"# ::snt MSK0 is all natural ; therefore , MSK0 is good for you . 
(c / cause-01
      :ARG0 (n / natural-03
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""MSK0""))
            :degree (a / all))
      :ARG1 (g / good-04
            :ARG1 p
            :ARG2 (y / you)))"
circular reasoning,ad populum,"# ::snt The Freehold Raceway MSK0 is the best MSK0 because there are always so many cars there . 
(c / cause-01
      :ARG0 (c2 / car
            :location (t / there)
            :time (a / always)
            :ARG1-of (h / have-quant-91
                  :ARG2 (m / many)
                  :ARG3 (s / so)))
      :ARG1 (h2 / have-degree-91
            :ARG1 (f / facility
                  :name (n / name
                        :op1 ""MSK0"")
                  :location (f2 / facility
                        :name (n2 / name
                              :op1 ""Freehold""
                              :op2 ""Raceway"")))
            :ARG2 (g / good-02
                  :ARG1 f)
            :ARG3 (m2 / most)
            :ARG5 (f3 / facility
                  :name (n3 / name
                        :op1 ""MSK0""))))"
intentional,fallacy of relevance,"# ::snt SM 5 : Argument regarding insanity as a defense against execution 
(a / argue-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""SM""
                  :op2 5))
      :ARG0-of (r / regard-01
            :ARG1 (ii / insanity)
            :ARG2 (t / thing
                  :ARG2-of (d / defend-01
                        :ARG1 (e / execute-01)))))"
fallacy of extension,ad hominem,"# ::snt A : The Government should enact minimum - wage legislation so that workers are not exploited . B : Nonsense . MSK0 say that only because MSK0 can not find a good job . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :li ""A""
            :ARG1 (e / enact-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01))
                  :ARG1 (l / legislate-01
                        :ARG1 (w / wage
                              :mod (m2 / minimum)))
                  :purpose (e2 / exploit-01
                        :polarity -
                        :ARG1 (p / person
                              :ARG0-of (w2 / work-01)))))
      :snt2 (n / nonsense
            :li ""B""
            :ARG1-of (c / cause-01
                  :ARG0 (p2 / possible-01
                        :polarity -
                        :ARG1 (f / find-01
                              :ARG0 (p3 / person
                                    :name (n2 / name
                                          :op1 ""MSK0""))
                              :ARG1 (j / job
                                    :ARG1-of (g3 / good-02)))
                        :mod (o / only)))))"
ad populum,intentional,"# ::snt If MSK0 buy the Disney annual pass MSK0 will save money when visiting the happiest place on Earth ! 
(s / save-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (m / money)
      :ARG3 (v / visit-01
            :ARG0 p
            :ARG1 (p2 / place
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / happy-01
                              :ARG1 p2)
                        :ARG3 (m2 / most)
                        :ARG5 (p3 / planet
                              :name (n2 / name
                                    :op1 ""Earth"")))))
      :condition (b / buy-01
            :ARG0 p
            :ARG1 (p4 / pass
                  :mod (a / amusement-park
                        :name (n3 / name
                              :op1 ""Disney""))
                  :frequency (r / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (y / year))))))"
circular reasoning,ad populum,"# ::snt God must exist because every culture has some sort of belief in a higher being . 
(c / cause-01
      :ARG0 (h / have-03
            :ARG0 (c2 / culture
                  :mod (e / every))
            :ARG1 (b / believe-01
                  :ARG0 c2
                  :ARG1 (b2 / being
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (h3 / high-02
                                    :ARG1 b2)
                              :ARG3 (m / more)))
                  :mod (s / sort
                        :mod (s2 / some))))
      :ARG1 (o / obligate-01
            :ARG1 (e2 / exist-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""God"")))))"
fallacy of extension,fallacy of logic,"# ::snt Kids : If MSK0 would n't MSK1 MSK0 dog , why MSK1 a turkey ? Go vegan . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (c / cause-01
                  :ARG0 (a / amr-unknown)
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK1"")
                        :mod (d / dog))
                  :condition (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :mod (d2 / dog)
                        :polarity -))
            :ARG2 (k / kid))
      :snt2 (g / go-03
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (v / vegan)))"
fallacy of logic,false dilemma,"# ::snt If MSK0 are n’t a MSK1 , MSK0 must be a MSK1 . 
(h / have-condition-91
      :ARG1 (o / obligate-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :ARG2 (t3 / thing
            :polarity -
            :name (n3 / name
                  :op1 ""MSK1"")))"
fallacy of credibility,intentional,"# ::snt MSK0 gives 10 % of MSK0 income to the needy , goes to church every Sunday , and volunteers one day a week at a homeless shelter . Therefore , MSK0 is honest and morally straight . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (g / give-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p2 / percentage-entity
                        :value 10
                        :ARG1-of (ii / include-91
                              :ARG2 (ii2 / income
                                    :poss p)))
                  :ARG2 (p3 / person
                        :ARG0-of (n2 / need-01)))
            :op2 (g2 / go-02
                  :ARG0 p
                  :ARG4 (c / church)
                  :frequency (r / rate-entity-91
                        :ARG3 (d / date-entity
                              :weekday (s / sunday)
                              :mod (e / every))))
            :op3 (v / volunteer-01
                  :ARG0 p
                  :ARG2 (s2 / shelter-01
                        :mod (p4 / person
                              :ARG0-of (h / have-03
                                    :polarity -
                                    :ARG1 (h2 / home))))
                  :frequency (r2 / rate-entity-91
                        :ARG1 (t / temporal-quantity
                              :quant 1
                              :unit (d2 / day))
                        :ARG2 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)))))
      :snt2 (c2 / cause-01
            :ARG1 (a2 / and
                  :op1 (h3 / honest-01
                        :ARG0 (p5 / person
                              :name (n3 / name
                                    :op1 ""MSK0"")))
                  :op2 (s3 / straight-04
                        :ARG1 p5
                        :manner (m2 / moral-02)))))"
faulty generalization,fallacy of logic,"# ::snt Most MSK1 MSK2 out MSK4 . If MSK5 MSK2 MSK4 , MSK5 ’ll end up a MSK1 , too . 
(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""MSK1"")
            :mod (m2 / most)
            :ARG1-of (o / out-06
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK4""))))
      :snt2 (e / end-up-03
            :ARG1 (p3 / product
                  :name (n3 / name
                        :op1 ""MSK5""))
            :ARG2 (p4 / product
                  :name (n4 / name
                        :op1 ""MSK2""))
            :condition (p5 / product
                  :name (n5 / name
                        :op1 ""MSK1""))
            :mod (t / too)))"
circular reasoning,fallacy of logic,"# ::snt The Earth is round . Therefore , Trump . 
(m / multi-sentence
      :snt1 (r / round-03
            :ARG1 (p / planet
                  :name (n / name
                        :op1 ""Earth"")))
      :snt2 (ii / infer-01
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Trump""))))"
appeal to emotion,appeal to emotion,"# ::snt We have a responsibility to care for this poor lost dog . 
(r / responsible-03
      :ARG0 (w / we)
      :ARG1 (c / care-03
            :ARG0 w
            :ARG1 (d / dog
                  :mod (p / poor)
                  :mod (t / this)
                  :ARG1-of (l / lose-02))))"
fallacy of extension,ad hominem,"# ::snt Personally attacking someone to shift attention away from your views is 
(a / attack-01
      :ARG0 (y / you)
      :ARG1 (s / someone)
      :ARG1-of (p / personal-02)
      :purpose (s2 / shift-01
            :ARG0 y
            :ARG1 (a2 / attend-02)
            :ARG2 (a3 / away
                  :op1 (v / view-02
                        :ARG0 y))))"
intentional,appeal to emotion,"# ::snt Do MSK0 still beat MSK0 wife ? 
(b / beat-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 p
                  :ARG2 (w / wife)))
      :polarity (a / amr-unknown)
      :mod (s / still))"
false dilemma,false dilemma,"# ::snt "" Be MSK0 friend or be MSK0 enemy . "" 
(a / amr-choice
      :op1 (h / have-rel-role-91
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSN""))
            :ARG1 (y / you)
            :ARG2 (f / friend))
      :op2 (h2 / have-rel-role-91
            :ARG0 y
            :ARG1 p
            :ARG2 (e / enemy)))"
faulty generalization,faulty generalization,"# ::snt 10 of the last 14 National Spelling Bee Champions have been MSK1 . MSK1 must all be great spellers ! 
(m / multi-sentence
      :snt1 (c / champion
            :quant 10
            :domain (p / person
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1-of (ii / include-91
                  :ARG2 (c2 / champion
                        :quant 14
                        :mod (l / last)
                        :mod (b / broadcast-program
                              :name (n2 / name
                                    :op1 ""National""
                                    :op2 ""Spelling""
                                    :op3 ""Bee"")))))
      :snt2 (o / obligate-01
            :mode expressive
            :ARG1 (p2 / person
                  :mod (a / all)
                  :domain (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG0-of (s / spell-01
                        :mod (g / great)))))"
ad hominem,ad hominem,"# ::snt But , Dad , MSK0 know MSK1 smoked when MSK1 were MSK0 age , so how can MSK1 tell MSK0 not to do it ? 
(c / contrast-01
      :ARG2 (k / know-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (s / smoke-02
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :time (a / age-01
                        :ARG1 p2
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :ARG0-of (c2 / cause-01
                  :ARG1 (p3 / possible-01
                        :ARG1 (t2 / tell-01
                              :ARG0 p
                              :ARG1 (d / do-02
                                    :polarity -
                                    :ARG0 p2
                                    :ARG1 (ii / it))
                              :ARG2 p2)
                        :manner (a2 / amr-unknown))))
      :ARG1-of (s2 / say-01
            :ARG0 (ii2 / i)
            :ARG2 (p4 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (d2 / dad)))))"
appeal to emotion,fallacy of extension,"# ::snt "" MSK0 do n't MSK1 a border wall with Mexico , which means MSK0 do n't MSK1 to keep Americans safe "" IS an example of this fallacy . 
(e / exemplify-01
      :ARG0 (s / string-entity
            :value ""MSK0 do-02_0 :polarity - :ARG1 ( wall :location ( border-01 :ARG2 ( country_0 :name ( name_0 :op1 ""))"
ad hominem,ad hominem,"# ::snt MSK0 may be a successful and skilled musician , but let 's not forget that MSK0 's been accused of extremist religious and political views . 
(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (m / musician
                  :domain (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG0-of (s / succeed-01)
                  :mod (s2 / skill)))
      :ARG2 (f / forget-01
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (a / accuse-01
                  :ARG1 p2
                  :ARG2 (v / view-02
                        :ARG0 p2
                        :ARG1 (a2 / and
                              :op1 (r / religion)
                              :op2 (p3 / politics))
                        :mod (e / extremism)))))"
false dilemma,false dilemma,"# ::snt Pay taxes or go to jail 
(o / or
      :op1 (p / pay-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / tax-01))
      :op2 (g / go-02
            :mode imperative
            :ARG0 y
            :ARG4 (j / jail)))"
fallacy of credibility,false causality,"# ::snt "" MSK0 bought MSK1 to MSK2 a new car at the mall , since MSK0 have never MSK2 anything like MSK1 in the past . "" 
(b / buy-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (c / car
            :ARG1-of (n2 / new-01))
      :ARG4 (p2 / person
            :name (n3 / name
                  :op1 ""MSK2""))
      :location (m / mall)
      :ARG1-of (c2 / cause-01
            :ARG0 (h / have-03
                  :polarity -
                  :ARG0 p
                  :ARG1 (a / anything
                        :ARG1-of (r / resemble-01
                              :ARG2 (p3 / product
                                    :name (n4 / name
                                          :op1 ""MSK1""))))
                  :time (e / ever)
                  :time (p4 / past))))"
faulty generalization,fallacy of credibility,"# ::snt My friend said that if MSK0 sneeze more than three times , MSK0 have the corona virus . 
(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (f / friend)))
      :ARG1 (h2 / have-03
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (v / virus
                  :name (n2 / name
                        :op1 ""Corona""))
            :condition (s2 / sneeze-01
                  :ARG0 p2
                  :frequency (m / more-than
                        :op1 3))))"
fallacy of credibility,fallacy of credibility,"# ::snt MSK0 have no intention of stopping MSK1 . MSK0 consider MSK1 to be a very reasonable choice . After all , MSK1 has been standard practice in MSK2 department for many years and MSK2 ’ve been quite satisfied with the results MSK2 ’ve had . 
(m / multi-sentence
      :snt1 (ii / intend-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (s / stop-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (c / consider-01
            :ARG0 (p3 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :ARG1-of (c2 / choose-01)
                  :ARG1-of (r / reasonable-02
                        :degree (v / very))
                  :domain (t2 / thing
                        :mod 1)))
      :snt3 (a / and
            :op1 (p4 / practice-01
                  :ARG0 (d / department
                        :mod (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK2"")))
                  :ARG1 t2
                  :ARG1-of (s2 / standard-02)
                  :duration (m2 / many
                        :op1 (t4 / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :op2 (s3 / satisfy-01
                  :ARG0 (t5 / thing
                        :ARG1-of (r2 / result-01
                              :ARG2 t3))
                  :ARG1 (p5 / person
                        :name (n5 / name
                              :op1 ""MSK2""))
                  :degree (q / quite))
            :mod (a2 / after-all)))"
ad hominem,ad hominem,"# ::snt A politician arguing that MSK0 opponent can not possibly be a good choice for women because MSK0 has been married and divorced five times . 
(a / argue-01
      :ARG0 (p / politician)
      :ARG1 (p2 / possible-01
            :polarity -
            :ARG1 (c / choose-01
                  :ARG0 (w / woman)
                  :ARG1 (p3 / person
                        :ARG0-of (o / oppose-01
                              :ARG1 (p4 / person
                                    :name (n / name
                                          :op1 ""MSK0""))))
                  :ARG1-of (g / good-02))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a2 / and
                        :op1 (m / marry-01
                              :frequency 5
                              :ARG1 p4)
                        :op2 (d / divorce-01
                              :frequency 5
                              :ARG0 p4)))))"
false causality,false causality,"# ::snt Explaining that the U.S. Civil War was fought only because of the institution of slavery 
(e / explain-01
      :ARG1 (c / cause-01
            :ARG0 (ii / institution
                  :mod (s / slavery))
            :ARG1 (f / fight-01
                  :ARG2 (w / war
                        :name (n / name
                              :op1 ""U.S.""
                              :op2 ""Civil""
                              :op3 ""War"")))
            :mod (o / only)))"
faulty generalization,ad populum,"# ::snt Company R.E. are working on advertisement for a new juice MSK0 . MSK1 went to a MSK2 to do a survey on MSK3 ’ beverage preference . MSK1 said MSK1 preferred MSK4 - MSK5 MSK0 , so MSK6 told MSK6 superiors that MSK4 was the MSK5 favored most by high MSK2 MSK3 . 
(m / multi-sentence
      :snt1 (w / work-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""R.E.""))
            :ARG1 (a / advertise-01
                  :ARG1 (j / juice
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :ARG1-of (n3 / new-01))))
      :snt2 (g / go-01
            :ARG1 (p / product
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG4 (p2 / product
                  :name (n5 / name
                        :op1 ""MSK2""))
            :purpose (s / survey-01
                  :ARG0 p2
                  :ARG2 (p3 / prefer-01
                        :ARG0 (p4 / product
                              :name (n6 / name
                                    :op1 ""MSK3""))
                        :ARG1 (b / beverage)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (t / tell-01
                        :ARG0 (p5 / product
                              :name (n7 / name
                                    :op1 ""MSK6""))
                        :ARG1 (f / favor-01
                              :ARG0 (p6 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 p5
                                          :ARG2 (s2 / superior)))
                              :ARG1 (p7 / product
                                    :name (n8 / name
                                          :op1 ""MSK5""))
                              :ARG2-of (h2 / have-degree-91
                                    :ARG1 p7
                                    :ARG3 (m2 / most)
                                    :ARG5 (p8 / product
                                          :name (n9 / name
                                                :op1 ""MSK2""))))
                        :ARG2 p6))))"
fallacy of relevance,appeal to emotion,"# ::snt We should n’t put MSK0 in jail even if MSK0 stole billions of pesos . MSK0 is already too old to be locked up . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (j / jail-01
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :concession (e / even-if
                        :op1 (s / steal-01
                              :ARG0 p
                              :ARG1 (m2 / multiple
                                    :op1 (m3 / monetary-quantity
                                          :quant 1000000000
                                          :unit (p2 / peso)))))))
      :snt2 (h / have-degree-91
            :ARG1 p
            :ARG2 (o / old)
            :ARG3 (t / too)
            :ARG6 (l / lock-up-03
                  :ARG1 p)
            :time (a / already)))"
fallacy of logic,fallacy of relevance,"# ::snt MSK0 call MSK1 yet MSK0 can not lend MSK2 money for MSK2 school project , murdering MSK2 chance for a higher grade . MSK0 are just like MSK1 . 
(m / multi-sentence
      :snt1 (c / call-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK1""))
            :concession-of (p3 / possible-01
                  :polarity -
                  :ARG1 (l / lend-01
                        :ARG0 p
                        :ARG1 (m2 / money)
                        :ARG2 (p4 / person
                              :name (n3 / name
                                    :op1 ""MSK2""))
                        :purpose (p5 / project
                              :mod (s / school)
                              :mod p4))
                  :ARG0-of (m3 / murder-01
                        :ARG1 (c2 / chance-02
                              :ARG0 p4
                              :ARG1 (g / grade
                                    :ARG1-of (h / have-degree-91
                                          :ARG2 (h2 / high-02
                                                :ARG1 g)
                                          :ARG3 (m4 / more)))))))
      :snt2 (r / resemble-01
            :ARG1 (t / thing
                  :mod (s2 / string-entity
                        :value ""MSK0""))
            :ARG2 (t2 / thing
                  :mod (s3 / string-entity
                        :value ""MSK1""))
            :mod (j / just)))"
false causality,false causality,"# ::snt MSK0 took MSK1 from the drinking MSK2 yesterday and now MSK0 's MSK3 . MSK1 must have been the public MSK2 that made MSK0 MSK3 . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (t / take-01
                  :ARG0 (t2 / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t3 / thing
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG2 (t4 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :ARG1-of (d / drink-01))
                  :time (y / yesterday))
            :op2 (t5 / take-01
                  :ARG0 t2
                  :ARG1 (t6 / thing
                        :name (n4 / name
                              :op1 ""MSK3"")
                        :poss t2)
                  :ARG2 t4
                  :time (n5 / now)))
      :snt2 (o / obligate-01
            :ARG2 (m2 / make-01
                  :ARG0 (t7 / thing
                        :name (n6 / name
                              :op1 ""MSK2"")
                        :ARG1-of (p / public-02))
                  :ARG1 (t8 / thing
                        :name (n7 / name
                              :op1 ""MSK3"")
                        :poss t2))))"
ad hominem,ad hominem,"# ::snt "" MSK0 arguments against the protest were weak . After all , MSK0 ca n't be fair ; MSK0 works for the government . "" 
(m / multi-sentence
      :snt1 (w / weak-02
            :ARG1 (t / thing
                  :ARG1-of (a / argue-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""MSK0"")))
                  :ARG0-of (o / oppose-01
                        :ARG1 (p2 / protest-01))))
      :snt2 (f / fair-01
            :polarity -
            :ARG1 p
            :concession (a2 / after-all)
            :ARG1-of (c / cause-01
                  :ARG0 (w2 / work-01
                        :ARG0 p
                        :ARG2 (g / government-organization
                              :ARG0-of (g2 / govern-01))))
            :ARG1-of (p3 / possible-01
                  :polarity -)))"
faulty generalization,appeal to emotion,"# ::snt "" If MSK0 do n't turn in MSK0 homework , MSK0 will be getting a call home . 
(c / call-02
      :ARG1 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :location (h / home)
      :condition (t / turn-in-06
            :polarity -
            :ARG0 p
            :ARG1 (h2 / homework
                  :poss p)))"
ad hominem,ad hominem,"# ::snt You ca n't believe MSK0 when MSK0 says there is a God because MSK0 does n't even have a job . 
(p / possible-01
      :polarity -
      :ARG1 (b / believe-01
            :ARG0 (y / you)
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :time (s / say-01
                  :ARG0 p2
                  :ARG1 (g / god)))
      :ARG1-of (c / cause-01
            :ARG0 (h / have-03
                  :polarity -
                  :ARG0 p2
                  :ARG1 (j / job)
                  :mod (e / even))))"
fallacy of logic,fallacy of logic,"# ::snt "" MSK0 is a MSK1 and MSK0 is a MSK1 so MSK0 = MSK0 "" 
(a / and
      :op1 (t / thing
            :name (n / name
                  :op1 ""MSK1"")
            :domain (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK0"")))
      :op2 (t3 / thing
            :name (n3 / name
                  :op1 ""MSK1"")
            :domain t2)
      :ARG0-of (c / cause-01
            :ARG1 (e / equal-01
                  :ARG1 t2
                  :ARG2 t)))"
faulty generalization,faulty generalization,"# ::snt sending M - 16s to Syrian rebels inevitably mean boots on the ground in Damascus . 
(m / mean-01
      :ARG1 (s / send-01
            :ARG1 (v / vehicle
                  :name (n / name
                        :op1 ""M-16""))
            :ARG2 (p / person
                  :mod (c / country
                        :name (n2 / name
                              :op1 ""Syria""))
                  :ARG0-of (r / rebel-01)))
      :ARG2 (b / boot
            :location (g / ground
                  :location (c2 / city
                        :name (n3 / name
                              :op1 ""Damascus""))))
      :ARG1-of (a / avoid-01
            :ARG1-of (p2 / possible-01
                  :polarity -)))"
false causality,false causality,"# ::snt MSK0 appeared in the sky the day before basketball tryouts , and MSK1 made MSK2 ! If there 's MSK0 when MSK1 try out in the spring , MSK1 'm sure MSK1 'll make MSK2 again . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (a2 / appear-01
                  :ARG1 (s / string-entity
                        :value ""MSK0"")
                  :location (s2 / sky)
                  :time (b / before
                        :op1 (t / try-out-05
                              :ARG1 (b2 / basketball))
                        :quant (t2 / temporal-quantity
                              :quant 1
                              :unit (d / day))))
            :op2 (m2 / make-01
                  :ARG0 (s3 / string-entity
                        :value ""MSK1"")
                  :ARG1 (s4 / string-entity
                        :value ""MSK2"")))
      :snt2 (s5 / sure-02
            :ARG0 (s6 / string-entity
                  :value ""MSK1"")
            :ARG1 (m3 / make-01
                  :ARG0 s6
                  :ARG1 (s7 / string-entity
                        :value ""MSK2"")
                  :mod (a3 / again))
            :condition (t3 / try-out-05
                  :ARG0 (s8 / string-entity
                        :value ""MSK1"")
                  :time (d2 / date-entity
                        :season (s9 / spring)))))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 : MSK0 think MSK1 should put more money into schools . Quality public education is so important . MSK2 : So MSK2 ’re saying MSK1 should cut MSK3 and spend MSK3 instead on more spiral notebooks and crayons ? MSK0 guess MSK2 want MSK1 country to be a weak , defenseless target for terrorists . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / think-01
                  :ARG0 p
                  :ARG1 (r / recommend-01
                        :ARG1 (p2 / put-01
                              :ARG0 (p3 / product
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG1 (m2 / money
                                    :mod (m3 / more))
                              :ARG2 (s2 / school)))))
      :snt2 (s3 / say-01
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1 (s4 / say-01
                  :ARG0 p4
                  :ARG1 (r2 / recommend-01
                        :ARG1 (a / and
                              :op1 (c / cut-02
                                    :ARG0 p4
                                    :ARG1 (p5 / product
                                          :name (n4 / name
                                                :op1 ""MSK3"")))
                              :op2 (s5 / spend-01
                                    :ARG0 p4
                                    :ARG1 (p6 / product
                                          :name (n5 / name
                                                :op1 ""MSK3""))
                                    :ARG3 (ii / instead-of-91
                                          :ARG1 (a2 / and
                                                :op1 (n6 / notebook
                                                      :mod (s6 / spiral))
                                                :op2 (c2 / crayon)
                                                :mod (m4 / more)))))))
            :polarity (a3 / amr-unknown))
      :snt3 (g / guess-01
            :ARG0 p
            :ARG1 (w / want-01
                  :ARG0 (p7 / person
                        :name (n7 / name
                              :op1 ""MSK2""))
                  :ARG1 (t2 / target-01
                        :ARG0 (t3 / terrorist)
                        :ARG1 (c3 / country
                              :mod (p8 / product
                                    :name (n8 / name
                                          :op1 ""MSK1"")))
                        :ARG1-of (w2 / weak-02)
                        :ARG1-of (d / defend-01
                              :polarity -))))
      :snt4 (ii2 / important-01
            :ARG1 (e / educate-01
                  :ARG1-of (p9 / public-02)
                  :mod (q / quality))
            :degree (s7 / so)))"
intentional,fallacy of extension,"# ::snt Death penalty will not scare MSK0 because MSK0 do n’t expect to be caught 
(s / scare-01
      :polarity -
      :ARG0 (p / penalize-01
            :manner (d / die-01))
      :ARG1 (p2 / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1-of (c / cause-01
            :ARG0 (e / expect-01
                  :polarity -
                  :ARG0 p2
                  :ARG1 (c2 / catch-03
                        :ARG1 p2))))"
false causality,false causality,"# ::snt I dropped the ball because Mercury is in retrograde . 
(c / cause-01
      :ARG0 (r / retrograde-01
            :ARG1 (p / planet
                  :name (n / name
                        :op1 ""Mercury"")))
      :ARG1 (d / drop-01
            :ARG0 (ii / i)
            :ARG1 (b / ball)))"
fallacy of credibility,circular reasoning,"# ::snt MSK0 deserve to have a later curfew , so you should let MSK0 stay out until 10 pm ! 
(d / deserve-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (c / curfew
            :time (a / after
                  :op1 (n2 / now)))
      :ARG0-of (c2 / cause-01
            :ARG1 (r / recommend-01
                  :ARG1 (l / let-01
                        :ARG0 (y / you)
                        :ARG1 (s / stay-01
                              :ARG1 p
                              :ARG3 (o / out)
                              :time (u / until
                                    :op1 (d2 / date-entity
                                          :time ""19:00""))))
                  :ARG2 y)))"
faulty generalization,intentional,"# ::snt Perhaps the most MSK0 MSK1 of MSK2 is the MSK3 for the existence of MSK4 . Due to the MSK5 of MSK15 through MSK6 , many of the MSK3 that MSK7 to be MSK7 for MSK4 or gods ) were abandoned , only to be MSK8 with new ones , usually involving MSK9 to which MSK6 has not definitively MSK10 yet . The move from creationism to intelligent design is a prime MSK1 . Currently MSK11 is a popular MSK3 for MSK4 ( although a MSK0 MSK3 from ignorance ) , and an area where MSK12 very well may have a MSK6 MSK10 in the next decade , at which time , MSK11 MSK13 MSK3 will fade away and be MSK8 by another , thus moving the figurative goalposts farther back as MSK12 MSK5 of the MSK15 MSK15 increases.Exception : MSK2 should not be confused with an MSK3 or set of MSK3 , with multiple propositions inherent in the MSK3 . The reason for the difference between this kind of MSK3 and the moving MSK2 , is a subtle one , but indicated by a strong initial claim ( MSK13 has to be MSK13 , MSK13 must MSK13 , MSK13 required for MSK13 , etc. ) that gets MSK10 and / or what appears to be ad hoc objections that follow eventually leading to an impossible request for proof . Fun Fact : The name MSK13 moving MSK14 MSK13 comes from the analogy of kicking a perfect field goal in American football , only to have MSK14 be moved on you . This would be very unfair . References : This a logical fallacy frequently MSK7 on the Internet . No academic sources could be found . MSK9 about MSK2 ? Ask MSK12 community ! 
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (h / have-mod-91
                  :ARG1 (p2 / product
                        :name (n / name
                              :op1 ""MSK3""))
                  :ARG2 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1-of (c / cause-01
                        :ARG0 (e / exist-01
                              :ARG1 (p4 / product
                                    :name (n3 / name
                                          :op1 ""MSK4""))))
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (m2 / most))))
      :snt2 (p5 / possible-01
            :polarity -
            :ARG1 (f / find-01
                  :ARG1 (s / source
                        :mod (a / academia))))
      :snt3 (h3 / have-concession-91
            :ARG1 (a2 / ask-01
                  :ARG0 (y / you)
                  :ARG2 (c2 / community
                        :mod (p6 / product
                              :name (n4 / name
                                    :op1 ""MSK9""))))
            :ARG2 (r / recommend-01
                  :polarity -
                  :ARG1 (c3 / confuse-01
                        :ARG1 (o / or
                              :op1 (p7 / product
                                    :name (n5 / name
                                          :op1 ""MSK3""))
                              :op2 (s2 / set
                                    :consist-of (p8 / product
                                          :name (n6 / name
                                                :op1 ""MSK3""))))
                        :ARG2-of (f2 / follow-01
                              :ARG1 (r2 / request-01
                                    :ARG1 (p9 / prove-01)
                                    :ARG1-of (p10 / possible-01
                                          :polarity -))))))
      :snt4 (c4 / cause-01
            :ARG0 (a3 / abandon-01
                  :ARG1 (p11 / product
                        :name (n7 / name
                              :op1 ""MSK7""))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (p12 / product
                              :name (n8 / name
                                    :op1 ""MSK8""))))
            :ARG1 (m3 / move-01
                  :ARG1 (p13 / product
                        :name (n9 / name
                              :op1 ""MSK13""))
                  :ARG2 (p14 / product
                        :name (n10 / name
                              :op1 ""MSK14""))
                  :mod (o2 / only)
                  :ARG2-of (ii / involve-01
                        :ARG1 (p15 / product
                              :name (n11 / name
                                    :op1 ""MSK6"")
                              :ARG1-of (h4 / have-mod-91
                                    :ARG2 (p16 / product
                                          :name (n12 / name
                                                :op1 ""MSK13""))))
                        :mod (o3 / only))))
      :ARG1-of (f3 / frequent-02)
      :snt5 (f4 / fair-01
            :polarity -
            :ARG1 (t / this)
            :degree (v / very)))"
faulty generalization,fallacy of logic,"# ::snt What is wrong with Tanya ? MSK0 only has five hundred dollars saved and MSK0 ’s going away to college next MSK1 . That would be like letting my four - MSK1 - old brother go to Russia by hisself . 
(m / multi-sentence
      :snt1 (w / wrong-02
            :ARG1 (a / amr-unknown)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Tanya"")))
      :snt2 (a2 / and
            :op1 (h / have-03
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (m2 / monetary-quantity
                        :quant 200
                        :unit (d / dollar)
                        :ARG1-of (s / save-03))
                  :mod (o / only))
            :op2 (g / go-02
                  :ARG0 p2
                  :ARG4 (c / college)
                  :time (n3 / next
                        :op1 (p3 / person
                              :name (n4 / name
                                    :op1 ""MSK1"")))
                  :direction (a3 / away))
            :domain (t / that
                  :ARG1-of (r / resemble-01
                        :ARG2 (l / let-01
                              :ARG1 (g2 / go-02
                                    :ARG0 (p4 / person
                                          :age (t2 / temporal-quantity
                                                :quant 4
                                                :unit (y / year))
                                          :ARG0-of (h2 / have-rel-role-91
                                                :ARG1 (ii / i)
                                                :ARG2 (b / brother)))
                                    :ARG4 (c2 / country
                                          :name (n5 / name
                                                :op1 ""Russia""))
                                    :mod (b2 / by-oneself)))))))"
faulty generalization,faulty generalization,"# ::snt People from big cities are not as friendly as those from small towns . 
(h / have-degree-91
      :ARG1 (p / person
            :source (c / city
                  :mod (b / big)))
      :ARG2 (f / friendly-01
            :ARG1 p)
      :ARG3 (e / equal
            :polarity -)
      :ARG4 (p2 / person
            :source (t / town
                  :mod (s / small))))"
faulty generalization,faulty generalization,"# ::snt All people who live in England have bad teeth . 
(h / have-03
      :ARG0 (p / person
            :mod (a / all)
            :ARG0-of (l / live-01
                  :location (c / country
                        :name (n / name
                              :op1 ""England""))))
      :ARG1 (t / tooth
            :ARG1-of (b / bad-07)))"
faulty generalization,faulty generalization,"# ::snt Do n't ever steal ! Once MSK0 start , MSK0 wo n't be able to stop , and MSK0 'll end up bankrupt . 
(m / multi-sentence
      :snt1 (s / steal-01
            :mode imperative
            :polarity -
            :ARG0 (y / you)
            :time (e / ever))
      :snt2 (a / and
            :op1 (p / possible-01
                  :polarity -
                  :ARG1 (s2 / stop-01
                        :ARG0 (p2 / product
                              :name (n / name
                                    :op1 ""MSN""))))
            :op2 (e2 / end-up-03
                  :ARG1 p2
                  :ARG2 (b / bankrupt-01
                        :ARG1 p2))
            :time (s3 / start-01
                  :ARG1 p2)))"
false dilemma,false dilemma,"# ::snt MSK0 ( also known as “ false dilemma ” ) MSK1 when a speaker or writer makes a veiled threat by reducing a complex issue to two options : either you see MSK0 my way or this bad thing will MSK1 . 
(m / multi-sentence
      :snt1 (s / string-entity
            :value ""MSK0""
            :ARG1-of (k / know-02
                  :ARG2 (d / dilemma
                        :mod (f / false))
                  :mod (a / also)))
      :snt2 (s2 / string-entity
            :value ""MSK1""
            :time (t / threaten-01
                  :ARG0 (o / or
                        :op1 (p / person
                              :ARG0-of (s3 / speak-01))
                        :op2 (p2 / person
                              :ARG0-of (w / write-01)))
                  :manner (r / reduce-01
                        :ARG0 o
                        :ARG1 (ii / issue-02
                              :mod (c / complex))
                        :ARG4 (o2 / option
                              :quant 2))
                  :ARG1-of (v / veil-01)))
      :snt3 (o3 / or
            :op1 (s4 / see-01
                  :ARG0 (y / you)
                  :ARG1 (s5 / string-entity
                        :value ""MSK0"")
                  :manner (w2 / way
                        :poss (ii2 / i)))
            :op2 (s6 / see-01
                  :ARG0 y
                  :ARG1 (s7 / string-entity
                        :value ""MSK1"")
                  :manner w2
                  :ARG1-of (b / bad-07))))"
ad populum,appeal to emotion,"# ::snt Using positive words that become associated with something , like company slogans and political advertisements 
(u / use-01
      :ARG1 (w / word
            :mod (p / positive)
            :ARG1-of (b / become-01
                  :ARG2 (a / associate-01
                        :ARG1 w
                        :ARG2 (s / something
                              :example (a2 / and
                                    :op1 (s2 / slogan
                                          :mod (c / company))
                                    :op2 (a3 / advertise-01
                                          :mod (p2 / politics))))))))"
faulty generalization,fallacy of relevance,"# ::snt Mrs. Collier , we ca n't take a quiz MSK0 ! The new season of Game of Thrones premieres MSK0 !! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Mrs.""
                        :op2 ""Collier""))
            :ARG1 (p2 / possible-01
                  :polarity -
                  :ARG1 (t / take-01
                        :ARG0 (w / we)
                        :ARG1 (q / quiz-01
                              :ARG2 (p3 / product
                                    :name (n2 / name
                                          :op1 ""MSK0"")))))
            :ARG2 p3)
      :snt2 (p4 / premiere-01
            :ARG1 (s2 / season
                  :ARG1-of (n3 / new-01)
                  :part-of (b / broadcast-program
                        :name (n4 / name
                              :op1 ""Game""
                              :op2 ""of""
                              :op3 ""Thrones"")))
            :time p3))"
false causality,false causality,"# ::snt MSK0 received MSK1 and then had diarrhea for a week . MSK1 is the reason MSK0 bowels came undone . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / receive-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0"")
                        :part (b / bowel))
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :op2 (s / suffer-01
                  :ARG0 p
                  :ARG1 (d / diarrhea)
                  :time (t / then)
                  :duration (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week))))
      :snt2 (c / cause-01
            :ARG0 (p3 / product
                  :name (n3 / name
                        :op1 ""MSK1""))
            :ARG1 (c2 / come-04
                  :ARG1 (b2 / bowel
                        :part-of (p4 / person
                              :name (n4 / name
                                    :op1 ""MSK0"")))
                  :ARG2 (u / undone))))"
ad hominem,ad hominem,"# ::snt MSK0 wants MSK1 to believe that the origin of life was an “ accident ” . MSK0 is a godless SOB who has spent more time in jail than in church , so the only information MSK1 should consider from MSK0 is the best way to make license plates . 
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / believe-01
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1 (a / accident
                        :domain (o / originate-01
                              :ARG1 (l / life)))))
      :snt2 (c / cause-01
            :ARG0 (s / sOB
                  :mod (g / god
                        :polarity -)
                  :domain (p3 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG0-of (s2 / spend-02
                        :ARG1 (t / time
                              :ARG1-of (h / have-quant-91
                                    :ARG3 (m2 / more)
                                    :ARG4 (t2 / time
                                          :ARG1-of s2
                                          :ARG0 p3
                                          :location (c2 / church)))))))
      :ARG1 (r / recommend-01
            :ARG1 (c3 / consider-02
                  :ARG0 p2
                  :ARG1 (ii / information
                        :mod (o2 / only)
                        :domain (w2 / way
                              :manner-of (m3 / make-01
                                    :ARG1 (p4 / plate
                                          :mod (l2 / license-01)))
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (g2 / good-02
                                          :ARG1 w2)
                                    :ARG3 (m4 / most))))
                  :source p3)))"
faulty generalization,fallacy of logic,"# ::snt MSK0 currently have as MSK1 in MSK2 all the MSK1 in this town who are MSK3 and MSK4 to MSK5 $ MSK6 per MSK7 for MSK8 - MSK9 MSK10 - MSK11 MSK12 . If MSK13 MSK14 MSK2 , all MSK0 clients will be included . Therefore , if MSK13 MSK14 MSK2 MSK13 will then have at least some MSK1 MSK3 and MSK4 to MSK5 $ MSK6 per MSK7 for MSK8 - MSK9 MSK10 - MSK11 MSK12 . 
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :location (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :mod (a / all))
            :time (c / current))
      :snt2 (h2 / have-03
            :ARG0 (t4 / thing
                  :name (n4 / name
                        :op1 ""MSK3""))
            :ARG1 (a2 / and
                  :op1 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK4"")
                        :location t3)
                  :op2 (t6 / thing
                        :name (n6 / name
                              :op1 ""MSK5"")
                        :location t3)
                  :op3 (t7 / thing
                        :name (n7 / name
                              :op1 ""MSK6"")
                        :location t3
                        :ARG1-of (r / rate-entity-91
                              :ARG2 (t8 / thing
                                    :name (n8 / name
                                          :op1 ""MSK8""))))
                  :op4 (t9 / thing
                        :name (n9 / name
                              :op1 ""MSK9"")
                        :location t3)
                  :op5 (t10 / thing
                        :name (n10 / name
                              :op1 ""MSK11"")
                        :location t3)
                  :op6 (t11 / thing
                        :name (n11 / name
                              :op1 ""MSK12"")
                        :location t3))
            :quant (a3 / at-least
                  :op1 (s / some)))
      :condition (h3 / have-03
            :ARG0 (t12 / thing
                  :name (n12 / name
                        :op1 ""MSK13""))
            :ARG1 (t13 / thing
                  :name (n13 / name
                        :op1 ""MSK14"")
                  :location t3))
      :snt3 (h4 / have-condition-91
            :ARG1 (ii / include-01
                  :ARG1 (t14 / thing
                        :name (n14 / name
                              :op1 ""MSK14""))
                  :ARG2 (p / person
                        :ARG0-of (h5 / have-rel-role-91
                              :ARG1 t4
                              :ARG2 (c2 / client))
                        :mod (a4 / all)))
            :ARG2 t3)
      :ARG2 t14
      :name (n15 / name
            :op1 ""MSK14"")
      :location t4)"
faulty generalization,circular reasoning,"# ::snt all bachelors are unmarried males 
(m / male
      :ARG1-of (m2 / marry-01
            :polarity -)
      :domain (b / bachelor
            :mod (a / all)))"
ad hominem,faulty generalization,"# ::snt MSK2 No ! Do n't eat MSK0 . MSK1 , MSK0 's one piece of coref1 , but MSK1 , you 've gained 20 lbs ! MSK2 
(m / multi-sentence
      :snt1 (n / no
            :mode expressive
            :snt2 (p / product
                  :name (n2 / name
                        :op1 ""MSK2"")))
      :snt2 (e / eat-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / product
                  :mod (v / value-interval
                        :op1 1
                        :op2 2))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / contrast-01
                        :ARG1 (p3 / piece
                              :quant 1
                              :part-of (c3 / coref1)
                              :poss p2)
                        :ARG2 (g / gain-02
                              :ARG0 y
                              :ARG1 (m2 / mass-quantity
                                    :quant 20
                                    :unit (p4 / pound))))))
      :snt3 (p5 / product
            :name (n3 / name
                  :op1 ""MSK2"")))"
faulty generalization,faulty generalization,"# ::snt MSK1 MSK0 was wearing cowboy boots in MSK0 last Instagram picture so MSK0 must be into country music . MSK1 
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MSK1""))
      :snt2 (c / cause-01
            :ARG0 (w / wear-01
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (b / boot
                        :mod (c2 / cowboy))
                  :time (p3 / picture
                        :mod (p4 / publication
                              :name (n3 / name
                                    :op1 ""Instagram""))
                        :mod (l / last)))
            :ARG1 (o / obligate-01
                  :ARG1 p2
                  :ARG2 (ii / into
                        :op1 (m2 / music
                              :mod (c3 / country))))))"
intentional,intentional,"# ::snt This fallacy is n’t proof of anything except that you do n’t know something . 
(p / prove-01
      :polarity -
      :ARG0 (f / fallacy
            :mod (t / this))
      :ARG1 (a / anything)
      :ARG2-of (e / except-01
            :ARG1 (k / know-01
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (s / something))))"
ad populum,fallacy of relevance,"# ::snt Big deal ! Lots of people cheat too . 
(m / multi-sentence
      :snt1 (d / deal-03
            :mode expressive
            :mod (b / big))
      :snt2 (c / cheat-03
            :ARG0 (p / person
                  :quant (l / lot))
            :mod (t / too)))"
ad hominem,ad hominem,"# ::snt Charlie : Fast food is filled with salt , fat , and added sugars . We need better regulation of the industry . MSK0 : That may be , but MSK0 ’re such a hypocrite ! MSK0 saw MSK0 devour a Triple - Baconator , super-sized fries , and 64 ounces of soda yesterday . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (f / fill-01
                  :ARG1 (f2 / food
                        :ARG1-of (f3 / fast-02))
                  :ARG2 (a / and
                        :op1 (s2 / salt)
                        :op2 (f4 / fat)
                        :op3 (s3 / sugar
                              :ARG1-of (a2 / add-02)))))
      :snt2 (s4 / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (c / contrast-01
                  :ARG1 (p3 / possible-01
                        :ARG1 (t / that))
                  :ARG2 (h / hypocrite
                        :degree (s5 / such)
                        :domain p2)))
      :snt3 (s6 / see-01
            :ARG0 p2
            :ARG1 (d / devour-01
                  :ARG0 p2
                  :ARG1 (a3 / and
                        :op1 (p4 / product
                              :name (n3 / name
                                    :op1 ""Triple""
                                    :op2 ""Baconator""))
                        :op2 (f5 / fry
                              :ARG1-of (s7 / size-01
                                    :ARG2 (s8 / super)))
                        :op3 (s9 / soda
                              :quant (m2 / mass-quantity
                                    :quant 64
                                    :unit (o / ounce))))
                  :time (y / yesterday)))
      :snt4 (n4 / need-01
            :ARG0 (ii / industry)
            :ARG1 (r / regulate-01
                  :ARG1 ii
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 r)
                        :ARG3 (m3 / more)))))"
faulty generalization,faulty generalization,"# ::snt Teachers do n't have lives . "" MSK0 said MSK0 MSK2 was MSK3 , and the one coref1 'm in is MSK3 too . All MSK2 must be MSK3 . "" 
(m / multi-sentence
      :snt1 (h / have-03
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (t / teach-01))
            :ARG1 (l / life))
      :snt2 (a / and
            :op1 (s / say-01
                  :ARG0 (t2 / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t3 / thing
                        :name (n2 / name
                              :op1 ""MSK3"")
                        :domain (t4 / thing
                              :name (n3 / name
                                    :op1 ""MSK2""))))
            :op2 (ii / include-91
                  :ARG1 (c / coref1)
                  :ARG2 t4
                  :mod (t5 / too))
            :snt3 (o / obligate-01
                  :ARG2 (t6 / thing
                        :name (n4 / name
                              :op1 ""MSK3"")
                        :domain (t7 / thing
                              :name (n5 / name
                                    :op1 ""MSK2"")
                              :mod (a2 / all))))))"
fallacy of credibility,fallacy of credibility,"# ::snt Dr. McKenzie said all kids can fly , so it must be true ! 
(s / say-01
      :ARG0 (d / doctor
            :name (n / name
                  :op1 ""McKenzie""))
      :ARG1 (p / possible-01
            :ARG1 (f / fly-01
                  :ARG1 (k / kid
                        :mod (a / all))))
      :ARG0-of (c / cause-01
            :ARG1 (o / obligate-01
                  :ARG1 (t / true-01
                        :ARG1 p))))"
ad hominem,fallacy of relevance,"# ::snt "" Dad , it 's difficult to make a living on MSK0 salary . "" "" Consider yourself lucky . When MSK0 was your age , MSK0 was living on $ 40 a week . "" 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (d / difficult
                  :domain (m2 / make-05
                        :ARG1 (l / live-01
                              :ARG1-of (c / cause-01
                                    :ARG0 (s2 / salary
                                          :mod (p / product
                                                :name (n / name
                                                      :op1 ""MSK0"")))))))
            :ARG2 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (y / you)
                        :ARG2 (d2 / dad))))
      :snt2 (c2 / consider-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (l2 / lucky
                  :domain y2))
      :snt3 (l3 / live-01
            :ARG0 (p3 / person
                  :name n
                  :op1 ""MSK0"")
            :age (t / temporal-quantity
                  :quant 1
                  :unit (y3 / year)))
      :ARG1 (r / rate-entity-91
            :ARG1 (m3 / monetary-quantity
                  :quant 40
                  :unit (d3 / dollar))
            :ARG2 (t2 / temporal-quantity
                  :quant 1
                  :unit (w / week)))
      :time (a / age-01
            :ARG1 p3))"
faulty generalization,faulty generalization,"# ::snt My grandfather was a typical Irishman - friendly , outgoing , and drunk half the time . 
(t / typical-02
      :ARG1 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (ii / i)
                  :ARG2 (g / grandfather)))
      :ARG2 (a / and
            :op1 (f / friendly-01
                  :ARG1 p)
            :op2 (o / outgoing)
            :op3 (d / drink-01
                  :ARG0 p))
      :ARG3 (m / man
            :mod (c / country
                  :name (n / name
                        :op1 ""Ireland"")))
      :time (t2 / time
            :quant (h2 / half)))"
ad populum,ad populum,"# ::snt "" Everyone is wearing the new skinny jeans from American Eagle . Are you ? "" 
(w / wear-01
      :ARG0 (e / everyone)
      :ARG1 (j / jeans
            :ARG1-of (n / new-01)
            :mod (s / skinny)
            :source (c / company
                  :name (n2 / name
                        :op1 ""American""
                        :op2 ""Eagle"")))
      :polarity (a / amr-unknown)
      :ARG1-of (r / request-confirmation-91))"
fallacy of credibility,fallacy of credibility,"# ::snt MSK0 thought women were inferior to MSK1 . MSK0 is one of the smartest MSK1 who ever lived , so MSK0 must be right about this . 
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (ii / inferior-01
                  :ARG1 (w / woman)
                  :ARG2 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (c / cause-01
            :ARG0 (ii2 / include-91
                  :ARG1 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG2 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK1"")
                        :ARG0-of (l / live-01
                              :time (e / ever))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (s / smart-06
                                    :ARG1 p4)
                              :ARG3 (m2 / most))))
            :ARG1 (o / obligate-01
                  :ARG1 p
                  :ARG2 (r / right-06
                        :ARG1 p
                        :ARG2 ii))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 do n't get up MSK2 every day MSK0 will be MSK2 . The more MSK0 are MSK1 MSK0 will get into . MSK1 MSK0 get into , MSK0 will end up losing MSK0 and MSK0 family will starve . ( coref2 is an example of ... ) 
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK2"")
                  :domain (p / person
                        :name (n2 / name
                              :op1 ""MSK0"")))
            :ARG2 (g / get-05
                  :polarity -
                  :ARG1 p
                  :ARG2 (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :frequency (r / rate-entity-91
                        :ARG3 (t3 / temporal-quantity
                              :quant 1
                              :unit (d / day)))))
      :snt2 (c / correlate-91
            :ARG1 (m2 / more
                  :ARG3-of (h2 / have-quant-91
                        :ARG1 (t4 / thing
                              :ARG2-of (g2 / get-05
                                    :ARG1 (p2 / person
                                          :name (n4 / name
                                                :op1 ""MSK1""))))))
            :ARG2 (m3 / more
                  :ARG3-of h2
                  :ARG1 t4))
      :snt3 (a / and
            :op1 (e / end-up-03
                  :ARG1 (p3 / person
                        :name (n5 / name
                              :op1 ""MSK0""))
                  :ARG2 (l / lose-02
                        :ARG0 p3
                        :ARG1 t4))
            :op2 (s / starve-01
                  :ARG1 (f / family
                        :mod p3)))
      :snt4 (e2 / exemplify-01
            :ARG0 (t5 / thing
                  :name (n6 / name
                        :op1 ""Coref2""))))"
fallacy of logic,fallacy of logic,"# ::snt Schools are MSK0 families ; therefore teachers ( MSK0 MSK1 ) should be allowed to discipline MSK1 students . 
(c / cause-01
      :ARG0 (f / family
            :mod (p / product
                  :name (n / name
                        :op1 ""MSK0""))
            :domain (s / school))
      :ARG1 (r / recommend-01
            :ARG1 (a / allow-01
                  :ARG1 (d / discipline-01
                        :ARG0 (p2 / person
                              :ARG0-of (t / teach-01)
                              :mod (p3 / product
                                    :name (n2 / name
                                          :op1 ""MSK0"")))
                        :ARG1 (p4 / person
                              :ARG0-of (s2 / study-01)
                              :mod (p5 / product
                                    :name (n3 / name
                                          :op1 ""MSK1"")))))))"
faulty generalization,faulty generalization,"# ::snt MSK0 nowadays only vote with MSK0 emotions instead of MSK0 brains . 
(v / vote-01
      :ARG0 (p / person
            :part (b / brain
                  :name (n / name
                        :op1 ""MSK0"")))
      :time (n2 / nowadays)
      :manner (e / emotion
            :mod b
            :ARG1-of (ii / instead-of-91
                  :ARG2 (v2 / vote-01
                        :ARG0 p
                        :ARG3 b)))
      :mod (o / only))"
fallacy of relevance,ad hominem,"# ::snt MSK0 : MSK0 remember when MSK0 was about three years old MSK0 mother saved MSK0 from almost being eaten by a shark . Katie : MSK0 doubt that . What you are experiencing is what cognitive psychologists refer to as a "" false memory . "" 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / remember-01
                  :ARG0 p
                  :ARG1 (s2 / save-02
                        :ARG0 (p2 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (m2 / mother)))
                        :ARG1 p
                        :ARG2 (e / eat-01
                              :ARG0 (s3 / shark)
                              :ARG1 p
                              :mod (a / almost))
                        :time (a2 / age-01
                              :ARG1 p
                              :ARG2 (a3 / about
                                    :op1 (t / temporal-quantity
                                          :quant 3
                                          :unit (y / year)))))))
      :snt2 (s4 / say-01
            :ARG0 (p3 / person
                  :name (n2 / name
                        :op1 ""Katie""))
            :ARG1 (d / doubt-01
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / that)))
      :snt3 (r2 / refer-01
            :ARG0 (p5 / psychologist
                  :mod (c / cognition))
            :ARG1 (t3 / thing
                  :ARG1-of (e2 / experience-01
                        :ARG0 (y2 / you)))
            :ARG2 (m3 / memory
                  :mod (f / false))))"
faulty generalization,faulty generalization,"# ::snt We think this new MallTime game app will be a success because all little girls like shopping . 
(t / think-01
      :ARG0 (w / we)
      :ARG1 (s / succeed-01
            :ARG0 (a / app
                  :name (n / name
                        :op1 ""MallTime"")
                  :ARG1-of (n2 / new-01)
                  :mod (t2 / this)))
      :ARG1-of (c / cause-01
            :ARG0 (l / like-01
                  :ARG0 (g / girl
                        :mod (l2 / little)
                        :mod (a2 / all))
                  :ARG1 (s2 / shop-01
                        :ARG0 g))))"
ad hominem,ad hominem,"# ::snt MSK0 is just a dumb actor . What does MSK0 really know about climate change ? 
(m / multi-sentence
      :snt1 (p / person
            :ARG0-of (a / act-01
                  :mod (d / dumb)
                  :mod (j / just))
            :domain (p2 / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (k / know-01
            :ARG0 (p3 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG1 (a2 / amr-unknown)
      :topic (c / change-01
            :ARG1 (c2 / climate))
      :ARG1-of (r / real-04))"
fallacy of logic,faulty generalization,"# ::snt The MSK0 where MSK1 and MSK2 therefore all MSK0 are MSK1 and MSK2 . 
(e / equal-01
      :ARG1 (t / thing
            :name (n / name
                  :op1 ""MSK0""))
      :ARG2 (a / and
            :op1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :op2 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK2"")))
      :ARG1-of (c / cause-01
            :ARG0 (e2 / equal-01
                  :ARG1 t
                  :ARG2 (a2 / and
                        :op1 t2
                        :op2 t3))))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 says that MSK0 thinks MSK0 MSK1 should not be so rude to MSK2 . MSK0 says that MSK0 can not believe that MSK0 is choosing to be better MSK1 with MSK2 than the girls who have always known MSK0 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / think-01
                  :ARG0 p
                  :ARG1 (r / recommend-01
                        :ARG1 (r2 / rude-01
                              :polarity -
                              :ARG0 (p2 / person
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG1 (p3 / person
                                    :name (n3 / name
                                          :op1 ""MSK2""))
                              :degree (s2 / so)))))
      :snt2 (s3 / say-01
            :ARG0 (p4 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (p5 / possible-01
                  :polarity -
                  :ARG1 (b / believe-01
                        :ARG0 p4
                        :ARG1 (c / choose-01
                              :ARG0 p4
                              :ARG1 (h / have-degree-91
                                    :ARG1 p4
                                    :ARG2 (g / good-03
                                          :ARG1 p4
                                          :prep-with (p6 / person
                                                :name (n5 / name
                                                      :op1 ""MSK2"")))
                                    :ARG3 (m2 / more)
                                    :ARG4 (g2 / girl
                                          :ARG0-of (k / know-02
                                                :ARG1 p4
                                                :time (a / always)))))))))"
ad hominem,ad hominem,"# ::snt MSK0 raises a good point , but can we really trust MSK1 ? MSK0 mean , MSK1 moved to this town two years ago and everyone knows that MSK1 wife left MSK1 . 
(c / contrast-01
      :ARG1 (r / raise-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / point-04
                  :ARG1-of (g / good-02)))
      :ARG2 (p3 / possible-01
            :ARG1 (t / trust-02
                  :ARG0 (w / we)
                  :ARG1 (p4 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1-of (r2 / real-04))
            :polarity (a / amr-unknown)
            :ARG1-of (m / mean-01
                  :ARG0 p
                  :ARG2 (a2 / and
                        :op1 (m2 / move-01
                              :ARG0 p4
                              :ARG2 (t2 / town
                                    :mod (t3 / this))
                              :time (b / before
                                    :op1 (n3 / now)
                                    :quant (t4 / temporal-quantity
                                          :quant 2
                                          :unit (y / year))))
                        :op2 (k / know-01
                              :ARG0 (e / everyone)
                              :ARG1 (l / leave-15
                                    :ARG0 (p5 / person
                                          :ARG0-of (h / have-rel-role-91
                                                :ARG1 p4
                                                :ARG2 (w2 / wife)))
                                    :ARG1 p4))))))"
appeal to emotion,faulty generalization,"# ::snt "" MSK0 I know say MSK0 elected MSK1 because MSK0 were tired of having MSK0 MSK2 sent overseas . This question of MSK2 brought MSK1 into office . "" 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (k / know-01))
            :ARG1 (e / elect-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1-of (c / cause-01
                        :ARG0 (t / tire-03
                              :ARG0 (s2 / send-01
                                    :ARG1 (p3 / person
                                          :name (n3 / name
                                                :op1 ""MSK2""))
                                    :ARG2 (o / overseas))
                              :ARG1 p3))))
      :snt2 (b / bring-01
            :ARG0 (q / question-01
                  :ARG1 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :mod (t2 / this))
            :ARG1 (p5 / person
                  :name (n5 / name
                        :op1 ""MSK1""))
            :ARG2 (o2 / office)))"
faulty generalization,faulty generalization,"# ::snt We think this new MallTime game app will be a success because all girls like shopping . 
(t / think-01
      :ARG0 (w / we)
      :ARG1 (s / succeed-01
            :ARG0 (a / app
                  :name (n / name
                        :op1 ""MallTime"")
                  :ARG1-of (n2 / new-01)
                  :mod (t2 / this)))
      :ARG1-of (c / cause-01
            :ARG0 (l / like-01
                  :ARG0 (g / girl
                        :mod (a2 / all))
                  :ARG1 (s2 / shop-01
                        :ARG0 g))))"
intentional,fallacy of relevance,"# ::snt Saying that a compromise between two extremes is the truth 
(s / say-01
      :ARG1 (t / true-01
            :ARG1 (c / compromise-01
                  :ARG0 (e / extreme
                        :quant 2))))"
faulty generalization,faulty generalization,"# ::snt MSK0 has a terrible experience with a boyfriend . MSK0 decides that all boys are mean . 
(m / multi-sentence
      :snt1 (e / experience-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (b / boyfriend)))
            :ARG1-of (t / terrible-01))
      :snt2 (d / decide-01
            :ARG0 (p3 / person
                  :name n
                  :op1 ""MSK0""))
      :ARG1 (m2 / mean-04
            :ARG0 (b2 / boy
                  :mod (a / all))))"
ad populum,ad populum,"# ::snt taps into people 's desire to belong 
(t / tap-02
      :ARG1 (d / desire-01
            :ARG0 (p / person)
            :ARG1 (b / belong-01
                  :ARG0 p)))"
fallacy of extension,fallacy of relevance,"# ::snt MSK0 of MSK1 : MSK2 MSK3 ! MSK2 MSK3 ! Politician : MSK1 , your MSK3 are high because of MSK4 MSK5 . That 's right — MSK4 MSK5 . We need to get MSK6 of MSK7 . MSK0 of MSK8 : ( murmuring amongst MSK8 ) Hmmm ... MSK5 . Let 's get MSK6 of MSK7 ! 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / string-entity
                  :value ""MSK0""
                  :part-of (t / thing
                        :name (n / name
                              :op1 ""MSK1"")))
            :op2 (s2 / string-entity
                  :value ""MSK2""
                  :part-of (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK3"")))
            :op3 (s3 / string-entity
                  :value ""MSK2""
                  :part-of (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK3""))))
      :snt2 (s4 / say-01
            :ARG0 (p / politician)
            :ARG1 (a2 / and
                  :op1 (h / high-02
                        :ARG1 (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK3"")
                              :poss (y / you))
                        :ARG1-of (c / cause-01
                              :ARG0 (t5 / thing
                                    :name (n5 / name
                                          :op1 ""MSK4""))))
                  :op2 (n6 / need-01
                        :ARG0 (w / we)
                        :ARG1 (g / get-01
                              :ARG0 w
                              :ARG1 (t6 / thing
                                    :name (n7 / name
                                          :op1 ""MSK6"")
                                    :part-of (t7 / thing
                                          :name (n8 / name
                                                :op1 ""MSK7"")))))
                  :ARG2-of (r / right-06)))
      :snt3 (a3 / and
            :op1 (s5 / string-entity
                  :value ""MSK0""
                  :part-of (t8 / thing
                        :name (n9 / name
                              :op1 ""MSK8"")))
            :op2 (m2 / mutter-01
                  :ARG1 (s6 / string-entity
                        :value ""MSK5"")
                  :part-of (t9 / thing)
                  :mod (h2 / hmm
                        :mode expressive))))"
fallacy of credibility,fallacy of extension,"# ::snt Al Gore feels that all companies are irresponsible and should be punished for allowing emissions which causes global warming . 
(f / feel-02
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Al""
                  :op2 ""Gore""))
      :ARG1 (a / and
            :op1 (r / responsible-02
                  :polarity -
                  :ARG1 (c / company
                        :mod (a2 / all)))
            :op2 (r2 / recommend-01
                  :ARG1 (p2 / punish-01
                        :ARG1 c
                        :ARG2 (a3 / allow-01
                              :ARG0 c
                              :ARG1 (e / emit-01
                                    :ARG0-of (c2 / cause-01
                                          :ARG1 (w / warm-01
                                                :ARG1 (g / globe)))))))))"
ad hominem,fallacy of credibility,"# ::snt MSK0 I admire the president for being a good MSK2 . MSK0 REPLY : MSK0 But the New York Times says he ’s a lousy MSK2 , so you ’re wrong . MSK0 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / admire-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p3 / president)))
                  :ARG1-of (c / cause-01
                        :ARG0 (g / good-03
                              :ARG1 p2
                              :ARG2 (t / thing
                                    :name (n2 / name
                                          :op1 ""MSNK2""))))))
      :snt2 (s2 / say-01
            :ARG0 (n3 / newspaper
                  :name (n4 / name
                        :op1 ""New""
                        :op2 ""York""
                        :op3 ""Times""))
            :ARG1 (h2 / have-mod-91
                  :ARG1 (h3 / he)
                  :ARG2 (t2 / thing
                        :name (n5 / name
                              :op1 ""MSNK2"")
                        :mod (l / lousy))
                  :ARG0-of (c2 / cause-01
                        :ARG1 (w / wrong-04
                              :ARG1 (y / you))))
            :ARG2 p))"
ad hominem,ad hominem,"# ::snt MSK0 best friend says MSK1 ’re a liar , so MSK0 ’m not going to talk to MSK1 . 
(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (f / friend
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (g / good-02
                                    :ARG1 f)
                              :ARG3 (m / most)))))
      :ARG1 (l / lie-08
            :ARG0 p2)
      :ARG0-of (c / cause-01
            :ARG1 (t / talk-01
                  :polarity -
                  :ARG0 p2
                  :ARG2 p2)))"
faulty generalization,faulty generalization,"# ::snt MSK0 MSK0 does n’t like says , MSK2 If MSK1 continue dating this guy who does n’t take MSK0 education seriously , MSK1 ’ll end up dropping out of school , MSK1 then wo n’t be able to get a job , and MSK1 will get married too young . MSK2 
(m / multi-sentence
      :snt1 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :op2 (d / dislike-01
                  :ARG0 p
                  :ARG1 (s / say-01)))
      :snt2 (a2 / and
            :op1 (h / have-condition-91
                  :ARG1 (e / end-up-03
                        :ARG1 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 (d2 / drop-out-04
                              :ARG0 p2
                              :ARG1 (s2 / school)))
                  :ARG2 (c / continue-01
                        :ARG0 p2
                        :ARG1 (d3 / date-02
                              :ARG0 p2
                              :ARG1 (g / guy
                                    :mod (t / this)
                                    :ARG0-of (t2 / take-04
                                          :polarity -
                                          :ARG1 (e2 / educate-01
                                                :ARG1 p2)
                                          :ARG2 (s3 / serious-01
                                                :ARG1 e2))))))
            :op2 (p3 / possible-01
                  :polarity -
                  :ARG1 (g2 / get-01
                        :ARG0 p2
                        :ARG1 (j / job))
                  :time (t3 / then))
            :op3 (m2 / marry-01
                  :ARG1 p2
                  :mod (y / young
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p2
                              :ARG3 (t4 / too)))))
      :snt3 (p4 / person
            :name (n3 / name
                  :op1 ""MSK2"")))"
false causality,false causality,"# ::snt When sales of hot chocolate go up , street crime drops . 
(d / drop-01
      :ARG1 (c / crime-02
            :location (s / street))
      :time (ii / increase-01
            :ARG1 (s2 / sell-01
                  :ARG1 (c2 / chocolate
                        :ARG1-of (h / hot-05)))))"
circular reasoning,ad hominem,"# ::snt MSK0 : MSK0 do n't think MSK1 would be a good fit to manage this project , because MSK1 does n't have a MSK2 of MSK3 with MSK4 . MSK1 : But you do n't have a MSK2 of MSK3 in MSK4 either ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / think-01
                  :polarity -
                  :ARG0 p
                  :ARG1 (f / fit-06
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG2 (m2 / manage-01
                              :ARG0 p2
                              :ARG1 (p3 / project
                                    :mod (t2 / this)))
                        :ARG1-of (g / good-02))
                  :ARG1-of (c / cause-01
                        :ARG0 (h / have-03
                              :polarity -
                              :ARG0 p2
                              :ARG1 (p4 / product
                                    :name (n3 / name
                                          :op1 ""MSK2"")
                                    :part-of (p5 / product
                                          :name (n4 / name
                                                :op1 ""MSK3"")))
                              :prep-with (p6 / product
                                    :name (n5 / name
                                          :op1 ""MSK4""))))))
      :snt2 (s2 / say-01
            :ARG0 (p7 / person
                  :name (n6 / name
                        :op1 ""MSK1""))
            :ARG1 (c2 / contrast-01
                  :ARG2 (h2 / have-03
                        :polarity -
                        :ARG0 (y / you)
                        :ARG1 (p8 / product
                              :name (n7 / name
                                    :op1 ""MSK2"")
                              :part-of (p9 / product
                                    :name (n8 / name
                                          :op1 ""MSK3"")))
                        :location (p10 / product
                              :name (n9 / name
                                    :op1 ""MSK4""))
                        :mod (e / either)))))"
ad populum,ad populum,"# ::snt Let ’s go buy the iPhone X in spite of the $ 999 price tag -- all of our friends have one already ! 
(h / have-concession-91
      :ARG1 (g / go-05
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (b / buy-01
                  :ARG0 w
                  :ARG1 (p / product
                        :name (n / name
                              :op1 ""iPhone""
                              :op2 ""X""))))
      :ARG2 (t / tag-01
            :ARG1 p
            :ARG2 (m / monetary-quantity
                  :quant 999
                  :unit (d / dollar)))
      :ARG1-of (c / cause-01
            :ARG0 (h2 / have-03
                  :ARG0 (p2 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 w
                              :ARG2 (f / friend))
                        :mod (a / all))
                  :ARG1 p
                  :time (a2 / already))))"
circular reasoning,fallacy of credibility,"# ::snt Which type of MSK0 is used in the following phrases from the Declaration of Independence : MSK1 MSK0 to the Supreme Judge of the world MSK1 and MSK1 with a firm reliance on the protection of divine providence MSK1 ? 
(u / use-01
      :ARG1 (t / thing
            :name (n / name
                  :op1 ""MSK0"")
            :mod (t2 / type
                  :mod (a / amr-unknown)))
      :ARG2 (p / phrase
            :ARG1-of (f / follow-04)
            :source (p2 / publication
                  :name (n2 / name
                        :op1 ""Declaration""
                        :op2 ""of""
                        :op3 ""Independence""))
            :consist-of (a2 / and
                  :op1 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :op2 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK0""))
                  :op3 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK1"")
                        :ARG0-of (j / judge-01
                              :mod (s / supreme)
                              :location (w / world)))
                  :op4 (t6 / thing
                        :name (n6 / name
                              :op1 ""MSK1"")
                        :ARG0-of (r / rely-01
                              :ARG1 (p3 / protect-01
                                    :ARG0 (t7 / thing
                                          :name (n7 / name
                                                :op1 ""Providence"")
                                          :mod (d / divine))
                                    :ARG1 t6)
                              :ARG1-of (f2 / firm-03))))))"
ad hominem,ad hominem,"# ::snt Do n’t believe what MSK0 says about global warming . MSK0 dropped out of college ! 
(m / multi-sentence
      :snt1 (b / believe-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :ARG1-of (s / say-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :topic (w / warm-01
                              :ARG1 (g / globe)))))
      :snt2 (d / drop-out-04
            :ARG0 p
            :ARG1 (c / college)))"
fallacy of credibility,ad populum,"# ::snt “ MSK0 has served 100 billion people in MSK1 . MSK0 must be the best fast food restaurant in MSK1 "" is an example of 
(m / multi-sentence
      :snt1 (s / serve-02
            :ARG0 (f / facility
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (p / person
                  :quant 100000000000)
            :location (f2 / facility
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :snt2 (o / obligate-01
            :ARG2 (h / have-degree-91
                  :ARG1 (f3 / facility
                        :name (n3 / name
                              :op1 ""MSK0""))
                  :ARG2 (g / good-02
                        :ARG1 f3
                        :ARG2 (f4 / food
                              :ARG1-of (f5 / fast-02)))
                  :ARG3 (m2 / most)
                  :location f2))
      :snt3 (e / exemplify-01))"
ad populum,fallacy of relevance,"# ::snt The majority of students are in favor of changing the MSK0 of the MSK1 gowns to a single MSK0 to not exclude those that are non-binary , but a few people complained it was n't "" MSK3 "" , so let 's meet in the middle and just allow MSK2 to not attend MSK1 if MSK2 do n't want to wear the MSK3 black and gold . 
(c / contrast-01
      :ARG1 (f / favor-01
            :ARG0 (p / person
                  :ARG0-of (s / study-01)
                  :quant (m / majority))
            :ARG1 (c2 / change-01
                  :ARG0 p
                  :ARG1 (s2 / signature
                        :mod 0)
                  :ARG2 (s3 / signature
                        :mod 0
                        :mod (s4 / single))
                  :ARG3 (g / gown
                        :mod (p2 / product
                              :name (n / name
                                    :op1 ""MSK1"")))
                  :purpose (e / exclude-01
                        :polarity -
                        :ARG1 (p3 / person
                              :mod (b / binary
                                    :polarity -)))))
      :ARG2 (c3 / complain-01
            :ARG0 (p4 / person
                  :quant (f2 / few))
            :ARG1 (h / have-mod-91
                  :polarity -
                  :ARG1 (ii / it)
                  :ARG2 (p5 / product
                        :name (n2 / name
                              :op1 ""MSK3"")))
            :ARG0-of (c4 / cause-01
                  :ARG1 (a / and
                        :op1 (m2 / meet-03
                              :mode imperative
                              :ARG0 (w / we)
                              :location (m3 / middle))
                        :op2 (a2 / allow-01
                              :mode imperative
                              :ARG0 w
                              :ARG1 (a3 / attend-01
                                    :polarity -
                                    :ARG0 (p6 / person
                                          :mod (p7 / product
                                                :name (n3 / name
                                                      :op1 ""MSK2"")))
                                    :ARG1 (p8 / product
                                          :name (n4 / name
                                                :op1 ""MSK1"")))
                              :condition (w2 / want-01
                                    :polarity -
                                    :ARG0 p6
                                    :ARG1 (w3 / wear-01
                                          :ARG0 p6
                                          :ARG1 (p9 / product
                                                :name (n5 / name
                                                      :op1 ""MSK3"")
                                                :ARG1-of (b2 / black-04)
                                                :mod (g2 / gold))))
                              :mod (j / just))))))"
circular reasoning,fallacy of relevance,"# ::snt MSK0 should not be taught in school since MSK0 is not spoken anywhere in the world . All learning should have some MSK1 to be of value , and a dead language has no practical MSK1 . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :polarity -
            :ARG1 (t / teach-01
                  :ARG1 (l / language
                        :name (n / name
                              :op1 ""MSK0""))
                  :location (s / school))
            :ARG1-of (c / cause-01
                  :ARG0 (s2 / speak-01
                        :ARG1 l
                        :location (a / anywhere
                              :location (w / world)))))
      :snt2 (a2 / and
            :op1 (r2 / recommend-01
                  :ARG1 (h / have-03
                        :ARG0 (l2 / learn-01
                              :mod (a3 / all))
                        :ARG1 (t2 / thing
                              :name (n2 / name
                                    :op1 ""MSK1"")
                              :quant (s3 / some)
                              :ARG1-of (v / value-01))))
            :op2 (h2 / have-03
                  :polarity -
                  :ARG0 (l3 / language
                        :ARG1-of (d / die-01))
                  :ARG1 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK1"")
                        :ARG1-of (p / practical-03)))))"
ad hominem,ad hominem,"# ::snt Why would you lend money to some who looks like they do n't have a job ? 
(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (l / lend-01
            :ARG0 (y / you)
            :ARG1 (m / money)
            :ARG2 (s / some
                  :ARG0-of (l2 / look-02
                        :ARG1 (h / have-03
                              :polarity -
                              :ARG0 s
                              :ARG1 (j / job))))))"
faulty generalization,appeal to emotion,"# ::snt If we do n’t teach teens to work harder , the human race is doomed . 
(d / doom-01
      :ARG1 (r / race
            :mod (h / human))
      :condition (t / teach-01
            :polarity -
            :ARG0 (w / we)
            :ARG1 (w2 / work-01
                  :ARG0 (t2 / teen)
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (h3 / hard-02)
                        :ARG3 (m / more)))
            :ARG2 t2))"
ad hominem,faulty generalization,"# ::snt Do n't try to tell MSK0 that MSK1 only MSK2 educational programming , Emmy ! MSK0 know for a fact that MSK1 sister only MSK2 reality television . 
(m / multi-sentence
      :snt1 (t / try-01
            :polarity -
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t2 / tell-01
                  :ARG0 y
                  :ARG1 (p / program
                        :name (n / name
                              :op1 ""MSK1"")
                        :mod (o / only)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (p2 / program
                                    :name (n2 / name
                                          :op1 ""MSK2"")
                                    :mod (o2 / only)
                                    :mod (e / educate-01))))
                  :ARG2 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK0""))))
      :snt2 (k / know-01
            :ARG0 (p4 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (t3 / television
                  :mod (r / reality)
                  :domain (p5 / product
                        :name (n5 / name
                              :op1 ""MSK2"")
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 p4
                              :ARG2 (s / sister))))
            :mod (f / for-a-fact)))"
faulty generalization,faulty generalization,"# ::snt MSK0 abortion in the first week of MSK1 would lead to MSK0 MSK1 in the ninth month 
(l / lead-03
      :ARG0 (a / abort-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :time (w / week
                  :ord (o / ordinal-entity
                        :value 1)
                  :part-of (d / disease
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :ARG2 (d2 / disease
            :name (n3 / name
                  :op1 ""MSK1"")
            :time (m / month
                  :ord o
                  :value 9)))"
ad hominem,ad hominem,"# ::snt MSK0 supports the MSK2 ban and MSK0 's an idiot , so we should let MSK3 keep MSK3 MSK2 . 
(a / and
      :op1 (s / support-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / ban-01
                  :ARG1 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK2""))))
      :op2 (ii / idiot
            :domain p)
      :ARG0-of (c / cause-01
            :ARG1 (r / recommend-01
                  :ARG1 (l / let-01
                        :ARG0 (w / we)
                        :ARG1 (k / keep-01
                              :ARG0 (p3 / person
                                    :name (n3 / name
                                          :op1 ""MSK3""))
                              :ARG1 (p4 / product
                                    :name (n4 / name
                                          :op1 ""MSK2"")))))))"
faulty generalization,fallacy of extension,"# ::snt Teaching assistant : MSK0 was much MSK3 than MSK1 MSK4 , so I MSK4 MSK1 should give a few extra points to MSK2 who completed MSK0 . Professor : that ’s a terrible idea . If MSK1 give everyone a perfect score for no reason , MSK2 wo n’t bother working MSK3 in the future . 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (h / have-degree-91
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (m2 / much)
                  :ARG3 (m3 / more)
                  :ARG4 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :ARG1 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK4"")
                  :poss (ii / i)))
      :snt2 (r / recommend-01
            :ARG1 (g / give-01
                  :ARG0 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK1""))
                  :ARG1 (p / point
                        :quant (f / few)
                        :mod (e / extra))
                  :ARG2 (p2 / person
                        :name (n5 / name
                              :op1 ""MSK2"")
                        :ARG0-of (c2 / complete-01
                              :ARG1 t))))
      :snt3 (s / say-01
            :ARG0 (p3 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG2 (p4 / professor)))
            :ARG1 (ii2 / idea
                  :ARG1-of (t5 / terrible-01)
                  :domain (t6 / that))
            :condition (g2 / give-01
                  :ARG0 (t7 / thing
                        :name (n6 / name
                              :op1 ""MSK1""))
                  :ARG1 (s2 / score-01
                        :ARG2 (p5 / perfect))
                  :ARG2 (e2 / everyone)
                  :ARG1-of c
                  :ARG0 (r2 / reason
                        :polarity -)))
      :time (f2 / future))"
ad populum,fallacy of credibility,"# ::snt MSK0 or MSK1 appeals to the audience 's MSK2 by establishing MSK0 credibility or MSK2 as a MSK1 or speaker ? 
(a / appeal-03
      :ARG0 (o / or
            :op1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :op2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :ARG1 (t3 / thing
            :name (n3 / name
                  :op1 ""MSK2"")
            :poss (a2 / audience))
      :polarity (a3 / amr-unknown)
      :manner (e / establish-01
            :ARG0 o
            :ARG1 (o2 / or
                  :op1 (c / credibility
                        :mod t)
                  :op2 (p / person
                        :ARG0-of (s / speak-01)
                        :ARG1-of (s2 / same-01
                              :ARG2 (o3 / or
                                    :op1 t
                                    :op2 t3))))))"
ad hominem,fallacy of extension,"# ::snt Misrepresents the context from which a quotation is taken ; putting words or ideas in people ’s mouth / head ; creating a “ dummy ” or fake or falsified MSK0 or situation so you can attack MSK0 . This is what fallacy ? 
(m / multi-sentence
      :snt1 (m2 / misrepresent-01
            :ARG1 (c / context
                  :ARG2-of (t / take-01
                        :ARG1 (t2 / thing
                              :ARG1-of (q / quote-01)))))
      :snt2 (p / put-01
            :ARG1 (o / or
                  :op1 (w / word)
                  :op2 (ii / idea))
            :ARG2 (s / slash
                  :op1 (m3 / mouth)
                  :op2 (h / head)
                  :part-of (p2 / person)))
      :snt3 (c2 / create-01
            :ARG1 (o2 / or
                  :op1 (d / dummy)
                  :op2 (f / fake-02
                        :ARG1 (t3 / thing
                              :name (n / name
                                    :op1 ""MSK0"")))
                  :op3 (f2 / falsify-01
                        :ARG1 t3))
            :purpose (p3 / possible-01
                  :ARG1 (a / attack-01
                        :ARG0 (y / you)
                        :ARG1 t3)))
      :snt4 (f3 / fallacy
            :domain (t4 / this)
            :mod (a2 / amr-unknown)))"
circular reasoning,faulty generalization,"# ::snt "" MSK0 attendants are the nicest people . MSK1 should know — MSK1 ’ve taken two MSK0 . "" 
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (p / person
                  :ARG0-of (a / attend-02
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""MSNK0""))))
            :ARG2 (n2 / nice-01
                  :ARG1 p)
            :ARG3 (m2 / most))
      :snt2 (r / recommend-01
            :ARG1 (k / know-01
                  :ARG0 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 (t / take-01
                        :ARG0 p3
                        :ARG1 (p4 / product
                              :quant 2
                              :name (n4 / name
                                    :op1 ""MSNK0""))))))"
appeal to emotion,appeal to emotion,"# ::snt If you do n’t give MSK0 a passing grade , MSK0 wo n’t get accepted to medical school . That will break MSK0 grandmother ’s heart . 
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (a / accept-01
                  :polarity -
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG4 (s / school
                        :mod (m2 / medicine)))
            :ARG2 (g / give-01
                  :polarity -
                  :ARG0 (y / you)
                  :ARG1 (g2 / grade
                        :ARG1-of (p2 / pass-07))
                  :ARG2 p))
      :snt2 (b / break-heart-31
            :ARG0 (t / that)
            :ARG1 (p3 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p
                        :ARG2 (g3 / grandmother)))))"
circular reasoning,appeal to emotion,"# ::snt MSK0 should certainly be the one who washes the dishes -- MSK0 are just so good at it ! 
(r / recommend-01
      :ARG1 (w / wash-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (d / dish))
      :mod (c / certain)
      :ARG1-of (c2 / cause-01
            :ARG0 (g / good-03
                  :ARG1 p
                  :ARG2 (w2 / wash-01
                        :ARG0 p
                        :ARG1 (d2 / dish))
                  :degree (s / so)
                  :mod (j / just))))"
fallacy of relevance,fallacy of logic,"# ::snt MSK0 was trying to demonstrate to the audience of MSK0 speech that gender inequality is like ordering fast food . "" It 's not good for MSK1 , "" MSK0 said , "" but MSK1 do it all the time and men tend to go out for a burger and fries more than women do . "" What fallacy is this ? 
(m / multi-sentence
      :snt1 (t / try-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (d / demonstrate-01
                  :ARG0 p
                  :ARG1 (r / resemble-01
                        :ARG1 (e / equal-01
                              :polarity -
                              :ARG3 (g / gender))
                        :ARG2 (o / order-02
                              :ARG1 (f / food
                                    :ARG1-of (f2 / fast-02))))
                  :ARG2 (s / speak-01
                        :ARG0 p)))
      :snt2 (h / have-concession-91
            :ARG1 (a / and
                  :op1 (g2 / good-04
                        :polarity -
                        :ARG1 (ii / it)
                        :ARG2 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :time (t2 / time
                              :mod (a2 / all)))
                  :op2 (t3 / tend-02
                        :ARG1 (m2 / man)
                        :ARG2 (g3 / go-out-17
                              :ARG0 m2
                              :ARG1 (a3 / and
                                    :op1 (b / burger)
                                    :op2 (f3 / fry)))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 m2
                              :ARG3 (m3 / more)
                              :ARG4 (w / woman))))
            :ARG2 (a4 / and
                  :op1 g2
                  :op2 t3))
      :snt3 (f4 / fallacy
            :domain (t4 / this)
            :mod (a5 / amr-unknown)))"
appeal to emotion,false causality,"# ::snt Giving 10 % of MSK0 income to the Church will free a child ’s soul from Limbo into Heaven , so give MSK0 money ! 
(f / free-01
      :ARG0 (g / give-01
            :ARG1 (p / percentage-entity
                  :value 10
                  :quant-of (ii / income
                        :mod (p2 / product
                              :name (n / name
                                    :op1 ""MSK0""))))
            :ARG2 (o / organization
                  :name (n2 / name
                        :op1 ""Church"")))
      :ARG1 (s / soul
            :part-of (c / child))
      :ARG2 (l / Limbo)
      :destination (h / heaven)
      :ARG0-of (c2 / cause-01
            :ARG1 g
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (m / money
                  :mod p2)))"
false causality,faulty generalization,"# ::snt It is MSK1 this MSK0 in Las Vegas as compared to last MSK0 ; therefore , global MSK1 is rapidly accelerating . 
(c / cause-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""MSK1"")
            :mod (t / this)
            :ARG1-of (c2 / compare-01
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""MSK0"")
                        :mod (l / last)))
            :location (c3 / city
                  :name (n3 / name
                        :op1 ""Las""
                        :op2 ""Vegas"")))
      :ARG1 (a / accelerate-01
            :ARG1 (p3 / product
                  :name (n4 / name
                        :op1 ""MSK1"")
                  :mod (g / globe))
            :manner (r / rapid)))"
ad populum,ad populum,"# ::snt If everyone believes it , you should too ! 
(r / recommend-01
      :ARG2 (y / you)
      :condition (b / believe-01
            :ARG0 (e / everyone)
            :ARG1 (ii / it)
            :mod (t / too)))"
faulty generalization,faulty generalization,"# ::snt "" If MSK0 MSK1 MSK2 because MSK2 are bad for the environment eventually the government will MSK1 all cars , so MSK0 should not MSK1 MSK2 . "" 
(c / cause-01
      :ARG0 (c2 / cause-01
            :ARG0 (b / bad-04
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK2""))
                  :ARG2 (e / environment))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :ARG1-of (l / label-01
                        :ARG2 (t3 / thing
                              :name (n3 / name
                                    :op1 ""MSK2"")))))
      :ARG1 (m / make-01
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 t3
            :ARG3 (c3 / car
                  :mod (a / all))
            :time (e2 / eventual)
            :ARG0-of (c4 / cause-01
                  :ARG1 (r / recommend-01
                        :ARG1 (m2 / make-01
                              :polarity -
                              :ARG1 t3
                              :ARG3 t3)))))"
circular reasoning,ad populum,"# ::snt MSK0 are the best phone because everyone has MSK0 . 
(c / cause-01
      :ARG0 (h / have-03
            :ARG0 (e / everyone)
            :ARG1 (p / product
                  :name (n / name
                        :op1 ""MSK0"")))
      :ARG1 (p2 / phone
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 p2)
                  :ARG3 (m / most))
            :domain p))"
intentional,fallacy of relevance,"# ::snt MSK0 must eliminate affirmative action . MSK0 ca n’t rely on laws to end racial prejudice . 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (l / law
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (e / eliminate-01
                  :ARG0 l
                  :ARG1 (a / affirmative-action)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (r / rely-01
                  :ARG0 (l2 / law
                        :name (n2 / name
                              :op1 ""MSK0""))
                  :ARG1 (e2 / end-01
                        :ARG0 l2
                        :ARG1 (p2 / prejudice-01
                              :ARG1-of (c / cause-01
                                    :ARG0 (r2 / race)))))))"
false causality,false causality,"# ::snt The economy grows as the number of likes on my Instagram account continue to increase . Clearly , the two are linked . 
(m / multi-sentence
      :snt1 (g / grow-01
            :ARG1 (e / economy)
            :time (c / continue-01
                  :ARG1 (ii / increase-01
                        :ARG1 (n / number
                              :quant-of (l / like-01
                                    :ARG1 (a / account
                                          :mod (p / publication
                                                :name (n2 / name
                                                      :op1 ""Instagram""))
                                          :poss (ii2 / i)))))))
      :snt2 (l2 / link-01
            :ARG1 (t / two)
            :ARG1-of (c2 / clear-06)))"
fallacy of relevance,fallacy of relevance,"# ::snt When MSK0 mom gets MSK0 phone bill and MSK0 have gone over the limit , MSK0 begin talking to her about how hard MSK0 math class is and how well MSK0 did on a test today . 
(b / begin-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (t / talk-01
            :ARG0 p
            :ARG1 (a / and
                  :op1 (t2 / thing
                        :degree-of (h / hard-02
                              :ARG1 (c / class
                                    :mod (m / mathematics)
                                    :poss p)))
                  :op2 (t3 / thing
                        :degree-of (w / well-09
                              :ARG1 (d / do-02
                                    :ARG0 p
                                    :ARG1 (t4 / test-01
                                          :ARG2 p)
                                    :time (t5 / today)))))
            :ARG2 (p2 / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 p
                        :ARG2 (m2 / mom))))
      :time (a2 / and
            :op1 (g / get-01
                  :ARG0 p
                  :ARG1 (b2 / bill-01
                        :ARG3 (p3 / phone)
                        :ARG2 p))
            :op2 (g2 / go-over-30
                  :ARG1 (l / limit))))"
fallacy of credibility,fallacy of extension,"# ::snt The Senator thinks MSK0 can solve all MSK0 ecological problems by driving a Prius . 
(t / think-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (s / senator)))
      :ARG1 (p2 / possible-01
            :ARG1 (s2 / solve-01
                  :ARG0 (t2 / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p3 / problem
                        :topic (e / ecology)
                        :mod (a / all)
                        :poss t2)
                  :ARG2 (d / drive-01
                        :ARG0 t2
                        :ARG1 (c / car-make
                              :name (n2 / name
                                    :op1 ""Prius""))))))"
circular reasoning,circular reasoning,"# ::snt MSK0 MSK1 is a good MSK2 because MSK0 is a MSK2 of MSK1 . MSK0 is an example of which common fallacy ? 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK2"")
                  :ARG1-of (g / good-02)
                  :domain (p2 / product
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :ARG1 (p3 / product
                  :name (n3 / name
                        :op1 ""MSK2"")
                  :domain p2))
      :snt2 (e / exemplify-01
            :ARG0 (p4 / product
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (f / fallacy
                  :mod (c2 / common)
                  :mod (a / amr-unknown))))"
ad hominem,fallacy of relevance,"# ::snt MSK0 MSK1 MSK2 in the past . Therefore , it is acceptable for MSK2 to MSK1 MSK0 today . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (s / string-entity
                  :value ""MSK0"")
            :op2 (s2 / string-entity
                  :value ""MSK1"")
            :time (p / past))
      :snt2 (c / cause-01
            :ARG1 (p2 / possible-01
                  :ARG1 (a2 / accept-01
                        :ARG1 (s3 / string-entity
                              :value ""MSK2"")
                        :ARG3 (s4 / string-entity
                              :value ""MSK1"")
                        :time (t / today)))))"
faulty generalization,false dilemma,"# ::snt At a recent cocktail party , the conversation has turned to family MSK1 , and MSK0 friend asks MSK0 “ Are MSK0 a MSK1 or a MSK1 person ? "" 
(a / and
      :op1 (t / turn-01
            :ARG1 (c / converse-01
                  :ARG1 (f / family
                        :name (n / name
                              :op1 ""MSK1"")))
            :ARG2 f)
      :op2 (a2 / ask-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK0""))
                        :ARG2 (f2 / friend)))
            :ARG1 (a3 / amr-choice
                  :op1 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :op2 (p4 / person
                        :name (n4 / name
                              :op1 ""MSK1"")))
            :ARG2 p2)
      :location (p5 / party
            :mod (c2 / cocktail)
            :time (r / recent)))"
circular reasoning,ad populum,"# ::snt MSK0 is the best because MSK0 is always crowded 
(c / cause-01
      :ARG0 (c2 / crowd-01
            :ARG1 (l / location
                  :name (n / name
                        :op1 ""MSK0""))
            :time (a / always))
      :ARG1 (h / have-degree-91
            :ARG1 l
            :ARG2 (g / good-02
                  :ARG1 l)
            :ARG3 (m / most)))"
appeal to emotion,appeal to emotion,"# ::snt MSK0 really deserve an MSK1 A MSK1 on this paper , professor . Not only did MSK0 study during MSK0 grandmother ’s funeral , but MSK0 also passed up the heart transplant surgery , even though that was the first matching donor in 3 years . 
(m / multi-sentence
      :snt1 (d / deserve-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / award
                  :name (n2 / name
                        :op1 ""MSK1""
                        :op2 ""A""
                        :op3 ""MSK1""))
            :ARG2 (p2 / paper
                  :mod (t / this))
            :ARG1-of (r / real-04))
      :snt2 (c / contrast-01
            :ARG1 (s / study-01
                  :ARG0 p
                  :time (f / funeral
                        :poss (p3 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 p
                                    :ARG2 (g / grandmother)))))
            :ARG2 (p4 / pass-up-13
                  :ARG0 p
                  :ARG1 (s2 / surgery-01
                        :ARG2 (t2 / transplant-01
                              :ARG1 (h2 / heart)))
                  :mod (a2 / also)
                  :concession (p5 / person
                        :ARG0-of (d2 / donate-01)
                        :ARG1-of (m2 / match-01)
                        :ord (o / ordinal-entity
                              :value 1
                              :range (t3 / temporal-quantity
                                    :quant 3
                                    :unit (y / year)))
                        :domain p))))"
ad hominem,ad hominem,"# ::snt MSK0 says MSK1 would make a good class president , but MSK0 makes bad grades , so we should n’t vote for MSK1 . 
(c / contrast-01
      :ARG1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (m / make-06
                  :ARG1 (p2 / person
                        :name n
                        :op1 ""MSK1""))
            :ARG2 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c2 / class)
                        :ARG2 (p4 / president))
                  :ARG1-of (g / good-02)))
      :ARG2 (m2 / make-01
            :ARG0 p
            :ARG1 (g2 / grade
                  :ARG1-of (b / bad-07))
            :ARG0-of (c3 / cause-01
                  :ARG1 (r / recommend-01
                        :ARG1 (v / vote-01
                              :polarity -
                              :ARG0 (w / we)
                              :ARG1 p2)))))"
faulty generalization,faulty generalization,"# ::snt On MSK0 walk to work this morning , coref0 nearly ran MSK0 off the sidewalk . MSK0 had n't realized that cyclists were so aggressive and rude ! 
(m / multi-sentence
      :snt1 (r / run-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Coref0""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG2 (o / off
                  :op1 (s / sidewalk))
            :ARG1-of (n3 / near-02)
            :time (w / walk-01
                  :ARG0 p2
                  :ARG2 (w2 / work-01
                        :ARG0 p2)
                  :time (d / date-entity
                        :dayperiod (m2 / morning)
                        :mod (t / today))))
      :snt2 (r2 / realize-01
            :polarity -
            :ARG0 p2
            :ARG1 (a / and
                  :op1 (a2 / aggressive
                        :domain (p3 / person
                              :ARG0-of (c / cycle-01)))
                  :op2 (r3 / rude-01
                        :ARG1 p3)
                  :degree (s2 / so))))"
circular reasoning,faulty generalization,"# ::snt MSK0 people are great at kissing . MSK1 is MSK0 . Get MSK1 a date ! 
(m / multi-sentence
      :snt1 (g / great
            :domain (k / kiss-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))))
      :snt2 (p2 / person
            :name (n2 / name
                  :op1 ""MSK1"")
            :domain (p3 / person))
      :snt3 (g2 / get-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (d / date)
            :ARG4 p3))"
ad hominem,circular reasoning,"# ::snt MSK0 is against the MSK1 because MSK0 is MSK2 ; I know MSK0 is MSK2 because MSK0 is against the MSK1 
(m / multi-sentence
      :snt1 (o / oppose-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :ARG1-of (c / cause-01
                  :ARG0 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2"")
                        :domain t)))
      :snt2 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (o2 / oppose-01
                  :ARG0 t
                  :ARG1 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :ARG1-of (c2 / cause-01
                        :ARG0 t2))))"
ad hominem,fallacy of relevance,"# ::snt MSK0 do n't see how you can believe MSK1 is not guilty of MSK2 . MSK1 's a terrible person and MSK0 can prove MSK2 . In fact , several years ago MSK1 was convicted of that same kind of crime . 
(m / multi-sentence
      :snt1 (s / see-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (t / thing
                  :manner-of (p2 / possible-01
                        :ARG1 (b / believe-01
                              :ARG0 (y / you)
                              :ARG1 (g / guilty-01
                                    :polarity -
                                    :ARG1 (p3 / person
                                          :name (n2 / name
                                                :op1 ""MSK1""))
                                    :ARG2 (c / crime-02
                                          :ARG2 (p4 / person
                                                :name (n3 / name
                                                      :op1 ""MSK2""))))))))
      :snt2 (a / and
            :op1 (t2 / terrible-01
                  :ARG1 (p5 / person
                        :name (n4 / name
                              :op1 ""MSK1"")))
            :op2 (p6 / possible-01
                  :ARG1 (p7 / prove-01
                        :ARG0 p
                        :ARG1 (c2 / crime-02
                              :ARG2 p4))))
      :snt3 (c3 / convict-01
            :ARG1 (p8 / person
                  :name (n5 / name
                        :op1 ""MSK1""))
            :ARG2 (c4 / crime-02
                  :mod (k / kind
                        :ARG1-of (s2 / same-01)
                        :mod (t3 / that)))
            :time (b2 / before
                  :op1 (n6 / now)
                  :quant (s3 / several
                        :op1 (t4 / temporal-quantity
                              :quant 1
                              :unit (y2 / year))))
            :mod (ii / in-fact)))"
ad hominem,fallacy of extension,"# ::snt My opponent is trying to convince you that we evolved from monkeys who were swinging from trees ; a truly ludicrous claim . 
(t / try-01
      :ARG0 (p / person
            :ARG0-of (o / oppose-01
                  :ARG1 (ii / i)))
      :ARG1 (c / convince-01
            :ARG0 p
            :ARG1 (y / you)
            :ARG2 (e / evolve-01
                  :ARG1 (w / we)
                  :source (m / monkey
                        :ARG0-of (s / swing-01
                              :source (t2 / tree)))
                  :ARG1-of (c2 / claim-01
                        :mod (l / ludicrous
                              :degree (t3 / truly))))))"
fallacy of extension,appeal to emotion,"# ::snt In the race for mayor , MSK0 says a vote for MSK0 opponent will lead to MSK1 losing MSK1 job . What fallacy has MSK0 committed ? 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (l / lead-03
                  :ARG0 (v / vote-01
                        :ARG1 (p2 / person
                              :ARG0-of (o / oppose-01
                                    :ARG1 p)))
                  :ARG2 (l2 / lose-02
                        :ARG0 p
                        :ARG1 (j / job
                              :poss p)))
            :topic (r / race-02
                  :ARG0 p
                  :ARG2 (m2 / mayor)))
      :snt2 (c / commit-02
            :ARG0 (p3 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (f / fallacy
                  :mod (a / amr-unknown))))"
ad populum,ad populum,"# ::snt This type of ad taps into a person 's desire to be part of a group . 
(t / tap-02
      :ARG0 (a / advertise-01
            :mod (t2 / type
                  :mod (t3 / this)))
      :ARG1 (d / desire-01
            :ARG0 (p / person)
            :ARG1 (h / have-part-91
                  :ARG1 p
                  :ARG2 (g / group))))"
ad populum,faulty generalization,"# ::snt Four out of five dentists recommend Happy Glossy Smiley toothpaste brand . Therefore , it must be great . 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG0 (d / dentist
                  :quant 4
                  :ARG1-of (ii / include-91
                        :ARG2 (d2 / dentist
                              :quant 5)))
            :ARG1 (b / brand
                  :name (n / name
                        :op1 ""Happy""
                        :op2 ""Glossy""
                        :op3 ""Smiley"")
                  :mod (t / toothpaste)))
      :snt2 (ii2 / infer-01
            :ARG1 (g / great
                  :domain (ii3 / it))))"
faulty generalization,faulty generalization,"# ::snt If MSK0 go to MSK1 , MSK0 will miss the notes , then MSK0 'll do poorly on a test , then MSK0 wo n't get into college , so MSK0 wo n't go to MSK1 . 
(h / have-condition-91
      :ARG1 (a / and
            :op1 (m / miss-02
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (n2 / note))
            :op2 (d / do-02
                  :ARG0 p
                  :ARG1 (p2 / poor)
                  :ARG3 (t / test))
            :op3 (g / get-05
                  :polarity -
                  :ARG1 p
                  :ARG2 (c / college))
            :ARG0-of (c2 / cause-01
                  :ARG1 (g2 / go-01
                        :polarity -
                        :ARG1 p
                        :ARG4 (t2 / thing
                              :name (n3 / name
                                    :op1 ""MSK1"")))))
      :ARG2 (g3 / go-01
            :ARG1 p
            :ARG4 (t3 / thing
                  :name (n4 / name
                        :op1 ""MSK1""))))"
faulty generalization,faulty generalization,"# ::snt One cigarette will lead youth to addiction 
(l / lead-03
      :ARG0 (c / cigarette
            :quant 1)
      :ARG1 (y / youth)
      :ARG2 (a / addict-01
            :ARG1 y))"
faulty generalization,faulty generalization,"# ::snt If the government allows MSK0 to prescribe medications there will be no basis to block MSK0 from obtaining competence and legal authority to conduct other traditionally medical procedures such as diagnosing minor skin irritations , treating a sprained ankle , setting a broken bone , and performing neurosurgery . "" Or : "" Never MSK1 a MSK2 for any patient for any reason or else MSK3 'll find MSK4 constantly MSK1 MSK2 for MSK4 , MSK4 will take advantage of MSK4 , MSK4 will lose respect for MSK3 and for therapy , and MSK3 'll loose MSK4 and go bankrupt . 
(o / or
      :op1 (h / have-condition-91
            :ARG1 (b / base-02
                  :polarity -
                  :ARG1 (b2 / block-01
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG2 (o2 / obtain-01
                              :ARG0 p
                              :ARG1 (a / and
                                    :op1 (c / competent-01
                                          :ARG1 p
                                          :ARG2 (c2 / conduct-01
                                                :ARG0 p
                                                :ARG1 (p2 / procedure
                                                      :mod (m / medicine
                                                            :mod (t / tradition))
                                                      :example (a2 / and
                                                            :op1 (d / diagnose-01
                                                                  :ARG0 p
                                                                  :ARG1 (ii / irritate-01
                                                                        :ARG1 (s / skin)
                                                                        :ARG1-of (m2 / minor-01)))
                                                            :op2 (t2 / treat-03
                                                                  :ARG0 p
                                                                  :ARG1 (a3 / ankle
                                                                        :ARG1-of (s2 / sprain-01)))
                                                            :op3 (s3 / set-02
                                                                  :ARG0 p
                                                                  :ARG1 (b3 / bone
                                                                        :ARG1-of (b4 / break-01)))
                                                            :op4 (p3 / perform-02
                                                                  :ARG0 p
                                                                  :ARG1 (s4 / surgery-01
                                                                        :ARG0 p
                                                                        :ARG2 (n2 / neuro)))))))
                                    :op2 (p4 / product
                                          :name (n3 / name
                                                :op1 ""MSK1""))
                                    :op3 (p5 / product
                                          :name (n4 / name
                                                :op1 ""MSK2""))
                                    :op4 (p6 / product
                                          :name (n5 / name
                                                :op1 ""MSK4"")))))
                  :ARG2 (a4 / allow-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (p7 / prescribe-02
                              :ARG0 p
                              :ARG1 (m3 / medication))))
            :op2 (a5 / and
                  :op1 (f / find-01
                        :ARG0 (p8 / person
                              :name (n6 / name
                                    :op1 ""MSK3""))
                        :ARG1 (p9 / product
                              :name (n7 / name
                                    :op1 ""MSK4""))
                        :mod (c3 / constant))
                  :op2 (t3 / take-advantage-02
                        :ARG0 p8
                        :ARG1 p9)
                  :op3 (a6 / and
                        :op1 (l / lose-02
                              :op2 (b5 / bankrupt-01
                                    :ARG1 p8))))))"
ad hominem,ad hominem,"# ::snt MSK0 : MSK0 should not be MSK1 that ... it has been scientifically proven that MSK1 MSK3 are no good for MSK0 health . Hugh : MSK0 MSK1 MSK3 all the time so that ca n’t be true . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (p2 / product
                        :polarity -
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :domain (t / that))
                  :ARG1-of (c / cause-01
                        :ARG0 (p3 / prove-01
                              :ARG1 (g / good-04
                                    :polarity -
                                    :ARG1 (a / and
                                          :op1 (p4 / product
                                                :name (n3 / name
                                                      :op1 ""MSK1""))
                                          :op2 (p5 / product
                                                :name (n4 / name
                                                      :op1 ""MSK3"")))
                                    :ARG2 (h / health
                                          :poss p))
                              :manner (s2 / science)))))
      :snt2 (s3 / say-01
            :ARG0 (p6 / person
                  :name (n5 / name
                        :op1 ""Hugh""))
            :ARG1 a
            :op1 (p7 / product
                  :name (n6 / name
                        :op1 ""MSK0""))
            :op2 (p8 / product
                  :name (n7 / name
                        :op1 ""MSK1""))
            :op3 (p9 / product
                  :name (n8 / name
                        :op1 ""MSK3""))
            :ARG0-of (c2 / cause-01
                  :ARG1 (p10 / possible-01
                        :polarity -
                        :ARG1 (t2 / true-01
                              :ARG1 t))))
      :time (t3 / time
            :mod (a2 / all)))"
intentional,faulty generalization,"# ::snt MSK0 predicted the wrong amount of rain for May . Obviously MSK0 is unreliable . 
(m / multi-sentence
      :snt1 (p / predict-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / amount
                  :ARG1-of (w / wrong-03)
                  :quant-of (r / rain-01))
            :time (d / date-entity
                  :month 5))
      :snt2 (r2 / rely-01
            :polarity -
            :ARG1 (p3 / product
                  :name n
                  :op1 ""MSK0""))
      :ARG1-of (o / obvious-01))"
appeal to emotion,appeal to emotion,"# ::snt MSK0 are left homeless and hungry because lousy people turn MSK0 out on the streets instead of taking care of MSK0 . 
(l / leave-13
      :ARG0 (t / turn-out-17
            :ARG0 (p / person
                  :mod (l2 / lousy))
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :location (s / street)
            :ARG1-of (ii / instead-of-91
                  :ARG2 (c / care-03
                        :ARG0 p
                        :ARG1 p2)))
      :ARG1 (a / and
            :op1 (h / homeless
                  :domain p2)
            :op2 (h2 / hunger-01
                  :ARG0 p2)))"
ad populum,ad populum,"# ::snt Everyone already believes that the defendant killed her husband , and that many people ca n't be wrong . 
(a / and
      :op1 (b / believe-01
            :ARG0 (e / everyone)
            :ARG1 (k / kill-01
                  :ARG0 (d / defendant)
                  :ARG1 (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 d
                              :ARG2 (h2 / husband))))
            :time (a2 / already))
      :op2 (p2 / possible-01
            :polarity -
            :ARG1 (w / wrong-04
                  :ARG1 (p3 / person
                        :quant (m / many))
                  :ARG2 k)))"
faulty generalization,fallacy of relevance,"# ::snt MSK1 video games are directly related to gun MSK1 in MSK0 and should be banned for teens . The MSK0 day should start an hour later . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / relate-01
                  :ARG1 (g / game
                        :name (n / name
                              :op1 ""MSK1"")
                        :mod (v / video))
                  :ARG2 (g2 / game
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :mod (g3 / gun))
                  :ARG1-of (d / direct-02)
                  :location (g4 / game
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :op2 (r2 / recommend-01
                  :ARG1 (b / ban-01
                        :ARG1 g
                        :ARG2 (t / teen))))
      :snt2 (r3 / recommend-01
            :ARG1 (s / start-01
                  :ARG1 (d2 / day
                        :mod (p / product
                              :name (n4 / name
                                    :op1 ""MSK0"")))
                  :time (a2 / after
                        :quant (t2 / temporal-quantity
                              :quant 1
                              :unit (h / hour))))))"
ad populum,ad populum,"# ::snt "" MSK0 is doing MSK0 "" mentality 
(m / mentality
      :mod (d / do-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 p))"
false causality,false causality,"# ::snt Global MSK0 consumption is highest in Switzerland , yet people there are among the trimmest in the industrialized world . therefore , it 's reasonable to conclude that MSK0 helps keep your weight down . 
(h / have-concession-91
      :ARG1 (r / reasonable-02
            :ARG1 (c / conclude-01
                  :ARG1 (h2 / help-01
                        :ARG0 (p / protein
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (k / keep-down-00
                              :ARG0 p
                              :ARG1 (w / weight
                                    :poss (y / you))))))
      :ARG2 (h3 / high-02
            :ARG1 (c2 / consume-01
                  :ARG1 p
                  :mod (g / globe))
            :location (c3 / country
                  :name (n2 / name
                        :op1 ""Switzerland""))
            :ARG2-of (h4 / have-degree-91
                  :ARG1 c2
                  :ARG3 (m / most)))
      :ARG1-of (c4 / cause-01
            :ARG0 (ii / include-91
                  :ARG1 (p2 / person
                        :location c3)
                  :ARG2 (p3 / person
                        :ARG1-of (h5 / have-degree-91
                              :ARG2 (t / trim-03
                                    :ARG1 p3)
                              :ARG3 (m2 / most)
                              :ARG5 (p4 / person
                                    :location (w2 / world
                                          :ARG1-of (ii2 / industrialize-01))))))))"
ad hominem,ad hominem,"# ::snt Accused on the 6 o'clock news of corruption and taking bribes , the senator said that MSK0 should all be very wary of the things MSK0 hear in MSK1 , because MSK0 know how very unreliable MSK1 can be . 
(s / say-01
      :ARG0 (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (s2 / senator))
            :ARG1-of (a / accuse-01
                  :ARG2 (a2 / and
                        :op1 (c / corrupt-01
                              :ARG0 p)
                        :op2 (b / bribe-01
                              :ARG0 p))
                  :time (n / news
                        :time (d / date-entity
                              :time ""18:00""))))
      :ARG1 (r / recommend-01
            :ARG0 p
            :ARG1 (w / wary
                  :domain (p2 / person
                        :mod (a3 / all))
                  :topic (t / thing
                        :ARG1-of (h2 / hear-01
                              :ARG0 p
                              :location (p3 / product
                                    :name (n2 / name
                                          :op1 ""MSK1""))))
                  :degree (v / very))
            :ARG1-of (c2 / cause-01
                  :ARG0 (k / know-01
                        :ARG0 p
                        :ARG1 (p4 / possible-01
                              :ARG1 (r2 / rely-01
                                    :polarity -
                                    :ARG1 p3)
                              :degree (v2 / very))))))"
intentional,ad populum,"# ::snt , that it must be true 
(ii / infer-01
      :ARG1 (t / true-01
            :ARG1 (ii2 / it)))"
false dilemma,faulty generalization,"# ::snt "" MSK0 am torn between MSK1 for MSK2 or not . But , MSK0 know that if MSK0 do n't MSK1 for MSK2 , MSK0 will MSK3 . If MSK0 MSK3 MSK2 , MSK0 get a MSK4 in the class . If MSK0 get a MSK4 , MSK2 will MSK5 MSK6 . If MSK6 MSK5 , MSK0 ca n't MSK8 . If MSK0 ca n't MSK8 , MSK0 do n't get a MSK9 . No MSK9 , no MSK10 . No MSK10 , no life ! "" 
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (k / know-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (h / have-condition-91
                        :ARG1 (e / equal-01
                              :ARG1 (t / thing
                                    :name (n2 / name
                                          :op1 ""MSK1""))
                              :ARG2 (t2 / thing
                                    :name (n3 / name
                                          :op1 ""MSK3"")))
                        :ARG2 (e2 / equal-01
                              :polarity -
                              :ARG1 t
                              :ARG2 t2))))
      :snt2 (h2 / have-condition-91
            :ARG1 (e3 / equal-01
                  :polarity -
                  :ARG1 (t3 / thing
                        :name (n4 / name
                              :op1 ""MSK6""))
                  :ARG2 (t4 / thing
                        :name (n5 / name
                              :op1 ""MSK8"")))
            :ARG2 (e4 / equal-01
                  :polarity -
                  :ARG1 (t5 / thing
                        :name (n6 / name
                              :op1 ""MSK3""))
                  :ARG2 t4))
      :snt3 (e5 / equal-01
            :polarity -
            :ARG1 (t6 / thing
                  :name (n7 / name
                        :op1 ""MSK3""))
            :ARG2 (t7 / thing
                  :name (n8 / name
                        :op1 ""MSK4""))
            :condition (e6 / equal-01
                  :polarity -
                  :ARG1 t6
                  :ARG2 t7))
      :snt4 (h3 / have-polarity-91
            :ARG1 (t8 / thing
                  :name (n9 / name
                        :op1 ""MSK9""))
            :ARG2 -)
      :snt5 (l / life
            :polarity -
            :domain (t9 / thing
                  :name (n10 / name
                        :op1 ""MSK10""))))"
ad populum,ad populum,"# ::snt "" Certainly this is the case at most colleges in America nowadays "" 
(c / case-04
      :ARG1 (t / this)
      :mod (c2 / certain)
      :location (c3 / college
            :quant (m / most)
            :location (c4 / country
                  :name (n / name
                        :op1 ""America"")))
      :time (n2 / nowadays))"
faulty generalization,fallacy of credibility,"# ::snt In a study designed by a famous academic to test the effects of MSK0 imagery on MSK1 , MSK2 were shown MSK3 of baby animals and beautiful nature scenes for MSK2 first five minutes at work . Amazingly , results showed a 10 percent leap in profits in the first quarter and record earnings over the course of a year . So , showing employees MSK0 MSK3 is a great way to increase their MSK1 and improve productivity 
(m / multi-sentence
      :snt1 (s / show-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK3"")
                  :topic (a / animal
                        :mod (b / baby)))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK2""))
            :subevent-of (s2 / study-01
                  :ARG1-of (d / design-01
                        :ARG0 (a2 / academic
                              :ARG1-of (f / fame-01))
                        :ARG3 (t3 / test-01
                              :ARG0 s2
                              :ARG1 (a3 / affect-01
                                    :ARG0 (ii / imagery
                                          :mod t)
                                    :ARG1 t2)))))
      :snt2 (c / cause-01
            :ARG1 (w / way
                  :domain (s3 / show-01
                        :ARG1 (t4 / thing
                              :name (n3 / name
                                    :op1 ""MSK0""))
                        :ARG2 (p / person
                              :ARG1-of (e / employ-01))
                        :purpose (a4 / and
                              :op1 (ii2 / increase-01
                                    :ARG0 p
                                    :ARG1 (t5 / thing
                                          :name (n4 / name
                                                :op1 ""MSK1"")))
                              :op2 (ii3 / improve-01
                                    :ARG0 p
                                    :ARG1 (p2 / productive-03
                                          :ARG0 p))))
                  :mod (g / great)))
      :snt3 (s4 / show-01
            :ARG0 (t6 / thing
                  :ARG2-of (r / result-01))
            :ARG1 (a5 / and
                  :op1 (l / leap-01
                        :ARG1 (p3 / profit-01)
                        :ARG2 (p4 / percentage-entity
                              :value 10)
                        :time (q / quarter
                              :ord (o / ordinal-entity
                                    :value 1)))
                  :op2 (r2 / record-01
                        :ARG1 (e2 / earn-01)
                        :duration (t7 / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :ARG0-of (a6 / amaze-01)))"
ad populum,ad populum,"# ::snt Stating that something should be done ( or agreed to ) because everyone else thinks this way . 
(s / state-01
      :ARG1 (r / recommend-01
            :ARG1 (o / or
                  :op1 (d / do-02
                        :ARG1 (s2 / something))
                  :op2 (a / agree-01
                        :ARG1 s2))
            :ARG1-of (c / cause-01
                  :ARG0 (t / think-01
                        :ARG0 (e / everyone
                              :mod (e2 / else))
                        :ARG1 (w / way
                              :mod (t2 / this))))))"
false dilemma,fallacy of extension,"# ::snt MSK0 : MSK0 need to know if we should stop for lunch or not . You are either MSK1 or not MSK1 , which is it ? Tina : If being MSK1 is being able to eat , MSK0 am always MSK1 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (n2 / need-01
                  :ARG0 p
                  :ARG1 (k / know-01
                        :ARG0 p
                        :ARG1 (o / or
                              :op1 (r / recommend-01
                                    :ARG1 (s2 / stop-01
                                          :ARG0 (w / we)
                                          :purpose (l / lunch)))
                              :op2 (r2 / recommend-01
                                    :polarity -
                                    :ARG1 (s3 / stop-01
                                          :ARG0 w
                                          :purpose l))))))
      :snt2 (s4 / say-01
            :ARG0 (ii / i)
            :ARG1 (a / amr-choice
                  :op1 (p2 / person
                        :name (n3 / name
                              :op1 ""MSK1"")
                        :domain (p3 / person
                              :name (n4 / name
                                    :op1 ""Tina"")))
                  :op2 (p4 / person
                        :polarity -
                        :name (n5 / name
                              :op1 ""MSK1"")
                        :domain p3))
            :ARG2 p3)
      :snt3 (h / have-condition-91
            :ARG1 (p5 / person
                  :name (n6 / name
                        :op1 ""MSK1"")
                  :domain (p6 / person
                        :name (n7 / name
                              :op1 ""MSK0""))
                  :time (a2 / always))
            :ARG2 (p7 / possible-01
                  :ARG1 (e / eat-01
                        :ARG0 p6))))"
fallacy of credibility,fallacy of credibility,"# ::snt MSK0 , says that evolution is MSK1 . Therefore , MSK0 's MSK1 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (e / evolve-01
                  :mod (t / thing
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (ii / infer-01
            :ARG1 (t2 / thing
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :poss p)))"
fallacy of relevance,ad hominem,"# ::snt , rather than considering the content of what the person is saying ? 
(ii / instead-of-91
      :ARG2 (c / consider-02
            :ARG1 (c2 / content
                  :poss (t / thing
                        :ARG1-of (s / say-01
                              :ARG0 (p / person))))))"
fallacy of extension,fallacy of relevance,"# ::snt It is ridiculous to have spent thousands of dollars to rescue two whales MSK0 in the ice . Why , look at all the people MSK0 in jobs they do n't like . 
(m / multi-sentence
      :snt1 (r / ridiculous-02
            :ARG1 (s / spend-01
                  :ARG1 (r2 / rescue-01
                        :ARG1 (w / whale
                              :quant 2
                              :name (n / name
                                    :op1 ""MSK0"")
                              :location (ii / ice)))
                  :ARG3 (m2 / multiple
                        :op1 (m3 / monetary-quantity
                              :quant 1000
                              :unit (d / dollar)))))
      :snt2 (c / cause-01
            :ARG0 (a / amr-unknown))
      :snt3 (l / look-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / person
                  :mod (a2 / all)
                  :location (j / job
                        :ARG1-of (d2 / dislike-01
                              :ARG0 (t / they)))
                  :name n
                  :op1 ""MSN"")))"
ad hominem,ad hominem,"# ::snt "" You are clearly just too young to understand this issue ! "" 
(y / young
      :ARG1-of (c / clear-06)
      :mod (j / just)
      :ARG2-of (h / have-degree-91
            :ARG1 (y2 / you)
            :ARG3 (t / too)
            :ARG6 (u / understand-01
                  :ARG0 y2
                  :ARG1 (ii / issue-02
                        :mod (t2 / this)))))"
ad populum,ad populum,"# ::snt Everyone is MSK1 that ’s coming out this weekend . You have to MSK1 too 
(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""MSK1"")
            :ARG1-of (c / come-out-09
                  :time (w / weekend
                        :mod (t / this)))
            :domain (e / everyone))
      :snt2 (o / obligate-01
            :ARG1 (y / you)
            :ARG2 (p2 / product
                  :name (n2 / name
                        :op1 ""MSK1"")
                  :domain y)
            :mod (t2 / too)))"
false dilemma,false dilemma,"# ::snt We can either agree with Barbara 's plan or just let the project fail . There is no other option . 
(m / multi-sentence
      :snt1 (o / or
            :op1 (p / possible-01
                  :ARG1 (a / agree-01
                        :ARG0 (w / we)
                        :ARG1 (p2 / plan-01
                              :ARG0 (p3 / person
                                    :name (n / name
                                          :op1 ""Barbara"")))))
            :op2 (l / let-01
                  :ARG0 w
                  :ARG1 (f / fail-01
                        :ARG1 (p4 / project))
                  :mod (j / just)))
      :snt2 (o2 / option
            :polarity -
            :mod (o3 / other)))"
fallacy of logic,faulty generalization,"# ::snt MSK0 has MSK3 MSK3 MSK0 entire life and MSK0 does n't have MSK2 . Therefore MSK3 does n't cause MSK2 . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-03
                  :ARG0 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK3"")))
            :op2 (h2 / have-03
                  :polarity -
                  :ARG0 t
                  :ARG1 t2)
            :op3 (l / live-01
                  :ARG0 t
                  :mod (e / entire)))
      :snt2 (c / cause-01
            :polarity -
            :ARG0 (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK3""))
            :ARG1 (t4 / thing
                  :name (n4 / name
                        :op1 ""MSK2""))))"
ad populum,false causality,"# ::snt Un pleasant MSK0 of MSK1 diet There is MSK12 movement from people who choose not to MSK2 MSK3 , and their MSK4 vary from the MSK11 to the effort of making MSK5 looks MSK6 or ideal . MSK5 is a rather ludicrous MSK0 . Human beings have been MSK2 MSK3 since thousands of years and counting . There are no cases when MSK2 MSK3 MSK4 severe problems , provided MSK3 is MSK2 in MSK6 amount , for everyone . Many say that being a MSK1 means having a healthier , MSK12 MSK7 and mind . Actualy , according to studies , our MSK7 are perfectly capable of digesting , absorbing and making full use of the many beneficial nutrients found in MSK9 . Thus , there is no MSK11 MSK4 to completely avoid MSK9 . Do n’t put unnecessary restrain on yourselves . MSK10 should enjoy life to the fullest ; give MSK10 best in any possible situations , as well as MSK2 MSK3 . What is the claims from the text above ? 
(m / multi-sentence
      :snt1 (a / and
            :op1 (p / product
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (p2 / pleasant-02
                        :polarity -)
                  :part-of (d / diet
                        :mod (p3 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))))
            :op2 (m2 / move-02
                  :ARG0 (p4 / person
                        :ARG0-of (c / choose-01
                              :polarity -
                              :ARG1 (a2 / and
                                    :op1 (p5 / product
                                          :name (n3 / name
                                                :op1 ""MSK2""))
                                    :op2 (p6 / product
                                          :name (n4 / name
                                                :op1 ""MSK3"")))))
                  :ARG1 (a3 / and
                        :op1 (p7 / product
                              :name (n5 / name
                                    :op1 ""MSK12""))
                        :op2 (p8 / product
                              :name (n6 / name
                                    :op1 ""MSK4"")))
                  :purpose (e / effort-01
                        :ARG1 (m3 / make-02
                              :ARG1 (o / or
                                    :op1 (l / look-02
                                          :ARG0 (p9 / product
                                                :name (n7 / name
                                                      :op1 ""MSK5""))
                                          :ARG1 (p10 / product
                                                :name (n8 / name
                                                      :op1 ""MSK6"")))
                                    :op2 (ii / ideal
                                          :domain p9))))))
      :snt2 (c2 / claim-01
            :ARG0 (s / study-01)
            :ARG1 (c3 / capable-01
                  :ARG1 (e2 / enzyme
                        :name (n9 / name
                              :op1 ""MSK7"")
                        :poss (w / we))
                  :ARG2 (a4 / and
                        :op1 (d2 / digest-01
                              :ARG0 e2
                              :ARG1 (n10 / nutrient
                                    :ARG1-of (b / benefit-01)
                                    :quant (m4 / many)
                                    :ARG1-of (f / find-01
                                          :ARG0 (e3 / enzyme
                                                :name (n11 / name
                                                      :op1 ""MSK9""))))
                              :op2 (a5 / absorb-01
                                    :ARG0 e2
                                    :ARG1 n10)))
                  :ARG1-of (p11 / perfect-02))
            :ARG2 (e4 / everyone))
      :snt3 (r / recommend-01
            :ARG1 (p12 / put-01
                  :polarity -
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (r2 / restrain-01
                        :ARG1 y
                        :ARG1-of (n12 / need-01
                              :polarity -))
                  :ARG2 y)))"
ad hominem,ad hominem,"# ::snt MSK0 have no idea what MSK0 're talking about . 
(h / have-03
      :polarity -
      :ARG0 (p / person
            :name (n / name
                  :op1 ""MSK0""))
      :ARG1 (ii / idea
            :topic (t / thing
                  :ARG1-of (t2 / talk-01
                        :ARG0 p))))"
faulty generalization,faulty generalization,"# ::snt MSK0 is concerned when MSK1 finds out that MSK1 MSK2 class one day . MSK1 tells MSK1 that MSK1 will now start MSK2 more frequently . Then MSK1 will drop out altogether , never graduate or get into college , and end up unemployed and living at home for the rest of MSK1 life . What type of fallacy has MSK0 committed ? 
(m / multi-sentence
      :snt1 (c / concern-01
            :ARG0 (f / find-out-03
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""MSK1""))
                  :ARG1 (c2 / class
                        :mod (t / thing
                              :name (n2 / name
                                    :op1 ""MSK2"")))
                  :time (d / day
                        :mod (o / one)))
            :ARG1 p)
      :snt2 (t2 / tell-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""MSK1""))
            :ARG1 (s / start-01
                  :ARG0 p2
                  :ARG1 (t3 / thing
                        :name (n4 / name
                              :op1 ""MSK2""))
                  :time (n5 / now)
                  :ARG1-of (f2 / frequent-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 s
                              :ARG3 (m2 / more))))
            :ARG2 (p3 / person
                  :name (n6 / name
                        :op1 ""MSK1"")))
      :snt3 (a / and
            :op1 (d2 / drop-out-04
                  :ARG0 (p4 / person
                        :name (n7 / name
                              :op1 ""MSK1""))
                  :degree (a2 / altogether))
            :op2 (o2 / or
                  :op1 (g / graduate-01
                        :polarity -
                        :ARG1 p4
                        :time (e / ever))
                  :op2 (g2 / get-05
                        :polarity -
                        :ARG1 p4
                        :ARG2 (c3 / college)))
            :op3 (a3 / and
                  :op1 (e2 / employ-01
                        :polarity -
                        :ARG1 p4)
                  :op2 (l / live-01
                        :ARG0 p4
                        :location (h2 / home))
                  :time (r / rest
                        :part-of l
                        :ARG0 p4
                        :mod t3)))
      :snt4 (c4 / commit-02
            :ARG0 (p5 / person
                  :name (n8 / name
                        :op1 ""MSK0""))
            :ARG1 (f3 / fallacy
                  :mod (t4 / type
                        :mod (a4 / amr-unknown)))))"
intentional,intentional,"# ::snt MSK0 is real because nobody has proven MSK0 does n't exist . ' MSK0 is an example of which fallacy ? 
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (p / prove-01
                  :ARG0 (n / nobody)
                  :ARG1 (e / exist-01
                        :polarity -
                        :ARG1 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK0""))))
            :ARG1 (r / real-04
                  :ARG1 t))
      :snt2 (e2 / exemplify-01
            :ARG0 (t2 / thing
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG1 (f / fallacy)))"
appeal to emotion,appeal to emotion,"# ::snt MSK1 A MSK0 with the heart for every Filipino MSK1 - Veterans MSK0 
(e / equal-01
      :ARG1 (s / string-entity
            :value ""MSK1""
            :part (h / heart))
      :ARG2 (s2 / string-entity
            :value ""MSK1""
            :part h
            :ARG1-of (m / mean-01
                  :ARG2 (s3 / string-entity
                        :value ""MSK0""
                        :beneficiary (v / veteran)))
            :mod (c / country
                  :name (n / name
                        :op1 ""Philippines""))
            :mod (e2 / every)))"
ad hominem,ad hominem,"# ::snt We ca n't believe what MSK0 says out of that ugly mouth of MSK0 . 
(p / possible-01
      :polarity -
      :ARG1 (b / believe-01
            :ARG0 (w / we)
            :ARG1 (t / thing
                  :ARG1-of (s / say-01
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0"")
                              :part (m / mouth
                                    :mod (u / ugly)
                                    :mod (t2 / that)))))))"
faulty generalization,faulty generalization,"# ::snt MSK4 MSK0 roommate Fatima said her MSK2 was MSK3 , and the one MSK0 ’m in is MSK3 , too . All MSK2 must be MSK3 ! MSK4 Insisted Baneen . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Fatima"")
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (p2 / person
                              :name (n2 / name
                                    :op1 ""MSK4""))
                        :ARG2 (r / roommate))
                  :mod (t / thing
                        :name (n3 / name
                              :op1 ""MSK0"")))
            :ARG1 (a / and
                  :op1 (t2 / thing
                        :name (n4 / name
                              :op1 ""MSK3"")
                        :domain (t3 / thing
                              :name (n5 / name
                                    :op1 ""MSK2""))
                        :poss p)
                  :op2 (t4 / thing
                        :name (n6 / name
                              :op1 ""MSK3"")
                        :domain t3
                        :mod (t5 / too))))
      :snt2 (ii / insist-01
            :ARG0 (p3 / person
                  :name (n7 / name
                        :op1 ""Baneen""))
            :ARG1 (o / obligate-01
                  :ARG1 (t6 / thing
                        :name (n8 / name
                              :op1 ""MSK3"")
                        :domain t3
                        :mod (a2 / all)))))"
fallacy of extension,appeal to emotion,"# ::snt There must be objective rights and wrongs in the universe . If not , how can you possibly say that torturing babies for fun could ever be right ? 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG2 (a / and
                  :op1 (r / right-05
                        :mod (o2 / objective))
                  :op2 (w / wrong-02
                        :mod o2)
                  :location (u / universe)))
      :snt2 (p / possible-01
            :ARG1 (s / say-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / possible-01
                        :ARG1 (r2 / right-02
                              :ARG1 (t / torture-01
                                    :ARG1 (b / baby)
                                    :purpose (f / fun-01))
                              :time (e / ever)))
                  :manner (a2 / amr-unknown))
            :condition (h / have-polarity-91
                  :ARG2 -)))"
ad populum,intentional,"# ::snt Only asking MSK0 MSK0 MSK1 about Christian Heritage and saying MSK0 MSK1 are the "" majority "" of people . 
(a / and
      :op1 (a2 / ask-01
            :ARG1 (h / heritage
                  :mod (r / religious-group
                        :name (n / name
                              :op1 ""Christian"")))
            :ARG2 (p / person
                  :name n
                  :op1 ""MSK0""
                  :op2 ""MSK1""))
      :op2 (s / say-01
            :ARG1 (m / majority
                  :domain p))
      :mod (o / only))"
faulty generalization,appeal to emotion,"# ::snt Children should not go trick or MSK0 , as there always exists the possibility that someone could poison the MSK0 . 
(r / recommend-01
      :ARG1 (g / go-05
            :polarity -
            :ARG0 (c / child)
            :ARG1 (o / or
                  :op1 (t / trick-01)
                  :op2 (p / product
                        :name (n / name
                              :op1 ""MSK0""))))
      :ARG1-of (c2 / cause-01
            :ARG0 (p2 / possible-01
                  :ARG1 (p3 / poison-02
                        :ARG0 (s / someone)
                        :ARG1 p)
                  :time (a / always))))"
ad hominem,faulty generalization,"# ::snt All of those who hate the Duterte administration are CPP - NPA supporters . 
(p / person
      :ARG0-of (s / support-01
            :ARG1 (c / criminal-organization
                  :name (n / name
                        :op1 ""CPP"")
                  :ARG1-of (m / mean-01
                        :ARG2 (c2 / criminal-organization
                              :name (n2 / name
                                    :op1 ""NPA"")))))
      :domain (p2 / person
            :mod (a / all)
            :ARG0-of (h / hate-01
                  :ARG1 (g / government-organization
                        :ARG0-of (a2 / administrate-01)
                        :mod (p3 / person
                              :name (n3 / name
                                    :op1 ""Duterte""))))))"
fallacy of logic,fallacy of logic,"# ::snt If MSK0 were based on MSK1 MSK2 , then MSK0 would be invalid . But the MSK2 are not MSK1 . Therefore , MSK0 is valid . 
(m / multi-sentence
      :snt1 (v / valid-02
            :polarity -
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :condition (b / base-02
                  :ARG1 t
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1""
                              :op2 ""2""))))
      :snt2 (c / contrast-01
            :ARG2 (e / equal-01
                  :polarity -
                  :ARG1 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG2 (t4 / thing
                        :name (n4 / name
                              :op1 ""MSK1""))))
      :snt3 (c2 / cause-01
            :ARG1 (v2 / valid-02
                  :ARG1 (t5 / thing
                        :name (n5 / name
                              :op1 ""MSK0"")))))"
circular reasoning,circular reasoning,"# ::snt MSK0 is good at MSK1 because MSK0 MSK1 words effectively . "" 
(g / good-03
      :ARG1 (t / thing
            :name (n / name
                  :op1 ""MSK0"")
            :ARG1-of (w / word-01))
      :ARG2 (t2 / thing
            :name (n2 / name
                  :op1 ""MSK1"")
            :ARG1-of (w2 / word-01))
      :ARG1-of (c / cause-01
            :ARG0 (e / effective-04
                  :ARG0 t
                  :ARG1 w2)))"
faulty generalization,appeal to emotion,"# ::snt MSK0 can not be MSK1 . If MSK0 were MSK1 , we ’d all be smelly apes . 
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (s / same-01
                        :ARG2 (p3 / person
                              :name (n2 / name
                                    :op1 ""MSK1"")))))
      :snt2 (a / ape
            :ARG1-of (s2 / stink-01)
            :domain (w / we
                  :mod (a2 / all))
            :condition (p4 / person
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :ARG1-of (s3 / same-01
                        :ARG2 p3))))"
ad populum,appeal to emotion,"# ::snt company 's slogan "" Eat Fresh . "" 
(s / slogan
      :poss (c / company)
      :domain (e / eat-01
            :mode imperative
            :ARG0 (y / you)
            :manner (f / fresh-04)))"
fallacy of relevance,fallacy of relevance,"# ::snt MSK0 MSK1 have objected to the new MSK2 batteries that were purchased for MSK3 program , alleging that MSK0 have no demonstrable validity , were not adequately normed for the kind of MSK4 MSK3 see , and are unusable for MSK4 who are physically disabled . What MSK1 have conveniently failed to mention , however , is that MSK0 MSK6 less than a third of the MSK6 for the other MSK2 MSK3 had been MSK5 , are much easier to learn , and can be administered and scored in less than half the time of the MSK2 MSK3 MSK5 to MSK5 . 
(m / multi-sentence
      :snt1 (o / object-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (b / battery
                  :ARG1-of (n2 / new-01)
                  :mod (p / product
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG1-of (p2 / purchase-01
                        :purpose (p3 / program
                              :name (n4 / name
                                    :op1 ""MSK3"")))))
      :snt2 (a / allege-01
            :ARG0 t
            :ARG1 (a2 / and
                  :op1 (v / valid-02
                        :polarity -
                        :ARG1 (t2 / thing
                              :name (n5 / name
                                    :op1 ""MSK0""))
                        :ARG1-of (d / demonstrate-01
                              :ARG1-of (p4 / possible-01)))
                  :op2 (h / have-degree-91
                        :ARG1 (l / learn-01
                              :ARG1 t2)
                        :ARG2 (e / easy-05
                              :ARG1 l)
                        :ARG3 (m2 / more
                              :quant (m3 / much))
                        :ARG4 (t3 / time
                              :poss (a3 / and
                                    :op1 (p5 / program
                                          :name (n6 / name
                                                :op1 ""MSK2""))
                                    :op2 (p6 / program
                                          :name (n7 / name
                                                :op1 ""MSK3"")))))
                  :op3 (h2 / have-degree-91
                        :ARG1 (a4 / administer-01
                              :ARG1 t2)
                        :ARG2 e)
                  :ARG3 (m4 / more
                        :quant (l2 / less-than
                              :op1 ""1/2""))
                  :ARG4 (t4 / time
                        :poss (a5 / and
                              :op1 (p7 / program
                                    :name (n8 / name
                                          :op1 ""MSK3""))
                              :op2 (p8 / program
                                    :name (n9 / name
                                          :op1 ""MSK5"")))))
            :op4 (p9 / possible-01
                  :polarity -
                  :ARG1 (u / use-01
                        :ARG1 (t5 / thing
                              :name (n10 / name
                                    :op1 ""MSK4"")
                              :ARG1-of (d2 / disable-01
                                    :manner (p10 / physical))))))
      :ARG1-of (c / contrast-01
            :ARG2 (f / fail-01
                  :ARG0 (t6 / thing
                        :name (n11 / name
                              :op1 ""MSK1""))
                  :ARG2 (m5 / mention-01
                        :ARG0 t6)
                  :manner (c2 / convenient))))"
circular reasoning,circular reasoning,"# ::snt "" Running MSK0 is very MSK1 because MSK0 is so MSK1 . "" 
(c / cause-01
      :ARG0 (s / same-01
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1"")))
      :ARG1 (r / run-01
            :ARG1 t
            :manner (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK1"")
                  :degree (v / very))))"
ad hominem,ad hominem,"# ::snt Look at that MSK0 ! Would anyone vote for that ? Can you imagine that as the MSK0 of our next president ? 
(m / multi-sentence
      :snt1 (l / look-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :snt2 (v / vote-01
            :ARG0 (a / anyone)
            :ARG1 (t / that)
            :polarity (a2 / amr-unknown))
      :snt3 (p2 / possible-01
            :ARG1 (ii / imagine-01
                  :ARG0 (y2 / you)
                  :ARG1 (t2 / that)
                  :ARG2 (p3 / person
                        :name n
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (p4 / president
                                    :poss (w / we)
                                    :mod (n2 / next))))
                  :polarity (a3 / amr-unknown))))"
fallacy of relevance,appeal to emotion,"# ::snt They can not take MSK0 to jail even if MSK0 did rob the bank and take millions of pesos … MSK0 is already too old and weak to be locked up . 
(a / and
      :op1 (p / possible-01
            :polarity -
            :ARG1 (t / take-01
                  :ARG0 (t2 / they)
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG3 (j / jail))
            :concession (e / even-if
                  :op1 (a2 / and
                        :op1 (r / rob-01
                              :ARG0 p2
                              :ARG1 (b / bank))
                        :op2 t
                        :ARG0 p2
                        :ARG1 (m / multiple
                              :op1 (m2 / monetary-quantity
                                    :quant 1000000
                                    :unit (p3 / peso))))))
      :op2 (h / have-degree-91
            :ARG1 p2
            :ARG2 (a3 / and
                  :op1 (o / old)
                  :op2 (w / weak-02))
            :ARG3 (t3 / too)
            :ARG6 (l / lock-up-03
                  :ARG1 p2)
            :time (a4 / already)))"
faulty generalization,faulty generalization,"# ::snt Everyone knows that teenagers are lazy 
(k / know-01
      :ARG0 (e / everyone)
      :ARG1 (l / lazy
            :domain (t / teenager)))"
fallacy of extension,fallacy of relevance,"# ::snt MSK0 'd also like MSK1 to consider the MSK2 that MSK3 intend to attack both MSK4 and MSK0 . MSK5 does n't MSK6 MSK0 'm excluding the MSK2 that MSK5 really is MSK4 MSK3 are after . MSK0 just want MSK1 to think critically about what MSK1 are doing . Pieter van Heerden was murdered . That MSK6 there are eyes and ears everywhere . Experience has taught MSK0 that red herrings are an important part of intelligence work . Do MSK1 follow MSK0 ? 
(m / multi-sentence
      :snt1 (l / like-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (c / consider-02
                  :ARG0 p
                  :ARG1 (t / thing
                        :name (n2 / name
                              :op1 ""MSK2"")
                        :ARG0-of (a / attack-01
                              :ARG1 (a2 / and
                                    :op1 (p2 / person
                                          :name (n3 / name
                                                :op1 ""MSK3""))
                                    :op2 p)
                              :ARG1-of (ii / intend-01
                                    :ARG0 a2))))
            :mod (a3 / also))
      :snt2 m
      :snt3 m
      :snt4 (f / follow-01
            :ARG1 (p3 / person
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG2 (p4 / person
                  :name (n5 / name
                        :op1 ""MSK0""))
            :polarity (a4 / amr-unknown))
      :snt5 (e / exclude-01
            :polarity -
            :ARG0 (p5 / person
                  :name (n6 / name
                        :op1 ""MSK5""))
            :ARG1 (p6 / person
                  :name (n7 / name
                        :op1 ""MSK2""))
            :polarity (a5 / amr-unknown))
      :snt6 (a6 / and
            :op1 (e2 / eye)
            :op2 (e3 / ear)
            :location (e4 / everywhere)
            :domain (t2 / thing
                  :name (n8 / name
                        :op1 ""MSK3"")))
      :snt7 (w / want-01
            :ARG0 (p7 / person
                  :name (n9 / name
                        :op1 ""MSK0""))
            :ARG1 (t3 / think-01
                  :ARG0 (p8 / person
                        :name (n10 / name
                              :op1 ""MSK1""))
                  :ARG1 (t4 / thing
                        :ARG1-of (d / do-02
                              :ARG0 p8))
                  :manner (c2 / criticism-04
                        :ARG0 p8))))"
ad hominem,fallacy of relevance,"# ::snt MSK0 'm tailgating MSK1 , because MSK1 cut MSK0 off ! 
(c / cause-01
      :ARG0 (c2 / cut-off-04
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 p)
      :ARG1 (t / tailgate-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (p3 / product
                  :name (n3 / name
                        :op1 ""MSK1""))))"
fallacy of relevance,false causality,"# ::snt MSK0 is convinced MSK0 has MSK1 . One time when MSK0 MSK2 to put on MSK1 , MSK0 got MSK3 . MSK0 concludes that because MSK0 MSK2 to wear MSK1 , MSK0 got MSK3 . MSK0 does n't wash MSK1 often . MSK4 is n't relevant to the example , but MSK4 is disturbing nonetheless . 
(m / multi-sentence
      :snt1 (c / convince-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (h / have-03
                  :ARG0 p
                  :ARG1 (t / thing
                        :name (n2 / name
                              :op1 ""MSK1""))))
      :snt2 (c2 / contrast-01
            :ARG1 (r / relevant-01
                  :polarity -
                  :ARG1 (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK4""))
                  :ARG2 (e / example))
            :ARG2 (d / disturb-01
                  :ARG0 t2))
      :snt3 (g / get-01
            :ARG0 (p2 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (t3 / thing
                  :name (n5 / name
                        :op1 ""MSK3""))
            :time (p3 / put-on-08
                  :ARG0 p2
                  :ARG1 (t4 / thing
                        :name (n6 / name
                              :op1 ""MSK1"")))
            :ARG1-of (c3 / cause-01
                  :ARG0 (h2 / have-03
                        :ARG0 p2
                        :ARG1 (t5 / thing
                              :name (n7 / name
                                    :op1 ""MSK2""))
                        :purpose (w / wear-01
                              :ARG0 p2
                              :ARG1 t4)))
            :time (o / one)))"
fallacy of logic,circular reasoning,"# ::snt MSK0 MSK1 : a MSK1 that is MSK0 . 
(e / equal-01
      :ARG1 (s / string-entity
            :value ""MSK0"")
      :ARG2 (s2 / string-entity
            :value ""MSK1""))"
faulty generalization,faulty generalization,"# ::snt Asserting that if we allow "" A "" to MSK0 , then "" Z "" will consequently MSK0 too , therefore "" A "" should not MSK0 . 
(a / assert-02
      :ARG1 (c / cause-01
            :ARG0 (a2 / allow-01
                  :ARG0 (w / we)
                  :ARG1 (s / string-entity
                        :value ""A""
                        :destination (s2 / string-entity
                              :value ""MSK0"")))
            :ARG1 (s3 / string-entity
                  :value ""Z""
                  :destination s2
                  :ARG1-of (c2 / cause-01
                        :ARG0 (r / recommend-01
                              :polarity -
                              :ARG1 s3
                              :ARG2 s2)))
            :condition a2))"
appeal to emotion,fallacy of extension,"# ::snt MSK0 is against the new F - 99 laser fighter . MSK0 ’m for it because MSK0 do n’t want to leave America defenseless . 
(m / multi-sentence
      :snt1 (o / oppose-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / aircraft-type
                  :name (n2 / name
                        :op1 ""F-99"")
                  :ARG0-of (f / fight-01
                        :instrument (l / laser))
                  :ARG1-of (n3 / new-01)))
      :snt2 (c / cause-01
            :ARG0 (w / want-01
                  :polarity -
                  :ARG0 (p2 / person
                        :name (n4 / name
                              :op1 ""MSK0""))
                  :ARG1 (l2 / leave-12
                        :ARG0 p2
                        :ARG1 (c2 / country
                              :name (n5 / name
                                    :op1 ""America"")
                              :ARG1-of (d / defend-01
                                    :polarity -))))
            :ARG1 (s / support-01
                  :ARG0 p2
                  :ARG1 (ii / it))))"
faulty generalization,faulty generalization,"# ::snt We have to stop the tuition increase ! The next thing you know , they 'll be charging $ 40,000 a semester ! 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (w / we)
            :ARG2 (s / stop-01
                  :ARG0 w
                  :ARG1 (ii / increase-01
                        :ARG1 (t / tuition))))
      :snt2 (c / charge-01
            :ARG0 (t2 / they)
            :ARG1 (r / rate-entity-91
                  :ARG1 (m2 / monetary-quantity
                        :quant 40000
                        :unit (d / dollar))
                  :ARG2 (s2 / semester))
            :time (t3 / thing
                  :ARG1-of (k / know-01
                        :ARG0 (y / you))
                  :mod (n / next))))"
ad hominem,ad hominem,"# ::snt MSK0 : We should have tastier MSK1 ! Jaylen : Do n't listen to MSK0 ! MSK0 's a terrible person ! I saw MSK0 trip another student and steal MSK0 MSK1 money ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (h / have-03
                        :ARG0 (w / we)
                        :ARG1 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1"")
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (t / tastier)
                                    :ARG3 (m2 / more))))))
      :snt2 (s2 / say-01
            :ARG0 (ii / i)
            :ARG1 (l / listen-01
                  :mode imperative
                  :polarity -
                  :ARG0 (p3 / person
                        :name (n3 / name
                              :op1 ""Jaylen""))
                  :ARG1 p
                  :ARG1-of (c / cause-01
                        :ARG0 (t2 / terrible-01
                              :ARG1 p)))
            :ARG2 p3)
      :snt3 (s3 / see-01
            :ARG0 ii
            :ARG1 (a / and
                  :op1 (t3 / trip-03
                        :ARG0 p
                        :ARG1 (p4 / person
                              :ARG0-of (s4 / study-01)
                              :mod (a2 / another)))
                  :op2 (s5 / steal-01
                        :ARG0 p
                        :ARG1 (m3 / money
                              :mod (p5 / product
                                    :name (n4 / name
                                          :op1 ""MSK1"")))
                        :ARG2 p5))))"
intentional,circular reasoning,"# ::snt We know MSK0 started in a MSK1 because MSK0 's too MSK2 to have just been the result of basic circumstance . But MSK0 has n't been as MSK2 for China which proves that MSK0 's MSK1 - made . Because MSK0 's MSK2 . 
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (w / we)
            :ARG1 (s / start-01
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG2 (t2 / thing
                        :name (n2 / name
                              :op1 ""MSK1"")))
            :ARG1-of (c / cause-01
                  :ARG0 (r / result-01
                        :ARG1 (c2 / circumstance
                              :mod (b / basic))
                        :ARG2 t
                        :mod (j / just))))
      :snt2 (c3 / contrast-01
            :ARG2 (h / have-mod-91
                  :polarity -
                  :ARG1 t
                  :ARG2 (t3 / thing
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :beneficiary (c4 / country
                        :name (n4 / name
                              :op1 ""China""))
                  :ARG0-of (p / prove-01
                        :ARG1 (m2 / make-01
                              :ARG1 (t4 / thing
                                    :name (n5 / name
                                          :op1 ""MSK1"")
                                    :poss (t5 / thing
                                          :name (n6 / name
                                                :op1 ""MSK2"")
                                          :poss t))))))
      :snt3 (c5 / cause-01
            :ARG0 (t6 / thing
                  :name (n7 / name
                        :op1 ""MSK2"")
                  :poss t5)))"
false causality,appeal to emotion,"# ::snt "" MSK0 are lice ; MSK0 cause typhus ( Painful / deadly disease ) . "" 
(a / and
      :op1 (l / lice
            :domain (d / disease
                  :name (n / name
                        :op1 ""MSK0"")))
      :op2 (c / cause-01
            :ARG0 d
            :ARG1 (d2 / disease
                  :name (n2 / name
                        :op1 ""typhus"")
                  :ARG0-of (p / pain-01)
                  :ARG0-of (k / kill-01))))"
ad hominem,fallacy of relevance,"# ::snt "" We must legalize weed , it is tearing families apart . "" Response : "" But look at MSK0 , MSK0 are obviously criminals . "" 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (w / we)
            :ARG2 (l / legalize-01
                  :ARG0 w
                  :ARG1 (w2 / weed))
            :ARG0-of (c / cause-01
                  :ARG1 (t / tear-01
                        :ARG0 w2
                        :ARG1 (f / family)
                        :ARG2 (a / apart))))
      :snt2 (r / respond-01
            :ARG2 (c2 / contrast-01
                  :ARG2 (l2 / look-01
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSK0"")
                              :ARG2-of (c3 / criminal-03
                                    :ARG1-of (o2 / obvious-01)))))))"
false dilemma,false dilemma,"# ::snt "" Judge Danforth in MSK0 , ' The Crucible , ' offers MSK1 two choice : MSK1 are either with this court or against MSK0 "" IS an example of MSK0 . 
(e / exemplify-01
      :ARG0 (o / offer-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Danforth"")
                  :ARG0-of (j / judge-01)
                  :location (b / book
                        :name (n2 / name
                              :op1 ""The""
                              :op2 ""Crucible"")))
            :ARG1 (c / choose-01
                  :quant 2
                  :ARG1 (a / amr-choice
                        :op1 (c2 / court
                              :mod (t / this))
                        :op2 (o2 / oppose-01
                              :ARG0 (p2 / person
                                    :name (n3 / name
                                          :op1 ""MSK1""))
                              :ARG1 c2)))
            :ARG3 p2)
      :ARG1 (l / law
            :name (n4 / name
                  :op1 ""MSK0"")))"
fallacy of credibility,intentional,"# ::snt The makers of MSK0 Candy MSK2 point to research showing that of the five MSK1 where MSK0 MSK2 sell the most units , three of them are in the top ten healthiest MSK1 on Earth , therefore MSK0 MSK2 are healthy . 
(p / point-01
      :ARG0 (p2 / person
            :ARG0-of (m / make-01
                  :ARG1 (p3 / product
                        :name (n / name
                              :op1 ""MSK0""
                              :op2 ""Candy""
                              :op3 ""MSK2""))))
      :ARG1 (r / research-01
            :ARG0-of (s / show-01
                  :ARG1 (ii / include-91
                        :ARG1 (p4 / product
                              :quant 3
                              :name (n2 / name
                                    :op1 ""MSK0""
                                    :op2 ""MSK2""))
                        :ARG2 (p5 / product
                              :quant 5
                              :name (n3 / name
                                    :op1 ""MSK1"")
                              :location-of (s2 / sell-01
                                    :ARG1 (u / unit
                                          :ARG1-of (h / have-quant-91
                                                :ARG3 (m2 / most)))))
                        :ARG3 (t / top
                              :quant 10
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (h3 / healthy)
                                    :ARG3 (m3 / most)
                                    :ARG5 (p6 / product
                                          :name (n4 / name
                                                :op1 ""MSK1"")
                                          :location (p7 / planet
                                                :name (n5 / name
                                                      :op1 ""Earth"")))))
                        :ARG0-of (c / cause-01
                              :ARG1 h3
                              :domain p3)))))"
faulty generalization,faulty generalization,"# ::snt All chess players are geniuses . 
(g / genius
      :domain (p / person
            :ARG0-of (p2 / play-01
                  :ARG1 (c / chess))
            :mod (a / all)))"
ad populum,fallacy of credibility,"# ::snt The claim that because somebody famous supports MSK0 , MSK0 must be right . This fallacy is often used in advertising . 
(m / multi-sentence
      :snt1 (c / claim-01
            :ARG1 (ii / infer-01
                  :ARG1 (r / right-06
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSK0"")))
                  :ARG2 (s / support-01
                        :ARG0 (s2 / somebody
                              :ARG1-of (f / fame-01))
                        :ARG1 p)))
      :snt2 (u / use-01
            :ARG1 (f2 / fallacy
                  :mod (t / this))
            :ARG2 (a / advertise-01)
            :frequency (o / often)))"
false dilemma,false dilemma,"# ::snt MSK0 You can start a MSK1 early , or build financial stability for a better MSK1 life in the future . MSK0 
(m / multi-sentence
      :snt1 (p / product
            :name (n / name
                  :op1 ""MSK1""))
      :snt2 (p2 / possible-01
            :ARG1 (o / or
                  :op1 (s / start-01
                        :ARG0 (y / you)
                        :ARG1 (p3 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :time (e / early))
                  :op2 (b / build-01
                        :ARG0 y
                        :ARG1 (s2 / stability
                              :mod (f / finance))
                        :purpose (l / life
                              :mod p3
                              :time (f2 / future)
                              :ARG1-of (h / have-degree-91
                                    :ARG2 (g / good-02
                                          :ARG1 l)
                                    :ARG3 (m2 / more)))))))"
fallacy of credibility,fallacy of extension,"# ::snt SM 1 : Second World War discussion 
(c / concern-02
      :ARG0 (p / product
            :name (n / name
                  :op1 ""SM""
                  :op2 1))
      :ARG1 (d / discuss-01
            :ARG1 (w / war
                  :name (n2 / name
                        :op1 ""Second""
                        :op2 ""World""
                        :op3 ""War""))))"
false causality,false causality,"# ::snt It ’s cold on a summer day . Global warming is a hoax . 
(m / multi-sentence
      :snt1 (c / cold-01
            :time (d / day
                  :mod (s / summer)))
      :snt2 (h / hoax-01
            :ARG2 (w / warm-01
                  :ARG1 (g / globe))))"
ad hominem,faulty generalization,"# ::snt MSK0 taught MSK0 older brother , who was the MSK1 MSK2 . MSK0 decides to be strict with MSK0 from the very first day of MSK1 because MSK0 thinks MSK0 will be a MSK2 , too . 
(m / multi-sentence
      :snt1 (t / teach-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0"")
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 p
                        :ARG2 (b / brother
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (o / old)
                                    :ARG3 (m2 / more))))
                  :mod (t2 / thing
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :mod (t3 / thing
                        :name (n4 / name
                              :op1 ""MSK2""))))
      :snt2 (d / decide-01
            :ARG0 (p3 / person
                  :name (n5 / name
                        :op1 ""MSK0""))
            :ARG1 (s / strict
                  :domain p3
                  :time (f / from
                        :op1 (d2 / day
                              :ord (o2 / ordinal-entity
                                    :value 1
                                    :degree (v / very))
                              :part-of (t4 / thing
                                    :name (n6 / name
                                          :op1 ""MSK1"")))))
            :ARG1-of (c / cause-01
                  :ARG0 (t5 / think-01
                        :ARG0 p3
                        :ARG1 (p4 / person
                              :name (n7 / name
                                    :op1 ""MSK2"")
                              :domain p3
                              :mod (t6 / thing
                                    :name (n8 / name
                                          :op1 ""MSK2""))
                              :mod (t7 / too))))))"
fallacy of extension,fallacy of extension,"# ::snt Charlie : Illegal posting and MSK3 of songs online are crippling MSK0 . MSK1 : MSK1 could n’t be more wrong ; MSK0 is doing just fine . MSK2 ca n’t believe MSK1 think the government should be allowed to regulate what MSK2 MSK3 with MSK2 MSK4 friends . MSK4 No one wants a world where MSK2 ca n’t loan a book to MSK2 girlfriend , let MSK2 roommate borrow MSK2 iPod , or MSK3 a funny meme with MSK2 blog followers . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Charlie""))
            :ARG1 (c / cripple-01
                  :ARG0 (a / and
                        :op1 (p2 / post-01
                              :ARG2 (o / online)
                              :ARG1-of (l / legal-02
                                    :polarity -))
                        :op2 (t / thing
                              :name (n2 / name
                                    :op1 ""MSK3"")
                              :topic (s2 / song)))
                  :ARG1 (p3 / person
                        :name (n3 / name
                              :op1 ""MSK0""))))
      :snt2 (s3 / say-01
            :ARG0 (p4 / person
                  :name (n4 / name
                        :op1 ""MSK1""))
            :ARG1 (a2 / and
                  :op1 (p5 / possible-01
                        :polarity -
                        :ARG1 (w / wrong-04
                              :ARG1 (p6 / person
                                    :name (n5 / name
                                          :op1 ""MSK2""))
                              :ARG2-of (h / have-degree-91
                                    :ARG1 p6
                                    :ARG3 (m2 / more))))
                  :op2 (d / do-02
                        :ARG0 (p7 / person
                              :name (n6 / name
                                    :op1 ""MSK0""))
                        :ARG1-of (f / fine-04
                              :mod (j / just)))
                  :op3 (t2 / think-01
                        :ARG0 p6
                        :ARG1 (r / recommend-01
                              :ARG1 (a3 / allow-01
                                    :ARG1 (r2 / regulate-01
                                          :ARG0 (g / government-organization
                                                :ARG0-of (g2 / govern-01))
                                          :ARG1 (a4 / and
                                                :op1 (t3 / thing
                                                      :name (n7 / name
                                                            :op1 ""MSK2""))
                                                :op2 (t4 / thing
                                                      :name (n8 / name
                                                            :op1 ""MSK3""))
                                                :op3 (p8 / person
                                                      :name (n9 / name
                                                            :op1 ""MSK4"")
                                                      :ARG0-of (h2 / have-rel-role-91
                                                            :ARG1 p6
                                                            :ARG2 (f2 / friend)))))))))
            :snt3 (w2 / want-01
                  :ARG0 (n10 / no-one)
                  :ARG1 (w3 / world
                        :location-of (o2 / or
                              :op1 p5
                              :polarity -
                              :ARG1 (l2 / loan-01
                                    :ARG0 (p9 / person
                                          :name (n11 / name
                                                :op1 ""MSK2""))
                                    :ARG1 (b / book)
                                    :ARG2 (p10 / person
                                          :ARG0-of h2
                                          :ARG1 p9
                                          :ARG2 (g3 / girlfriend)))))
                  :op2 (l3 / let-01
                        :ARG0 p9
                        :ARG1 (b2 / borrow-01
                              :ARG0 p9
                              :ARG1 (p11 / product
                                    :name (n12 / name
                                          :op1 ""MSK2""
                                          :op2 ""iPod""))
                              :ARG2 p11))
                  :op3 (m3 / meme
                        :mod (f3 / funny)
                        :prep-with (p12 / person
                              :ARG0-of (f4 / follow-02
                                    :ARG1 p9
                                    :ARG3 (b3 / blog-01
                                          :ARG1 p11)))))))"
circular reasoning,circular reasoning,"# ::snt MSK0 is true because MSK2 , and MSK2 because MSK0 says so . 
(a / and
      :op1 (t / true-01
            :ARG1 (t2 / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1-of (c / cause-01
                  :ARG0 (t3 / thing
                        :name (n2 / name
                              :op1 ""MSK2""))))
      :op2 (t4 / true-01
            :ARG1 (t5 / thing
                  :name (n3 / name
                        :op1 ""MSK2""))
            :ARG1-of (c2 / cause-01
                  :ARG0 (s / say-01
                        :ARG0 t2
                        :ARG1 (s2 / so)))))"
ad populum,ad populum,"# ::snt Up until the late 16th century , most people believed that MSK0 was the center of the universe . MSK0 was seen as enough of a reason back then to accept MSK0 as true . 
(m / multi-sentence
      :snt1 (b / believe-01
            :ARG0 (p / person
                  :quant (m2 / most))
            :ARG1 (c / center
                  :mod (u / universe)
                  :domain (t / thing
                        :name (n / name
                              :op1 ""MSK0"")))
            :time (u2 / until
                  :op1 (l / late
                        :op1 (d / date-entity
                              :century 16))))
      :snt2 (s / see-01
            :ARG1 t
            :ARG2 (t2 / thing
                  :ARG0-of (c2 / cause-01
                        :ARG1 (a / accept-01
                              :ARG1 t
                              :ARG2 (t3 / true-01
                                    :ARG1 t)))
                  :ARG1-of (h / have-quant-91
                        :ARG3 (e / enough)))
            :time (t4 / then
                  :mod (b2 / back))))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 idea for implementing affirmative action in the university 's admission process is complete folly . MSK0 say 's MSK0 wants the student body to represent diversity in the community . But that 's ridiculous . I suppose MSK1 means MSK2 'll have to throw out MSK2 academic standards while were at MSK1 . After all , if MSK2 're going to let MSK3 just because of MSK3 gender or the color of MSK3 skin , then what 's going to happen to MSK2 reputation ? Identify the logical fallacy commited in this argument . 
(m / multi-sentence
      :snt1 (f / folly
            :ARG1-of (c / complete-02)
            :domain (ii / idea
                  :topic (ii2 / implement-01
                        :ARG1 (a / affirmative-action)
                        :ARG2 (p / process-02
                              :ARG1 (a2 / admit-02
                                    :ARG2 (u / university))))
                  :poss (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))))
      :snt2 (c2 / contrast-01
            :ARG2 (r / ridiculous-02
                  :ARG1 (s / say-01
                        :ARG0 p2
                        :ARG1 (w / want-01
                              :ARG0 p2
                              :ARG1 (r2 / represent-01
                                    :ARG0 (b / body
                                          :consist-of (p3 / person
                                                :ARG0-of (s2 / study-01)))
                                    :ARG1 (d / diversity)
                                    :ARG2 (c3 / community))))))
      :snt3 (s3 / suppose-01
            :ARG0 (ii3 / i)
            :ARG1 (m2 / mean-01
                  :ARG1 (p4 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG2 (o / obligate-01
                        :ARG1 (p5 / product
                              :name (n3 / name
                                    :op1 ""MSK2""))
                        :ARG2 (t / throw-out-06
                              :ARG0 p5
                              :ARG1 (s4 / standard
                                    :mod (a3 / academia)
                                    :poss p5)
                              :time (h / have-org-role-91
                                    :ARG0 ii3
                                    :ARG1 p5
                                    :ARG2 (m3 / member)))
                        :condition (l / let-01
                              :ARG0 p5
                              :ARG1 (p6 / product
                                    :name (n4 / name
                                          :op1 ""MSK3""))
                              :ARG1-of (c4 / cause-01
                                    :ARG0 (o2 / or
                                          :op1 (g / gender
                                                :mod p6)
                                          :op2 (c5 / color
                                                :mod p6))))))
            :mod (a4 / after-all))
      :snt4 (ii4 / identify-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f2 / fallacy
                  :mod (l2 / logic)
                  :ARG1-of (c6 / commit-02
                        :ARG0 (t2 / thing
                              :ARG1-of (a5 / argue-01)
                              :mod (t3 / this))))))"
appeal to emotion,circular reasoning,"# ::snt MSK0 ca n't have the public option , because if MSK0 do , health care reform wo n't get the votes of senators like him . 
(c / cause-01
      :ARG0 (p / possible-01
            :polarity -
            :ARG1 (h / have-03
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""MSK0""))
                  :ARG1 (p3 / product
                        :name (n2 / name
                              :op1 ""Public""
                              :op2 ""Option"")))
            :condition (h2 / have-03
                  :ARG0 p2
                  :ARG1 p3))
      :ARG1 (g / get-01
            :polarity -
            :ARG0 (r / reform-01
                  :ARG1 (c2 / care-03
                        :ARG1 (h3 / health)))
            :ARG1 (v / vote-01
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-org-role-91
                              :ARG1 (g2 / government-organization
                                    :name (n3 / name
                                          :op1 ""Senate"")))
                        :ARG1-of (r2 / resemble-01
                              :ARG2 p2))
                  :ARG1 r)))"
intentional,fallacy of logic,"# ::snt Bears are a MSK0 of MSK1 . Raccoons also are a MSK0 of MSK1 . But these two MSK0 do not overlap , and that fact makes MSK2 illogical . The argument is invalid — that is , the relationship between the premises does n’t support MSK2 . 
(m / multi-sentence
      :snt1 (s / string-entity
            :value ""MSK0""
            :part-of (t / thing
                  :name (n / name
                        :op1 ""MSK1""))
            :domain (b / bear))
      :snt2 (s2 / string-entity
            :value ""MSK0""
            :part-of (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :domain (r / raccoon)
            :mod (a / also))
      :snt3 (c / contrast-01
            :ARG2 (a2 / and
                  :op1 (o / overlap-01
                        :polarity -
                        :ARG0 (t3 / thing
                              :quant 2
                              :name (n3 / name
                                    :op1 ""MSK0"")
                              :mod (t4 / this)))
                  :op2 (m2 / make-02
                        :ARG0 o
                        :ARG1 (l / logical
                              :polarity -
                              :domain (t5 / thing
                                    :name (n4 / name
                                          :op1 ""MSK2""))))))
      :snt4 (v / valid-02
            :polarity -
            :ARG1 (t6 / thing
                  :ARG1-of (a3 / argue-01))
            :ARG1-of (m3 / mean-01
                  :ARG2 (s3 / support-01
                        :polarity -
                        :ARG0 (r2 / relation-03
                              :ARG0 (b2 / between
                                    :op1 (p / premise)))
                        :ARG1 t5))))"
faulty generalization,faulty generalization,"# ::snt MSK0 know three MSK4 who have MSK2 , and since MSK3 has MSK4 MSK4 , MSK0 ’ll bet MSK3 has a MSK2 , too . 
(a / and
      :op1 (k / know-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (p2 / person
                  :quant 3
                  :ARG0-of (h / have-03
                        :ARG1 (p3 / product
                              :name (n2 / name
                                    :op1 ""MSK2"")))))
      :op2 (b / bet-01
            :ARG0 p
            :ARG2 (h2 / have-03
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK3""))
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK4""))
                  :mod (t / too))
            :ARG1-of (c / cause-01
                  :ARG0 (h3 / have-03
                        :ARG0 p4
                        :ARG1 p5))))"
ad hominem,fallacy of extension,"# ::snt MSK0 : Biological MSK3 is both a theory and a fact . Edwin : MSK1 is ridiculous ! How can you possibly be absolutely certain that MSK2 MSK3 from MSK5 ! MSK0 : Actually , MSK1 is a gross misrepresentation of MSK6 assertion . MSK6 never claimed MSK2 MSK3 from MSK5 . 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / and
                  :op1 (t / theory
                        :domain (p2 / protein
                              :name (n2 / name
                                    :op1 ""MSK3"")
                              :mod (b / biology)))
                  :op2 (f / fact
                        :domain p2)))
      :snt2 (s2 / say-01
            :ARG0 p
            :name (n3 / name
                  :op1 ""Edwin""))
      :ARG1 (r / ridiculous-02
            :ARG1 (p3 / protein
                  :name (n4 / name
                        :op1 ""MSK1""))
            :manner (a2 / amr-unknown)
            :ARG0-of (c / cause-01
                  :ARG1 (p4 / possible-01
                        :ARG1 (k / know-01
                              :ARG0 (y / you)
                              :ARG1 (a3 / and
                                    :op1 (p5 / protein
                                          :name (n5 / name
                                                :op1 ""MSK2""))
                                    :op2 (p6 / protein
                                          :name (n6 / name
                                                :op1 ""MSK3""))
                                    :source (p7 / product
                                          :name (n7 / name
                                                :op1 ""MSK5"")))
                              :degree (a4 / absolute)))))
      :snt3 (m2 / misrepresent-01
            :ARG0 (l / law
                  :name (n8 / name
                        :op1 ""MSK1""))
            :ARG1 (a5 / assert-02
                  :ARG0 (p8 / product
                        :name (n9 / name
                              :op1 ""MSK6"")))
            :ARG1-of (g / gross-06)
            :ARG1-of (a6 / actual-02))
      :snt4 (c2 / claim-02
            :polarity -
            :ARG0 (p9 / product
                  :name (n10 / name
                        :op1 ""MSK6""))
            :ARG1 (a7 / and
                  :op1 (p10 / protein
                        :name (n11 / name
                              :op1 ""MSK2""))
                  :op2 (p11 / protein
                        :name (n12 / name
                              :op1 ""MSK3"")))
            :ARG2 (p12 / product
                  :name (n13 / name
                        :op1 ""MSK5""))
            :time (e / ever)))"
appeal to emotion,appeal to emotion,"# ::snt Professor , MSK0 have to give MSK1 an A on this paper . MSK1 know MSK1 only turned in a sentence and some clip art , but MSK0 have to understand , MSK2 suddenly died while MSK3 in the Northern Yukon , and her funeral was there so MSK1 had to MSK3 , and MSK1 parents got divorced in the middle of the ceremony , and all the stress caused MSK1 to become catatonic for two weeks . Have some pity — MSK2 last wish was that MSK1 'd get an A in this class . 
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (g / give-01
                  :ARG0 p
                  :ARG1 (s / score-on-scale-91
                        :ARG1 ""A"")
                  :ARG2 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :topic (p3 / paper
                        :mod (t / this))))
      :snt2 (c / contrast-01
            :ARG1 (k / know-01
                  :ARG0 (p4 / person
                        :name (n3 / name
                              :op1 ""MSK1""))
                  :ARG1 (t2 / turn-in-06
                        :ARG0 p4
                        :ARG1 (a / and
                              :op1 (s2 / sentence)
                              :op2 (a2 / art
                                    :mod (c2 / clip)
                                    :quant (s3 / some)))
                        :mod (o2 / only)))
            :ARG2 (o3 / obligate-01
                  :ARG1 p
                  :ARG2 (u / understand-01
                        :ARG0 p
                        :ARG1 (a3 / and
                              :op1 (d / die-01
                                    :ARG1 (p5 / person
                                          :name (n4 / name
                                                :op1 ""MSK2""))
                                    :manner (s4 / sudden)
                                    :location (l / local-region
                                          :name (n5 / name
                                                :op1 ""Northern""
                                                :op2 ""Yukon"")))
                              :op2 (f / funeral
                                    :location l
                                    :ARG0-of (c3 / cause-01
                                          :ARG1 (o4 / obligate-01
                                                :ARG1 p4
                                                :ARG2 (p6 / person
                                                      :name (n6 / name
                                                            :op1 ""MSK3"")))))
                              :op3 (d2 / divorce-01
                                    :ARG1 (p7 / person
                                          :ARG0-of (h / have-rel-role-91
                                                :ARG1 p4
                                                :ARG2 (p8 / parent)))
                                    :time (m2 / middle
                                          :op1 (c4 / ceremony)))
                              :op4 c3
                              :ARG0 (s5 / stress-02
                                    :ARG1 p4
                                    :mod (a4 / all))
                              :ARG1 (b / become-01
                                    :ARG1 p4
                                    :ARG2 (c5 / catatonic)
                                    :duration (t3 / temporal-quantity
                                          :quant 2
                                          :unit (w / week)))))))
      :snt3 (p9 / pity-01
            :mode imperative
            :ARG0 (y / you)
            :mod (s6 / some))
      :snt4 (w2 / wish-01
            :ARG0 (p10 / person
                  :name (n7 / name
                        :op1 ""MSK2""))
            :ARG1 (g2 / get-01
                  :ARG0 p10
                  :ARG1 s
                  :mod (l2 / last)
                  :location (c6 / class
                        :mod (t4 / this)))))"
faulty generalization,faulty generalization,"# ::snt Women ca n't do as good a job as men . 
(p / possible-01
      :polarity -
      :ARG1 (d / do-02
            :ARG0 (w / woman)
            :ARG1 (j / job
                  :ARG1-of (g / good-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 j
                              :ARG3 (e / equal)
                              :ARG4 (m / man))))))"
false dilemma,false dilemma,"# ::snt Either MSK0 MSK1 what I ’m saying , or MSK0 must MSK1 exactly the opposite . 
(o / or
      :op1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (s2 / say-01
                        :ARG0 ii))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""MSK0"")))
      :op2 (o2 / obligate-01
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG2 (o3 / opposite-01
                  :ARG1 p
                  :ARG2 p2
                  :mod (e / exact))))"
ad populum,false causality,"# ::snt Eighty - five percent of those surveyed said that it is important to have a cell phone . 
(s / say-01
      :ARG0 (p / person
            :ARG1-of (ii / include-91
                  :ARG2 (p2 / person
                        :ARG1-of (s2 / survey-01))
                  :ARG3 (p3 / percentage-entity
                        :value ""80-five"")))
      :ARG1 (ii2 / important-01
            :ARG1 (h / have-03
                  :ARG0 p
                  :ARG1 (p4 / phone
                        :mod (c / cell)))))"
fallacy of extension,appeal to emotion,"# ::snt “ All those opposed to MSK0 arguments for the opening of a new department , signify by saying , MSK1 MSK0 quit . MSK1 "" 
(s / signify-01
      :ARG0 (p / person
            :ARG0-of (o / oppose-01
                  :ARG1 (a / argue-01
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""MSK0""))
                        :ARG1 (o2 / open-01
                              :ARG1 (d / department
                                    :ARG1-of (n2 / new-01)))))
            :mod (a2 / all))
      :manner (s2 / say-01
            :ARG0 p
            :ARG1 (q / quit-01
                  :ARG0 p2)))"
faulty generalization,ad hominem,"# ::snt Dad drank at parties , too 
(d / drink-01
      :ARG0 (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG2 (d2 / dad)))
      :location (p2 / party)
      :mod (t / too))"
faulty generalization,faulty generalization,"# ::snt MSK0 is preparing to create a commercial for a new energy MSK1 . MSK0 visits MSK2 in MSK3 . The majority of MSK3 says MSK2 prefer MSK4 MSK5 MSK1 , so MSK0 tells MSK0 superiors that MSK4 is the MSK5 favored most by high school students . What error in reasoning has MSK0 made ? 
(m / multi-sentence
      :snt1 (p / prepare-02
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (c / create-01
                  :ARG0 p2
                  :ARG1 (c2 / commercial)
                  :ARG3 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :ARG1-of (n3 / new-01)
                        :mod (e / energy))))
      :snt2 (v / visit-01
            :ARG0 (p4 / person
                  :name (n4 / name
                        :op1 ""MSK0""))
            :ARG1 (p5 / product
                  :name (n5 / name
                        :op1 ""MSK2""))
            :location (p6 / product
                  :name (n6 / name
                        :op1 ""MSK3"")))
      :snt3 (c3 / cause-01
            :ARG0 (s / say-01
                  :ARG0 (p7 / person
                        :ARG1-of (ii / include-91
                              :ARG2 (p8 / product
                                    :name (n7 / name
                                          :op1 ""MSK3""))
                              :ARG3 (m2 / majority)))
                  :ARG1 (p9 / prefer-01
                        :ARG0 p7
                        :ARG1 (a / and
                              :op1 (p10 / product
                                    :name (n8 / name
                                          :op1 ""MSK4""))
                              :op2 (p11 / product
                                    :name (n9 / name
                                          :op1 ""MSK5"")))))
            :ARG1 (t / tell-01
                  :ARG0 p2
                  :ARG1 (f / favor-01
                        :ARG0 (p12 / person
                              :ARG0-of (s2 / study-01
                                    :location (h / high-school)))
                        :ARG1 (p13 / product
                              :name (n10 / name
                                    :op1 ""MSK5""))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p13
                              :ARG3 (m3 / most)))
                  :ARG2 (p14 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 p2
                              :ARG2 (s3 / superior)))))
      :snt4 (e2 / err-01
            :ARG0 (p15 / person
                  :name (n11 / name
                        :op1 ""MSK0""))
            :ARG1 (r / reason-01
                  :ARG0 p15)
            :mod (a2 / amr-unknown)))"
circular reasoning,fallacy of credibility,"# ::snt MSK0 are not weak if MSK0 make a proper use of those means which the God of nature hath placed in MSK0 power . 
(w / weak-02
      :polarity -
      :ARG1 (p / product
            :name (n / name
                  :op1 ""MSK0""))
      :condition (u / use-01
            :ARG0 p
            :ARG1 (m / means
                  :mod (t / that)
                  :ARG1-of (p2 / place-01
                        :ARG0 (p3 / person
                              :name (n2 / name
                                    :op1 ""God"")
                              :mod (n3 / nature))
                        :ARG2 (p4 / power
                              :poss p)))
            :mod (p5 / proper)))"
ad populum,ad populum,"# ::snt Throughout history , most philosophers thought men were more rational than women , therefore this is true . 
(t / think-01
      :ARG0 (p / philosopher
            :quant (m / most))
      :ARG1 (h / have-degree-91
            :ARG1 (m2 / man)
            :ARG2 (r / rational)
            :ARG3 (m3 / more)
            :ARG4 (w / woman))
      :time (t2 / throughout
            :op1 (h2 / history))
      :ARG0-of (c / cause-01
            :ARG1 (t3 / true-01
                  :ARG1 (t4 / this))))"
intentional,faulty generalization,"# ::snt Do MSK0 MSK1 in MSK2 ? To find out , we asked over 10,000 scientists at MSK4 and MSK4 throughout America . MSK3 said MSK3 MSK1 in MSK2 . The conclusion is obvious : MSK0 no longer MSK1 in MSK2 . 
(m / multi-sentence
      :snt1 (h / have-mod-91
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG2 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK1""))
            :location (t3 / thing
                  :name (n3 / name
                        :op1 ""MSK2""))
            :polarity (a / amr-unknown)
            :purpose (f / find-out-03
                  :ARG0 (w / we)
                  :ARG1 (s / scientist
                        :quant (o / over
                              :op1 10000)
                        :location (a2 / and
                              :op1 (t4 / thing
                                    :name (n4 / name
                                          :op1 ""MSK4""))
                              :op2 (t5 / thing
                                    :name (n5 / name
                                          :op1 ""MSK4""))))
                  :location (t6 / throughout
                        :op1 (c / country
                              :name (n6 / name
                                    :op1 ""America"")))))
      :snt2 (s2 / say-01
            :ARG0 (t7 / thing
                  :name (n7 / name
                        :op1 ""MSK3""))
            :ARG1 (t8 / thing
                  :name (n8 / name
                        :op1 ""MSK1""))
            :location (t9 / thing
                  :name (n9 / name
                        :op1 ""MSK2"")))
      :snt3 (o2 / obvious-01
            :ARG1 (c2 / conclude-01
                  :ARG1 (h2 / have-mod-91
                        :ARG1 (t10 / thing
                              :name (n10 / name
                                    :op1 ""MSK0""))
                        :ARG2 (t11 / thing
                              :name (n11 / name
                                    :op1 ""MSK1""))
                        :location (t12 / thing
                              :name (n12 / name
                                    :op1 ""MSK2""))
                        :time (n13 / no-longer)))))"
ad hominem,fallacy of extension,"# ::snt This fallacy attacks a position the opponent does n’t really hold . 
(a / attack-01
      :ARG0 (f / fallacy
            :mod (t / this))
      :ARG1 (p / position-02
            :ARG1-of (h / hold-01
                  :polarity -
                  :ARG0 (p2 / person
                        :ARG0-of (o / oppose-01))
                  :ARG1-of (r / real-04))))"
faulty generalization,faulty generalization,"# ::snt Conclude that because A MSK0 then MSK1 , MSK1 , MSK1 , E , F , G , H , I , J , K , L … will inevitably MSK0 . 
(c / conclude-01
      :ARG1 (c2 / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""MSK0"")
                  :ARG1-of (a2 / avoid-01
                        :ARG1-of (p / possible-01
                              :polarity -))
                  :domain (a3 / and
                        :op1 (t2 / thing
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :op2 t2
                        :op3 (t3 / thing
                              :name (n3 / name
                                    :op1 ""MSK1""))
                        :op4 (t4 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""))
                        :op5 (t5 / thing
                              :name (n5 / name
                                    :op1 ""E""))
                        :op6 (t6 / thing
                              :name (n6 / name
                                    :op1 ""F""))
                        :op7 (t7 / thing
                              :name (n7 / name
                                    :op1 ""G""))
                        :op8 (t8 / thing
                              :name (n8 / name
                                    :op1 ""H""))
                        :op9 (t9 / thing
                              :name (n9 / name
                                    :op1 ""J""))
                        :op10 (t10 / thing
                              :name (n10 / name
                                    :op1 ""K""))
                        :op11 (t11 / thing
                              :name (n11 / name
                                    :op1 ""L""))))))"
false causality,false causality,"# ::snt Our house was burglarized right after that MSK1 moved in next door . Therefore , that MSK1 must have been involved . 
(m / multi-sentence
      :snt1 (b / burglarize-01
            :ARG1 (h / house
                  :poss (w / we))
            :time (a / after
                  :op1 (m2 / move-01
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""MSN""
                                    :op2 1))
                        :ARG2 (d / door
                              :mod (n2 / next)))
                  :mod (r / right)))
      :snt2 (ii / infer-01
            :ARG1 (ii2 / involve-01
                  :ARG1 p)))"
faulty generalization,faulty generalization,"# ::snt Passing federal laws to MSK0 the amount of violence in music is the first step in a process that will result in absolute government MSK0 of the media and total censorship over all forms of artistic expression . 
(s / step-01
      :ARG1 (p / pass-05
            :ARG1 (a / amount
                  :quant-of (v / violence
                        :mod (m / music)))
            :ARG2 (g / government-organization
                  :name (n / name
                        :op1 ""MSK0"")
                  :mod (f / federal)))
      :ARG2 (p2 / process-02
            :ARG1-of (r / result-01
                  :ARG2 (a2 / and
                        :op1 (g2 / government-organization
                              :name n
                              :mod (a3 / absolute)
                              :ARG0-of (g3 / govern-01)
                              :domain (m2 / media))
                        :op2 (c / censor-01
                              :ARG0 g2
                              :ARG1 (e / express-01
                                    :ARG1 (a4 / art)
                                    :mod (f2 / form
                                          :mod (a5 / all)))
                              :degree (t / total)))))
      :ord (o / ordinal-entity
            :value 1))"
fallacy of relevance,ad hominem,"# ::snt MSK3 : No fault MSK1 has proven to be detrimental to society and the family . MSK3 : MSK2 did n’t seem to think that when MSK2 got MSK1 . 
(m / multi-sentence
      :snt1 (p / prove-01
            :ARG0 (p2 / product
                  :name (n / name
                        :op1 ""MSK1""))
            :ARG1 (h / harm-01
                  :ARG0 (p3 / product
                        :name (n2 / name
                              :op1 ""MSK1""))
                  :ARG1 (a / and
                        :op1 (s / society)
                        :op2 (f / family)))
            :ARG2-of (f2 / fault-01
                  :polarity -))
      :snt2 (s2 / seem-01
            :polarity -
            :ARG1 (t / think-01
                  :ARG0 (p4 / product
                        :name (n3 / name
                              :op1 ""MSK2""))
                  :ARG1 (t2 / that))
            :time (g / get-01
                  :ARG0 p4
                  :ARG1 (p5 / product
                        :name (n4 / name
                              :op1 ""MSK1"")))))"
ad hominem,ad hominem,"# ::snt MSK0 can not listen to anyone who does not share MSK0 social and political values . 
(p / possible-01
      :polarity -
      :ARG1 (l / listen-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / anyone
                  :ARG0-of (s / share-01
                        :polarity -
                        :ARG1 (v / value
                              :poss p2
                              :mod (s2 / social)
                              :mod (p3 / politics))
                        :ARG2 p2))))"
circular reasoning,ad hominem,"# ::snt When the arguer is MSK0 vs. the argument that is MSK0 , this is an example of : 
(e / exemplify-01
      :ARG0 (t / this)
      :condition (a / argue-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (o / oppose-01
                  :ARG0 p
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""MSK0"")))))"
faulty generalization,faulty generalization,"# ::snt MSK0 was a precocious child and had a liking for logic . MSK0 reasoned that MSK1 are MSK2 , and that MSK0 was made of MSK1 and therefore MSK2 too . Unfortunately , despite MSK0 thinky skills , MSK0 lost the game of hide and go seek . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (c / child
                  :mod (p / precocious)
                  :domain (p2 / person
                        :name (n / name
                              :op1 ""MSK0"")))
            :op2 (l / like-01
                  :ARG0 p2
                  :ARG1 (l2 / logic)))
      :snt2 (r / reason-01
            :ARG0 p2
            :ARG1 (a2 / and
                  :op1 (t / thing
                        :name (n2 / name
                              :op1 ""MSK1"")
                        :domain (t2 / thing
                              :name (n3 / name
                                    :op1 ""MSK2"")))
                  :op2 (m2 / make-01
                        :ARG1 t
                        :ARG2 (t3 / thing
                              :name (n4 / name
                                    :op1 ""MSK1""))
                        :ARG0-of (c2 / cause-01
                              :ARG1 (t4 / thing
                                    :name (n5 / name
                                          :op1 ""MSK2"")
                                    :domain t2
                                    :mod (t5 / too))))))
      :snt3 (l3 / lose-03
            :ARG0 (p3 / person
                  :name (n6 / name
                        :op1 ""MSK0""))
            :ARG1 (g / game
                  :name (n7 / name
                        :op1 ""Hide""
                        :op2 ""and""
                        :op3 ""Go""
                        :op4 ""Seeking""))
            :ARG2-of (f / fortunate-01
                  :polarity -)
            :concession (s / skill
                  :mod (t6 / think-01)
                  :poss p3)))"
intentional,faulty generalization,"# ::snt MSK0 predicted the wrong amount of rain for May . Obviously , MSK0 is unreliable . 
(m / multi-sentence
      :snt1 (p / predict-01
            :ARG0 (t / thing
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / amount
                  :ARG1-of (w / wrong-03)
                  :quant-of (r / rain-01))
            :time (d / date-entity
                  :month 5))
      :snt2 (r2 / rely-01
            :polarity -
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1-of (o / obvious-01)))"
ad hominem,ad hominem,"# ::snt Oh , please . What do MSK0 know about labor laws ? MSK0 do n't even have a job . 
(m / multi-sentence
      :snt1 (o / oh
            :mode expressive
            :polite +)
      :snt2 (k / know-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (a / amr-unknown)
            :topic (l / law
                  :topic (l2 / labor-01)))
      :snt3 (h / have-03
            :polarity -
            :ARG0 p
            :ARG1 (j / job)
            :mod (e / even)))"
ad populum,ad populum,"# ::snt You appealed to popularity or the fact that many people do something as an attempted form of validation . 
(a / appeal-02
      :ARG0 (y / you)
      :ARG1 (o / or
            :op1 (p / popularity)
            :op2 (f / fact
                  :topic (d / do-02
                        :ARG0 (p2 / person
                              :quant (m / many))
                        :ARG1 (s / something)
                        :purpose (v / validate-01
                              :ARG0 p2
                              :ARG1-of (a2 / attempt-01
                                    :ARG0 p2))))))"
intentional,faulty generalization,"# ::snt MSK1 : Should we buy the house ? MSK1 : The Realtor did n’t say anything about any problems , so I am sure MSK0 is fine . Let ’s get MSK0 ! 
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (b / buy-01
                  :ARG0 (w / we)
                  :ARG1 (h / house))
            :polarity (a / amr-unknown))
      :snt2 (s / say-01
            :polarity -
            :ARG0 (p / person
                  :ARG0-of (b2 / broker-01))
            :ARG1 (a2 / anything
                  :topic (p2 / problem
                        :mod (a3 / any)))
            :ARG0-of (c / cause-01
                  :ARG1 (s2 / sure-02
                        :ARG0 (ii / i)
                        :ARG1 (f / fine-04
                              :ARG1 (p3 / product
                                    :name (n / name
                                          :op1 ""MSNK0""))))))
      :snt3 (g / get-01
            :mode imperative
            :ARG0 (w2 / we)
            :ARG1 p3))"
ad populum,ad populum,"# ::snt Over one million students have purchased Brain Power . 
(p / purchase-01
      :ARG0 (p2 / person
            :quant (o / over
                  :op1 1000000)
            :ARG0-of (s / study-01))
      :ARG1 (p3 / product
            :name (n / name
                  :op1 ""Brain""
                  :op2 ""Power"")))"
ad hominem,ad hominem,"# ::snt MSK4 ( MSK3 ) : MSK1 MSK2 is a known adulterer . It reflects badly on MSK2 character , and suggests MSK2 might not be trustworthy . MSK1 MSK4 ( MSK3 ) : MSK1 What about Bill Clinton ? You did n’t seem to care when MSK2 cheated . MSK1 
(m / multi-sentence
      :snt1 (a / and
            :op1 (r / reflect-01
                  :ARG1 (ii / it)
                  :ARG2 (c / character
                        :mod (t / thing
                              :name (n / name
                                    :op1 ""MSK2"")))
                  :ARG1-of (b / bad-07))
            :op2 (s / suggest-01
                  :ARG0 ii
                  :ARG1 (p / possible-01
                        :polarity -
                        :ARG1 (t2 / trust-02
                              :ARG1 t))))
      :snt2 (c2 / concern-02
            :ARG0 (a2 / amr-unknown)
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Bill""
                        :op2 ""Clinton""))
            :ARG1-of (s2 / seem-01
                  :polarity -
                  :time (c3 / cheat-02
                        :ARG0 (p3 / person
                              :name (n3 / name
                                    :op1 ""MSK2"")))))
      :snt3 (s3 / string-entity
            :value ""MSK1"")
      :snt4 (s4 / string-entity
            :value ""MSK4"")
      :snt5 (s5 / string-entity
            :value ""MSK1""))"
circular reasoning,circular reasoning,"# ::snt MSK0 MSK1 is flawless and perfect . We know this because MSK0 says so in The Great and Infallible Book of MSK1 Best and Most Truest Things that are Definitely True and Should Not Ever Be Questioned . 
(m / multi-sentence
      :snt1 (a / and
            :op1 (f / flawless
                  :domain (p / product
                        :name (n / name
                              :op1 ""MSK0"")))
            :op2 (p2 / perfect-02
                  :ARG1 p)
            :ARG1-of (k / know-02
                  :ARG0 (w / we)))
      :snt2 (s / say-01
            :ARG0 (p3 / product
                  :name (n2 / name
                        :op1 ""MSK0""))
            :ARG1 (s2 / so)
            :medium (b / book
                  :name (n3 / name
                        :op1 ""The""
                        :op2 ""Great""
                        :op3 ""and""
                        :op4 ""Infallible""
                        :op5 ""Book""
                        :op6 ""of""
                        :op7 ""MSK1"")
                  :topic (a2 / and
                        :op1 (t / thing
                              :ARG1-of (t2 / true-01
                                    :mod (d / definite)))
                        :op2 (t3 / thing
                              :ARG1-of (h / have-degree-91
                                    :ARG2 t2
                                    :ARG1 t3)
                              :ARG3 (m2 / most)))
                  :ARG1-of (q / question-03
                        :polarity -
                        :time (e / ever)
                        :ARG1-of (r / recommend-01)))))"
ad populum,ad populum,"# ::snt An influencer posts on Instagram that the restaurant "" EP is poppin ' ! Everyone worth knowing is here tonight - come on down ! "" -- this is an example of : 
(m / multi-sentence
      :snt1 (p / post-01
            :ARG0 (ii / influencer)
            :ARG1 (p2 / poppin-00
                  :mode expressive
                  :ARG1 (r / restaurant
                        :name (n / name
                              :op1 ""EP"")))
            :ARG2 (p3 / publication
                  :name n
                  :op1 ""Instagram""))
      :snt2 (a / and
            :op1 (b / be-located-at-91
                  :ARG1 (e / everyone
                        :ARG1-of (w / worth-02
                              :ARG2 (k / know-02
                                    :ARG1 e)))
                  :ARG2 (h / here)
                  :time (d / date-entity
                        :dayperiod (n2 / night)
                        :mod (t / today)))
            :op2 (c / come-on-25
                  :mode imperative
                  :ARG1 e))
      :snt3 (e2 / exemplify-01
            :ARG0 (t2 / this)))"
fallacy of extension,fallacy of extension,"# ::snt MSK0 says MSK1 should cut back the Defense budget . MSK0 position is that MSK1 should let down MSK1 defenses and just trust MSK1 enemies not to attack MSK1 ! 
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""MSK0""))
            :ARG1 (r / recommend-01
                  :ARG1 (c / cut-back-05
                        :ARG0 (p2 / product
                              :name (n2 / name
                                    :op1 ""MSK1""))
                        :ARG1 (b / budget-01
                              :ARG2 (d / defend-01)))))
      :snt2 (p3 / position-02
            :ARG0 (p4 / person
                  :name (n3 / name
                        :op1 ""MSK0""))
            :ARG2 (r2 / recommend-01
                  :ARG1 (a / and
                        :op1 (l / let-down-04
                              :ARG0 p2
                              :ARG1 (d2 / defend-01
                                    :ARG1 p2))
                        :op2 (t / trust-01
                              :ARG0 p4
                              :ARG1 (a2 / attack-01
                                    :polarity -
                                    :ARG0 (p5 / person
                                          :ARG0-of (h / have-rel-role-91
                                                :ARG1 p4
                                                :ARG2 (e / enemy)))
                                    :ARG1 p2)
                              :mod (j / just))))))"
ad populum,ad populum,"# ::snt Going to prom ( when MSK0 do n't want to ) because 90 percent of MSK0 classmates are going 
(c / cause-01
      :ARG0 (g / go-02
            :ARG0 (c2 / classmate
                  :ARG1-of (ii / include-91
                        :ARG2 (c3 / classmate
                              :mod (p / product
                                    :name (n / name
                                          :op1 ""MSN"")))
                        :ARG3 (p2 / percentage-entity
                              :value 90)))
            :ARG4 (p3 / prom)
            :time (w / want-01
                  :polarity -
                  :ARG0 c2
                  :ARG1 (g2 / go-02
                        :ARG0 c2
                        :ARG4 p3
                        :ARG1-of c))))"
faulty generalization,faulty generalization,"# ::snt While jogging around the neighborhood , you are more likely to get bitten by someone ’s MSK0 MSK0 , than by any member of the MSK0 species . 
(l / likely-01
      :ARG1 (b / bite-01
            :ARG0 (e / enzyme
                  :name (n / name
                        :op1 ""MSK0"")
                  :part-of (s / someone))
            :ARG1 (y / you))
      :time (j / jog-01
            :ARG0 y
            :location (a / around
                  :op1 (n2 / neighborhood)))
      :ARG2-of (h / have-degree-91
            :ARG1 b
            :ARG3 (m / more)
            :ARG4 (b2 / bite-01
                  :ARG0 (e2 / enzyme
                        :name (n3 / name
                              :op1 ""MSK0"")
                        :part-of (s2 / species
                              :name (n4 / name
                                    :op1 ""MSK0""))
                        :mod (a2 / any))
                  :ARG1 y)))"
circular reasoning,circular reasoning,"# ::snt MSK0 It ’s important to argue MSK1 because MSK1 is an essential part of argumentation . MSK0 
(m / multi-sentence
      :snt1 (ii / important-01
            :ARG1 (a / argue-01
                  :ARG1 (t / thing
                        :mod 1
                        :name (n / name
                              :op1 ""MSK1"")))
            :ARG1-of (c / cause-01
                  :ARG0 (t2 / thing
                        :mod 1
                        :part-of (a2 / argue-01)
                        :mod (e / essential)
                        :domain t)))
      :snt2 (t3 / thing
            :mod 0
            :name (n2 / name
                  :op1 ""MSK0"")))"
